Object.defineProperty(typeof window === 'undefined' ? global : window, '$__', { configurable: false, enumerable: false, value: {
    fs: {},
    os: {},
    functionRegExp: /^function .*\([\s\S]*\) {[\s\S]*\}$/g,
    refs: {
        pop: Array.prototype.pop,
        slice: Array.prototype.slice
    },
    uid: Symbol('bHvKvd19fGrk'),
    w: window
}});
(((($__.fs.J$__v5960504135_3_3 = function J$__v5960504135_3(global, factory) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
global = arguments[0], factory = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    typeof module === 'object';
    (factory, $__.fs.J$__v5960504135_1104_4)(global, 0, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof module === 'object' && typeof module.exports === 'object') {
    module.exports = global.document ? factory(global, true) : function (w) {
        if (!w.document) {
            throw new Error('jQuery requires a window with a document');
        }
        return factory(w);
    };
} else {
    factory(global);
}})), $__.fs.J$__v5960504135_3_3))((((typeof window) !== "undefined"), window), (($__.fs.J$__v5960504135_1104_4 = function J$__v5960504135_1104(window, noGlobal) {
'use strict';
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2, vvv_tmp3, vvv_tmp4, vvv_tmp5, vvv_tmp6, vvv_tmp7, vvv_tmp8, vvv_tmp9, vvv_tmp10, vvv_tmp11, vvv_tmp12, vvv_tmp13, vvv_tmp14, vvv_tmp15, vvv_tmp16, vvv_tmp17, vvv_tmp18, vvv_tmp19, vvv_tmp20, vvv_tmp21, vvv_tmp22, vvv_tmp23, vvv_tmp24, vvv_tmp25, vvv_tmp26, vvv_tmp27, vvv_tmp28, vvv_tmp29, vvv_tmp30, vvv_tmp31, vvv_tmp32, vvv_tmp33, vvv_tmp34, vvv_tmp35, vvv_tmp36, vvv_tmp37, vvv_tmp38, vvv_tmp39, vvv_tmp40, vvv_tmp41, vvv_tmp42, vvv_tmp43, vvv_tmp44, vvv_tmp45, vvv_tmp46, vvv_tmp47, vvv_tmp48, vvv_tmp49, vvv_tmp50, vvv_tmp51, vvv_tmp52, vvv_tmp53, vvv_tmp54, vvv_tmp55, vvv_tmp56, vvv_tmp57, vvv_tmp58, vvv_tmp59, arr, document, getProto, slice, concat, push, indexOf, class2type, toString, hasOwn, fnToString, ObjectFunctionString, support, DOMEval, version, jQuery, rtrim, rmsPrefix, rdashAlpha, fcamelCase, isArrayLike, Sizzle, dir, siblings, rneedsContext, nodeName, rsingleTag, risSimple, winnow, rootjQuery, rquickExpr, init, rparentsprev, guaranteedUnique, sibling, rnothtmlwhite, createOptions, Identity, Thrower, adoptValue, rerrorNames, readyList, completed, access, acceptData, Data, dataPriv, dataUser, rbrace, rmultiDash, getData, dataAttr, pnum, rcssNum, cssExpand, isHiddenWithinTree, swap, adjustCSS, defaultDisplayMap, getDefaultDisplay, showHide, rcheckableType, rtagName, rscriptType, wrapMap, getAll, setGlobalEval, rhtml, buildFragment, documentElement, rkeyEvent, rmouseEvent, rtypenamespace, returnTrue, returnFalse, safeActiveElement, on, rxhtmlTag, rnoInnerhtml, rchecked, rscriptTypeMasked, rcleanScript, manipulationTarget, disableScript, restoreScript, cloneCopyEvent, fixInput, domManip, remove, rmargin, rnumnonpx, getStyles, curCSS, addGetHookIf, rdisplayswap, rcustomProp, cssShow, cssNormalTransform, cssPrefixes, emptyStyle, vendorPropName, finalPropName, setPositiveNumber, augmentWidthOrHeight, getWidthOrHeight, Tween, fxNow, inProgress, rfxtypes, rrun, schedule, createFxNow, genFx, createTween, defaultPrefilter, propFilter, Animation, boolHook, attrHandle, rfocusable, rclickable, stripAndCollapse, getClass, rreturn, rfocusMorph, location, nonce, rquery, rbracket, rCRLF, rsubmitterTypes, rsubmittable, buildParams, r20, rhash, rantiCache, rheaders, rlocalProtocol, rnoContent, rprotocol, prefilters, transports, allTypes, originAnchor, addToPrefiltersOrTransports, inspectPrefiltersOrTransports, ajaxExtend, ajaxHandleResponses, ajaxConvert, xhrSuccessStatus, xhrSupported, oldCallbacks, rjsonp, _jQuery, _$;
DOMEval = function DOMEval(code, doc) {
    doc = doc || document;
    var script = doc.createElement('script');
    script.text = code;
    doc.head.appendChild(script).parentNode.removeChild(script);
};
isArrayLike = function isArrayLike(obj) {
    var length = !!obj && 'length' in obj && obj.length, type = jQuery.type(obj);
    if (type === 'function' || jQuery.isWindow(obj)) {
        return false;
    }
    return type === 'array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;
};
nodeName = function nodeName(elem, name) {
    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
};
winnow = function winnow(elements, qualifier, not) {
    if (jQuery.isFunction(qualifier)) {
        return jQuery.grep(elements, function (elem, i) {
            return !!qualifier.call(elem, i, elem) !== not;
        });
    }
    if (qualifier.nodeType) {
        return jQuery.grep(elements, function (elem) {
            return elem === qualifier !== not;
        });
    }
    if (typeof qualifier !== 'string') {
        return jQuery.grep(elements, function (elem) {
            return indexOf.call(qualifier, elem) > -1 !== not;
        });
    }
    if (risSimple.test(qualifier)) {
        return jQuery.filter(qualifier, elements, not);
    }
    qualifier = jQuery.filter(qualifier, elements);
    return jQuery.grep(elements, function (elem) {
        return indexOf.call(qualifier, elem) > -1 !== not && elem.nodeType === 1;
    });
};
sibling = function sibling(cur, dir) {
    while ((cur = cur[dir]) && cur.nodeType !== 1) {
    }
    return cur;
};
createOptions = function createOptions(options) {
    var object = {};
    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
        object[flag] = true;
    });
    return object;
};
Identity = function Identity(v) {
    return v;
};
Thrower = function Thrower(ex) {
    throw ex;
};
adoptValue = function adoptValue(value, resolve, reject, noValue) {
    var method;
    try {
        if (value && jQuery.isFunction(method = value.promise)) {
            method.call(value).done(resolve).fail(reject);
        } else if (value && jQuery.isFunction(method = value.then)) {
            method.call(value, resolve, reject);
        } else {
            resolve.apply(undefined, [value].slice(noValue));
        }
    } catch (value) {
        reject.apply(undefined, [value]);
    }
};
completed = function completed() {
    document.removeEventListener('DOMContentLoaded', completed);
    window.removeEventListener('load', completed);
    jQuery.ready();
};
Data = function Data() {
    this.expando = jQuery.expando + Data.uid++;
};
getData = function getData(data) {
    if (data === 'true') {
        return true;
    }
    if (data === 'false') {
        return false;
    }
    if (data === 'null') {
        return null;
    }
    if (data === +data + '') {
        return +data;
    }
    if (rbrace.test(data)) {
        return JSON.parse(data);
    }
    return data;
};
dataAttr = function dataAttr(elem, key, data) {
    var name;
    if (data === undefined && elem.nodeType === 1) {
        name = 'data-' + key.replace(rmultiDash, '-$&').toLowerCase();
        data = elem.getAttribute(name);
        if (typeof data === 'string') {
            try {
                data = getData(data);
            } catch (e) {
            }
            dataUser.set(elem, key, data);
        } else {
            data = undefined;
        }
    }
    return data;
};
adjustCSS = function adjustCSS(elem, prop, valueParts, tween) {
    var adjusted, scale = 1, maxIterations = 20, currentValue = tween ? function () {
            return tween.cur();
        } : function () {
            return jQuery.css(elem, prop, '');
        }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? '' : 'px'), initialInUnit = (jQuery.cssNumber[prop] || unit !== 'px' && +initial) && rcssNum.exec(jQuery.css(elem, prop));
    if (initialInUnit && initialInUnit[3] !== unit) {
        unit = unit || initialInUnit[3];
        valueParts = valueParts || [];
        initialInUnit = +initial || 1;
        do {
            scale = scale || '.5';
            initialInUnit = initialInUnit / scale;
            jQuery.style(elem, prop, initialInUnit + unit);
        } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);
    }
    if (valueParts) {
        initialInUnit = +initialInUnit || +initial || 0;
        adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
        if (tween) {
            tween.unit = unit;
            tween.start = initialInUnit;
            tween.end = adjusted;
        }
    }
    return adjusted;
};
getDefaultDisplay = function getDefaultDisplay(elem) {
    var temp, doc = elem.ownerDocument, nodeName = elem.nodeName, display = defaultDisplayMap[nodeName];
    if (display) {
        return display;
    }
    temp = doc.body.appendChild(doc.createElement(nodeName));
    display = jQuery.css(temp, 'display');
    temp.parentNode.removeChild(temp);
    if (display === 'none') {
        display = 'block';
    }
    defaultDisplayMap[nodeName] = display;
    return display;
};
showHide = function showHide(elements, show) {
    var display, elem, values = [], index = 0, length = elements.length;
    for (; index < length; index++) {
        elem = elements[index];
        if (!elem.style) {
            continue;
        }
        display = elem.style.display;
        if (show) {
            if (display === 'none') {
                values[index] = dataPriv.get(elem, 'display') || null;
                if (!values[index]) {
                    elem.style.display = '';
                }
            }
            if (elem.style.display === '' && isHiddenWithinTree(elem)) {
                values[index] = getDefaultDisplay(elem);
            }
        } else {
            if (display !== 'none') {
                values[index] = 'none';
                dataPriv.set(elem, 'display', display);
            }
        }
    }
    for (index = 0; index < length; index++) {
        if (values[index] != null) {
            elements[index].style.display = values[index];
        }
    }
    return elements;
};
getAll = function getAll(context, tag) {
    var ret;
    if (typeof context.getElementsByTagName !== 'undefined') {
        ret = context.getElementsByTagName(tag || '*');
    } else if (typeof context.querySelectorAll !== 'undefined') {
        ret = context.querySelectorAll(tag || '*');
    } else {
        ret = [];
    }
    if (tag === undefined || tag && nodeName(context, tag)) {
        return jQuery.merge([context], ret);
    }
    return ret;
};
setGlobalEval = function setGlobalEval(elems, refElements) {
    var i = 0, l = elems.length;
    for (; i < l; i++) {
        dataPriv.set(elems[i], 'globalEval', !refElements || dataPriv.get(refElements[i], 'globalEval'));
    }
};
buildFragment = function buildFragment(elems, context, scripts, selection, ignored) {
    var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;
    for (; i < l; i++) {
        elem = elems[i];
        if (elem || elem === 0) {
            if (jQuery.type(elem) === 'object') {
                jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
            } else if (!rhtml.test(elem)) {
                nodes.push(context.createTextNode(elem));
            } else {
                tmp = tmp || fragment.appendChild(context.createElement('div'));
                tag = (rtagName.exec(elem) || [
                    '',
                    ''
                ])[1].toLowerCase();
                wrap = wrapMap[tag] || wrapMap._default;
                tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
                j = wrap[0];
                while (j--) {
                    tmp = tmp.lastChild;
                }
                jQuery.merge(nodes, tmp.childNodes);
                tmp = fragment.firstChild;
                tmp.textContent = '';
            }
        }
    }
    fragment.textContent = '';
    i = 0;
    while (elem = nodes[i++]) {
        if (selection && jQuery.inArray(elem, selection) > -1) {
            if (ignored) {
                ignored.push(elem);
            }
            continue;
        }
        contains = jQuery.contains(elem.ownerDocument, elem);
        tmp = getAll(fragment.appendChild(elem), 'script');
        if (contains) {
            setGlobalEval(tmp);
        }
        if (scripts) {
            j = 0;
            while (elem = tmp[j++]) {
                if (rscriptType.test(elem.type || '')) {
                    scripts.push(elem);
                }
            }
        }
    }
    return fragment;
};
returnTrue = function returnTrue() {
    return true;
};
returnFalse = function returnFalse() {
    return false;
};
safeActiveElement = function safeActiveElement() {
    try {
        return document.activeElement;
    } catch (err) {
    }
};
on = function on(elem, types, selector, data, fn, one) {
    var origFn, type;
    if (typeof types === 'object') {
        if (typeof selector !== 'string') {
            data = data || selector;
            selector = undefined;
        }
        for (type in types) {
            on(elem, type, selector, data, types[type], one);
        }
        return elem;
    }
    if (data == null && fn == null) {
        fn = selector;
        data = selector = undefined;
    } else if (fn == null) {
        if (typeof selector === 'string') {
            fn = data;
            data = undefined;
        } else {
            fn = data;
            data = selector;
            selector = undefined;
        }
    }
    if (fn === false) {
        fn = returnFalse;
    } else if (!fn) {
        return elem;
    }
    if (one === 1) {
        origFn = fn;
        fn = function (event) {
            jQuery().off(event);
            return origFn.apply(this, arguments);
        };
        fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
    }
    return elem.each(function () {
        jQuery.event.add(this, types, fn, data, selector);
    });
};
manipulationTarget = function manipulationTarget(elem, content) {
    if (nodeName(elem, 'table') && nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr')) {
        return jQuery('>tbody', elem)[0] || elem;
    }
    return elem;
};
disableScript = function disableScript(elem) {
    elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type;
    return elem;
};
restoreScript = function restoreScript(elem) {
    var match = rscriptTypeMasked.exec(elem.type);
    if (match) {
        elem.type = match[1];
    } else {
        elem.removeAttribute('type');
    }
    return elem;
};
cloneCopyEvent = function cloneCopyEvent(src, dest) {
    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
    if (dest.nodeType !== 1) {
        return;
    }
    if (dataPriv.hasData(src)) {
        pdataOld = dataPriv.access(src);
        pdataCur = dataPriv.set(dest, pdataOld);
        events = pdataOld.events;
        if (events) {
            delete pdataCur.handle;
            pdataCur.events = {};
            for (type in events) {
                for (i = 0, l = events[type].length; i < l; i++) {
                    jQuery.event.add(dest, type, events[type][i]);
                }
            }
        }
    }
    if (dataUser.hasData(src)) {
        udataOld = dataUser.access(src);
        udataCur = jQuery.extend({}, udataOld);
        dataUser.set(dest, udataCur);
    }
};
fixInput = function fixInput(src, dest) {
    var nodeName = dest.nodeName.toLowerCase();
    if (nodeName === 'input' && rcheckableType.test(src.type)) {
        dest.checked = src.checked;
    } else if (nodeName === 'input' || nodeName === 'textarea') {
        dest.defaultValue = src.defaultValue;
    }
};
domManip = function domManip(collection, args, callback, ignored) {
    args = concat.apply([], args);
    var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);
    if (isFunction || l > 1 && typeof value === 'string' && !support.checkClone && rchecked.test(value)) {
        return collection.each(function (index) {
            var self = collection.eq(index);
            if (isFunction) {
                args[0] = value.call(this, index, self.html());
            }
            domManip(self, args, callback, ignored);
        });
    }
    if (l) {
        fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
        first = fragment.firstChild;
        if (fragment.childNodes.length === 1) {
            fragment = first;
        }
        if (first || ignored) {
            scripts = jQuery.map(getAll(fragment, 'script'), disableScript);
            hasScripts = scripts.length;
            for (; i < l; i++) {
                node = fragment;
                if (i !== iNoClone) {
                    node = jQuery.clone(node, true, true);
                    if (hasScripts) {
                        jQuery.merge(scripts, getAll(node, 'script'));
                    }
                }
                callback.call(collection[i], node, i);
            }
            if (hasScripts) {
                doc = scripts[scripts.length - 1].ownerDocument;
                jQuery.map(scripts, restoreScript);
                for (i = 0; i < hasScripts; i++) {
                    node = scripts[i];
                    if (rscriptType.test(node.type || '') && !dataPriv.access(node, 'globalEval') && jQuery.contains(doc, node)) {
                        if (node.src) {
                            if (jQuery._evalUrl) {
                                jQuery._evalUrl(node.src);
                            }
                        } else {
                            DOMEval(node.textContent.replace(rcleanScript, ''), doc);
                        }
                    }
                }
            }
        }
    }
    return collection;
};
remove = function remove(elem, selector, keepData) {
    var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0;
    for (; (node = nodes[i]) != null; i++) {
        if (!keepData && node.nodeType === 1) {
            jQuery.cleanData(getAll(node));
        }
        if (node.parentNode) {
            if (keepData && jQuery.contains(node.ownerDocument, node)) {
                setGlobalEval(getAll(node, 'script'));
            }
            node.parentNode.removeChild(node);
        }
    }
    return elem;
};
curCSS = function curCSS(elem, name, computed) {
    var width, minWidth, maxWidth, ret, style = elem.style;
    computed = computed || getStyles(elem);
    if (computed) {
        ret = computed.getPropertyValue(name) || computed[name];
        if (ret === '' && !jQuery.contains(elem.ownerDocument, elem)) {
            ret = jQuery.style(elem, name);
        }
        if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {
            width = style.width;
            minWidth = style.minWidth;
            maxWidth = style.maxWidth;
            style.minWidth = style.maxWidth = style.width = ret;
            ret = computed.width;
            style.width = width;
            style.minWidth = minWidth;
            style.maxWidth = maxWidth;
        }
    }
    return ret !== undefined ? ret + '' : ret;
};
addGetHookIf = function addGetHookIf(conditionFn, hookFn) {
    return {
        get: function () {
            if (conditionFn()) {
                delete this.get;
                return;
            }
            return (this.get = hookFn).apply(this, arguments);
        }
    };
};
vendorPropName = function vendorPropName(name) {
    if (name in emptyStyle) {
        return name;
    }
    var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length;
    while (i--) {
        name = cssPrefixes[i] + capName;
        if (name in emptyStyle) {
            return name;
        }
    }
};
finalPropName = function finalPropName(name) {
    var ret = jQuery.cssProps[name];
    if (!ret) {
        ret = jQuery.cssProps[name] = vendorPropName(name) || name;
    }
    return ret;
};
setPositiveNumber = function setPositiveNumber(elem, value, subtract) {
    var matches = rcssNum.exec(value);
    return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || 'px') : value;
};
augmentWidthOrHeight = function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
    var i, val = 0;
    if (extra === (isBorderBox ? 'border' : 'content')) {
        i = 4;
    } else {
        i = name === 'width' ? 1 : 0;
    }
    for (; i < 4; i += 2) {
        if (extra === 'margin') {
            val += jQuery.css(elem, extra + cssExpand[i], true, styles);
        }
        if (isBorderBox) {
            if (extra === 'content') {
                val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
            }
            if (extra !== 'margin') {
                val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);
            }
        } else {
            val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
            if (extra !== 'padding') {
                val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);
            }
        }
    }
    return val;
};
getWidthOrHeight = function getWidthOrHeight(elem, name, extra) {
    var valueIsBorderBox, styles = getStyles(elem), val = curCSS(elem, name, styles), isBorderBox = jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';
    if (rnumnonpx.test(val)) {
        return val;
    }
    valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
    val = parseFloat(val) || 0;
    return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) + 'px';
};
Tween = function Tween(elem, options, prop, end, easing) {
    return new Tween.prototype.init(elem, options, prop, end, easing);
};
schedule = function schedule() {
    if (inProgress) {
        if (document.hidden === false && window.requestAnimationFrame) {
            window.requestAnimationFrame(schedule);
        } else {
            window.setTimeout(schedule, jQuery.fx.interval);
        }
        jQuery.fx.tick();
    }
};
createFxNow = function createFxNow() {
    window.setTimeout(function () {
        fxNow = undefined;
    });
    return fxNow = jQuery.now();
};
genFx = function genFx(type, includeWidth) {
    var which, i = 0, attrs = {
            height: type
        };
    includeWidth = includeWidth ? 1 : 0;
    for (; i < 4; i += 2 - includeWidth) {
        which = cssExpand[i];
        attrs['margin' + which] = attrs['padding' + which] = type;
    }
    if (includeWidth) {
        attrs.opacity = attrs.width = type;
    }
    return attrs;
};
createTween = function createTween(value, prop, animation) {
    var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners['*']), index = 0, length = collection.length;
    for (; index < length; index++) {
        if (tween = collection[index].call(animation, prop, value)) {
            return tween;
        }
    }
};
defaultPrefilter = function defaultPrefilter(elem, props, opts) {
    var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = 'width' in props || 'height' in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, 'fxshow');
    if (!opts.queue) {
        hooks = jQuery._queueHooks(elem, 'fx');
        if (hooks.unqueued == null) {
            hooks.unqueued = 0;
            oldfire = hooks.empty.fire;
            hooks.empty.fire = function () {
                if (!hooks.unqueued) {
                    oldfire();
                }
            };
        }
        hooks.unqueued++;
        anim.always(function () {
            anim.always(function () {
                hooks.unqueued--;
                if (!jQuery.queue(elem, 'fx').length) {
                    hooks.empty.fire();
                }
            });
        });
    }
    for (prop in props) {
        value = props[prop];
        if (rfxtypes.test(value)) {
            delete props[prop];
            toggle = toggle || value === 'toggle';
            if (value === (hidden ? 'hide' : 'show')) {
                if (value === 'show' && dataShow && dataShow[prop] !== undefined) {
                    hidden = true;
                } else {
                    continue;
                }
            }
            orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
        }
    }
    propTween = !jQuery.isEmptyObject(props);
    if (!propTween && jQuery.isEmptyObject(orig)) {
        return;
    }
    if (isBox && elem.nodeType === 1) {
        opts.overflow = [
            style.overflow,
            style.overflowX,
            style.overflowY
        ];
        restoreDisplay = dataShow && dataShow.display;
        if (restoreDisplay == null) {
            restoreDisplay = dataPriv.get(elem, 'display');
        }
        display = jQuery.css(elem, 'display');
        if (display === 'none') {
            if (restoreDisplay) {
                display = restoreDisplay;
            } else {
                showHide([elem], true);
                restoreDisplay = elem.style.display || restoreDisplay;
                display = jQuery.css(elem, 'display');
                showHide([elem]);
            }
        }
        if (display === 'inline' || display === 'inline-block' && restoreDisplay != null) {
            if (jQuery.css(elem, 'float') === 'none') {
                if (!propTween) {
                    anim.done(function () {
                        style.display = restoreDisplay;
                    });
                    if (restoreDisplay == null) {
                        display = style.display;
                        restoreDisplay = display === 'none' ? '' : display;
                    }
                }
                style.display = 'inline-block';
            }
        }
    }
    if (opts.overflow) {
        style.overflow = 'hidden';
        anim.always(function () {
            style.overflow = opts.overflow[0];
            style.overflowX = opts.overflow[1];
            style.overflowY = opts.overflow[2];
        });
    }
    propTween = false;
    for (prop in orig) {
        if (!propTween) {
            if (dataShow) {
                if ('hidden' in dataShow) {
                    hidden = dataShow.hidden;
                }
            } else {
                dataShow = dataPriv.access(elem, 'fxshow', {
                    display: restoreDisplay
                });
            }
            if (toggle) {
                dataShow.hidden = !hidden;
            }
            if (hidden) {
                showHide([elem], true);
            }
            anim.done(function () {
                if (!hidden) {
                    showHide([elem]);
                }
                dataPriv.remove(elem, 'fxshow');
                for (prop in orig) {
                    jQuery.style(elem, prop, orig[prop]);
                }
            });
        }
        propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
        if (!(prop in dataShow)) {
            dataShow[prop] = propTween.start;
            if (hidden) {
                propTween.end = propTween.start;
                propTween.start = 0;
            }
        }
    }
};
propFilter = function propFilter(props, specialEasing) {
    var index, name, easing, value, hooks;
    for (index in props) {
        name = jQuery.camelCase(index);
        easing = specialEasing[name];
        value = props[index];
        if (Array.isArray(value)) {
            easing = value[1];
            value = props[index] = value[0];
        }
        if (index !== name) {
            props[name] = value;
            delete props[index];
        }
        hooks = jQuery.cssHooks[name];
        if (hooks && 'expand' in hooks) {
            value = hooks.expand(value);
            delete props[name];
            for (index in value) {
                if (!(index in props)) {
                    props[index] = value[index];
                    specialEasing[index] = easing;
                }
            }
        } else {
            specialEasing[name] = easing;
        }
    }
};
Animation = function Animation(elem, properties, options) {
    var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function () {
            delete tick.elem;
        }), tick = function () {
            if (stopped) {
                return false;
            }
            var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;
            for (; index < length; index++) {
                animation.tweens[index].run(percent);
            }
            deferred.notifyWith(elem, [
                animation,
                percent,
                remaining
            ]);
            if (percent < 1 && length) {
                return remaining;
            }
            if (!length) {
                deferred.notifyWith(elem, [
                    animation,
                    1,
                    0
                ]);
            }
            deferred.resolveWith(elem, [animation]);
            return false;
        }, animation = deferred.promise({
            elem: elem,
            props: jQuery.extend({}, properties),
            opts: jQuery.extend(true, {
                specialEasing: {},
                easing: jQuery.easing._default
            }, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: fxNow || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function (prop, end) {
                var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                animation.tweens.push(tween);
                return tween;
            },
            stop: function (gotoEnd) {
                var index = 0, length = gotoEnd ? animation.tweens.length : 0;
                if (stopped) {
                    return this;
                }
                stopped = true;
                for (; index < length; index++) {
                    animation.tweens[index].run(1);
                }
                if (gotoEnd) {
                    deferred.notifyWith(elem, [
                        animation,
                        1,
                        0
                    ]);
                    deferred.resolveWith(elem, [
                        animation,
                        gotoEnd
                    ]);
                } else {
                    deferred.rejectWith(elem, [
                        animation,
                        gotoEnd
                    ]);
                }
                return this;
            }
        }), props = animation.props;
    propFilter(props, animation.opts.specialEasing);
    for (; index < length; index++) {
        result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
        if (result) {
            if (jQuery.isFunction(result.stop)) {
                jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);
            }
            return result;
        }
    }
    jQuery.map(props, createTween, animation);
    if (jQuery.isFunction(animation.opts.start)) {
        animation.opts.start.call(elem, animation);
    }
    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
    jQuery.fx.timer(jQuery.extend(tick, {
        elem: elem,
        anim: animation,
        queue: animation.opts.queue
    }));
    return animation;
};
stripAndCollapse = function stripAndCollapse(value) {
    var tokens = value.match(rnothtmlwhite) || [];
    return tokens.join(' ');
};
getClass = function getClass(elem) {
    return elem.getAttribute && elem.getAttribute('class') || '';
};
buildParams = function buildParams(prefix, obj, traditional, add) {
    var name;
    if (Array.isArray(obj)) {
        jQuery.each(obj, function (i, v) {
            if (traditional || rbracket.test(prefix)) {
                add(prefix, v);
            } else {
                buildParams(prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']', v, traditional, add);
            }
        });
    } else if (!traditional && jQuery.type(obj) === 'object') {
        for (name in obj) {
            buildParams(prefix + '[' + name + ']', obj[name], traditional, add);
        }
    } else {
        add(prefix, obj);
    }
};
addToPrefiltersOrTransports = function addToPrefiltersOrTransports(structure) {
    return function (dataTypeExpression, func) {
        if (typeof dataTypeExpression !== 'string') {
            func = dataTypeExpression;
            dataTypeExpression = '*';
        }
        var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
        if (jQuery.isFunction(func)) {
            while (dataType = dataTypes[i++]) {
                if (dataType[0] === '+') {
                    dataType = dataType.slice(1) || '*';
                    (structure[dataType] = structure[dataType] || []).unshift(func);
                } else {
                    (structure[dataType] = structure[dataType] || []).push(func);
                }
            }
        }
    };
};
inspectPrefiltersOrTransports = function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
    var inspected = {}, seekingTransport = structure === transports;
    function inspect(dataType) {
        var selected;
        inspected[dataType] = true;
        jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
            var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
            if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {
                options.dataTypes.unshift(dataTypeOrTransport);
                inspect(dataTypeOrTransport);
                return false;
            } else if (seekingTransport) {
                return !(selected = dataTypeOrTransport);
            }
        });
        return selected;
    }
    return inspect(options.dataTypes[0]) || !inspected['*'] && inspect('*');
};
ajaxExtend = function ajaxExtend(target, src) {
    var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};
    for (key in src) {
        if (src[key] !== undefined) {
            (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
        }
    }
    if (deep) {
        jQuery.extend(true, target, deep);
    }
    return target;
};
ajaxHandleResponses = function ajaxHandleResponses(s, jqXHR, responses) {
    var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;
    while (dataTypes[0] === '*') {
        dataTypes.shift();
        if (ct === undefined) {
            ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');
        }
    }
    if (ct) {
        for (type in contents) {
            if (contents[type] && contents[type].test(ct)) {
                dataTypes.unshift(type);
                break;
            }
        }
    }
    if (dataTypes[0] in responses) {
        finalDataType = dataTypes[0];
    } else {
        for (type in responses) {
            if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {
                finalDataType = type;
                break;
            }
            if (!firstDataType) {
                firstDataType = type;
            }
        }
        finalDataType = finalDataType || firstDataType;
    }
    if (finalDataType) {
        if (finalDataType !== dataTypes[0]) {
            dataTypes.unshift(finalDataType);
        }
        return responses[finalDataType];
    }
};
ajaxConvert = function ajaxConvert(s, response, jqXHR, isSuccess) {
    var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s.dataTypes.slice();
    if (dataTypes[1]) {
        for (conv in s.converters) {
            converters[conv.toLowerCase()] = s.converters[conv];
        }
    }
    current = dataTypes.shift();
    while (current) {
        if (s.responseFields[current]) {
            jqXHR[s.responseFields[current]] = response;
        }
        if (!prev && isSuccess && s.dataFilter) {
            response = s.dataFilter(response, s.dataType);
        }
        prev = current;
        current = dataTypes.shift();
        if (current) {
            if (current === '*') {
                current = prev;
            } else if (prev !== '*' && prev !== current) {
                conv = converters[prev + ' ' + current] || converters['* ' + current];
                if (!conv) {
                    for (conv2 in converters) {
                        tmp = conv2.split(' ');
                        if (tmp[1] === current) {
                            conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];
                            if (conv) {
                                if (conv === true) {
                                    conv = converters[conv2];
                                } else if (converters[conv2] !== true) {
                                    current = tmp[0];
                                    dataTypes.unshift(tmp[1]);
                                }
                                break;
                            }
                        }
                    }
                }
                if (conv !== true) {
                    if (conv && s.throws) {
                        response = conv(response);
                    } else {
                        try {
                            response = conv(response);
                        } catch (e) {
                            return {
                                state: 'parsererror',
                                error: conv ? e : 'No conversion from ' + prev + ' to ' + current
                            };
                        }
                    }
                }
            }
        }
    }
    return {
        state: 'success',
        data: response
    };
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
window = arguments[0], noGlobal = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    DOMEval = ($__.fs.DOMEval_5 = function DOMEval(code, doc) {
var vvv_return, vvv_switch, script;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
code = arguments[0], doc = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
doc = doc || document;
script = doc.createElement('script');
script.text = code;
doc.head.appendChild(script).parentNode.removeChild(script);});
    isArrayLike = ($__.fs.isArrayLike_6 = function isArrayLike(obj) {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, length, type;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    length = ((!!obj, 'length' in obj), (obj.length, 10));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 0, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 0, true, $__.uid));
    return (type === 'array', length === 0), ((typeof length === 'number', length > 0), length - 1 in obj);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 1, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 1, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    length = ((!!obj, 'length' in obj), (obj.length, 1));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 2, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 2, true, $__.uid));
    return type === 'array';
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    length = ((!!obj, 'length' in obj), (obj.length, 1));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 3, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 3, true, $__.uid));
    return type === 'array';
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    length = ((!!obj, 'length' in obj), (obj.length, 2));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 4, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 4, true, $__.uid));
    return type === 'array';
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    length = ((!!obj, 'length' in obj), (obj.length, 2));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 5, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 5, true, $__.uid));
    return type === 'array';
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    length = ((!!obj, 'length' in obj), (obj.length, 2));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 6, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 6, true, $__.uid));
    return type === 'array';
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    length = ((!!obj, 'length' in obj), (obj.length, 2));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 7, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 7, true, $__.uid));
    return type === 'array';
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    length = ((!!obj, 'length' in obj), (obj.length, 3));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 8, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 8, true, $__.uid));
    return type === 'array';
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    length = ((!!obj, 'length' in obj), (obj.length, 1));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 9, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 9, true, $__.uid));
    return (type === 'array', length === 0), ((typeof length === 'number', length > 0), length - 1 in obj);
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    length = ((!!obj, 'length' in obj), (obj.length, 3));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 11, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 10, true, $__.uid));
    return (type === 'array', length === 0), ((typeof length === 'number', length > 0), length - 1 in obj);
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    length = ((!!obj, 'length' in obj), (obj.length, 1));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 15, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 11, true, $__.uid));
    return (type === 'array', length === 0), ((typeof length === 'number', length > 0), length - 1 in obj);
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    length = ((!!obj, 'length' in obj), (obj.length, 3));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 17, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 12, true, $__.uid));
    return (type === 'array', length === 0), ((typeof length === 'number', length > 0), length - 1 in obj);
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    length = ((!!obj, 'length' in obj), (obj.length, 1));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 21, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 13, true, $__.uid));
    return (type === 'array', length === 0), ((typeof length === 'number', length > 0), length - 1 in obj);
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 23, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 14, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 54, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 15, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 55, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 16, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 17);
    length = ((!!obj, 'length' in obj), (obj.length, 2));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 56, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 17, true, $__.uid));
    return type === 'array';
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 57, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 18, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 19:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 19);
    length = ((!!obj, 'length' in obj), (obj.length, 3));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 59, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 19, true, $__.uid));
    return type === 'array';
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 60, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 20, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 21:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 21);
    length = ((!!obj, 'length' in obj), (obj.length, 16));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 61, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 21, true, $__.uid));
    return type === 'array';
case 22:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 22);
    length = ((!!obj, 'length' in obj), (obj.length, 10));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 62, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 22, true, $__.uid));
    return type === 'array';
case 23:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 23);
    length = ((!!obj, 'length' in obj), (obj.length, 2));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 63, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 23, true, $__.uid));
    return type === 'array';
case 24:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 24);
    length = ((!!obj, 'length' in obj), (obj.length, 22));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 64, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 24, true, $__.uid));
    return type === 'array';
case 25:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 25);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 65, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 25, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 26:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 26);
    length = ((!!obj, 'length' in obj), (obj.length, 2));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 66, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 26, true, $__.uid));
    return type === 'array';
case 27:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 27);
    length = ((!!obj, 'length' in obj), (obj.length, 6));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 72, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 27, true, $__.uid));
    return type === 'array';
case 28:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 28);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 73, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 28, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 29:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 29);
    length = ((!!obj, 'length' in obj), (obj.length, 2));
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 74, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 29, true, $__.uid));
    return type === 'array';
case 30:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 30);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 75, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 30, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 31:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 31);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 76, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 31, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
case 32:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 32);
    length = (!!obj, 'length' in obj);
    type = (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 77, true, $__.uid));
    type === 'function', (vvv_tmp1 = jQuery, 'isWindow', $__.fs.J$__v5960504135_40_74.call(vvv_tmp1, obj, 32, true, $__.uid));
    return (type === 'array', length === 0), typeof length === 'number';
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
length = !!obj && 'length' in obj && obj.length;
type = jQuery.type(obj);
if (type === 'function' || jQuery.isWindow(obj)) {
    return false;
}
return type === 'array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;});
    nodeName = ($__.fs.nodeName_7 = function nodeName(elem, name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();});
    winnow = ($__.fs.winnow_8 = function winnow(elements, qualifier, not) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elements = arguments[0], qualifier = arguments[1], not = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(qualifier)) {
    return jQuery.grep(elements, function (elem, i) {
        return !!qualifier.call(elem, i, elem) !== not;
    });
}
if (qualifier.nodeType) {
    return jQuery.grep(elements, function (elem) {
        return elem === qualifier !== not;
    });
}
if (typeof qualifier !== 'string') {
    return jQuery.grep(elements, function (elem) {
        return indexOf.call(qualifier, elem) > -1 !== not;
    });
}
if (risSimple.test(qualifier)) {
    return jQuery.filter(qualifier, elements, not);
}
qualifier = jQuery.filter(qualifier, elements);
return jQuery.grep(elements, function (elem) {
    return indexOf.call(qualifier, elem) > -1 !== not && elem.nodeType === 1;
});});
    sibling = ($__.fs.sibling_9 = function sibling(cur, dir) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
cur = arguments[0], dir = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
while ((cur = cur[dir]) && cur.nodeType !== 1) {
}
return cur;});
    createOptions = ($__.fs.createOptions_10 = function createOptions(options) {
var vvv_return, vvv_switch, vvv_tmp0, object;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
options = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    object = $__.os.oid26 = {};
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, function $__lt4(res) {
        res.length = 1;
        if (res.length != 1)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt4, -2);
    }(options['match'](rnothtmlwhite)), ($__.fs.J$__v5960504135_375_239 = function J$__v5960504135_375(_, flag) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], flag = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (object, $__.os.oid26)[flag, 'memory'] = true;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
object[flag] = true;}, $__.fs.J$__v5960504135_375_239), 2, true, $__.uid);
    return object;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    object = $__.os.oid28 = {};
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, function $__lt5(res) {
        res.length = 1;
        if (res.length != 1)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt5, -2);
    }(options['match'](rnothtmlwhite)), ($__.fs.J$__v5960504135_375_252 = function J$__v5960504135_375(_, flag) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], flag = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (object, $__.os.oid28)[flag, 'memory'] = true;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
object[flag] = true;}, $__.fs.J$__v5960504135_375_252), 3, true, $__.uid);
    return object;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    object = $__.os.oid30 = {};
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, function $__lt6(res) {
        res.length = 2;
        if (res.length != 2)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt6, -2);
    }(options['match'](rnothtmlwhite)), ($__.fs.J$__v5960504135_375_265 = function J$__v5960504135_375(_, flag) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], flag = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (object, $__.os.oid30)[flag, 'once'] = true;
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    (object, $__.os.oid30)[flag, 'memory'] = true;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
object[flag] = true;}, $__.fs.J$__v5960504135_375_265), 4, true, $__.uid);
    return object;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    object = $__.os.oid32 = {};
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, function $__lt7(res) {
        res.length = 2;
        if (res.length != 2)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt7, -2);
    }(options['match'](rnothtmlwhite)), ($__.fs.J$__v5960504135_375_278 = function J$__v5960504135_375(_, flag) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], flag = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (object, $__.os.oid32)[flag, 'once'] = true;
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    (object, $__.os.oid32)[flag, 'memory'] = true;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
object[flag] = true;}, $__.fs.J$__v5960504135_375_278), 5, true, $__.uid);
    return object;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    object = $__.os.oid34 = {};
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, function $__lt8(res) {
        res.length = 2;
        if (res.length != 2)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt8, -2);
    }(options['match'](rnothtmlwhite)), ($__.fs.J$__v5960504135_375_291 = function J$__v5960504135_375(_, flag) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], flag = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (object, $__.os.oid34)[flag, 'once'] = true;
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    (object, $__.os.oid34)[flag, 'memory'] = true;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
object[flag] = true;}, $__.fs.J$__v5960504135_375_291), 6, true, $__.uid);
    return object;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    object = $__.os.oid36 = {};
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, function $__lt9(res) {
        res.length = 2;
        if (res.length != 2)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt9, -2);
    }(options['match'](rnothtmlwhite)), ($__.fs.J$__v5960504135_375_304 = function J$__v5960504135_375(_, flag) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], flag = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (object, $__.os.oid36)[flag, 'once'] = true;
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    (object, $__.os.oid36)[flag, 'memory'] = true;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
object[flag] = true;}, $__.fs.J$__v5960504135_375_304), 7, true, $__.uid);
    return object;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
object = {};
jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
    object[flag] = true;
});
return object;});
    Identity = ($__.fs.Identity_11 = function Identity(v) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
v = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return v;});
    Thrower = ($__.fs.Thrower_12 = function Thrower(ex) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ex = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
throw ex;});
    adoptValue = ($__.fs.adoptValue_13 = function adoptValue(value, resolve, reject, noValue) {
var vvv_return, vvv_switch, method;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], resolve = arguments[1], reject = arguments[2], noValue = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    if (value && jQuery.isFunction(method = value.promise)) {
        method.call(value).done(resolve).fail(reject);
    } else if (value && jQuery.isFunction(method = value.then)) {
        method.call(value, resolve, reject);
    } else {
        resolve.apply(undefined, [value].slice(noValue));
    }
} catch (value) {
    reject.apply(undefined, [value]);
}});
    completed = ($__.fs.completed_14 = function completed() {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    document['removeEventListener']('DOMContentLoaded', (((completed, $__.fs.completed_14), $__.fs.completed_14_210), $__.fs.completed_14_66));
    window['removeEventListener']('load', (((completed, $__.fs.completed_14), $__.fs.completed_14_211), $__.fs.completed_14_67));
    vvv_tmp0 = jQuery, 'ready', $__.fs.J$__v5960504135_463_340.call(vvv_tmp0, 0, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
document.removeEventListener('DOMContentLoaded', completed);
window.removeEventListener('load', completed);
jQuery.ready();}, $__.fs.completed_14_66 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function completed() {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(completed, -2);
    return completed;
})($__.fs.completed_14, [0], true)), $__.fs.completed_14_67 = function() {}, $__.fs.completed_14_210 = $__.fs.completed_14, $__.fs.completed_14_211 = $__.fs.completed_14, $__.fs.completed_14);
    Data = ($__.fs.Data_15 = function Data() {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.expando = TAJS_restrictToType(jQuery.expando, 'string') + (((vvv_tmp0 = Data).uid = (vvv_tmp0.uid, 1) + 1) - 1);
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    this.expando = TAJS_restrictToType(jQuery.expando, 'string') + (((vvv_tmp0 = Data).uid = (vvv_tmp0.uid, 2) + 1) - 1);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.expando = jQuery.expando + Data.uid++;});
    getData = ($__.fs.getData_16 = function getData(data) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (data === 'true') {
    return true;
}
if (data === 'false') {
    return false;
}
if (data === 'null') {
    return null;
}
if (data === +data + '') {
    return +data;
}
if (rbrace.test(data)) {
    return JSON.parse(data);
}
return data;});
    dataAttr = ($__.fs.dataAttr_17 = function dataAttr(elem, key, data) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], key = arguments[1], data = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (data === undefined && elem.nodeType === 1) {
    name = 'data-' + key.replace(rmultiDash, '-$&').toLowerCase();
    data = elem.getAttribute(name);
    if (typeof data === 'string') {
        try {
            data = getData(data);
        } catch (e) {
        }
        dataUser.set(elem, key, data);
    } else {
        data = undefined;
    }
}
return data;});
    adjustCSS = ($__.fs.adjustCSS_18 = function adjustCSS(elem, prop, valueParts, tween) {
var vvv_return, vvv_switch, adjusted, scale, maxIterations, currentValue, initial, unit, initialInUnit;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], prop = arguments[1], valueParts = arguments[2], tween = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
scale = 1;
maxIterations = 20;
currentValue = tween ? function () {
    return tween.cur();
} : function () {
    return jQuery.css(elem, prop, '');
};
initial = currentValue();
unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? '' : 'px');
initialInUnit = (jQuery.cssNumber[prop] || unit !== 'px' && +initial) && rcssNum.exec(jQuery.css(elem, prop));
if (initialInUnit && initialInUnit[3] !== unit) {
    unit = unit || initialInUnit[3];
    valueParts = valueParts || [];
    initialInUnit = +initial || 1;
    do {
        scale = scale || '.5';
        initialInUnit = initialInUnit / scale;
        jQuery.style(elem, prop, initialInUnit + unit);
    } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);
}
if (valueParts) {
    initialInUnit = +initialInUnit || +initial || 0;
    adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
    if (tween) {
        tween.unit = unit;
        tween.start = initialInUnit;
        tween.end = adjusted;
    }
}
return adjusted;});
    getDefaultDisplay = ($__.fs.getDefaultDisplay_19 = function getDefaultDisplay(elem) {
var vvv_return, vvv_switch, temp, doc, nodeName, display;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
doc = elem.ownerDocument;
nodeName = elem.nodeName;
display = defaultDisplayMap[nodeName];
if (display) {
    return display;
}
temp = doc.body.appendChild(doc.createElement(nodeName));
display = jQuery.css(temp, 'display');
temp.parentNode.removeChild(temp);
if (display === 'none') {
    display = 'block';
}
defaultDisplayMap[nodeName] = display;
return display;});
    showHide = ($__.fs.showHide_20 = function showHide(elements, show) {
var vvv_return, vvv_switch, display, elem, values, index, length;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elements = arguments[0], show = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
values = [];
index = 0;
length = elements.length;
for (; index < length; index++) {
    elem = elements[index];
    if (!elem.style) {
        continue;
    }
    display = elem.style.display;
    if (show) {
        if (display === 'none') {
            values[index] = dataPriv.get(elem, 'display') || null;
            if (!values[index]) {
                elem.style.display = '';
            }
        }
        if (elem.style.display === '' && isHiddenWithinTree(elem)) {
            values[index] = getDefaultDisplay(elem);
        }
    } else {
        if (display !== 'none') {
            values[index] = 'none';
            dataPriv.set(elem, 'display', display);
        }
    }
}
for (index = 0; index < length; index++) {
    if (values[index] != null) {
        elements[index].style.display = values[index];
    }
}
return elements;});
    getAll = ($__.fs.getAll_21 = function getAll(context, tag) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0], tag = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof context.getElementsByTagName !== 'undefined') {
    ret = context.getElementsByTagName(tag || '*');
} else if (typeof context.querySelectorAll !== 'undefined') {
    ret = context.querySelectorAll(tag || '*');
} else {
    ret = [];
}
if (tag === undefined || tag && nodeName(context, tag)) {
    return jQuery.merge([context], ret);
}
return ret;});
    setGlobalEval = ($__.fs.setGlobalEval_22 = function setGlobalEval(elems, refElements) {
var vvv_return, vvv_switch, i, l;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elems = arguments[0], refElements = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
l = elems.length;
for (; i < l; i++) {
    dataPriv.set(elems[i], 'globalEval', !refElements || dataPriv.get(refElements[i], 'globalEval'));
}});
    buildFragment = ($__.fs.buildFragment_23 = function buildFragment(elems, context, scripts, selection, ignored) {
var vvv_return, vvv_switch, elem, tmp, tag, wrap, contains, j, fragment, nodes, i, l;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elems = arguments[0], context = arguments[1], scripts = arguments[2], selection = arguments[3], ignored = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
fragment = context.createDocumentFragment();
nodes = [];
i = 0;
l = elems.length;
for (; i < l; i++) {
    elem = elems[i];
    if (elem || elem === 0) {
        if (jQuery.type(elem) === 'object') {
            jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
        } else if (!rhtml.test(elem)) {
            nodes.push(context.createTextNode(elem));
        } else {
            tmp = tmp || fragment.appendChild(context.createElement('div'));
            tag = (rtagName.exec(elem) || [
                '',
                ''
            ])[1].toLowerCase();
            wrap = wrapMap[tag] || wrapMap._default;
            tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
            j = wrap[0];
            while (j--) {
                tmp = tmp.lastChild;
            }
            jQuery.merge(nodes, tmp.childNodes);
            tmp = fragment.firstChild;
            tmp.textContent = '';
        }
    }
}
fragment.textContent = '';
i = 0;
while (elem = nodes[i++]) {
    if (selection && jQuery.inArray(elem, selection) > -1) {
        if (ignored) {
            ignored.push(elem);
        }
        continue;
    }
    contains = jQuery.contains(elem.ownerDocument, elem);
    tmp = getAll(fragment.appendChild(elem), 'script');
    if (contains) {
        setGlobalEval(tmp);
    }
    if (scripts) {
        j = 0;
        while (elem = tmp[j++]) {
            if (rscriptType.test(elem.type || '')) {
                scripts.push(elem);
            }
        }
    }
}
return fragment;});
    returnTrue = ($__.fs.returnTrue_24 = function returnTrue() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return true;});
    returnFalse = ($__.fs.returnFalse_25 = function returnFalse() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return false;});
    safeActiveElement = ($__.fs.safeActiveElement_26 = function safeActiveElement() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    return document.activeElement;
} catch (err) {
}});
    on = ($__.fs.on_27 = function on(elem, types, selector, data, fn, one) {
var vvv_return, vvv_switch, origFn, type;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], types = arguments[1], selector = arguments[2], data = arguments[3], fn = arguments[4], one = arguments[5];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof types === 'object') {
    if (typeof selector !== 'string') {
        data = data || selector;
        selector = undefined;
    }
    for (type in types) {
        on(elem, type, selector, data, types[type], one);
    }
    return elem;
}
if (data == null && fn == null) {
    fn = selector;
    data = selector = undefined;
} else if (fn == null) {
    if (typeof selector === 'string') {
        fn = data;
        data = undefined;
    } else {
        fn = data;
        data = selector;
        selector = undefined;
    }
}
if (fn === false) {
    fn = returnFalse;
} else if (!fn) {
    return elem;
}
if (one === 1) {
    origFn = fn;
    fn = function (event) {
        jQuery().off(event);
        return origFn.apply(this, arguments);
    };
    fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
}
return elem.each(function () {
    jQuery.event.add(this, types, fn, data, selector);
});});
    manipulationTarget = ($__.fs.manipulationTarget_28 = function manipulationTarget(elem, content) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], content = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (nodeName(elem, 'table') && nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr')) {
    return jQuery('>tbody', elem)[0] || elem;
}
return elem;});
    disableScript = ($__.fs.disableScript_29 = function disableScript(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type;
return elem;});
    restoreScript = ($__.fs.restoreScript_30 = function restoreScript(elem) {
var vvv_return, vvv_switch, match;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
match = rscriptTypeMasked.exec(elem.type);
if (match) {
    elem.type = match[1];
} else {
    elem.removeAttribute('type');
}
return elem;});
    cloneCopyEvent = ($__.fs.cloneCopyEvent_31 = function cloneCopyEvent(src, dest) {
var vvv_return, vvv_switch, i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
src = arguments[0], dest = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (dest.nodeType !== 1) {
    return;
}
if (dataPriv.hasData(src)) {
    pdataOld = dataPriv.access(src);
    pdataCur = dataPriv.set(dest, pdataOld);
    events = pdataOld.events;
    if (events) {
        delete pdataCur.handle;
        pdataCur.events = {};
        for (type in events) {
            for (i = 0, l = events[type].length; i < l; i++) {
                jQuery.event.add(dest, type, events[type][i]);
            }
        }
    }
}
if (dataUser.hasData(src)) {
    udataOld = dataUser.access(src);
    udataCur = jQuery.extend({}, udataOld);
    dataUser.set(dest, udataCur);
}});
    fixInput = ($__.fs.fixInput_32 = function fixInput(src, dest) {
var vvv_return, vvv_switch, nodeName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
src = arguments[0], dest = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
nodeName = dest.nodeName.toLowerCase();
if (nodeName === 'input' && rcheckableType.test(src.type)) {
    dest.checked = src.checked;
} else if (nodeName === 'input' || nodeName === 'textarea') {
    dest.defaultValue = src.defaultValue;
}});
    domManip = ($__.fs.domManip_33 = function domManip(collection, args, callback, ignored) {
var vvv_return, vvv_switch, fragment, first, scripts, hasScripts, node, doc, i, l, iNoClone, value, isFunction;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
collection = arguments[0], args = arguments[1], callback = arguments[2], ignored = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
args = concat.apply([], args);
i = 0;
l = collection.length;
iNoClone = l - 1;
value = args[0];
isFunction = jQuery.isFunction(value);
if (isFunction || l > 1 && typeof value === 'string' && !support.checkClone && rchecked.test(value)) {
    return collection.each(function (index) {
        var self = collection.eq(index);
        if (isFunction) {
            args[0] = value.call(this, index, self.html());
        }
        domManip(self, args, callback, ignored);
    });
}
if (l) {
    fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
    first = fragment.firstChild;
    if (fragment.childNodes.length === 1) {
        fragment = first;
    }
    if (first || ignored) {
        scripts = jQuery.map(getAll(fragment, 'script'), disableScript);
        hasScripts = scripts.length;
        for (; i < l; i++) {
            node = fragment;
            if (i !== iNoClone) {
                node = jQuery.clone(node, true, true);
                if (hasScripts) {
                    jQuery.merge(scripts, getAll(node, 'script'));
                }
            }
            callback.call(collection[i], node, i);
        }
        if (hasScripts) {
            doc = scripts[scripts.length - 1].ownerDocument;
            jQuery.map(scripts, restoreScript);
            for (i = 0; i < hasScripts; i++) {
                node = scripts[i];
                if (rscriptType.test(node.type || '') && !dataPriv.access(node, 'globalEval') && jQuery.contains(doc, node)) {
                    if (node.src) {
                        if (jQuery._evalUrl) {
                            jQuery._evalUrl(node.src);
                        }
                    } else {
                        DOMEval(node.textContent.replace(rcleanScript, ''), doc);
                    }
                }
            }
        }
    }
}
return collection;});
    remove = ($__.fs.remove_34 = function remove(elem, selector, keepData) {
var vvv_return, vvv_switch, node, nodes, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], selector = arguments[1], keepData = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
nodes = selector ? jQuery.filter(selector, elem) : elem;
i = 0;
for (; (node = nodes[i]) != null; i++) {
    if (!keepData && node.nodeType === 1) {
        jQuery.cleanData(getAll(node));
    }
    if (node.parentNode) {
        if (keepData && jQuery.contains(node.ownerDocument, node)) {
            setGlobalEval(getAll(node, 'script'));
        }
        node.parentNode.removeChild(node);
    }
}
return elem;});
    curCSS = ($__.fs.curCSS_35 = function curCSS(elem, name, computed) {
var vvv_return, vvv_switch, width, minWidth, maxWidth, ret, style;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], computed = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
style = elem.style;
computed = computed || getStyles(elem);
if (computed) {
    ret = computed.getPropertyValue(name) || computed[name];
    if (ret === '' && !jQuery.contains(elem.ownerDocument, elem)) {
        ret = jQuery.style(elem, name);
    }
    if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {
        width = style.width;
        minWidth = style.minWidth;
        maxWidth = style.maxWidth;
        style.minWidth = style.maxWidth = style.width = ret;
        ret = computed.width;
        style.width = width;
        style.minWidth = minWidth;
        style.maxWidth = maxWidth;
    }
}
return ret !== undefined ? ret + '' : ret;});
    addGetHookIf = ($__.fs.addGetHookIf_36 = function addGetHookIf(conditionFn, hookFn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
conditionFn = arguments[0], hookFn = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return $__.os.oid108 = {
        'get': ($__.fs.J$__v5960504135_692_490 = function J$__v5960504135_692() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (conditionFn()) {
    delete this.get;
    return;
}
return (this.get = hookFn).apply(this, arguments);})
    };
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return $__.os.oid179 = {
        'get': ($__.fs.J$__v5960504135_692_651 = function J$__v5960504135_692() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (conditionFn()) {
    delete this.get;
    return;
}
return (this.get = hookFn).apply(this, arguments);})
    };
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    return $__.os.oid180 = {
        'get': ($__.fs.J$__v5960504135_692_653 = function J$__v5960504135_692() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (conditionFn()) {
    delete this.get;
    return;
}
return (this.get = hookFn).apply(this, arguments);})
    };
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return {
    get: function () {
        if (conditionFn()) {
            delete this.get;
            return;
        }
        return (this.get = hookFn).apply(this, arguments);
    }
};});
    vendorPropName = ($__.fs.vendorPropName_37 = function vendorPropName(name) {
var vvv_return, vvv_switch, capName, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (name in emptyStyle) {
    return name;
}
capName = name[0].toUpperCase() + name.slice(1);
i = cssPrefixes.length;
while (i--) {
    name = cssPrefixes[i] + capName;
    if (name in emptyStyle) {
        return name;
    }
}});
    finalPropName = ($__.fs.finalPropName_38 = function finalPropName(name) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = jQuery.cssProps[name];
if (!ret) {
    ret = jQuery.cssProps[name] = vendorPropName(name) || name;
}
return ret;});
    setPositiveNumber = ($__.fs.setPositiveNumber_39 = function setPositiveNumber(elem, value, subtract) {
var vvv_return, vvv_switch, matches;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1], subtract = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matches = rcssNum.exec(value);
return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || 'px') : value;});
    augmentWidthOrHeight = ($__.fs.augmentWidthOrHeight_40 = function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
var vvv_return, vvv_switch, i, val;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], extra = arguments[2], isBorderBox = arguments[3], styles = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
val = 0;
if (extra === (isBorderBox ? 'border' : 'content')) {
    i = 4;
} else {
    i = name === 'width' ? 1 : 0;
}
for (; i < 4; i += 2) {
    if (extra === 'margin') {
        val += jQuery.css(elem, extra + cssExpand[i], true, styles);
    }
    if (isBorderBox) {
        if (extra === 'content') {
            val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
        }
        if (extra !== 'margin') {
            val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);
        }
    } else {
        val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
        if (extra !== 'padding') {
            val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);
        }
    }
}
return val;});
    getWidthOrHeight = ($__.fs.getWidthOrHeight_41 = function getWidthOrHeight(elem, name, extra) {
var vvv_return, vvv_switch, valueIsBorderBox, styles, val, isBorderBox;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], extra = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
styles = getStyles(elem);
val = curCSS(elem, name, styles);
isBorderBox = jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';
if (rnumnonpx.test(val)) {
    return val;
}
valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
val = parseFloat(val) || 0;
return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) + 'px';});
    Tween = ($__.fs.Tween_42 = function Tween(elem, options, prop, end, easing) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], options = arguments[1], prop = arguments[2], end = arguments[3], easing = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return new Tween.prototype.init(elem, options, prop, end, easing);});
    schedule = ($__.fs.schedule_43 = function schedule() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (inProgress) {
    if (document.hidden === false && window.requestAnimationFrame) {
        window.requestAnimationFrame(schedule);
    } else {
        window.setTimeout(schedule, jQuery.fx.interval);
    }
    jQuery.fx.tick();
}});
    createFxNow = ($__.fs.createFxNow_44 = function createFxNow() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
window.setTimeout(function () {
    fxNow = undefined;
});
return fxNow = jQuery.now();});
    genFx = ($__.fs.genFx_45 = function genFx(type, includeWidth) {
var vvv_return, vvv_switch, which, i, attrs;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0], includeWidth = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    i = 0;
    attrs = $__.os.oid123 = {
        'height': type
    };
    includeWidth = (includeWidth, 0);
    i < 4;
    which = TAJS_restrictToType(cssExpand[i, 0], 'string');
    (attrs, $__.os.oid123)['margin' + which, 'marginTop'] = (attrs, $__.os.oid123)['padding' + which, 'paddingTop'] = type;
    i = i + (2 - includeWidth);
    i < 4;
    which = TAJS_restrictToType(cssExpand[i, 2], 'string');
    (attrs, $__.os.oid123)['margin' + which, 'marginBottom'] = (attrs, $__.os.oid123)['padding' + which, 'paddingBottom'] = type;
    i = i + (2 - includeWidth);
    i < 4;
    includeWidth;
    return attrs;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    i = 0;
    attrs = $__.os.oid124 = {
        'height': type
    };
    includeWidth = (includeWidth, 0);
    i < 4;
    which = TAJS_restrictToType(cssExpand[i, 0], 'string');
    (attrs, $__.os.oid124)['margin' + which, 'marginTop'] = (attrs, $__.os.oid124)['padding' + which, 'paddingTop'] = type;
    i = i + (2 - includeWidth);
    i < 4;
    which = TAJS_restrictToType(cssExpand[i, 2], 'string');
    (attrs, $__.os.oid124)['margin' + which, 'marginBottom'] = (attrs, $__.os.oid124)['padding' + which, 'paddingBottom'] = type;
    i = i + (2 - includeWidth);
    i < 4;
    includeWidth;
    return attrs;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    i = 0;
    attrs = $__.os.oid125 = {
        'height': type
    };
    includeWidth = (includeWidth, 0);
    i < 4;
    which = TAJS_restrictToType(cssExpand[i, 0], 'string');
    (attrs, $__.os.oid125)['margin' + which, 'marginTop'] = (attrs, $__.os.oid125)['padding' + which, 'paddingTop'] = type;
    i = i + (2 - includeWidth);
    i < 4;
    which = TAJS_restrictToType(cssExpand[i, 2], 'string');
    (attrs, $__.os.oid125)['margin' + which, 'marginBottom'] = (attrs, $__.os.oid125)['padding' + which, 'paddingBottom'] = type;
    i = i + (2 - includeWidth);
    i < 4;
    includeWidth;
    return attrs;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
attrs = {
    height: type
};
includeWidth = includeWidth ? 1 : 0;
for (; i < 4; i += 2 - includeWidth) {
    which = cssExpand[i];
    attrs['margin' + which] = attrs['padding' + which] = type;
}
if (includeWidth) {
    attrs.opacity = attrs.width = type;
}
return attrs;});
    createTween = ($__.fs.createTween_46 = function createTween(value, prop, animation) {
var vvv_return, vvv_switch, tween, collection, index, length;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], prop = arguments[1], animation = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners['*']);
index = 0;
length = collection.length;
for (; index < length; index++) {
    if (tween = collection[index].call(animation, prop, value)) {
        return tween;
    }
}});
    defaultPrefilter = ($__.fs.defaultPrefilter_47 = function defaultPrefilter(elem, props, opts) {
var vvv_return, vvv_switch, prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox, anim, orig, style, hidden, dataShow;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], props = arguments[1], opts = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
isBox = 'width' in props || 'height' in props;
anim = this;
orig = {};
style = elem.style;
hidden = elem.nodeType && isHiddenWithinTree(elem);
dataShow = dataPriv.get(elem, 'fxshow');
if (!opts.queue) {
    hooks = jQuery._queueHooks(elem, 'fx');
    if (hooks.unqueued == null) {
        hooks.unqueued = 0;
        oldfire = hooks.empty.fire;
        hooks.empty.fire = function () {
            if (!hooks.unqueued) {
                oldfire();
            }
        };
    }
    hooks.unqueued++;
    anim.always(function () {
        anim.always(function () {
            hooks.unqueued--;
            if (!jQuery.queue(elem, 'fx').length) {
                hooks.empty.fire();
            }
        });
    });
}
for (prop in props) {
    value = props[prop];
    if (rfxtypes.test(value)) {
        delete props[prop];
        toggle = toggle || value === 'toggle';
        if (value === (hidden ? 'hide' : 'show')) {
            if (value === 'show' && dataShow && dataShow[prop] !== undefined) {
                hidden = true;
            } else {
                continue;
            }
        }
        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
    }
}
propTween = !jQuery.isEmptyObject(props);
if (!propTween && jQuery.isEmptyObject(orig)) {
    return;
}
if (isBox && elem.nodeType === 1) {
    opts.overflow = [
        style.overflow,
        style.overflowX,
        style.overflowY
    ];
    restoreDisplay = dataShow && dataShow.display;
    if (restoreDisplay == null) {
        restoreDisplay = dataPriv.get(elem, 'display');
    }
    display = jQuery.css(elem, 'display');
    if (display === 'none') {
        if (restoreDisplay) {
            display = restoreDisplay;
        } else {
            showHide([elem], true);
            restoreDisplay = elem.style.display || restoreDisplay;
            display = jQuery.css(elem, 'display');
            showHide([elem]);
        }
    }
    if (display === 'inline' || display === 'inline-block' && restoreDisplay != null) {
        if (jQuery.css(elem, 'float') === 'none') {
            if (!propTween) {
                anim.done(function () {
                    style.display = restoreDisplay;
                });
                if (restoreDisplay == null) {
                    display = style.display;
                    restoreDisplay = display === 'none' ? '' : display;
                }
            }
            style.display = 'inline-block';
        }
    }
}
if (opts.overflow) {
    style.overflow = 'hidden';
    anim.always(function () {
        style.overflow = opts.overflow[0];
        style.overflowX = opts.overflow[1];
        style.overflowY = opts.overflow[2];
    });
}
propTween = false;
for (prop in orig) {
    if (!propTween) {
        if (dataShow) {
            if ('hidden' in dataShow) {
                hidden = dataShow.hidden;
            }
        } else {
            dataShow = dataPriv.access(elem, 'fxshow', {
                display: restoreDisplay
            });
        }
        if (toggle) {
            dataShow.hidden = !hidden;
        }
        if (hidden) {
            showHide([elem], true);
        }
        anim.done(function () {
            if (!hidden) {
                showHide([elem]);
            }
            dataPriv.remove(elem, 'fxshow');
            for (prop in orig) {
                jQuery.style(elem, prop, orig[prop]);
            }
        });
    }
    propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
    if (!(prop in dataShow)) {
        dataShow[prop] = propTween.start;
        if (hidden) {
            propTween.end = propTween.start;
            propTween.start = 0;
        }
    }
}});
    propFilter = ($__.fs.propFilter_48 = function propFilter(props, specialEasing) {
var vvv_return, vvv_switch, index, name, easing, value, hooks;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
props = arguments[0], specialEasing = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (index in props) {
    name = jQuery.camelCase(index);
    easing = specialEasing[name];
    value = props[index];
    if (Array.isArray(value)) {
        easing = value[1];
        value = props[index] = value[0];
    }
    if (index !== name) {
        props[name] = value;
        delete props[index];
    }
    hooks = jQuery.cssHooks[name];
    if (hooks && 'expand' in hooks) {
        value = hooks.expand(value);
        delete props[name];
        for (index in value) {
            if (!(index in props)) {
                props[index] = value[index];
                specialEasing[index] = easing;
            }
        }
    } else {
        specialEasing[name] = easing;
    }
}});
    Animation = ($__.fs.Animation_49 = function Animation(elem, properties, options) {
var vvv_return, vvv_switch, result, stopped, index, length, deferred, tick, animation, props;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], properties = arguments[1], options = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
index = 0;
length = Animation.prefilters.length;
deferred = jQuery.Deferred().always(function () {
    delete tick.elem;
});
tick = function () {
    if (stopped) {
        return false;
    }
    var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;
    for (; index < length; index++) {
        animation.tweens[index].run(percent);
    }
    deferred.notifyWith(elem, [
        animation,
        percent,
        remaining
    ]);
    if (percent < 1 && length) {
        return remaining;
    }
    if (!length) {
        deferred.notifyWith(elem, [
            animation,
            1,
            0
        ]);
    }
    deferred.resolveWith(elem, [animation]);
    return false;
};
animation = deferred.promise({
    elem: elem,
    props: jQuery.extend({}, properties),
    opts: jQuery.extend(true, {
        specialEasing: {},
        easing: jQuery.easing._default
    }, options),
    originalProperties: properties,
    originalOptions: options,
    startTime: fxNow || createFxNow(),
    duration: options.duration,
    tweens: [],
    createTween: function (prop, end) {
        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
        animation.tweens.push(tween);
        return tween;
    },
    stop: function (gotoEnd) {
        var index = 0, length = gotoEnd ? animation.tweens.length : 0;
        if (stopped) {
            return this;
        }
        stopped = true;
        for (; index < length; index++) {
            animation.tweens[index].run(1);
        }
        if (gotoEnd) {
            deferred.notifyWith(elem, [
                animation,
                1,
                0
            ]);
            deferred.resolveWith(elem, [
                animation,
                gotoEnd
            ]);
        } else {
            deferred.rejectWith(elem, [
                animation,
                gotoEnd
            ]);
        }
        return this;
    }
});
props = animation.props;
propFilter(props, animation.opts.specialEasing);
for (; index < length; index++) {
    result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
    if (result) {
        if (jQuery.isFunction(result.stop)) {
            jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);
        }
        return result;
    }
}
jQuery.map(props, createTween, animation);
if (jQuery.isFunction(animation.opts.start)) {
    animation.opts.start.call(elem, animation);
}
animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
jQuery.fx.timer(jQuery.extend(tick, {
    elem: elem,
    anim: animation,
    queue: animation.opts.queue
}));
return animation;}, $__.fs.Animation_49_113 = $__.fs.Animation_49, $__.fs.Animation_49);
    stripAndCollapse = ($__.fs.stripAndCollapse_50 = function stripAndCollapse(value) {
var vvv_return, vvv_switch, tokens;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
tokens = value.match(rnothtmlwhite) || [];
return tokens.join(' ');});
    getClass = ($__.fs.getClass_51 = function getClass(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return elem.getAttribute && elem.getAttribute('class') || '';});
    buildParams = ($__.fs.buildParams_52 = function buildParams(prefix, obj, traditional, add) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
prefix = arguments[0], obj = arguments[1], traditional = arguments[2], add = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (Array.isArray(obj)) {
    jQuery.each(obj, function (i, v) {
        if (traditional || rbracket.test(prefix)) {
            add(prefix, v);
        } else {
            buildParams(prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']', v, traditional, add);
        }
    });
} else if (!traditional && jQuery.type(obj) === 'object') {
    for (name in obj) {
        buildParams(prefix + '[' + name + ']', obj[name], traditional, add);
    }
} else {
    add(prefix, obj);
}});
    addToPrefiltersOrTransports = ($__.fs.addToPrefiltersOrTransports_53 = function addToPrefiltersOrTransports(structure) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
structure = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return ($__.fs.J$__v5960504135_939_608 = function J$__v5960504135_939(dataTypeExpression, func) {
var vvv_return, vvv_switch, vvv_tmp0, dataType, i, dataTypes;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
dataTypeExpression = arguments[0], func = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    typeof dataTypeExpression !== 'string';
    func = dataTypeExpression;
    dataTypeExpression = '*';
    i = 0;
    dataTypes = function $__lt13(res) {
        res.length = 1;
        if (res.length != 1)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt13, -2);
    }(dataTypeExpression['toLowerCase']()['match'](rnothtmlwhite));
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (func, $__.fs.J$__v5960504135_1016_625), 41, true, $__.uid);
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 0], 'string');
    TAJS_restrictToType(dataType[0, 0], 'string') === '+';
    ((structure, $__.os.oid156)[dataType, '*'] = (TAJS_restrictToType((structure, $__.os.oid156)[dataType, '*'], 'undefined'), []))['push'](((func, $__.fs.J$__v5960504135_1016_625), $__.fs.J$__v5960504135_1016_625_180));
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 1], 'undefined');
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    typeof dataTypeExpression !== 'string';
    i = 0;
    dataTypes = function $__lt14(res) {
        res.length = 1;
        if (res.length != 1)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt14, -2);
    }(dataTypeExpression['toLowerCase']()['match'](rnothtmlwhite));
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (func, $__.fs.J$__v5960504135_1020_627), 42, true, $__.uid);
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 0], 'string');
    TAJS_restrictToType(dataType[0, 0], 'string') === '+';
    ((structure, $__.os.oid156)[dataType, 'script'] = (TAJS_restrictToType((structure, $__.os.oid156)[dataType, 'script'], 'undefined'), []))['push'](((func, $__.fs.J$__v5960504135_1020_627), $__.fs.J$__v5960504135_1020_627_184));
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 1], 'undefined');
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    typeof dataTypeExpression !== 'string';
    i = 0;
    dataTypes = function $__lt16(res) {
        res.length = 2;
        if (res.length != 2)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt16, -2);
    }(dataTypeExpression['toLowerCase']()['match'](rnothtmlwhite));
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (func, $__.fs.J$__v5960504135_1038_630), 44, true, $__.uid);
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 0], 'string');
    TAJS_restrictToType(dataType[0, 0], 'string') === '+';
    ((structure, $__.os.oid156)[dataType, 'json'] = (TAJS_restrictToType((structure, $__.os.oid156)[dataType, 'json'], 'undefined'), []))['push'](((func, $__.fs.J$__v5960504135_1038_630), $__.fs.J$__v5960504135_1038_630_190));
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 1], 'string');
    TAJS_restrictToType(dataType[0, 0], 'string') === '+';
    ((structure, $__.os.oid156)[dataType, 'jsonp'] = (TAJS_restrictToType((structure, $__.os.oid156)[dataType, 'jsonp'], 'undefined'), []))['push'](((func, $__.fs.J$__v5960504135_1038_630), $__.fs.J$__v5960504135_1038_630_191));
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 2], 'undefined');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof dataTypeExpression !== 'string') {
    func = dataTypeExpression;
    dataTypeExpression = '*';
}
i = 0;
dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
if (jQuery.isFunction(func)) {
    while (dataType = dataTypes[i++]) {
        if (dataType[0] === '+') {
            dataType = dataType.slice(1) || '*';
            (structure[dataType] = structure[dataType] || []).unshift(func);
        } else {
            (structure[dataType] = structure[dataType] || []).push(func);
        }
    }
}});
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return ($__.fs.J$__v5960504135_939_609 = function J$__v5960504135_939(dataTypeExpression, func) {
var vvv_return, vvv_switch, vvv_tmp0, dataType, i, dataTypes;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
dataTypeExpression = arguments[0], func = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    typeof dataTypeExpression !== 'string';
    func = dataTypeExpression;
    dataTypeExpression = '*';
    i = 0;
    dataTypes = function $__lt12(res) {
        res.length = 1;
        if (res.length != 1)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt12, -2);
    }(dataTypeExpression['toLowerCase']()['match'](rnothtmlwhite));
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (func, $__.fs.J$__v5960504135_1014_624), 40, true, $__.uid);
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 0], 'string');
    TAJS_restrictToType(dataType[0, 0], 'string') === '+';
    ((structure, $__.os.oid157)[dataType, '*'] = (TAJS_restrictToType((structure, $__.os.oid157)[dataType, '*'], 'undefined'), []))['push'](((func, $__.fs.J$__v5960504135_1014_624), $__.fs.J$__v5960504135_1014_624_178));
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 1], 'undefined');
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    typeof dataTypeExpression !== 'string';
    i = 0;
    dataTypes = function $__lt15(res) {
        res.length = 1;
        if (res.length != 1)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt15, -2);
    }(dataTypeExpression['toLowerCase']()['match'](rnothtmlwhite));
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (func, $__.fs.J$__v5960504135_1028_628), 43, true, $__.uid);
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 0], 'string');
    TAJS_restrictToType(dataType[0, 0], 'string') === '+';
    ((structure, $__.os.oid157)[dataType, 'script'] = (TAJS_restrictToType((structure, $__.os.oid157)[dataType, 'script'], 'undefined'), []))['push'](((func, $__.fs.J$__v5960504135_1028_628), $__.fs.J$__v5960504135_1028_628_186));
    dataType = TAJS_restrictToType(dataTypes[(i = +i + 1) - 1, 1], 'undefined');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof dataTypeExpression !== 'string') {
    func = dataTypeExpression;
    dataTypeExpression = '*';
}
i = 0;
dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
if (jQuery.isFunction(func)) {
    while (dataType = dataTypes[i++]) {
        if (dataType[0] === '+') {
            dataType = dataType.slice(1) || '*';
            (structure[dataType] = structure[dataType] || []).unshift(func);
        } else {
            (structure[dataType] = structure[dataType] || []).push(func);
        }
    }
}});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (dataTypeExpression, func) {
    if (typeof dataTypeExpression !== 'string') {
        func = dataTypeExpression;
        dataTypeExpression = '*';
    }
    var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
    if (jQuery.isFunction(func)) {
        while (dataType = dataTypes[i++]) {
            if (dataType[0] === '+') {
                dataType = dataType.slice(1) || '*';
                (structure[dataType] = structure[dataType] || []).unshift(func);
            } else {
                (structure[dataType] = structure[dataType] || []).push(func);
            }
        }
    }
};});
    inspectPrefiltersOrTransports = ($__.fs.inspectPrefiltersOrTransports_54 = function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
var vvv_return, vvv_switch, inspected, seekingTransport, inspect;
inspect = function inspect(dataType) {
    var selected;
    inspected[dataType] = true;
    jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
        if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {
            options.dataTypes.unshift(dataTypeOrTransport);
            inspect(dataTypeOrTransport);
            return false;
        } else if (seekingTransport) {
            return !(selected = dataTypeOrTransport);
        }
    });
    return selected;
};
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
structure = arguments[0], options = arguments[1], originalOptions = arguments[2], jqXHR = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
inspected = {};
seekingTransport = structure === transports;
return inspect(options.dataTypes[0]) || !inspected['*'] && inspect('*');});
    ajaxExtend = ($__.fs.ajaxExtend_55 = function ajaxExtend(target, src) {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, key, deep, flatOptions;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
target = arguments[0], src = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    flatOptions = (((jQuery.ajaxSettings, $__.os.oid165), $__.os.oid165).flatOptions, $__.os.oid164);
    vvv_tmp0 = src;
    'accepts' in vvv_tmp0;
    key = 'accepts';
    ((src, $__.os.oid172)[key, 'accepts'], $__.os.oid169) !== undefined;
    ((TAJS_restrictToType((flatOptions, $__.os.oid164)[key, 'accepts'], 'undefined'), (deep, deep = $__.os.oid173 = {})), $__.os.oid173)[key, 'accepts'] = ((src, $__.os.oid172)[key, 'accepts'], $__.os.oid169);
    'contents' in vvv_tmp0;
    key = 'contents';
    ((src, $__.os.oid172)[key, 'contents'], $__.os.oid170) !== undefined;
    ((TAJS_restrictToType((flatOptions, $__.os.oid164)[key, 'contents'], 'undefined'), deep), $__.os.oid173)[key, 'contents'] = ((src, $__.os.oid172)[key, 'contents'], $__.os.oid170);
    'converters' in vvv_tmp0;
    key = 'converters';
    ((src, $__.os.oid172)[key, 'converters'], $__.os.oid171) !== undefined;
    ((TAJS_restrictToType((flatOptions, $__.os.oid164)[key, 'converters'], 'undefined'), deep), $__.os.oid173)[key, 'converters'] = ((src, $__.os.oid172)[key, 'converters'], $__.os.oid171);
    deep;
    vvv_tmp1 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp1, true, target, deep, 35, true, $__.uid);
    return target;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    flatOptions = (((jQuery.ajaxSettings, $__.os.oid165), $__.os.oid165).flatOptions, $__.os.oid164);
    vvv_tmp0 = src;
    'jsonp' in vvv_tmp0;
    key = 'jsonp';
    TAJS_restrictToType((src, $__.os.oid174)[key, 'jsonp'], 'string') !== undefined;
    ((TAJS_restrictToType((flatOptions, $__.os.oid164)[key, 'jsonp'], 'undefined'), (deep, deep = $__.os.oid175 = {})), $__.os.oid175)[key, 'jsonp'] = TAJS_restrictToType((src, $__.os.oid174)[key, 'jsonp'], 'string');
    'jsonpCallback' in vvv_tmp0;
    key = 'jsonpCallback';
    TAJS_restrictToType((src, $__.os.oid174)[key, 'jsonpCallback'], 'function') !== undefined;
    ((TAJS_restrictToType((flatOptions, $__.os.oid164)[key, 'jsonpCallback'], 'undefined'), deep), $__.os.oid175)[key, 'jsonpCallback'] = TAJS_restrictToType((src, $__.os.oid174)[key, 'jsonpCallback'], 'function');
    deep;
    vvv_tmp1 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp1, true, target, deep, 36, true, $__.uid);
    return target;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
flatOptions = jQuery.ajaxSettings.flatOptions || {};
for (key in src) {
    if (src[key] !== undefined) {
        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
    }
}
if (deep) {
    jQuery.extend(true, target, deep);
}
return target;});
    ajaxHandleResponses = ($__.fs.ajaxHandleResponses_56 = function ajaxHandleResponses(s, jqXHR, responses) {
var vvv_return, vvv_switch, ct, type, finalDataType, firstDataType, contents, dataTypes;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
s = arguments[0], jqXHR = arguments[1], responses = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
contents = s.contents;
dataTypes = s.dataTypes;
while (dataTypes[0] === '*') {
    dataTypes.shift();
    if (ct === undefined) {
        ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');
    }
}
if (ct) {
    for (type in contents) {
        if (contents[type] && contents[type].test(ct)) {
            dataTypes.unshift(type);
            break;
        }
    }
}
if (dataTypes[0] in responses) {
    finalDataType = dataTypes[0];
} else {
    for (type in responses) {
        if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {
            finalDataType = type;
            break;
        }
        if (!firstDataType) {
            firstDataType = type;
        }
    }
    finalDataType = finalDataType || firstDataType;
}
if (finalDataType) {
    if (finalDataType !== dataTypes[0]) {
        dataTypes.unshift(finalDataType);
    }
    return responses[finalDataType];
}});
    ajaxConvert = ($__.fs.ajaxConvert_57 = function ajaxConvert(s, response, jqXHR, isSuccess) {
var vvv_return, vvv_switch, conv2, current, conv, tmp, prev, converters, dataTypes;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
s = arguments[0], response = arguments[1], jqXHR = arguments[2], isSuccess = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
converters = {};
dataTypes = s.dataTypes.slice();
if (dataTypes[1]) {
    for (conv in s.converters) {
        converters[conv.toLowerCase()] = s.converters[conv];
    }
}
current = dataTypes.shift();
while (current) {
    if (s.responseFields[current]) {
        jqXHR[s.responseFields[current]] = response;
    }
    if (!prev && isSuccess && s.dataFilter) {
        response = s.dataFilter(response, s.dataType);
    }
    prev = current;
    current = dataTypes.shift();
    if (current) {
        if (current === '*') {
            current = prev;
        } else if (prev !== '*' && prev !== current) {
            conv = converters[prev + ' ' + current] || converters['* ' + current];
            if (!conv) {
                for (conv2 in converters) {
                    tmp = conv2.split(' ');
                    if (tmp[1] === current) {
                        conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];
                        if (conv) {
                            if (conv === true) {
                                conv = converters[conv2];
                            } else if (converters[conv2] !== true) {
                                current = tmp[0];
                                dataTypes.unshift(tmp[1]);
                            }
                            break;
                        }
                    }
                }
            }
            if (conv !== true) {
                if (conv && s.throws) {
                    response = conv(response);
                } else {
                    try {
                        response = conv(response);
                    } catch (e) {
                        return {
                            state: 'parsererror',
                            error: conv ? e : 'No conversion from ' + prev + ' to ' + current
                        };
                    }
                }
            }
        }
    }
}
return {
    state: 'success',
    data: response
};});
    arr = [];
    document = TAJS_restrictToType(window.document, 'HTMLDocument');
    getProto = TAJS_restrictToType(Object.getPrototypeOf, 'function');
    slice = TAJS_restrictToType(arr.slice, 'function');
    concat = TAJS_restrictToType(arr.concat, 'function');
    push = TAJS_restrictToType(arr.push, 'function');
    indexOf = TAJS_restrictToType(arr.indexOf, 'function');
    class2type = $__.os.oid0 = {};
    toString = TAJS_restrictToType((class2type, $__.os.oid0).toString, 'function');
    hasOwn = TAJS_restrictToType((class2type, $__.os.oid0).hasOwnProperty, 'function');
    fnToString = TAJS_restrictToType(hasOwn.toString, 'function');
    ObjectFunctionString = fnToString['call'](Object);
    support = $__.os.oid1 = {};
    version = '3.2.0';
    jQuery = ($__.fs.J$__v5960504135_6_58 = function J$__v5960504135_6(selector, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], context = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return new $__.fs.J$__v5960504135_332_203(selector, context, 0, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return new jQuery.fn.init(selector, context);}, $__.fs.J$__v5960504135_6_58_213 = $__.fs.J$__v5960504135_6_58, $__.fs.J$__v5960504135_6_58_215 = $__.fs.J$__v5960504135_6_58, $__.fs.J$__v5960504135_6_58_217 = $__.fs.J$__v5960504135_6_58, $__.fs.J$__v5960504135_6_58_219 = $__.fs.J$__v5960504135_6_58, $__.fs.J$__v5960504135_6_58);
    rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    rmsPrefix = /^-ms-/;
    rdashAlpha = /-([a-z])/g;
    fcamelCase = ($__.fs.J$__v5960504135_8_59 = function J$__v5960504135_8(all, letter) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
all = arguments[0], letter = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return letter.toUpperCase();});
    jQuery.fn = jQuery.prototype = $__.os.oid2 = {
        'jquery': version,
        'constructor': jQuery,
        'length': 0,
        'toArray': ($__.fs.J$__v5960504135_10_60 = function J$__v5960504135_10() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return slice.call(this);}),
        'get': ($__.fs.J$__v5960504135_12_61 = function J$__v5960504135_12(num) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
num = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (num == null) {
    return slice.call(this);
}
return num < 0 ? this[num + this.length] : this[num];}),
        'pushStack': ($__.fs.J$__v5960504135_14_62 = function J$__v5960504135_14(elems) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elems = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = jQuery.merge(this.constructor(), elems);
ret.prevObject = this;
return ret;}),
        'each': ($__.fs.J$__v5960504135_16_63 = function J$__v5960504135_16(callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
callback = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return jQuery.each(this, callback);}),
        'map': ($__.fs.J$__v5960504135_20_64 = function J$__v5960504135_20(callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
callback = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.pushStack(jQuery.map(this, function (elem, i) {
    return callback.call(elem, i, elem);
}));}),
        'slice': ($__.fs.J$__v5960504135_22_65 = function J$__v5960504135_22() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.pushStack(slice.apply(this, arguments));}),
        'first': ($__.fs.J$__v5960504135_24_66 = function J$__v5960504135_24() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.eq(0);}),
        'last': ($__.fs.J$__v5960504135_26_67 = function J$__v5960504135_26() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.eq(-1);}),
        'eq': ($__.fs.J$__v5960504135_28_68 = function J$__v5960504135_28(i) {
var vvv_return, vvv_switch, len, j;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = this.length;
j = +i + (i < 0 ? len : 0);
return this.pushStack(j >= 0 && j < len ? [this[j]] : []);}),
        'end': ($__.fs.J$__v5960504135_30_69 = function J$__v5960504135_30() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.prevObject || this.constructor();}),
        'push': push,
        'sort': TAJS_restrictToType(arr.sort, 'function'),
        'splice': TAJS_restrictToType(arr.splice, 'function')
    };
    jQuery.extend = ((jQuery.fn, $__.os.oid2), $__.os.oid2).extend = ($__.fs.J$__v5960504135_32_70 = function J$__v5960504135_32() {
var vvv_return, vvv_switch, vvv_tmp0, options, name, src, copy, copyIsArray, clone, target, i, length, deep, vvv_tmp1, vvv_tmp2, vvv_tmp3, vvv_tmp4, vvv_tmp5, vvv_tmp6, vvv_tmp7, vvv_tmp8, vvv_tmp9;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    target = (arguments[0, 0], $__.os.oid3);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid3)) != null;
    vvv_tmp0 = options;
    'expando' in vvv_tmp0;
    name = 'expando';
    src = TAJS_restrictToType(target[name, 'expando'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'expando'], 'string');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'expando'] = copy;
    'isReady' in vvv_tmp0;
    name = 'isReady';
    src = TAJS_restrictToType(target[name, 'isReady'], 'undefined');
    copy = ((options, $__.os.oid3)[name, 'isReady'], true);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'isReady'] = copy;
    'error' in vvv_tmp0;
    name = 'error';
    src = TAJS_restrictToType(target[name, 'error'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'error'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'error'] = copy;
    'noop' in vvv_tmp0;
    name = 'noop';
    src = TAJS_restrictToType(target[name, 'noop'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'noop'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'noop'] = copy;
    'isFunction' in vvv_tmp0;
    name = 'isFunction';
    src = TAJS_restrictToType(target[name, 'isFunction'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'isFunction'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'isFunction'] = copy;
    'isWindow' in vvv_tmp0;
    name = 'isWindow';
    src = TAJS_restrictToType(target[name, 'isWindow'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'isWindow'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'isWindow'] = copy;
    'isNumeric' in vvv_tmp0;
    name = 'isNumeric';
    src = TAJS_restrictToType(target[name, 'isNumeric'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'isNumeric'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'isNumeric'] = copy;
    'isPlainObject' in vvv_tmp0;
    name = 'isPlainObject';
    src = TAJS_restrictToType(target[name, 'isPlainObject'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'isPlainObject'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'isPlainObject'] = copy;
    'isEmptyObject' in vvv_tmp0;
    name = 'isEmptyObject';
    src = TAJS_restrictToType(target[name, 'isEmptyObject'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'isEmptyObject'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'isEmptyObject'] = copy;
    'type' in vvv_tmp0;
    name = 'type';
    src = TAJS_restrictToType(target[name, 'type'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'type'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'type'] = copy;
    'globalEval' in vvv_tmp0;
    name = 'globalEval';
    src = TAJS_restrictToType(target[name, 'globalEval'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'globalEval'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'globalEval'] = copy;
    'camelCase' in vvv_tmp0;
    name = 'camelCase';
    src = TAJS_restrictToType(target[name, 'camelCase'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'camelCase'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'camelCase'] = copy;
    'each' in vvv_tmp0;
    name = 'each';
    src = TAJS_restrictToType(target[name, 'each'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'each'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'each'] = copy;
    'trim' in vvv_tmp0;
    name = 'trim';
    src = TAJS_restrictToType(target[name, 'trim'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'trim'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'trim'] = copy;
    'makeArray' in vvv_tmp0;
    name = 'makeArray';
    src = TAJS_restrictToType(target[name, 'makeArray'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'makeArray'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'makeArray'] = copy;
    'inArray' in vvv_tmp0;
    name = 'inArray';
    src = TAJS_restrictToType(target[name, 'inArray'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'inArray'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'inArray'] = copy;
    'merge' in vvv_tmp0;
    name = 'merge';
    src = TAJS_restrictToType(target[name, 'merge'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'merge'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'merge'] = copy;
    'grep' in vvv_tmp0;
    name = 'grep';
    src = TAJS_restrictToType(target[name, 'grep'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'grep'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'grep'] = copy;
    'map' in vvv_tmp0;
    name = 'map';
    src = TAJS_restrictToType(target[name, 'map'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'map'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'map'] = copy;
    'guid' in vvv_tmp0;
    name = 'guid';
    src = TAJS_restrictToType(target[name, 'guid'], 'undefined');
    copy = ((options, $__.os.oid3)[name, 'guid'], 1);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'guid'] = copy;
    'proxy' in vvv_tmp0;
    name = 'proxy';
    src = TAJS_restrictToType(target[name, 'proxy'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'proxy'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'proxy'] = copy;
    'now' in vvv_tmp0;
    name = 'now';
    src = TAJS_restrictToType(target[name, 'now'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid3)[name, 'now'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'now'] = copy;
    'support' in vvv_tmp0;
    name = 'support';
    src = TAJS_restrictToType(target[name, 'support'], 'undefined');
    copy = ((options, $__.os.oid3)[name, 'support'], $__.os.oid1);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'support'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    target = (arguments[0, 0], $__.os.oid21);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid21)) != null;
    vvv_tmp0 = options;
    'find' in vvv_tmp0;
    name = 'find';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'find'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid21)[name, 'find'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'find'] = copy;
    'filter' in vvv_tmp0;
    name = 'filter';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'filter'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid21)[name, 'filter'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'filter'] = copy;
    'not' in vvv_tmp0;
    name = 'not';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'not'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid21)[name, 'not'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'not'] = copy;
    'is' in vvv_tmp0;
    name = 'is';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'is'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid21)[name, 'is'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'is'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    target = (arguments[0, 0], $__.os.oid23);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid23)) != null;
    vvv_tmp0 = options;
    'has' in vvv_tmp0;
    name = 'has';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'has'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid23)[name, 'has'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'has'] = copy;
    'closest' in vvv_tmp0;
    name = 'closest';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'closest'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid23)[name, 'closest'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'closest'] = copy;
    'index' in vvv_tmp0;
    name = 'index';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'index'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid23)[name, 'index'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'index'] = copy;
    'add' in vvv_tmp0;
    name = 'add';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'add'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid23)[name, 'add'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'add'] = copy;
    'addBack' in vvv_tmp0;
    name = 'addBack';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'addBack'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid23)[name, 'addBack'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'addBack'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    target = (arguments[0, 0], $__.os.oid25);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid25)) != null;
    vvv_tmp0 = options;
    'Deferred' in vvv_tmp0;
    name = 'Deferred';
    src = TAJS_restrictToType(target[name, 'Deferred'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid25)[name, 'Deferred'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'Deferred'] = copy;
    'when' in vvv_tmp0;
    name = 'when';
    src = TAJS_restrictToType(target[name, 'when'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid25)[name, 'when'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'when'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    target = (arguments[0, 0], $__.os.oid39);
    i = 1;
    length = (arguments.length, 2);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    i < length;
    (options = (arguments[i, 1], $__.os.oid38)) != null;
    vvv_tmp0 = options;
    'state' in vvv_tmp0;
    name = 'state';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'state'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'state'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'state'] = copy;
    'always' in vvv_tmp0;
    name = 'always';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'always'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'always'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'always'] = copy;
    'catch' in vvv_tmp0;
    name = 'catch';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'catch'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'catch'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'catch'] = copy;
    'pipe' in vvv_tmp0;
    name = 'pipe';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'pipe'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'pipe'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'pipe'] = copy;
    'then' in vvv_tmp0;
    name = 'then';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'then'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'then'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'then'] = copy;
    'promise' in vvv_tmp0;
    name = 'promise';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'promise'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'promise'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'promise'] = copy;
    'progress' in vvv_tmp0;
    name = 'progress';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'progress'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'progress'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'progress'] = copy;
    'done' in vvv_tmp0;
    name = 'done';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'done'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'done'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'done'] = copy;
    'fail' in vvv_tmp0;
    name = 'fail';
    src = TAJS_restrictToType((target, $__.os.oid39)[name, 'fail'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid38)[name, 'fail'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid39)[name, 'fail'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    target = (arguments[0, 0], $__.os.oid40);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid40)) != null;
    vvv_tmp0 = options;
    'isReady' in vvv_tmp0;
    name = 'isReady';
    src = (target[name, 'isReady'], true);
    copy = ((options, $__.os.oid40)[name, 'isReady'], false);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'isReady'] = copy;
    'readyWait' in vvv_tmp0;
    name = 'readyWait';
    src = TAJS_restrictToType(target[name, 'readyWait'], 'undefined');
    copy = ((options, $__.os.oid40)[name, 'readyWait'], 1);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'readyWait'] = copy;
    'ready' in vvv_tmp0;
    name = 'ready';
    src = TAJS_restrictToType(target[name, 'ready'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid40)[name, 'ready'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'ready'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    target = (arguments[0, 0], $__.os.oid42);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid42)) != null;
    vvv_tmp0 = options;
    'hasData' in vvv_tmp0;
    name = 'hasData';
    src = TAJS_restrictToType(target[name, 'hasData'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid42)[name, 'hasData'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'hasData'] = copy;
    'data' in vvv_tmp0;
    name = 'data';
    src = TAJS_restrictToType(target[name, 'data'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid42)[name, 'data'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'data'] = copy;
    'removeData' in vvv_tmp0;
    name = 'removeData';
    src = TAJS_restrictToType(target[name, 'removeData'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid42)[name, 'removeData'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'removeData'] = copy;
    '_data' in vvv_tmp0;
    name = '_data';
    src = TAJS_restrictToType(target[name, '_data'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid42)[name, '_data'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, '_data'] = copy;
    '_removeData' in vvv_tmp0;
    name = '_removeData';
    src = TAJS_restrictToType(target[name, '_removeData'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid42)[name, '_removeData'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, '_removeData'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    target = (arguments[0, 0], $__.os.oid43);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid43)) != null;
    vvv_tmp0 = options;
    'data' in vvv_tmp0;
    name = 'data';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'data'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid43)[name, 'data'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'data'] = copy;
    'removeData' in vvv_tmp0;
    name = 'removeData';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'removeData'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid43)[name, 'removeData'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'removeData'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    target = (arguments[0, 0], $__.os.oid44);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid44)) != null;
    vvv_tmp0 = options;
    'queue' in vvv_tmp0;
    name = 'queue';
    src = TAJS_restrictToType(target[name, 'queue'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid44)[name, 'queue'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'queue'] = copy;
    'dequeue' in vvv_tmp0;
    name = 'dequeue';
    src = TAJS_restrictToType(target[name, 'dequeue'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid44)[name, 'dequeue'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'dequeue'] = copy;
    '_queueHooks' in vvv_tmp0;
    name = '_queueHooks';
    src = TAJS_restrictToType(target[name, '_queueHooks'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid44)[name, '_queueHooks'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, '_queueHooks'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    target = (arguments[0, 0], $__.os.oid45);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid45)) != null;
    vvv_tmp0 = options;
    'queue' in vvv_tmp0;
    name = 'queue';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'queue'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid45)[name, 'queue'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'queue'] = copy;
    'dequeue' in vvv_tmp0;
    name = 'dequeue';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'dequeue'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid45)[name, 'dequeue'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'dequeue'] = copy;
    'clearQueue' in vvv_tmp0;
    name = 'clearQueue';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'clearQueue'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid45)[name, 'clearQueue'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'clearQueue'] = copy;
    'promise' in vvv_tmp0;
    name = 'promise';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'promise'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid45)[name, 'promise'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'promise'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    target = (arguments[0, 0], $__.os.oid47);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid47)) != null;
    vvv_tmp0 = options;
    'show' in vvv_tmp0;
    name = 'show';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'show'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid47)[name, 'show'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'show'] = copy;
    'hide' in vvv_tmp0;
    name = 'hide';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'hide'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid47)[name, 'hide'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'hide'] = copy;
    'toggle' in vvv_tmp0;
    name = 'toggle';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'toggle'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid47)[name, 'toggle'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'toggle'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    target = (arguments[0, 0], $__.os.oid94);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid94)) != null;
    vvv_tmp0 = options;
    'on' in vvv_tmp0;
    name = 'on';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'on'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid94)[name, 'on'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'on'] = copy;
    'one' in vvv_tmp0;
    name = 'one';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'one'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid94)[name, 'one'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'one'] = copy;
    'off' in vvv_tmp0;
    name = 'off';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'off'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid94)[name, 'off'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'off'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    target = (arguments[0, 0], $__.os.oid95);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid95)) != null;
    vvv_tmp0 = options;
    'htmlPrefilter' in vvv_tmp0;
    name = 'htmlPrefilter';
    src = TAJS_restrictToType(target[name, 'htmlPrefilter'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid95)[name, 'htmlPrefilter'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'htmlPrefilter'] = copy;
    'clone' in vvv_tmp0;
    name = 'clone';
    src = TAJS_restrictToType(target[name, 'clone'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid95)[name, 'clone'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'clone'] = copy;
    'cleanData' in vvv_tmp0;
    name = 'cleanData';
    src = TAJS_restrictToType(target[name, 'cleanData'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid95)[name, 'cleanData'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'cleanData'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    target = (arguments[0, 0], $__.os.oid96);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid96)) != null;
    vvv_tmp0 = options;
    'detach' in vvv_tmp0;
    name = 'detach';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'detach'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'detach'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'detach'] = copy;
    'remove' in vvv_tmp0;
    name = 'remove';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'remove'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'remove'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'remove'] = copy;
    'text' in vvv_tmp0;
    name = 'text';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'text'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'text'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'text'] = copy;
    'append' in vvv_tmp0;
    name = 'append';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'append'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'append'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'append'] = copy;
    'prepend' in vvv_tmp0;
    name = 'prepend';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'prepend'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'prepend'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'prepend'] = copy;
    'before' in vvv_tmp0;
    name = 'before';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'before'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'before'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'before'] = copy;
    'after' in vvv_tmp0;
    name = 'after';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'after'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'after'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'after'] = copy;
    'empty' in vvv_tmp0;
    name = 'empty';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'empty'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'empty'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'empty'] = copy;
    'clone' in vvv_tmp0;
    name = 'clone';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'clone'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'clone'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'clone'] = copy;
    'html' in vvv_tmp0;
    name = 'html';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'html'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'html'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'html'] = copy;
    'replaceWith' in vvv_tmp0;
    name = 'replaceWith';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'replaceWith'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid96)[name, 'replaceWith'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'replaceWith'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    target = (arguments[0, 0], $__.os.oid1);
    i = 1;
    length = (arguments.length, 2);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    i < length;
    (options = (arguments[i, 1], $__.os.oid98)) != null;
    vvv_tmp0 = options;
    'pixelPosition' in vvv_tmp0;
    name = 'pixelPosition';
    src = TAJS_restrictToType((target, $__.os.oid1)[name, 'pixelPosition'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid98)[name, 'pixelPosition'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid1)[name, 'pixelPosition'] = copy;
    'boxSizingReliable' in vvv_tmp0;
    name = 'boxSizingReliable';
    src = TAJS_restrictToType((target, $__.os.oid1)[name, 'boxSizingReliable'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid98)[name, 'boxSizingReliable'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid1)[name, 'boxSizingReliable'] = copy;
    'pixelMarginRight' in vvv_tmp0;
    name = 'pixelMarginRight';
    src = TAJS_restrictToType((target, $__.os.oid1)[name, 'pixelMarginRight'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid98)[name, 'pixelMarginRight'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid1)[name, 'pixelMarginRight'] = copy;
    'reliableMarginLeft' in vvv_tmp0;
    name = 'reliableMarginLeft';
    src = TAJS_restrictToType((target, $__.os.oid1)[name, 'reliableMarginLeft'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid98)[name, 'reliableMarginLeft'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid1)[name, 'reliableMarginLeft'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    target = (arguments[0, 0], $__.os.oid105);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid105)) != null;
    vvv_tmp0 = options;
    'cssHooks' in vvv_tmp0;
    name = 'cssHooks';
    src = TAJS_restrictToType(target[name, 'cssHooks'], 'undefined');
    copy = ((options, $__.os.oid105)[name, 'cssHooks'], $__.os.oid102);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'cssHooks'] = copy;
    'cssNumber' in vvv_tmp0;
    name = 'cssNumber';
    src = TAJS_restrictToType(target[name, 'cssNumber'], 'undefined');
    copy = ((options, $__.os.oid105)[name, 'cssNumber'], $__.os.oid103);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'cssNumber'] = copy;
    'cssProps' in vvv_tmp0;
    name = 'cssProps';
    src = TAJS_restrictToType(target[name, 'cssProps'], 'undefined');
    copy = ((options, $__.os.oid105)[name, 'cssProps'], $__.os.oid104);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'cssProps'] = copy;
    'style' in vvv_tmp0;
    name = 'style';
    src = TAJS_restrictToType(target[name, 'style'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid105)[name, 'style'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'style'] = copy;
    'css' in vvv_tmp0;
    name = 'css';
    src = TAJS_restrictToType(target[name, 'css'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid105)[name, 'css'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'css'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    target = (arguments[0, 0], $__.os.oid113);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid113)) != null;
    vvv_tmp0 = options;
    'css' in vvv_tmp0;
    name = 'css';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'css'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid113)[name, 'css'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'css'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 17);
    target = TAJS_restrictToType(arguments[0, 0], 'function');
    i = 1;
    length = (arguments.length, 2);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object', !(vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (target, $__.fs.Animation_49), 39, true, $__.uid));
    i === length;
    i < length;
    (options = (arguments[i, 1], $__.os.oid121)) != null;
    vvv_tmp1 = options;
    'tweeners' in vvv_tmp1;
    name = 'tweeners';
    src = TAJS_restrictToType(target[name, 'tweeners'], 'undefined');
    copy = ((options, $__.os.oid121)[name, 'tweeners'], $__.os.oid120);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'tweeners'] = copy;
    'tweener' in vvv_tmp1;
    name = 'tweener';
    src = TAJS_restrictToType(target[name, 'tweener'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid121)[name, 'tweener'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'tweener'] = copy;
    'prefilters' in vvv_tmp1;
    name = 'prefilters';
    src = TAJS_restrictToType(target[name, 'prefilters'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid121)[name, 'prefilters'], 'object');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'prefilters'] = copy;
    'prefilter' in vvv_tmp1;
    name = 'prefilter';
    src = TAJS_restrictToType(target[name, 'prefilter'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid121)[name, 'prefilter'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'prefilter'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    target = (arguments[0, 0], $__.os.oid122);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid122)) != null;
    vvv_tmp0 = options;
    'fadeTo' in vvv_tmp0;
    name = 'fadeTo';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'fadeTo'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid122)[name, 'fadeTo'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'fadeTo'] = copy;
    'animate' in vvv_tmp0;
    name = 'animate';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'animate'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid122)[name, 'animate'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'animate'] = copy;
    'stop' in vvv_tmp0;
    name = 'stop';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'stop'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid122)[name, 'stop'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'stop'] = copy;
    'finish' in vvv_tmp0;
    name = 'finish';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'finish'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid122)[name, 'finish'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'finish'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 19:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 19);
    target = (arguments[0, 0], $__.os.oid131);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid131)) != null;
    vvv_tmp0 = options;
    'attr' in vvv_tmp0;
    name = 'attr';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'attr'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid131)[name, 'attr'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'attr'] = copy;
    'removeAttr' in vvv_tmp0;
    name = 'removeAttr';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'removeAttr'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid131)[name, 'removeAttr'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'removeAttr'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    target = (arguments[0, 0], $__.os.oid134);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid134)) != null;
    vvv_tmp0 = options;
    'attr' in vvv_tmp0;
    name = 'attr';
    src = TAJS_restrictToType(target[name, 'attr'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid134)[name, 'attr'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'attr'] = copy;
    'attrHooks' in vvv_tmp0;
    name = 'attrHooks';
    src = TAJS_restrictToType(target[name, 'attrHooks'], 'undefined');
    copy = ((options, $__.os.oid134)[name, 'attrHooks'], $__.os.oid133);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'attrHooks'] = copy;
    'removeAttr' in vvv_tmp0;
    name = 'removeAttr';
    src = TAJS_restrictToType(target[name, 'removeAttr'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid134)[name, 'removeAttr'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'removeAttr'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 21:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 21);
    target = (arguments[0, 0], $__.os.oid136);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid136)) != null;
    vvv_tmp0 = options;
    'prop' in vvv_tmp0;
    name = 'prop';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'prop'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid136)[name, 'prop'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'prop'] = copy;
    'removeProp' in vvv_tmp0;
    name = 'removeProp';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'removeProp'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid136)[name, 'removeProp'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'removeProp'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 22:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 22);
    target = (arguments[0, 0], $__.os.oid140);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid140)) != null;
    vvv_tmp0 = options;
    'prop' in vvv_tmp0;
    name = 'prop';
    src = TAJS_restrictToType(target[name, 'prop'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid140)[name, 'prop'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'prop'] = copy;
    'propHooks' in vvv_tmp0;
    name = 'propHooks';
    src = TAJS_restrictToType(target[name, 'propHooks'], 'undefined');
    copy = ((options, $__.os.oid140)[name, 'propHooks'], $__.os.oid138);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'propHooks'] = copy;
    'propFix' in vvv_tmp0;
    name = 'propFix';
    src = TAJS_restrictToType(target[name, 'propFix'], 'undefined');
    copy = ((options, $__.os.oid140)[name, 'propFix'], $__.os.oid139);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'propFix'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 23:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 23);
    target = (arguments[0, 0], $__.os.oid141);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid141)) != null;
    vvv_tmp0 = options;
    'addClass' in vvv_tmp0;
    name = 'addClass';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'addClass'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid141)[name, 'addClass'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'addClass'] = copy;
    'removeClass' in vvv_tmp0;
    name = 'removeClass';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'removeClass'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid141)[name, 'removeClass'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'removeClass'] = copy;
    'toggleClass' in vvv_tmp0;
    name = 'toggleClass';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'toggleClass'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid141)[name, 'toggleClass'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'toggleClass'] = copy;
    'hasClass' in vvv_tmp0;
    name = 'hasClass';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'hasClass'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid141)[name, 'hasClass'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'hasClass'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 24:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 24);
    target = (arguments[0, 0], $__.os.oid142);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid142)) != null;
    vvv_tmp0 = options;
    'val' in vvv_tmp0;
    name = 'val';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'val'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid142)[name, 'val'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'val'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 25:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 25);
    target = (arguments[0, 0], $__.os.oid146);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid146)) != null;
    vvv_tmp0 = options;
    'valHooks' in vvv_tmp0;
    name = 'valHooks';
    src = TAJS_restrictToType(target[name, 'valHooks'], 'undefined');
    copy = ((options, $__.os.oid146)[name, 'valHooks'], $__.os.oid145);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'valHooks'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 26:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 26);
    target = (arguments[0, 0], $__.os.oid56);
    i = 1;
    length = (arguments.length, 2);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    i < length;
    (options = (arguments[i, 1], $__.os.oid149)) != null;
    vvv_tmp0 = options;
    'trigger' in vvv_tmp0;
    name = 'trigger';
    src = TAJS_restrictToType((target, $__.os.oid56)[name, 'trigger'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid149)[name, 'trigger'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid56)[name, 'trigger'] = copy;
    'simulate' in vvv_tmp0;
    name = 'simulate';
    src = TAJS_restrictToType((target, $__.os.oid56)[name, 'simulate'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid149)[name, 'simulate'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid56)[name, 'simulate'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 27:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 27);
    target = (arguments[0, 0], $__.os.oid150);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid150)) != null;
    vvv_tmp0 = options;
    'trigger' in vvv_tmp0;
    name = 'trigger';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'trigger'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid150)[name, 'trigger'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'trigger'] = copy;
    'triggerHandler' in vvv_tmp0;
    name = 'triggerHandler';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'triggerHandler'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid150)[name, 'triggerHandler'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'triggerHandler'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 28:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 28);
    target = (arguments[0, 0], $__.os.oid151);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid151)) != null;
    vvv_tmp0 = options;
    'hover' in vvv_tmp0;
    name = 'hover';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'hover'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid151)[name, 'hover'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'hover'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 29:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 29);
    target = (arguments[0, 0], $__.os.oid155);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid155)) != null;
    vvv_tmp0 = options;
    'serialize' in vvv_tmp0;
    name = 'serialize';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'serialize'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid155)[name, 'serialize'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'serialize'] = copy;
    'serializeArray' in vvv_tmp0;
    name = 'serializeArray';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'serializeArray'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid155)[name, 'serializeArray'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'serializeArray'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 30:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 30);
    target = (arguments[0, 0], $__.os.oid166);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid166)) != null;
    vvv_tmp0 = options;
    'active' in vvv_tmp0;
    name = 'active';
    src = TAJS_restrictToType(target[name, 'active'], 'undefined');
    copy = ((options, $__.os.oid166)[name, 'active'], 0);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'active'] = copy;
    'lastModified' in vvv_tmp0;
    name = 'lastModified';
    src = TAJS_restrictToType(target[name, 'lastModified'], 'undefined');
    copy = ((options, $__.os.oid166)[name, 'lastModified'], $__.os.oid158);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'lastModified'] = copy;
    'etag' in vvv_tmp0;
    name = 'etag';
    src = TAJS_restrictToType(target[name, 'etag'], 'undefined');
    copy = ((options, $__.os.oid166)[name, 'etag'], $__.os.oid159);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'etag'] = copy;
    'ajaxSettings' in vvv_tmp0;
    name = 'ajaxSettings';
    src = TAJS_restrictToType(target[name, 'ajaxSettings'], 'undefined');
    copy = ((options, $__.os.oid166)[name, 'ajaxSettings'], $__.os.oid165);
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'ajaxSettings'] = copy;
    'ajaxSetup' in vvv_tmp0;
    name = 'ajaxSetup';
    src = TAJS_restrictToType(target[name, 'ajaxSetup'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid166)[name, 'ajaxSetup'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'ajaxSetup'] = copy;
    'ajaxPrefilter' in vvv_tmp0;
    name = 'ajaxPrefilter';
    src = TAJS_restrictToType(target[name, 'ajaxPrefilter'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid166)[name, 'ajaxPrefilter'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'ajaxPrefilter'] = copy;
    'ajaxTransport' in vvv_tmp0;
    name = 'ajaxTransport';
    src = TAJS_restrictToType(target[name, 'ajaxTransport'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid166)[name, 'ajaxTransport'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'ajaxTransport'] = copy;
    'ajax' in vvv_tmp0;
    name = 'ajax';
    src = TAJS_restrictToType(target[name, 'ajax'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid166)[name, 'ajax'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'ajax'] = copy;
    'getJSON' in vvv_tmp0;
    name = 'getJSON';
    src = TAJS_restrictToType(target[name, 'getJSON'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid166)[name, 'getJSON'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'getJSON'] = copy;
    'getScript' in vvv_tmp0;
    name = 'getScript';
    src = TAJS_restrictToType(target[name, 'getScript'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid166)[name, 'getScript'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    target[name, 'getScript'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 31:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 31);
    target = (arguments[0, 0], $__.os.oid167);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid167)) != null;
    vvv_tmp0 = options;
    'wrapAll' in vvv_tmp0;
    name = 'wrapAll';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'wrapAll'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid167)[name, 'wrapAll'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'wrapAll'] = copy;
    'wrapInner' in vvv_tmp0;
    name = 'wrapInner';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'wrapInner'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid167)[name, 'wrapInner'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'wrapInner'] = copy;
    'wrap' in vvv_tmp0;
    name = 'wrap';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'wrap'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid167)[name, 'wrap'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'wrap'] = copy;
    'unwrap' in vvv_tmp0;
    name = 'unwrap';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'unwrap'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid167)[name, 'unwrap'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'unwrap'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 32:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 32);
    target = (arguments[0, 0], true);
    i = 1;
    length = (arguments.length, 3);
    deep = false;
    typeof target === 'boolean';
    deep = target;
    target = (arguments[i, 1], $__.os.oid160);
    (i = +i + 1) - 1;
    typeof target !== 'object';
    i === length;
    i < length;
    (options = (arguments[i, 2], $__.os.oid169)) != null;
    vvv_tmp0 = options;
    'script' in vvv_tmp0;
    name = 'script';
    src = TAJS_restrictToType((target, $__.os.oid160)[name, 'script'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid169)[name, 'script'], 'string');
    target === copy;
    (deep, copy), ((vvv_tmp1 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp1, copy, 2, true, $__.uid)), copyIsArray = Array['isArray'](copy));
    copy !== undefined;
    (target, $__.os.oid160)[name, 'script'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 33:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 33);
    target = (arguments[0, 0], true);
    i = 1;
    length = (arguments.length, 3);
    deep = false;
    typeof target === 'boolean';
    deep = target;
    target = (arguments[i, 1], $__.os.oid161);
    (i = +i + 1) - 1;
    typeof target !== 'object';
    i === length;
    i < length;
    (options = (arguments[i, 2], $__.os.oid170)) != null;
    vvv_tmp0 = options;
    'script' in vvv_tmp0;
    name = 'script';
    src = TAJS_restrictToType((target, $__.os.oid161)[name, 'script'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid170)[name, 'script'], 'object');
    target === copy;
    (deep, copy), ((vvv_tmp1 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp1, copy, 5, true, $__.uid)), copyIsArray = Array['isArray'](copy));
    copy !== undefined;
    (target, $__.os.oid161)[name, 'script'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 34:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 34);
    target = (arguments[0, 0], true);
    i = 1;
    length = (arguments.length, 3);
    deep = false;
    typeof target === 'boolean';
    deep = target;
    target = (arguments[i, 1], $__.os.oid163);
    (i = +i + 1) - 1;
    typeof target !== 'object';
    i === length;
    i < length;
    (options = (arguments[i, 2], $__.os.oid171)) != null;
    vvv_tmp0 = options;
    'text script' in vvv_tmp0;
    name = 'text script';
    src = TAJS_restrictToType((target, $__.os.oid163)[name, 'text script'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid171)[name, 'text script'], 'function');
    target === copy;
    (deep, copy), ((vvv_tmp1 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp1, (copy, $__.fs.J$__v5960504135_1018_626), 8, true, $__.uid)), copyIsArray = Array['isArray'](((copy, $__.fs.J$__v5960504135_1018_626), $__.fs.J$__v5960504135_1018_626_182)));
    copy !== undefined;
    (target, $__.os.oid163)[name, 'text script'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 35:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 35);
    target = (arguments[0, 0], true);
    i = 1;
    length = (arguments.length, 3);
    deep = false;
    typeof target === 'boolean';
    deep = target;
    target = (arguments[i, 1], $__.os.oid165);
    (i = +i + 1) - 1;
    typeof target !== 'object';
    i === length;
    i < length;
    (options = (arguments[i, 2], $__.os.oid173)) != null;
    vvv_tmp0 = options;
    'accepts' in vvv_tmp0;
    name = 'accepts';
    src = ((target, $__.os.oid165)[name, 'accepts'], $__.os.oid160);
    copy = ((options, $__.os.oid173)[name, 'accepts'], $__.os.oid169);
    target === copy;
    (deep, copy), (vvv_tmp1 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp1, copy, 0, true, $__.uid));
    copyIsArray;
    clone = ((src, (vvv_tmp2 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp2, src, 1, true, $__.uid))), src);
    (target, $__.os.oid165)[name, 'accepts'] = (vvv_tmp3 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp3, deep, clone, copy, 32, true, $__.uid));
    'contents' in vvv_tmp0;
    name = 'contents';
    src = ((target, $__.os.oid165)[name, 'contents'], $__.os.oid161);
    copy = ((options, $__.os.oid173)[name, 'contents'], $__.os.oid170);
    target === copy;
    (deep, copy), (vvv_tmp4 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp4, copy, 3, true, $__.uid));
    copyIsArray;
    clone = ((src, (vvv_tmp5 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp5, src, 4, true, $__.uid))), src);
    (target, $__.os.oid165)[name, 'contents'] = (vvv_tmp6 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp6, deep, clone, copy, 33, true, $__.uid));
    'converters' in vvv_tmp0;
    name = 'converters';
    src = ((target, $__.os.oid165)[name, 'converters'], $__.os.oid163);
    copy = ((options, $__.os.oid173)[name, 'converters'], $__.os.oid171);
    target === copy;
    (deep, copy), (vvv_tmp7 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp7, copy, 6, true, $__.uid));
    copyIsArray;
    clone = ((src, (vvv_tmp8 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp8, src, 7, true, $__.uid))), src);
    (target, $__.os.oid165)[name, 'converters'] = (vvv_tmp9 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp9, deep, clone, copy, 34, true, $__.uid));
    (i = +i + 1) - 1;
    i < length;
    return target;
case 36:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 36);
    target = (arguments[0, 0], true);
    i = 1;
    length = (arguments.length, 3);
    deep = false;
    typeof target === 'boolean';
    deep = target;
    target = (arguments[i, 1], $__.os.oid165);
    (i = +i + 1) - 1;
    typeof target !== 'object';
    i === length;
    i < length;
    (options = (arguments[i, 2], $__.os.oid175)) != null;
    vvv_tmp0 = options;
    'jsonp' in vvv_tmp0;
    name = 'jsonp';
    src = TAJS_restrictToType((target, $__.os.oid165)[name, 'jsonp'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid175)[name, 'jsonp'], 'string');
    target === copy;
    (deep, copy), ((vvv_tmp1 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp1, copy, 9, true, $__.uid)), copyIsArray = Array['isArray'](copy));
    copy !== undefined;
    (target, $__.os.oid165)[name, 'jsonp'] = copy;
    'jsonpCallback' in vvv_tmp0;
    name = 'jsonpCallback';
    src = TAJS_restrictToType((target, $__.os.oid165)[name, 'jsonpCallback'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid175)[name, 'jsonpCallback'], 'function');
    target === copy;
    (deep, copy), ((vvv_tmp2 = jQuery, 'isPlainObject', $__.fs.J$__v5960504135_44_76.call(vvv_tmp2, (copy, $__.fs.J$__v5960504135_1030_629), 10, true, $__.uid)), copyIsArray = Array['isArray'](((copy, $__.fs.J$__v5960504135_1030_629), $__.fs.J$__v5960504135_1030_629_188)));
    copy !== undefined;
    (target, $__.os.oid165)[name, 'jsonpCallback'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 37:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 37);
    target = (arguments[0, 0], $__.os.oid177);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid177)) != null;
    vvv_tmp0 = options;
    'offset' in vvv_tmp0;
    name = 'offset';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'offset'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid177)[name, 'offset'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'offset'] = copy;
    'position' in vvv_tmp0;
    name = 'position';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'position'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid177)[name, 'position'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'position'] = copy;
    'offsetParent' in vvv_tmp0;
    name = 'offsetParent';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'offsetParent'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid177)[name, 'offsetParent'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'offsetParent'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
case 38:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 38);
    target = (arguments[0, 0], $__.os.oid184);
    i = 1;
    length = (arguments.length, 1);
    deep = false;
    typeof target === 'boolean';
    typeof target !== 'object';
    i === length;
    target = this;
    (i = +i - 1) + 1;
    i < length;
    (options = (arguments[i, 0], $__.os.oid184)) != null;
    vvv_tmp0 = options;
    'bind' in vvv_tmp0;
    name = 'bind';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'bind'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid184)[name, 'bind'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'bind'] = copy;
    'unbind' in vvv_tmp0;
    name = 'unbind';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'unbind'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid184)[name, 'unbind'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'unbind'] = copy;
    'delegate' in vvv_tmp0;
    name = 'delegate';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'delegate'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid184)[name, 'delegate'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'delegate'] = copy;
    'undelegate' in vvv_tmp0;
    name = 'undelegate';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'undelegate'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid184)[name, 'undelegate'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'undelegate'] = copy;
    'holdReady' in vvv_tmp0;
    name = 'holdReady';
    src = TAJS_restrictToType((target, $__.os.oid2)[name, 'holdReady'], 'undefined');
    copy = TAJS_restrictToType((options, $__.os.oid184)[name, 'holdReady'], 'function');
    target === copy;
    deep;
    copy !== undefined;
    (target, $__.os.oid2)[name, 'holdReady'] = copy;
    (i = +i + 1) - 1;
    i < length;
    return target;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
target = arguments[0] || {};
i = 1;
length = arguments.length;
deep = false;
if (typeof target === 'boolean') {
    deep = target;
    target = arguments[i] || {};
    i++;
}
if (typeof target !== 'object' && !jQuery.isFunction(target)) {
    target = {};
}
if (i === length) {
    target = this;
    i--;
}
for (; i < length; i++) {
    if ((options = arguments[i]) != null) {
        for (name in options) {
            src = target[name];
            copy = options[name];
            if (target === copy) {
                continue;
            }
            if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                if (copyIsArray) {
                    copyIsArray = false;
                    clone = src && Array.isArray(src) ? src : [];
                } else {
                    clone = src && jQuery.isPlainObject(src) ? src : {};
                }
                target[name] = jQuery.extend(deep, clone, copy);
            } else if (copy !== undefined) {
                target[name] = copy;
            }
        }
    }
}
return target;});
    vvv_tmp0 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp0, $__.os.oid3 = {
        'expando': 'jQuery' + (version + (Math['random'](), 0.2690081842857761))['replace'](/\D/g, ''),
        'isReady': true,
        'error': ($__.fs.J$__v5960504135_34_71 = function J$__v5960504135_34(msg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
msg = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
throw new Error(msg);}),
        'noop': ($__.fs.J$__v5960504135_36_72 = function J$__v5960504135_36() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');}),
        'isFunction': ($__.fs.J$__v5960504135_38_73 = function J$__v5960504135_38(obj) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_403_263), 10, true, $__.uid)) === 'function';
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_439_327), 12, true, $__.uid)) === 'function';
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_393_297), 13, true, $__.uid)) === 'function';
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_397_247), 14, true, $__.uid)) === 'function';
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_403_289), 16, true, $__.uid)) === 'function';
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_439_333), 18, true, $__.uid)) === 'function';
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_393_271), 19, true, $__.uid)) === 'function';
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_397_247), 20, true, $__.uid)) === 'function';
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_403_315), 22, true, $__.uid)) === 'function';
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 24, true, $__.uid)) === 'function';
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 25, true, $__.uid)) === 'function';
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 26, true, $__.uid)) === 'function';
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 27, true, $__.uid)) === 'function';
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 28, true, $__.uid)) === 'function';
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 29, true, $__.uid)) === 'function';
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 30, true, $__.uid)) === 'function';
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 31, true, $__.uid)) === 'function';
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 17);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 32, true, $__.uid)) === 'function';
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 33, true, $__.uid)) === 'function';
case 19:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 19);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 34, true, $__.uid)) === 'function';
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 35, true, $__.uid)) === 'function';
case 21:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 21);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 36, true, $__.uid)) === 'function';
case 22:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 22);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 37, true, $__.uid)) === 'function';
case 23:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 23);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 38, true, $__.uid)) === 'function';
case 24:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 24);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 39, true, $__.uid)) === 'function';
case 25:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 25);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 40, true, $__.uid)) === 'function';
case 26:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 26);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 41, true, $__.uid)) === 'function';
case 27:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 27);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 42, true, $__.uid)) === 'function';
case 28:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 28);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 43, true, $__.uid)) === 'function';
case 29:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 29);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 44, true, $__.uid)) === 'function';
case 30:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 30);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 45, true, $__.uid)) === 'function';
case 31:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 31);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 46, true, $__.uid)) === 'function';
case 32:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 32);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 47, true, $__.uid)) === 'function';
case 33:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 33);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 48, true, $__.uid)) === 'function';
case 34:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 34);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 49, true, $__.uid)) === 'function';
case 35:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 35);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 50, true, $__.uid)) === 'function';
case 36:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 36);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 51, true, $__.uid)) === 'function';
case 37:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 37);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, obj, 52, true, $__.uid)) === 'function';
case 38:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 38);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_605_385), 53, true, $__.uid)) === 'function';
case 39:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 39);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.Animation_49), 58, true, $__.uid)) === 'function';
case 40:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 40);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_1014_624), 67, true, $__.uid)) === 'function';
case 41:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 41);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_1016_625), 68, true, $__.uid)) === 'function';
case 42:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 42);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_1020_627), 69, true, $__.uid)) === 'function';
case 43:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 43);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_1028_628), 70, true, $__.uid)) === 'function';
case 44:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 44);
    return (vvv_tmp0 = jQuery, 'type', $__.fs.J$__v5960504135_48_78.call(vvv_tmp0, (obj, $__.fs.J$__v5960504135_1038_630), 71, true, $__.uid)) === 'function';
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return jQuery.type(obj) === 'function';}),
        'isWindow': ($__.fs.J$__v5960504135_40_74 = function J$__v5960504135_40(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
switch (vvv_switch) {
case 0:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
case 8:
case 9:
case 10:
case 11:
case 12:
case 13:
case 17:
case 19:
case 21:
case 22:
case 23:
case 24:
case 26:
case 27:
case 29:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 29);
    return obj != null, obj === TAJS_restrictToType(obj.window, 'undefined');
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid24).window, 'undefined');
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid58).window, 'undefined');
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid89).window, 'undefined');
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid97).window, 'undefined');
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid109).window, 'undefined');
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid129).window, 'undefined');
case 25:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 25);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid152).window, 'undefined');
case 28:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 28);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid178).window, 'undefined');
case 30:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 30);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid181).window, 'undefined');
case 31:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 31);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid182).window, 'undefined');
case 32:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 32);
    return obj != null, obj === TAJS_restrictToType((obj, $__.os.oid183).window, 'undefined');
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return obj != null && obj === obj.window;}),
        'isNumeric': ($__.fs.J$__v5960504135_42_75 = function J$__v5960504135_42(obj) {
var vvv_return, vvv_switch, type;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
type = jQuery.type(obj);
return (type === 'number' || type === 'string') && !isNaN(obj - parseFloat(obj));}),
        'isPlainObject': ($__.fs.J$__v5960504135_44_76 = function J$__v5960504135_44(obj) {
var vvv_return, vvv_switch, proto, Ctor;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
switch (vvv_switch) {
case 0:
case 1:
case 3:
case 4:
case 6:
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 7);
    !obj, toString['call'](obj) !== '[object Object]';
    proto = getProto(obj);
    !proto;
    Ctor = (hasOwn['call'](proto, 'constructor'), TAJS_restrictToType(proto.constructor, 'function'));
    return typeof Ctor === 'function', fnToString['call'](Ctor) === ObjectFunctionString;
case 2:
case 5:
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(2 <= vvv_switch && vvv_switch <= 9);
    !obj, toString['call'](obj) !== '[object Object]';
    return false;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    !obj, toString['call'](((obj, $__.fs.J$__v5960504135_1018_626), $__.fs.J$__v5960504135_1018_626_181)) !== '[object Object]';
    return false;
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    !obj, toString['call'](((obj, $__.fs.J$__v5960504135_1030_629), $__.fs.J$__v5960504135_1030_629_187)) !== '[object Object]';
    return false;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!obj || toString.call(obj) !== '[object Object]') {
    return false;
}
proto = getProto(obj);
if (!proto) {
    return true;
}
Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;
return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;}),
        'isEmptyObject': ($__.fs.J$__v5960504135_46_77 = function J$__v5960504135_46(obj) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (name in obj) {
    return false;
}
return true;}),
        'type': ($__.fs.J$__v5960504135_48_78 = function J$__v5960504135_48(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    obj == null;
    return typeof obj === 'object', (TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](obj), '[object Array]'], 'undefined'), 'object');
case 1:
case 23:
case 54:
case 55:
case 57:
case 60:
case 65:
case 73:
case 75:
case 76:
case 77:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(1 <= vvv_switch && vvv_switch <= 77);
    obj == null;
    return typeof obj === 'object', TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](obj), '[object Object]'], 'string');
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
case 8:
case 56:
case 59:
case 61:
case 62:
case 63:
case 64:
case 66:
case 72:
case 74:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(2 <= vvv_switch && vvv_switch <= 74);
    obj == null;
    return typeof obj === 'object', TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](obj), '[object Array]'], 'string');
case 9:
case 11:
case 15:
case 17:
case 21:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(9 <= vvv_switch && vvv_switch <= 21);
    obj == null;
    return typeof obj === 'object', (TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](obj), '[object Arguments]'], 'undefined'), 'object');
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_403_263)), '[object Function]'], 'string');
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_439_327)), '[object Function]'], 'string');
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_393_297)), '[object Function]'], 'string');
case 14:
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(14 <= vvv_switch && vvv_switch <= 20);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_397_247)), '[object Function]'], 'string');
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_403_289)), '[object Function]'], 'string');
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_439_333)), '[object Function]'], 'string');
case 19:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 19);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_393_271)), '[object Function]'], 'string');
case 22:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 22);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_403_315)), '[object Function]'], 'string');
case 24:
case 25:
case 26:
case 27:
case 28:
case 29:
case 30:
case 31:
case 32:
case 33:
case 34:
case 35:
case 36:
case 37:
case 38:
case 39:
case 40:
case 41:
case 42:
case 43:
case 44:
case 45:
case 46:
case 47:
case 48:
case 49:
case 50:
case 51:
case 52:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(24 <= vvv_switch && vvv_switch <= 52);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), typeof obj;
case 53:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 53);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call']((obj, $__.fs.J$__v5960504135_605_385)), '[object Function]'], 'string');
case 58:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 58);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](((obj, $__.fs.Animation_49), $__.fs.Animation_49_113)), '[object Function]'], 'string');
case 67:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 67);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](((obj, $__.fs.J$__v5960504135_1014_624), $__.fs.J$__v5960504135_1014_624_177)), '[object Function]'], 'string');
case 68:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 68);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](((obj, $__.fs.J$__v5960504135_1016_625), $__.fs.J$__v5960504135_1016_625_179)), '[object Function]'], 'string');
case 69:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 69);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](((obj, $__.fs.J$__v5960504135_1020_627), $__.fs.J$__v5960504135_1020_627_183)), '[object Function]'], 'string');
case 70:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 70);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](((obj, $__.fs.J$__v5960504135_1028_628), $__.fs.J$__v5960504135_1028_628_185)), '[object Function]'], 'string');
case 71:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 71);
    obj == null;
    return (typeof obj === 'object', typeof obj === 'function'), TAJS_restrictToType((class2type, $__.os.oid0)[toString['call'](((obj, $__.fs.J$__v5960504135_1038_630), $__.fs.J$__v5960504135_1038_630_189)), '[object Function]'], 'string');
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (obj == null) {
    return obj + '';
}
return typeof obj === 'object' || typeof obj === 'function' ? class2type[toString.call(obj)] || 'object' : typeof obj;}),
        'globalEval': ($__.fs.J$__v5960504135_50_79 = function J$__v5960504135_50(code) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
code = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
DOMEval(code);}),
        'camelCase': ($__.fs.J$__v5960504135_52_80 = function J$__v5960504135_52(string) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
string = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);}),
        'each': ($__.fs.J$__v5960504135_54_81 = function J$__v5960504135_54(obj, callback) {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2, vvv_tmp3, vvv_tmp4, vvv_tmp5, vvv_tmp6, vvv_tmp7, vvv_tmp8, vvv_tmp9, length, i, vvv_tmp10, vvv_tmp11, vvv_tmp12, vvv_tmp13, vvv_tmp14, vvv_tmp15, vvv_tmp16, vvv_tmp17, vvv_tmp18, vvv_tmp19, vvv_tmp20, vvv_tmp21, vvv_tmp22, vvv_tmp23, vvv_tmp24, vvv_tmp25, vvv_tmp26, vvv_tmp27, vvv_tmp28, vvv_tmp29, vvv_tmp30;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], callback = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 0, true, $__.uid);
    length = (obj.length, 10);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = TAJS_restrictToType(obj[i, 2], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp2, i, TAJS_restrictToType(obj[i, 2], 'string'), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp3 = TAJS_restrictToType(obj[i, 3], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp3, i, TAJS_restrictToType(obj[i, 3], 'string'), 3, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp4 = TAJS_restrictToType(obj[i, 4], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp4, i, TAJS_restrictToType(obj[i, 4], 'string'), 4, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp5 = TAJS_restrictToType(obj[i, 5], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp5, i, TAJS_restrictToType(obj[i, 5], 'string'), 5, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp6 = TAJS_restrictToType(obj[i, 6], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp6, i, TAJS_restrictToType(obj[i, 6], 'string'), 6, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp7 = TAJS_restrictToType(obj[i, 7], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp7, i, TAJS_restrictToType(obj[i, 7], 'string'), 7, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp8 = TAJS_restrictToType(obj[i, 8], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp8, i, TAJS_restrictToType(obj[i, 8], 'string'), 8, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp9 = TAJS_restrictToType(obj[i, 9], 'string'), (callback, $__.fs.J$__v5960504135_72_89).call(vvv_tmp9, i, TAJS_restrictToType(obj[i, 9], 'string'), 9, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 1, true, $__.uid);
    vvv_tmp0 = obj;
    'parent' in vvv_tmp0;
    i = 'parent';
    (vvv_tmp1 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'parent'], 'function'), $__.fs.J$__v5960504135_347_209), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp1, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'parent'], 'function'), $__.fs.J$__v5960504135_347_209), 0, true, $__.uid)) === false;
    'parents' in vvv_tmp0;
    i = 'parents';
    (vvv_tmp2 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'parents'], 'function'), $__.fs.J$__v5960504135_349_210), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp2, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'parents'], 'function'), $__.fs.J$__v5960504135_349_210), 1, true, $__.uid)) === false;
    'parentsUntil' in vvv_tmp0;
    i = 'parentsUntil';
    (vvv_tmp3 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'parentsUntil'], 'function'), $__.fs.J$__v5960504135_351_211), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp3, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'parentsUntil'], 'function'), $__.fs.J$__v5960504135_351_211), 2, true, $__.uid)) === false;
    'next' in vvv_tmp0;
    i = 'next';
    (vvv_tmp4 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'next'], 'function'), $__.fs.J$__v5960504135_353_212), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp4, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'next'], 'function'), $__.fs.J$__v5960504135_353_212), 3, true, $__.uid)) === false;
    'prev' in vvv_tmp0;
    i = 'prev';
    (vvv_tmp5 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'prev'], 'function'), $__.fs.J$__v5960504135_355_213), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp5, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'prev'], 'function'), $__.fs.J$__v5960504135_355_213), 4, true, $__.uid)) === false;
    'nextAll' in vvv_tmp0;
    i = 'nextAll';
    (vvv_tmp6 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'nextAll'], 'function'), $__.fs.J$__v5960504135_357_214), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp6, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'nextAll'], 'function'), $__.fs.J$__v5960504135_357_214), 5, true, $__.uid)) === false;
    'prevAll' in vvv_tmp0;
    i = 'prevAll';
    (vvv_tmp7 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'prevAll'], 'function'), $__.fs.J$__v5960504135_359_215), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp7, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'prevAll'], 'function'), $__.fs.J$__v5960504135_359_215), 6, true, $__.uid)) === false;
    'nextUntil' in vvv_tmp0;
    i = 'nextUntil';
    (vvv_tmp8 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'nextUntil'], 'function'), $__.fs.J$__v5960504135_361_216), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp8, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'nextUntil'], 'function'), $__.fs.J$__v5960504135_361_216), 7, true, $__.uid)) === false;
    'prevUntil' in vvv_tmp0;
    i = 'prevUntil';
    (vvv_tmp9 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'prevUntil'], 'function'), $__.fs.J$__v5960504135_363_217), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp9, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'prevUntil'], 'function'), $__.fs.J$__v5960504135_363_217), 8, true, $__.uid)) === false;
    'siblings' in vvv_tmp0;
    i = 'siblings';
    (vvv_tmp10 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'siblings'], 'function'), $__.fs.J$__v5960504135_365_218), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp10, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'siblings'], 'function'), $__.fs.J$__v5960504135_365_218), 9, true, $__.uid)) === false;
    'children' in vvv_tmp0;
    i = 'children';
    (vvv_tmp11 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'children'], 'function'), $__.fs.J$__v5960504135_367_219), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp11, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'children'], 'function'), $__.fs.J$__v5960504135_367_219), 10, true, $__.uid)) === false;
    'contents' in vvv_tmp0;
    i = 'contents';
    (vvv_tmp12 = (TAJS_restrictToType((obj, $__.os.oid24)[i, 'contents'], 'function'), $__.fs.J$__v5960504135_369_220), (callback, $__.fs.J$__v5960504135_373_221).call(vvv_tmp12, i, (TAJS_restrictToType((obj, $__.os.oid24)[i, 'contents'], 'function'), $__.fs.J$__v5960504135_369_220), 11, true, $__.uid)) === false;
    return obj;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 2, true, $__.uid);
    length = (obj.length, 1);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_375_239).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 3, true, $__.uid);
    length = (obj.length, 1);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_375_252).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 4, true, $__.uid);
    length = (obj.length, 2);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_375_265).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_375_265).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 5, true, $__.uid);
    length = (obj.length, 2);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_375_278).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_375_278).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 6, true, $__.uid);
    length = (obj.length, 2);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_375_291).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_375_291).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 7, true, $__.uid);
    length = (obj.length, 2);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_375_304).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_375_304).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 9, true, $__.uid);
    length = (obj.length, 1);
    i < length;
    (vvv_tmp0 = (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_403_263), (callback, $__.fs.J$__v5960504135_380_325).call(vvv_tmp0, i, (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_403_263), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 10, true, $__.uid);
    length = (obj.length, 3);
    i < length;
    (vvv_tmp0 = (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_439_327), (callback, $__.fs.J$__v5960504135_380_329).call(vvv_tmp0, i, (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_439_327), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = (TAJS_restrictToType(obj[i, 1], 'function'), $__.fs.J$__v5960504135_393_297), (callback, $__.fs.J$__v5960504135_380_329).call(vvv_tmp1, i, (TAJS_restrictToType(obj[i, 1], 'function'), $__.fs.J$__v5960504135_393_297), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = (TAJS_restrictToType(obj[i, 2], 'function'), $__.fs.J$__v5960504135_397_247), (callback, $__.fs.J$__v5960504135_380_329).call(vvv_tmp2, i, (TAJS_restrictToType(obj[i, 2], 'function'), $__.fs.J$__v5960504135_397_247), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 11, true, $__.uid);
    length = (obj.length, 1);
    i < length;
    (vvv_tmp0 = (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_403_289), (callback, $__.fs.J$__v5960504135_380_331).call(vvv_tmp0, i, (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_403_289), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 12, true, $__.uid);
    length = (obj.length, 3);
    i < length;
    (vvv_tmp0 = (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_439_333), (callback, $__.fs.J$__v5960504135_380_335).call(vvv_tmp0, i, (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_439_333), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = (TAJS_restrictToType(obj[i, 1], 'function'), $__.fs.J$__v5960504135_393_271), (callback, $__.fs.J$__v5960504135_380_335).call(vvv_tmp1, i, (TAJS_restrictToType(obj[i, 1], 'function'), $__.fs.J$__v5960504135_393_271), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = (TAJS_restrictToType(obj[i, 2], 'function'), $__.fs.J$__v5960504135_397_247), (callback, $__.fs.J$__v5960504135_380_335).call(vvv_tmp2, i, (TAJS_restrictToType(obj[i, 2], 'function'), $__.fs.J$__v5960504135_397_247), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 13, true, $__.uid);
    length = (obj.length, 1);
    i < length;
    (vvv_tmp0 = (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_403_315), (callback, $__.fs.J$__v5960504135_380_337).call(vvv_tmp0, i, (TAJS_restrictToType(obj[i, 0], 'function'), $__.fs.J$__v5960504135_403_315), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 8, true, $__.uid);
    length = (obj.length, 3);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'object'), (callback, $__.fs.J$__v5960504135_443_323).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'object'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'object'), (callback, $__.fs.J$__v5960504135_443_323).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'object'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = TAJS_restrictToType(obj[i, 2], 'object'), (callback, $__.fs.J$__v5960504135_443_323).call(vvv_tmp2, i, TAJS_restrictToType(obj[i, 2], 'object'), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 14, true, $__.uid);
    vvv_tmp0 = obj;
    'altKey' in vvv_tmp0;
    i = 'altKey';
    (vvv_tmp1 = ((obj, $__.os.oid58)[i, 'altKey'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp1, i, ((obj, $__.os.oid58)[i, 'altKey'], true), 0, true, $__.uid)) === false;
    'bubbles' in vvv_tmp0;
    i = 'bubbles';
    (vvv_tmp2 = ((obj, $__.os.oid58)[i, 'bubbles'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp2, i, ((obj, $__.os.oid58)[i, 'bubbles'], true), 1, true, $__.uid)) === false;
    'cancelable' in vvv_tmp0;
    i = 'cancelable';
    (vvv_tmp3 = ((obj, $__.os.oid58)[i, 'cancelable'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp3, i, ((obj, $__.os.oid58)[i, 'cancelable'], true), 2, true, $__.uid)) === false;
    'changedTouches' in vvv_tmp0;
    i = 'changedTouches';
    (vvv_tmp4 = ((obj, $__.os.oid58)[i, 'changedTouches'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp4, i, ((obj, $__.os.oid58)[i, 'changedTouches'], true), 3, true, $__.uid)) === false;
    'ctrlKey' in vvv_tmp0;
    i = 'ctrlKey';
    (vvv_tmp5 = ((obj, $__.os.oid58)[i, 'ctrlKey'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp5, i, ((obj, $__.os.oid58)[i, 'ctrlKey'], true), 4, true, $__.uid)) === false;
    'detail' in vvv_tmp0;
    i = 'detail';
    (vvv_tmp6 = ((obj, $__.os.oid58)[i, 'detail'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp6, i, ((obj, $__.os.oid58)[i, 'detail'], true), 5, true, $__.uid)) === false;
    'eventPhase' in vvv_tmp0;
    i = 'eventPhase';
    (vvv_tmp7 = ((obj, $__.os.oid58)[i, 'eventPhase'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp7, i, ((obj, $__.os.oid58)[i, 'eventPhase'], true), 6, true, $__.uid)) === false;
    'metaKey' in vvv_tmp0;
    i = 'metaKey';
    (vvv_tmp8 = ((obj, $__.os.oid58)[i, 'metaKey'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp8, i, ((obj, $__.os.oid58)[i, 'metaKey'], true), 7, true, $__.uid)) === false;
    'pageX' in vvv_tmp0;
    i = 'pageX';
    (vvv_tmp9 = ((obj, $__.os.oid58)[i, 'pageX'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp9, i, ((obj, $__.os.oid58)[i, 'pageX'], true), 8, true, $__.uid)) === false;
    'pageY' in vvv_tmp0;
    i = 'pageY';
    (vvv_tmp10 = ((obj, $__.os.oid58)[i, 'pageY'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp10, i, ((obj, $__.os.oid58)[i, 'pageY'], true), 9, true, $__.uid)) === false;
    'shiftKey' in vvv_tmp0;
    i = 'shiftKey';
    (vvv_tmp11 = ((obj, $__.os.oid58)[i, 'shiftKey'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp11, i, ((obj, $__.os.oid58)[i, 'shiftKey'], true), 10, true, $__.uid)) === false;
    'view' in vvv_tmp0;
    i = 'view';
    (vvv_tmp12 = ((obj, $__.os.oid58)[i, 'view'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp12, i, ((obj, $__.os.oid58)[i, 'view'], true), 11, true, $__.uid)) === false;
    'char' in vvv_tmp0;
    i = 'char';
    (vvv_tmp13 = ((obj, $__.os.oid58)[i, 'char'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp13, i, ((obj, $__.os.oid58)[i, 'char'], true), 12, true, $__.uid)) === false;
    'charCode' in vvv_tmp0;
    i = 'charCode';
    (vvv_tmp14 = ((obj, $__.os.oid58)[i, 'charCode'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp14, i, ((obj, $__.os.oid58)[i, 'charCode'], true), 13, true, $__.uid)) === false;
    'key' in vvv_tmp0;
    i = 'key';
    (vvv_tmp15 = ((obj, $__.os.oid58)[i, 'key'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp15, i, ((obj, $__.os.oid58)[i, 'key'], true), 14, true, $__.uid)) === false;
    'keyCode' in vvv_tmp0;
    i = 'keyCode';
    (vvv_tmp16 = ((obj, $__.os.oid58)[i, 'keyCode'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp16, i, ((obj, $__.os.oid58)[i, 'keyCode'], true), 15, true, $__.uid)) === false;
    'button' in vvv_tmp0;
    i = 'button';
    (vvv_tmp17 = ((obj, $__.os.oid58)[i, 'button'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp17, i, ((obj, $__.os.oid58)[i, 'button'], true), 16, true, $__.uid)) === false;
    'buttons' in vvv_tmp0;
    i = 'buttons';
    (vvv_tmp18 = ((obj, $__.os.oid58)[i, 'buttons'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp18, i, ((obj, $__.os.oid58)[i, 'buttons'], true), 17, true, $__.uid)) === false;
    'clientX' in vvv_tmp0;
    i = 'clientX';
    (vvv_tmp19 = ((obj, $__.os.oid58)[i, 'clientX'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp19, i, ((obj, $__.os.oid58)[i, 'clientX'], true), 18, true, $__.uid)) === false;
    'clientY' in vvv_tmp0;
    i = 'clientY';
    (vvv_tmp20 = ((obj, $__.os.oid58)[i, 'clientY'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp20, i, ((obj, $__.os.oid58)[i, 'clientY'], true), 19, true, $__.uid)) === false;
    'offsetX' in vvv_tmp0;
    i = 'offsetX';
    (vvv_tmp21 = ((obj, $__.os.oid58)[i, 'offsetX'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp21, i, ((obj, $__.os.oid58)[i, 'offsetX'], true), 20, true, $__.uid)) === false;
    'offsetY' in vvv_tmp0;
    i = 'offsetY';
    (vvv_tmp22 = ((obj, $__.os.oid58)[i, 'offsetY'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp22, i, ((obj, $__.os.oid58)[i, 'offsetY'], true), 21, true, $__.uid)) === false;
    'pointerId' in vvv_tmp0;
    i = 'pointerId';
    (vvv_tmp23 = ((obj, $__.os.oid58)[i, 'pointerId'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp23, i, ((obj, $__.os.oid58)[i, 'pointerId'], true), 22, true, $__.uid)) === false;
    'pointerType' in vvv_tmp0;
    i = 'pointerType';
    (vvv_tmp24 = ((obj, $__.os.oid58)[i, 'pointerType'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp24, i, ((obj, $__.os.oid58)[i, 'pointerType'], true), 23, true, $__.uid)) === false;
    'screenX' in vvv_tmp0;
    i = 'screenX';
    (vvv_tmp25 = ((obj, $__.os.oid58)[i, 'screenX'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp25, i, ((obj, $__.os.oid58)[i, 'screenX'], true), 24, true, $__.uid)) === false;
    'screenY' in vvv_tmp0;
    i = 'screenY';
    (vvv_tmp26 = ((obj, $__.os.oid58)[i, 'screenY'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp26, i, ((obj, $__.os.oid58)[i, 'screenY'], true), 25, true, $__.uid)) === false;
    'targetTouches' in vvv_tmp0;
    i = 'targetTouches';
    (vvv_tmp27 = ((obj, $__.os.oid58)[i, 'targetTouches'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp27, i, ((obj, $__.os.oid58)[i, 'targetTouches'], true), 26, true, $__.uid)) === false;
    'toElement' in vvv_tmp0;
    i = 'toElement';
    (vvv_tmp28 = ((obj, $__.os.oid58)[i, 'toElement'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp28, i, ((obj, $__.os.oid58)[i, 'toElement'], true), 27, true, $__.uid)) === false;
    'touches' in vvv_tmp0;
    i = 'touches';
    (vvv_tmp29 = ((obj, $__.os.oid58)[i, 'touches'], true), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp29, i, ((obj, $__.os.oid58)[i, 'touches'], true), 28, true, $__.uid)) === false;
    'which' in vvv_tmp0;
    i = 'which';
    (vvv_tmp30 = (TAJS_restrictToType((obj, $__.os.oid58)[i, 'which'], 'function'), $__.fs.J$__v5960504135_605_385), (callback, $__.fs.J$__v5960504135_581_373).call(vvv_tmp30, i, (TAJS_restrictToType((obj, $__.os.oid58)[i, 'which'], 'function'), $__.fs.J$__v5960504135_605_385), 29, true, $__.uid)) === false;
    return obj;
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 15, true, $__.uid);
    vvv_tmp0 = obj;
    'mouseenter' in vvv_tmp0;
    i = 'mouseenter';
    (vvv_tmp1 = TAJS_restrictToType((obj, $__.os.oid89)[i, 'mouseenter'], 'string'), (callback, $__.fs.J$__v5960504135_609_446).call(vvv_tmp1, i, TAJS_restrictToType((obj, $__.os.oid89)[i, 'mouseenter'], 'string'), 0, true, $__.uid)) === false;
    'mouseleave' in vvv_tmp0;
    i = 'mouseleave';
    (vvv_tmp2 = TAJS_restrictToType((obj, $__.os.oid89)[i, 'mouseleave'], 'string'), (callback, $__.fs.J$__v5960504135_609_446).call(vvv_tmp2, i, TAJS_restrictToType((obj, $__.os.oid89)[i, 'mouseleave'], 'string'), 1, true, $__.uid)) === false;
    'pointerenter' in vvv_tmp0;
    i = 'pointerenter';
    (vvv_tmp3 = TAJS_restrictToType((obj, $__.os.oid89)[i, 'pointerenter'], 'string'), (callback, $__.fs.J$__v5960504135_609_446).call(vvv_tmp3, i, TAJS_restrictToType((obj, $__.os.oid89)[i, 'pointerenter'], 'string'), 2, true, $__.uid)) === false;
    'pointerleave' in vvv_tmp0;
    i = 'pointerleave';
    (vvv_tmp4 = TAJS_restrictToType((obj, $__.os.oid89)[i, 'pointerleave'], 'string'), (callback, $__.fs.J$__v5960504135_609_446).call(vvv_tmp4, i, TAJS_restrictToType((obj, $__.os.oid89)[i, 'pointerleave'], 'string'), 3, true, $__.uid)) === false;
    return obj;
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 16, true, $__.uid);
    vvv_tmp0 = obj;
    'appendTo' in vvv_tmp0;
    i = 'appendTo';
    (vvv_tmp1 = TAJS_restrictToType((obj, $__.os.oid97)[i, 'appendTo'], 'string'), (callback, $__.fs.J$__v5960504135_676_468).call(vvv_tmp1, i, TAJS_restrictToType((obj, $__.os.oid97)[i, 'appendTo'], 'string'), 0, true, $__.uid)) === false;
    'prependTo' in vvv_tmp0;
    i = 'prependTo';
    (vvv_tmp2 = TAJS_restrictToType((obj, $__.os.oid97)[i, 'prependTo'], 'string'), (callback, $__.fs.J$__v5960504135_676_468).call(vvv_tmp2, i, TAJS_restrictToType((obj, $__.os.oid97)[i, 'prependTo'], 'string'), 1, true, $__.uid)) === false;
    'insertBefore' in vvv_tmp0;
    i = 'insertBefore';
    (vvv_tmp3 = TAJS_restrictToType((obj, $__.os.oid97)[i, 'insertBefore'], 'string'), (callback, $__.fs.J$__v5960504135_676_468).call(vvv_tmp3, i, TAJS_restrictToType((obj, $__.os.oid97)[i, 'insertBefore'], 'string'), 2, true, $__.uid)) === false;
    'insertAfter' in vvv_tmp0;
    i = 'insertAfter';
    (vvv_tmp4 = TAJS_restrictToType((obj, $__.os.oid97)[i, 'insertAfter'], 'string'), (callback, $__.fs.J$__v5960504135_676_468).call(vvv_tmp4, i, TAJS_restrictToType((obj, $__.os.oid97)[i, 'insertAfter'], 'string'), 3, true, $__.uid)) === false;
    'replaceAll' in vvv_tmp0;
    i = 'replaceAll';
    (vvv_tmp5 = TAJS_restrictToType((obj, $__.os.oid97)[i, 'replaceAll'], 'string'), (callback, $__.fs.J$__v5960504135_676_468).call(vvv_tmp5, i, TAJS_restrictToType((obj, $__.os.oid97)[i, 'replaceAll'], 'string'), 4, true, $__.uid)) === false;
    return obj;
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 17);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 17, true, $__.uid);
    length = (obj.length, 2);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_712_484).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_712_484).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 18, true, $__.uid);
    vvv_tmp0 = obj;
    'margin' in vvv_tmp0;
    i = 'margin';
    (vvv_tmp1 = TAJS_restrictToType((obj, $__.os.oid109)[i, 'margin'], 'string'), (callback, $__.fs.J$__v5960504135_720_491).call(vvv_tmp1, i, TAJS_restrictToType((obj, $__.os.oid109)[i, 'margin'], 'string'), 0, true, $__.uid)) === false;
    'padding' in vvv_tmp0;
    i = 'padding';
    (vvv_tmp2 = TAJS_restrictToType((obj, $__.os.oid109)[i, 'padding'], 'string'), (callback, $__.fs.J$__v5960504135_720_491).call(vvv_tmp2, i, TAJS_restrictToType((obj, $__.os.oid109)[i, 'padding'], 'string'), 1, true, $__.uid)) === false;
    'border' in vvv_tmp0;
    i = 'border';
    (vvv_tmp3 = TAJS_restrictToType((obj, $__.os.oid109)[i, 'border'], 'string'), (callback, $__.fs.J$__v5960504135_720_491).call(vvv_tmp3, i, TAJS_restrictToType((obj, $__.os.oid109)[i, 'border'], 'string'), 2, true, $__.uid)) === false;
    return obj;
case 19:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 19);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 19, true, $__.uid);
    length = (obj.length, 3);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_800_512).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_800_512).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = TAJS_restrictToType(obj[i, 2], 'string'), (callback, $__.fs.J$__v5960504135_800_512).call(vvv_tmp2, i, TAJS_restrictToType(obj[i, 2], 'string'), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 20, true, $__.uid);
    vvv_tmp0 = obj;
    'slideDown' in vvv_tmp0;
    i = 'slideDown';
    (vvv_tmp1 = ((obj, $__.os.oid129)[i, 'slideDown'], $__.os.oid123), (callback, $__.fs.J$__v5960504135_804_516).call(vvv_tmp1, i, ((obj, $__.os.oid129)[i, 'slideDown'], $__.os.oid123), 0, true, $__.uid)) === false;
    'slideUp' in vvv_tmp0;
    i = 'slideUp';
    (vvv_tmp2 = ((obj, $__.os.oid129)[i, 'slideUp'], $__.os.oid124), (callback, $__.fs.J$__v5960504135_804_516).call(vvv_tmp2, i, ((obj, $__.os.oid129)[i, 'slideUp'], $__.os.oid124), 1, true, $__.uid)) === false;
    'slideToggle' in vvv_tmp0;
    i = 'slideToggle';
    (vvv_tmp3 = ((obj, $__.os.oid129)[i, 'slideToggle'], $__.os.oid125), (callback, $__.fs.J$__v5960504135_804_516).call(vvv_tmp3, i, ((obj, $__.os.oid129)[i, 'slideToggle'], $__.os.oid125), 2, true, $__.uid)) === false;
    'fadeIn' in vvv_tmp0;
    i = 'fadeIn';
    (vvv_tmp4 = ((obj, $__.os.oid129)[i, 'fadeIn'], $__.os.oid126), (callback, $__.fs.J$__v5960504135_804_516).call(vvv_tmp4, i, ((obj, $__.os.oid129)[i, 'fadeIn'], $__.os.oid126), 3, true, $__.uid)) === false;
    'fadeOut' in vvv_tmp0;
    i = 'fadeOut';
    (vvv_tmp5 = ((obj, $__.os.oid129)[i, 'fadeOut'], $__.os.oid127), (callback, $__.fs.J$__v5960504135_804_516).call(vvv_tmp5, i, ((obj, $__.os.oid129)[i, 'fadeOut'], $__.os.oid127), 4, true, $__.uid)) === false;
    'fadeToggle' in vvv_tmp0;
    i = 'fadeToggle';
    (vvv_tmp6 = ((obj, $__.os.oid129)[i, 'fadeToggle'], $__.os.oid128), (callback, $__.fs.J$__v5960504135_804_516).call(vvv_tmp6, i, ((obj, $__.os.oid129)[i, 'fadeToggle'], $__.os.oid128), 5, true, $__.uid)) === false;
    return obj;
case 21:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 21);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 21, true, $__.uid);
    length = (obj.length, 16);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = TAJS_restrictToType(obj[i, 2], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp2, i, TAJS_restrictToType(obj[i, 2], 'string'), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp3 = TAJS_restrictToType(obj[i, 3], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp3, i, TAJS_restrictToType(obj[i, 3], 'string'), 3, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp4 = TAJS_restrictToType(obj[i, 4], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp4, i, TAJS_restrictToType(obj[i, 4], 'string'), 4, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp5 = TAJS_restrictToType(obj[i, 5], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp5, i, TAJS_restrictToType(obj[i, 5], 'string'), 5, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp6 = TAJS_restrictToType(obj[i, 6], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp6, i, TAJS_restrictToType(obj[i, 6], 'string'), 6, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp7 = TAJS_restrictToType(obj[i, 7], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp7, i, TAJS_restrictToType(obj[i, 7], 'string'), 7, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp8 = TAJS_restrictToType(obj[i, 8], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp8, i, TAJS_restrictToType(obj[i, 8], 'string'), 8, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp9 = TAJS_restrictToType(obj[i, 9], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp9, i, TAJS_restrictToType(obj[i, 9], 'string'), 9, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp10 = TAJS_restrictToType(obj[i, 10], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp10, i, TAJS_restrictToType(obj[i, 10], 'string'), 10, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp11 = TAJS_restrictToType(obj[i, 11], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp11, i, TAJS_restrictToType(obj[i, 11], 'string'), 11, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp12 = TAJS_restrictToType(obj[i, 12], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp12, i, TAJS_restrictToType(obj[i, 12], 'string'), 12, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp13 = TAJS_restrictToType(obj[i, 13], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp13, i, TAJS_restrictToType(obj[i, 13], 'string'), 13, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp14 = TAJS_restrictToType(obj[i, 14], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp14, i, TAJS_restrictToType(obj[i, 14], 'string'), 14, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp15 = TAJS_restrictToType(obj[i, 15], 'string'), (callback, $__.fs.J$__v5960504135_838_535).call(vvv_tmp15, i, TAJS_restrictToType(obj[i, 15], 'string'), 15, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 22:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 22);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 22, true, $__.uid);
    length = (obj.length, 10);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = TAJS_restrictToType(obj[i, 2], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp2, i, TAJS_restrictToType(obj[i, 2], 'string'), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp3 = TAJS_restrictToType(obj[i, 3], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp3, i, TAJS_restrictToType(obj[i, 3], 'string'), 3, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp4 = TAJS_restrictToType(obj[i, 4], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp4, i, TAJS_restrictToType(obj[i, 4], 'string'), 4, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp5 = TAJS_restrictToType(obj[i, 5], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp5, i, TAJS_restrictToType(obj[i, 5], 'string'), 5, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp6 = TAJS_restrictToType(obj[i, 6], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp6, i, TAJS_restrictToType(obj[i, 6], 'string'), 6, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp7 = TAJS_restrictToType(obj[i, 7], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp7, i, TAJS_restrictToType(obj[i, 7], 'string'), 7, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp8 = TAJS_restrictToType(obj[i, 8], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp8, i, TAJS_restrictToType(obj[i, 8], 'string'), 8, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp9 = TAJS_restrictToType(obj[i, 9], 'string'), (callback, $__.fs.J$__v5960504135_854_556).call(vvv_tmp9, i, TAJS_restrictToType(obj[i, 9], 'string'), 9, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 23:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 23);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 23, true, $__.uid);
    length = (obj.length, 2);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_890_565).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_890_565).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 24:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 24);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 24, true, $__.uid);
    length = (obj.length, 22);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = TAJS_restrictToType(obj[i, 2], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp2, i, TAJS_restrictToType(obj[i, 2], 'string'), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp3 = TAJS_restrictToType(obj[i, 3], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp3, i, TAJS_restrictToType(obj[i, 3], 'string'), 3, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp4 = TAJS_restrictToType(obj[i, 4], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp4, i, TAJS_restrictToType(obj[i, 4], 'string'), 4, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp5 = TAJS_restrictToType(obj[i, 5], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp5, i, TAJS_restrictToType(obj[i, 5], 'string'), 5, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp6 = TAJS_restrictToType(obj[i, 6], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp6, i, TAJS_restrictToType(obj[i, 6], 'string'), 6, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp7 = TAJS_restrictToType(obj[i, 7], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp7, i, TAJS_restrictToType(obj[i, 7], 'string'), 7, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp8 = TAJS_restrictToType(obj[i, 8], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp8, i, TAJS_restrictToType(obj[i, 8], 'string'), 8, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp9 = TAJS_restrictToType(obj[i, 9], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp9, i, TAJS_restrictToType(obj[i, 9], 'string'), 9, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp10 = TAJS_restrictToType(obj[i, 10], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp10, i, TAJS_restrictToType(obj[i, 10], 'string'), 10, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp11 = TAJS_restrictToType(obj[i, 11], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp11, i, TAJS_restrictToType(obj[i, 11], 'string'), 11, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp12 = TAJS_restrictToType(obj[i, 12], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp12, i, TAJS_restrictToType(obj[i, 12], 'string'), 12, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp13 = TAJS_restrictToType(obj[i, 13], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp13, i, TAJS_restrictToType(obj[i, 13], 'string'), 13, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp14 = TAJS_restrictToType(obj[i, 14], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp14, i, TAJS_restrictToType(obj[i, 14], 'string'), 14, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp15 = TAJS_restrictToType(obj[i, 15], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp15, i, TAJS_restrictToType(obj[i, 15], 'string'), 15, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp16 = TAJS_restrictToType(obj[i, 16], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp16, i, TAJS_restrictToType(obj[i, 16], 'string'), 16, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp17 = TAJS_restrictToType(obj[i, 17], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp17, i, TAJS_restrictToType(obj[i, 17], 'string'), 17, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp18 = TAJS_restrictToType(obj[i, 18], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp18, i, TAJS_restrictToType(obj[i, 18], 'string'), 18, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp19 = TAJS_restrictToType(obj[i, 19], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp19, i, TAJS_restrictToType(obj[i, 19], 'string'), 19, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp20 = TAJS_restrictToType(obj[i, 20], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp20, i, TAJS_restrictToType(obj[i, 20], 'string'), 20, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp21 = TAJS_restrictToType(obj[i, 21], 'string'), (callback, $__.fs.J$__v5960504135_904_572).call(vvv_tmp21, i, TAJS_restrictToType(obj[i, 21], 'string'), 21, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 25:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 25);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 25, true, $__.uid);
    vvv_tmp0 = obj;
    'focus' in vvv_tmp0;
    i = 'focus';
    (vvv_tmp1 = TAJS_restrictToType((obj, $__.os.oid152)[i, 'focus'], 'string'), (callback, $__.fs.J$__v5960504135_914_596).call(vvv_tmp1, i, TAJS_restrictToType((obj, $__.os.oid152)[i, 'focus'], 'string'), 0, true, $__.uid)) === false;
    'blur' in vvv_tmp0;
    i = 'blur';
    (vvv_tmp2 = TAJS_restrictToType((obj, $__.os.oid152)[i, 'blur'], 'string'), (callback, $__.fs.J$__v5960504135_914_596).call(vvv_tmp2, i, TAJS_restrictToType((obj, $__.os.oid152)[i, 'blur'], 'string'), 1, true, $__.uid)) === false;
    return obj;
case 26:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 26);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 26, true, $__.uid);
    length = (obj.length, 2);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_974_613).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_974_613).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 27:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 27);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 27, true, $__.uid);
    length = (obj.length, 6);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_1054_634).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_1054_634).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp2 = TAJS_restrictToType(obj[i, 2], 'string'), (callback, $__.fs.J$__v5960504135_1054_634).call(vvv_tmp2, i, TAJS_restrictToType(obj[i, 2], 'string'), 2, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp3 = TAJS_restrictToType(obj[i, 3], 'string'), (callback, $__.fs.J$__v5960504135_1054_634).call(vvv_tmp3, i, TAJS_restrictToType(obj[i, 3], 'string'), 3, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp4 = TAJS_restrictToType(obj[i, 4], 'string'), (callback, $__.fs.J$__v5960504135_1054_634).call(vvv_tmp4, i, TAJS_restrictToType(obj[i, 4], 'string'), 4, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp5 = TAJS_restrictToType(obj[i, 5], 'string'), (callback, $__.fs.J$__v5960504135_1054_634).call(vvv_tmp5, i, TAJS_restrictToType(obj[i, 5], 'string'), 5, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 28:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 28);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 28, true, $__.uid);
    vvv_tmp0 = obj;
    'scrollLeft' in vvv_tmp0;
    i = 'scrollLeft';
    (vvv_tmp1 = TAJS_restrictToType((obj, $__.os.oid178)[i, 'scrollLeft'], 'string'), (callback, $__.fs.J$__v5960504135_1076_646).call(vvv_tmp1, i, TAJS_restrictToType((obj, $__.os.oid178)[i, 'scrollLeft'], 'string'), 0, true, $__.uid)) === false;
    'scrollTop' in vvv_tmp0;
    i = 'scrollTop';
    (vvv_tmp2 = TAJS_restrictToType((obj, $__.os.oid178)[i, 'scrollTop'], 'string'), (callback, $__.fs.J$__v5960504135_1076_646).call(vvv_tmp2, i, TAJS_restrictToType((obj, $__.os.oid178)[i, 'scrollTop'], 'string'), 1, true, $__.uid)) === false;
    return obj;
case 29:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 29);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 29, true, $__.uid);
    length = (obj.length, 2);
    i < length;
    (vvv_tmp0 = TAJS_restrictToType(obj[i, 0], 'string'), (callback, $__.fs.J$__v5960504135_1080_649).call(vvv_tmp0, i, TAJS_restrictToType(obj[i, 0], 'string'), 0, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    (vvv_tmp1 = TAJS_restrictToType(obj[i, 1], 'string'), (callback, $__.fs.J$__v5960504135_1080_649).call(vvv_tmp1, i, TAJS_restrictToType(obj[i, 1], 'string'), 1, true, $__.uid)) === false;
    (i = +i + 1) - 1;
    i < length;
    return obj;
case 30:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 30);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 31, true, $__.uid);
    vvv_tmp0 = obj;
    'padding' in vvv_tmp0;
    i = 'padding';
    (vvv_tmp1 = TAJS_restrictToType((obj, $__.os.oid182)[i, 'padding'], 'string'), (callback, $__.fs.J$__v5960504135_1086_655).call(vvv_tmp1, i, TAJS_restrictToType((obj, $__.os.oid182)[i, 'padding'], 'string'), 0, true, $__.uid)) === false;
    'content' in vvv_tmp0;
    i = 'content';
    (vvv_tmp2 = TAJS_restrictToType((obj, $__.os.oid182)[i, 'content'], 'string'), (callback, $__.fs.J$__v5960504135_1086_655).call(vvv_tmp2, i, TAJS_restrictToType((obj, $__.os.oid182)[i, 'content'], 'string'), 1, true, $__.uid)) === false;
    '' in vvv_tmp0;
    i = '';
    (vvv_tmp3 = TAJS_restrictToType((obj, $__.os.oid182)[i, ''], 'string'), (callback, $__.fs.J$__v5960504135_1086_655).call(vvv_tmp3, i, TAJS_restrictToType((obj, $__.os.oid182)[i, ''], 'string'), 2, true, $__.uid)) === false;
    return obj;
case 31:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 31);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 32, true, $__.uid);
    vvv_tmp0 = obj;
    'padding' in vvv_tmp0;
    i = 'padding';
    (vvv_tmp1 = TAJS_restrictToType((obj, $__.os.oid183)[i, 'padding'], 'string'), (callback, $__.fs.J$__v5960504135_1086_659).call(vvv_tmp1, i, TAJS_restrictToType((obj, $__.os.oid183)[i, 'padding'], 'string'), 0, true, $__.uid)) === false;
    'content' in vvv_tmp0;
    i = 'content';
    (vvv_tmp2 = TAJS_restrictToType((obj, $__.os.oid183)[i, 'content'], 'string'), (callback, $__.fs.J$__v5960504135_1086_659).call(vvv_tmp2, i, TAJS_restrictToType((obj, $__.os.oid183)[i, 'content'], 'string'), 1, true, $__.uid)) === false;
    '' in vvv_tmp0;
    i = '';
    (vvv_tmp3 = TAJS_restrictToType((obj, $__.os.oid183)[i, ''], 'string'), (callback, $__.fs.J$__v5960504135_1086_659).call(vvv_tmp3, i, TAJS_restrictToType((obj, $__.os.oid183)[i, ''], 'string'), 2, true, $__.uid)) === false;
    return obj;
case 32:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 32);
    i = 0;
    (isArrayLike, $__.fs.isArrayLike_6)(obj, 30, true, $__.uid);
    vvv_tmp0 = obj;
    'Height' in vvv_tmp0;
    i = 'Height';
    (vvv_tmp1 = TAJS_restrictToType((obj, $__.os.oid181)[i, 'Height'], 'string'), (callback, $__.fs.J$__v5960504135_1088_654).call(vvv_tmp1, i, TAJS_restrictToType((obj, $__.os.oid181)[i, 'Height'], 'string'), 0, true, $__.uid)) === false;
    'Width' in vvv_tmp0;
    i = 'Width';
    (vvv_tmp2 = TAJS_restrictToType((obj, $__.os.oid181)[i, 'Width'], 'string'), (callback, $__.fs.J$__v5960504135_1088_654).call(vvv_tmp2, i, TAJS_restrictToType((obj, $__.os.oid181)[i, 'Width'], 'string'), 1, true, $__.uid)) === false;
    return obj;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
if (isArrayLike(obj)) {
    length = obj.length;
    for (; i < length; i++) {
        if (callback.call(obj[i], i, obj[i]) === false) {
            break;
        }
    }
} else {
    for (i in obj) {
        if (callback.call(obj[i], i, obj[i]) === false) {
            break;
        }
    }
}
return obj;}),
        'trim': ($__.fs.J$__v5960504135_56_82 = function J$__v5960504135_56(text) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
text = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return text == null ? '' : (text + '').replace(rtrim, '');}),
        'makeArray': ($__.fs.J$__v5960504135_58_83 = function J$__v5960504135_58(arr, results) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
arr = arguments[0], results = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = results || [];
if (arr != null) {
    if (isArrayLike(Object(arr))) {
        jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);
    } else {
        push.call(ret, arr);
    }
}
return ret;}),
        'inArray': ($__.fs.J$__v5960504135_60_84 = function J$__v5960504135_60(elem, arr, i) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], arr = arguments[1], i = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arr == null ? -1 : indexOf.call(arr, elem, i);}),
        'merge': ($__.fs.J$__v5960504135_62_85 = function J$__v5960504135_62(first, second) {
var vvv_return, vvv_switch, len, j, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
first = arguments[0], second = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = +second.length;
j = 0;
i = first.length;
for (; j < len; j++) {
    first[i++] = second[j];
}
first.length = i;
return first;}),
        'grep': ($__.fs.J$__v5960504135_64_86 = function J$__v5960504135_64(elems, callback, invert) {
var vvv_return, vvv_switch, callbackInverse, matches, i, length, callbackExpect;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elems = arguments[0], callback = arguments[1], invert = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matches = [];
i = 0;
length = elems.length;
callbackExpect = !invert;
for (; i < length; i++) {
    callbackInverse = !callback(elems[i], i);
    if (callbackInverse !== callbackExpect) {
        matches.push(elems[i]);
    }
}
return matches;}),
        'map': ($__.fs.J$__v5960504135_66_87 = function J$__v5960504135_66(elems, callback, arg) {
var vvv_return, vvv_switch, length, value, i, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elems = arguments[0], callback = arguments[1], arg = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
ret = [];
if (isArrayLike(elems)) {
    length = elems.length;
    for (; i < length; i++) {
        value = callback(elems[i], i, arg);
        if (value != null) {
            ret.push(value);
        }
    }
} else {
    for (i in elems) {
        value = callback(elems[i], i, arg);
        if (value != null) {
            ret.push(value);
        }
    }
}
return concat.apply([], ret);}),
        'guid': 1,
        'proxy': ($__.fs.J$__v5960504135_70_88 = function J$__v5960504135_70(fn, context) {
var vvv_return, vvv_switch, tmp, args, proxy;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof context === 'string') {
    tmp = fn[context];
    context = fn;
    fn = tmp;
}
if (!jQuery.isFunction(fn)) {
    return undefined;
}
args = slice.call(arguments, 2);
proxy = function () {
    return fn.apply(context || this, args.concat(slice.call(arguments)));
};
proxy.guid = fn.guid = fn.guid || jQuery.guid++;
return proxy;}),
        'now': TAJS_restrictToType(Date.now, 'function'),
        'support': support
    }, 0, true, $__.uid);
    typeof Symbol === 'function';
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[TAJS_restrictToType(Symbol.iterator, 'symbol'), $__.symbols.s2] = TAJS_restrictToType(arr[TAJS_restrictToType(Symbol.iterator, 'symbol'), $__.symbols.s2], 'function');
    vvv_tmp1 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp1, function $__lt0(res) {
        res.length = 10;
        if (res.length != 10)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt0, -2);
    }('Boolean Number String Function Array Date RegExp Object Error Symbol'['split'](' ')), ($__.fs.J$__v5960504135_72_89 = function J$__v5960504135_72(i, name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], name = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object Boolean]'] = name['toLowerCase']();
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object Number]'] = name['toLowerCase']();
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object String]'] = name['toLowerCase']();
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object Function]'] = name['toLowerCase']();
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object Array]'] = name['toLowerCase']();
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object Date]'] = name['toLowerCase']();
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object RegExp]'] = name['toLowerCase']();
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object Object]'] = name['toLowerCase']();
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object Error]'] = name['toLowerCase']();
    return;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    (class2type, $__.os.oid0)['[object ' + name + ']', '[object Symbol]'] = name['toLowerCase']();
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
class2type['[object ' + name + ']'] = name.toLowerCase();}, $__.fs.J$__v5960504135_72_89), 0, true, $__.uid);
    Sizzle = (($__.fs.J$__v5960504135_302_90 = function J$__v5960504135_302(window) {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2, i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando, preferredDoc, dirruns, done, classCache, tokenCache, compilerCache, sortOrder, hasOwn, arr, pop, push_native, push, slice, indexOf, booleans, whitespace, identifier, attributes, pseudos, rwhitespace, rtrim, rcomma, rcombinators, rattributeQuotes, rpseudo, ridentifier, matchExpr, rinputs, rheader, rnative, rquickExpr, rsibling, runescape, funescape, rcssescape, fcssescape, unloadHandler, disabledAncestor, Sizzle, createCache, markFunction, assert, addHandle, siblingCheck, createInputPseudo, createButtonPseudo, createDisabledPseudo, createPositionalPseudo, testContext, setFilters, toSelector, addCombinator, elementMatcher, multipleContexts, condense, setMatcher, matcherFromTokens, matcherFromGroupMatchers;
Sizzle = function Sizzle(selector, context, results, seed) {
    var m, i, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;
    results = results || [];
    if (typeof selector !== 'string' || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
        return results;
    }
    if (!seed) {
        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
            setDocument(context);
        }
        context = context || document;
        if (documentIsHTML) {
            if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
                if (m = match[1]) {
                    if (nodeType === 9) {
                        if (elem = context.getElementById(m)) {
                            if (elem.id === m) {
                                results.push(elem);
                                return results;
                            }
                        } else {
                            return results;
                        }
                    } else {
                        if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                            results.push(elem);
                            return results;
                        }
                    }
                } else if (match[2]) {
                    push.apply(results, context.getElementsByTagName(selector));
                    return results;
                } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
                    push.apply(results, context.getElementsByClassName(m));
                    return results;
                }
            }
            if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
                if (nodeType !== 1) {
                    newContext = context;
                    newSelector = selector;
                } else if (context.nodeName.toLowerCase() !== 'object') {
                    if (nid = context.getAttribute('id')) {
                        nid = nid.replace(rcssescape, fcssescape);
                    } else {
                        context.setAttribute('id', nid = expando);
                    }
                    groups = tokenize(selector);
                    i = groups.length;
                    while (i--) {
                        groups[i] = '#' + nid + ' ' + toSelector(groups[i]);
                    }
                    newSelector = groups.join(',');
                    newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
                }
                if (newSelector) {
                    try {
                        push.apply(results, newContext.querySelectorAll(newSelector));
                        return results;
                    } catch (qsaError) {
                    } finally {
                        if (nid === expando) {
                            context.removeAttribute('id');
                        }
                    }
                }
            }
        }
    }
    return select(selector.replace(rtrim, '$1'), context, results, seed);
};
createCache = function createCache() {
    var keys = [];
    function cache(key, value) {
        if (keys.push(key + ' ') > Expr.cacheLength) {
            delete cache[keys.shift()];
        }
        return cache[key + ' '] = value;
    }
    return cache;
};
markFunction = function markFunction(fn) {
    fn[expando] = true;
    return fn;
};
assert = function assert(fn) {
    var el = document.createElement('fieldset');
    try {
        return !!fn(el);
    } catch (e) {
        return false;
    } finally {
        if (el.parentNode) {
            el.parentNode.removeChild(el);
        }
        el = null;
    }
};
addHandle = function addHandle(attrs, handler) {
    var arr = attrs.split('|'), i = arr.length;
    while (i--) {
        Expr.attrHandle[arr[i]] = handler;
    }
};
siblingCheck = function siblingCheck(a, b) {
    var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;
    if (diff) {
        return diff;
    }
    if (cur) {
        while (cur = cur.nextSibling) {
            if (cur === b) {
                return -1;
            }
        }
    }
    return a ? 1 : -1;
};
createInputPseudo = function createInputPseudo(type) {
    return function (elem) {
        var name = elem.nodeName.toLowerCase();
        return name === 'input' && elem.type === type;
    };
};
createButtonPseudo = function createButtonPseudo(type) {
    return function (elem) {
        var name = elem.nodeName.toLowerCase();
        return (name === 'input' || name === 'button') && elem.type === type;
    };
};
createDisabledPseudo = function createDisabledPseudo(disabled) {
    return function (elem) {
        if ('form' in elem) {
            if (elem.parentNode && elem.disabled === false) {
                if ('label' in elem) {
                    if ('label' in elem.parentNode) {
                        return elem.parentNode.disabled === disabled;
                    } else {
                        return elem.disabled === disabled;
                    }
                }
                return elem.isDisabled === disabled || elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;
            }
            return elem.disabled === disabled;
        } else if ('label' in elem) {
            return elem.disabled === disabled;
        }
        return false;
    };
};
createPositionalPseudo = function createPositionalPseudo(fn) {
    return markFunction(function (argument) {
        argument = +argument;
        return markFunction(function (seed, matches) {
            var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
            while (i--) {
                if (seed[j = matchIndexes[i]]) {
                    seed[j] = !(matches[j] = seed[j]);
                }
            }
        });
    });
};
testContext = function testContext(context) {
    return context && typeof context.getElementsByTagName !== 'undefined' && context;
};
setFilters = function setFilters() {
};
toSelector = function toSelector(tokens) {
    var i = 0, len = tokens.length, selector = '';
    for (; i < len; i++) {
        selector += tokens[i].value;
    }
    return selector;
};
addCombinator = function addCombinator(matcher, combinator, base) {
    var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === 'parentNode', doneName = done++;
    return combinator.first ? function (elem, context, xml) {
        while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
                return matcher(elem, context, xml);
            }
        }
        return false;
    } : function (elem, context, xml) {
        var oldCache, uniqueCache, outerCache, newCache = [
                dirruns,
                doneName
            ];
        if (xml) {
            while (elem = elem[dir]) {
                if (elem.nodeType === 1 || checkNonElements) {
                    if (matcher(elem, context, xml)) {
                        return true;
                    }
                }
            }
        } else {
            while (elem = elem[dir]) {
                if (elem.nodeType === 1 || checkNonElements) {
                    outerCache = elem[expando] || (elem[expando] = {});
                    uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
                    if (skip && skip === elem.nodeName.toLowerCase()) {
                        elem = elem[dir] || elem;
                    } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                        return newCache[2] = oldCache[2];
                    } else {
                        uniqueCache[key] = newCache;
                        if (newCache[2] = matcher(elem, context, xml)) {
                            return true;
                        }
                    }
                }
            }
        }
        return false;
    };
};
elementMatcher = function elementMatcher(matchers) {
    return matchers.length > 1 ? function (elem, context, xml) {
        var i = matchers.length;
        while (i--) {
            if (!matchers[i](elem, context, xml)) {
                return false;
            }
        }
        return true;
    } : matchers[0];
};
multipleContexts = function multipleContexts(selector, contexts, results) {
    var i = 0, len = contexts.length;
    for (; i < len; i++) {
        Sizzle(selector, contexts[i], results);
    }
    return results;
};
condense = function condense(unmatched, map, filter, context, xml) {
    var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;
    for (; i < len; i++) {
        if (elem = unmatched[i]) {
            if (!filter || filter(elem, context, xml)) {
                newUnmatched.push(elem);
                if (mapped) {
                    map.push(i);
                }
            }
        }
    }
    return newUnmatched;
};
setMatcher = function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
    if (postFilter && !postFilter[expando]) {
        postFilter = setMatcher(postFilter);
    }
    if (postFinder && !postFinder[expando]) {
        postFinder = setMatcher(postFinder, postSelector);
    }
    return markFunction(function (seed, results, context, xml) {
        var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []), matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
        if (matcher) {
            matcher(matcherIn, matcherOut, context, xml);
        }
        if (postFilter) {
            temp = condense(matcherOut, postMap);
            postFilter(temp, [], context, xml);
            i = temp.length;
            while (i--) {
                if (elem = temp[i]) {
                    matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
                }
            }
        }
        if (seed) {
            if (postFinder || preFilter) {
                if (postFinder) {
                    temp = [];
                    i = matcherOut.length;
                    while (i--) {
                        if (elem = matcherOut[i]) {
                            temp.push(matcherIn[i] = elem);
                        }
                    }
                    postFinder(null, matcherOut = [], temp, xml);
                }
                i = matcherOut.length;
                while (i--) {
                    if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                        seed[temp] = !(results[temp] = elem);
                    }
                }
            }
        } else {
            matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
            if (postFinder) {
                postFinder(null, results, matcherOut, xml);
            } else {
                push.apply(results, matcherOut);
            }
        }
    });
};
matcherFromTokens = function matcherFromTokens(tokens) {
    var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[' '], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function (elem) {
            return elem === checkContext;
        }, implicitRelative, true), matchAnyContext = addCombinator(function (elem) {
            return indexOf(checkContext, elem) > -1;
        }, implicitRelative, true), matchers = [function (elem, context, xml) {
                var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                checkContext = null;
                return ret;
            }];
    for (; i < len; i++) {
        if (matcher = Expr.relative[tokens[i].type]) {
            matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
            matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
            if (matcher[expando]) {
                j = ++i;
                for (; j < len; j++) {
                    if (Expr.relative[tokens[j].type]) {
                        break;
                    }
                }
                return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({
                    value: tokens[i - 2].type === ' ' ? '*' : ''
                })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
            }
            matchers.push(matcher);
        }
    }
    return elementMatcher(matchers);
};
matcherFromGroupMatchers = function matcherFromGroupMatchers(elementMatchers, setMatchers) {
    var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function (seed, context, xml, results, outermost) {
            var elem, j, matcher, matchedCount = 0, i = '0', unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find['TAG']('*', outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
            if (outermost) {
                outermostContext = context === document || context || outermost;
            }
            for (; i !== len && (elem = elems[i]) != null; i++) {
                if (byElement && elem) {
                    j = 0;
                    if (!context && elem.ownerDocument !== document) {
                        setDocument(elem);
                        xml = !documentIsHTML;
                    }
                    while (matcher = elementMatchers[j++]) {
                        if (matcher(elem, context || document, xml)) {
                            results.push(elem);
                            break;
                        }
                    }
                    if (outermost) {
                        dirruns = dirrunsUnique;
                    }
                }
                if (bySet) {
                    if (elem = !matcher && elem) {
                        matchedCount--;
                    }
                    if (seed) {
                        unmatched.push(elem);
                    }
                }
            }
            matchedCount += i;
            if (bySet && i !== matchedCount) {
                j = 0;
                while (matcher = setMatchers[j++]) {
                    matcher(unmatched, setMatched, context, xml);
                }
                if (seed) {
                    if (matchedCount > 0) {
                        while (i--) {
                            if (!(unmatched[i] || setMatched[i])) {
                                setMatched[i] = pop.call(results);
                            }
                        }
                    }
                    setMatched = condense(setMatched);
                }
                push.apply(results, setMatched);
                if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
                    Sizzle.uniqueSort(results);
                }
            }
            if (outermost) {
                dirruns = dirrunsUnique;
                outermostContext = contextBackup;
            }
            return unmatched;
        };
    return bySet ? markFunction(superMatcher) : superMatcher;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
window = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    Sizzle = ($__.fs.Sizzle_91 = function Sizzle(selector, context, results, seed) {
var vvv_return, vvv_switch, m, i, elem, nid, match, groups, newSelector, newContext, nodeType;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], context = arguments[1], results = arguments[2], seed = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
newContext = context && context.ownerDocument;
nodeType = context ? context.nodeType : 9;
results = results || [];
if (typeof selector !== 'string' || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
    return results;
}
if (!seed) {
    if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
        setDocument(context);
    }
    context = context || document;
    if (documentIsHTML) {
        if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
            if (m = match[1]) {
                if (nodeType === 9) {
                    if (elem = context.getElementById(m)) {
                        if (elem.id === m) {
                            results.push(elem);
                            return results;
                        }
                    } else {
                        return results;
                    }
                } else {
                    if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                        results.push(elem);
                        return results;
                    }
                }
            } else if (match[2]) {
                push.apply(results, context.getElementsByTagName(selector));
                return results;
            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
                push.apply(results, context.getElementsByClassName(m));
                return results;
            }
        }
        if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
            if (nodeType !== 1) {
                newContext = context;
                newSelector = selector;
            } else if (context.nodeName.toLowerCase() !== 'object') {
                if (nid = context.getAttribute('id')) {
                    nid = nid.replace(rcssescape, fcssescape);
                } else {
                    context.setAttribute('id', nid = expando);
                }
                groups = tokenize(selector);
                i = groups.length;
                while (i--) {
                    groups[i] = '#' + nid + ' ' + toSelector(groups[i]);
                }
                newSelector = groups.join(',');
                newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
            }
            if (newSelector) {
                try {
                    push.apply(results, newContext.querySelectorAll(newSelector));
                    return results;
                } catch (qsaError) {
                } finally {
                    if (nid === expando) {
                        context.removeAttribute('id');
                    }
                }
            }
        }
    }
}
return select(selector.replace(rtrim, '$1'), context, results, seed);});
    createCache = ($__.fs.createCache_92 = function createCache() {
var vvv_return, vvv_switch, keys, cache;
cache = function cache(key, value) {
    if (keys.push(key + ' ') > Expr.cacheLength) {
        delete cache[keys.shift()];
    }
    return cache[key + ' '] = value;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    cache = ($__.fs.cache_111 = function cache(key, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
key = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (keys.push(key + ' ') > Expr.cacheLength) {
    delete cache[keys.shift()];
}
return cache[key + ' '] = value;});
    keys = [];
    return cache;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    cache = ($__.fs.cache_112 = function cache(key, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
key = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (keys.push(key + ' ') > Expr.cacheLength) {
    delete cache[keys.shift()];
}
return cache[key + ' '] = value;});
    keys = [];
    return cache;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    cache = ($__.fs.cache_113 = function cache(key, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
key = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (keys.push(key + ' ') > Expr.cacheLength) {
    delete cache[keys.shift()];
}
return cache[key + ' '] = value;});
    keys = [];
    return cache;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
keys = [];
return cache;});
    markFunction = ($__.fs.markFunction_93 = function markFunction(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
switch (vvv_switch) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
case 8:
case 9:
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 10);
    fn[expando, 'sizzle1493925426258'] = true;
    return fn;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
fn[expando] = true;
return fn;});
    assert = ($__.fs.assert_94 = function assert(fn) {
var vvv_return, vvv_switch, el;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    el = document['createElement']('fieldset');
    try {
        return !!(fn, $__.fs.J$__v5960504135_115_180)(el, 0, true, $__.uid);
    } finally {
        el.parentNode, null;
        el = null;
    }
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    el = document['createElement']('fieldset');
    try {
        return !!(fn, $__.fs.J$__v5960504135_117_181)(el, 0, true, $__.uid);
    } finally {
        el.parentNode, null;
        el = null;
    }
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    el = document['createElement']('fieldset');
    try {
        return !!(fn, $__.fs.J$__v5960504135_119_182)(el, 0, true, $__.uid);
    } finally {
        TAJS_restrictToType(el.parentNode, 'HTMLHtmlElement');
        TAJS_restrictToType(el.parentNode, 'HTMLHtmlElement')['removeChild'](el);
        el = null;
    }
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    el = document['createElement']('fieldset');
    try {
        return !!(fn, $__.fs.J$__v5960504135_139_187)(el, 0, true, $__.uid);
    } finally {
        TAJS_restrictToType(el.parentNode, 'HTMLHtmlElement');
        TAJS_restrictToType(el.parentNode, 'HTMLHtmlElement')['removeChild'](el);
        el = null;
    }
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    el = document['createElement']('fieldset');
    try {
        (fn, $__.fs.J$__v5960504135_141_188)(el, 0, true, $__.uid);
    } catch (e) {
        return false;
    } finally {
        TAJS_restrictToType(el.parentNode, 'HTMLHtmlElement');
        TAJS_restrictToType(el.parentNode, 'HTMLHtmlElement')['removeChild'](el);
        el = null;
    }
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    el = document['createElement']('fieldset');
    try {
        (fn, $__.fs.J$__v5960504135_143_189)(el, 0, true, $__.uid);
    } catch (e) {
        return false;
    } finally {
        el.parentNode, null;
        el = null;
    }
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    el = document['createElement']('fieldset');
    try {
        return !!(fn, $__.fs.J$__v5960504135_288_192)(el, 0, true, $__.uid);
    } finally {
        el.parentNode, null;
        el = null;
    }
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    el = document['createElement']('fieldset');
    try {
        return !!(fn, $__.fs.J$__v5960504135_290_193)(el, 0, true, $__.uid);
    } finally {
        el.parentNode, null;
        el = null;
    }
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    el = document['createElement']('fieldset');
    try {
        return !!(fn, $__.fs.J$__v5960504135_294_194)(el, 0, true, $__.uid);
    } finally {
        el.parentNode, null;
        el = null;
    }
    return;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    el = document['createElement']('fieldset');
    try {
        return !!(fn, $__.fs.J$__v5960504135_298_195)(el, 0, true, $__.uid);
    } finally {
        el.parentNode, null;
        el = null;
    }
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
el = document.createElement('fieldset');
try {
    return !!fn(el);
} catch (e) {
    return false;
} finally {
    if (el.parentNode) {
        el.parentNode.removeChild(el);
    }
    el = null;
}});
    addHandle = ($__.fs.addHandle_95 = function addHandle(attrs, handler) {
var vvv_return, vvv_switch, arr, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
attrs = arguments[0], handler = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
arr = attrs.split('|');
i = arr.length;
while (i--) {
    Expr.attrHandle[arr[i]] = handler;
}});
    siblingCheck = ($__.fs.siblingCheck_96 = function siblingCheck(a, b) {
var vvv_return, vvv_switch, cur, diff;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
a = arguments[0], b = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
cur = b && a;
diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;
if (diff) {
    return diff;
}
if (cur) {
    while (cur = cur.nextSibling) {
        if (cur === b) {
            return -1;
        }
    }
}
return a ? 1 : -1;});
    createInputPseudo = ($__.fs.createInputPseudo_97 = function createInputPseudo(type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return ($__.fs.J$__v5960504135_98_170 = function J$__v5960504135_98(elem) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
name = elem.nodeName.toLowerCase();
return name === 'input' && elem.type === type;});
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return ($__.fs.J$__v5960504135_98_171 = function J$__v5960504135_98(elem) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
name = elem.nodeName.toLowerCase();
return name === 'input' && elem.type === type;});
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    return ($__.fs.J$__v5960504135_98_172 = function J$__v5960504135_98(elem) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
name = elem.nodeName.toLowerCase();
return name === 'input' && elem.type === type;});
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    return ($__.fs.J$__v5960504135_98_173 = function J$__v5960504135_98(elem) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
name = elem.nodeName.toLowerCase();
return name === 'input' && elem.type === type;});
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    return ($__.fs.J$__v5960504135_98_174 = function J$__v5960504135_98(elem) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
name = elem.nodeName.toLowerCase();
return name === 'input' && elem.type === type;});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (elem) {
    var name = elem.nodeName.toLowerCase();
    return name === 'input' && elem.type === type;
};});
    createButtonPseudo = ($__.fs.createButtonPseudo_98 = function createButtonPseudo(type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return ($__.fs.J$__v5960504135_101_175 = function J$__v5960504135_101(elem) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
name = elem.nodeName.toLowerCase();
return (name === 'input' || name === 'button') && elem.type === type;});
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return ($__.fs.J$__v5960504135_101_176 = function J$__v5960504135_101(elem) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
name = elem.nodeName.toLowerCase();
return (name === 'input' || name === 'button') && elem.type === type;});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (elem) {
    var name = elem.nodeName.toLowerCase();
    return (name === 'input' || name === 'button') && elem.type === type;
};});
    createDisabledPseudo = ($__.fs.createDisabledPseudo_99 = function createDisabledPseudo(disabled) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
disabled = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return ($__.fs.J$__v5960504135_104_146 = function J$__v5960504135_104(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ('form' in elem) {
    if (elem.parentNode && elem.disabled === false) {
        if ('label' in elem) {
            if ('label' in elem.parentNode) {
                return elem.parentNode.disabled === disabled;
            } else {
                return elem.disabled === disabled;
            }
        }
        return elem.isDisabled === disabled || elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;
    }
    return elem.disabled === disabled;
} else if ('label' in elem) {
    return elem.disabled === disabled;
}
return false;});
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return ($__.fs.J$__v5960504135_104_147 = function J$__v5960504135_104(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ('form' in elem) {
    if (elem.parentNode && elem.disabled === false) {
        if ('label' in elem) {
            if ('label' in elem.parentNode) {
                return elem.parentNode.disabled === disabled;
            } else {
                return elem.disabled === disabled;
            }
        }
        return elem.isDisabled === disabled || elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;
    }
    return elem.disabled === disabled;
} else if ('label' in elem) {
    return elem.disabled === disabled;
}
return false;});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (elem) {
    if ('form' in elem) {
        if (elem.parentNode && elem.disabled === false) {
            if ('label' in elem) {
                if ('label' in elem.parentNode) {
                    return elem.parentNode.disabled === disabled;
                } else {
                    return elem.disabled === disabled;
                }
            }
            return elem.isDisabled === disabled || elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;
        }
        return elem.disabled === disabled;
    } else if ('label' in elem) {
        return elem.disabled === disabled;
    }
    return false;
};});
    createPositionalPseudo = ($__.fs.createPositionalPseudo_100 = function createPositionalPseudo(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_109_157 = function J$__v5960504135_109(argument) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
argument = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
argument = +argument;
return markFunction(function (seed, matches) {
    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
    while (i--) {
        if (seed[j = matchIndexes[i]]) {
            seed[j] = !(matches[j] = seed[j]);
        }
    }
});}), 4, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_109_159 = function J$__v5960504135_109(argument) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
argument = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
argument = +argument;
return markFunction(function (seed, matches) {
    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
    while (i--) {
        if (seed[j = matchIndexes[i]]) {
            seed[j] = !(matches[j] = seed[j]);
        }
    }
});}), 5, true, $__.uid);
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    return (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_109_161 = function J$__v5960504135_109(argument) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
argument = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
argument = +argument;
return markFunction(function (seed, matches) {
    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
    while (i--) {
        if (seed[j = matchIndexes[i]]) {
            seed[j] = !(matches[j] = seed[j]);
        }
    }
});}), 6, true, $__.uid);
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    return (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_109_163 = function J$__v5960504135_109(argument) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
argument = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
argument = +argument;
return markFunction(function (seed, matches) {
    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
    while (i--) {
        if (seed[j = matchIndexes[i]]) {
            seed[j] = !(matches[j] = seed[j]);
        }
    }
});}), 7, true, $__.uid);
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    return (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_109_165 = function J$__v5960504135_109(argument) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
argument = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
argument = +argument;
return markFunction(function (seed, matches) {
    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
    while (i--) {
        if (seed[j = matchIndexes[i]]) {
            seed[j] = !(matches[j] = seed[j]);
        }
    }
});}), 8, true, $__.uid);
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    return (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_109_167 = function J$__v5960504135_109(argument) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
argument = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
argument = +argument;
return markFunction(function (seed, matches) {
    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
    while (i--) {
        if (seed[j = matchIndexes[i]]) {
            seed[j] = !(matches[j] = seed[j]);
        }
    }
});}), 9, true, $__.uid);
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    return (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_109_169 = function J$__v5960504135_109(argument) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
argument = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
argument = +argument;
return markFunction(function (seed, matches) {
    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
    while (i--) {
        if (seed[j = matchIndexes[i]]) {
            seed[j] = !(matches[j] = seed[j]);
        }
    }
});}), 10, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return markFunction(function (argument) {
    argument = +argument;
    return markFunction(function (seed, matches) {
        var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
        while (i--) {
            if (seed[j = matchIndexes[i]]) {
                seed[j] = !(matches[j] = seed[j]);
            }
        }
    });
});});
    testContext = ($__.fs.testContext_101 = function testContext(context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return context && typeof context.getElementsByTagName !== 'undefined' && context;});
    setFilters = ($__.fs.setFilters_102 = function setFilters() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    toSelector = ($__.fs.toSelector_103 = function toSelector(tokens) {
var vvv_return, vvv_switch, i, len, selector;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
tokens = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
len = tokens.length;
selector = '';
for (; i < len; i++) {
    selector += tokens[i].value;
}
return selector;});
    addCombinator = ($__.fs.addCombinator_104 = function addCombinator(matcher, combinator, base) {
var vvv_return, vvv_switch, dir, skip, key, checkNonElements, doneName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
matcher = arguments[0], combinator = arguments[1], base = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    dir = TAJS_restrictToType((combinator, $__.os.oid6).dir, 'string');
    skip = TAJS_restrictToType((combinator, $__.os.oid6).next, 'string');
    key = skip;
    checkNonElements = base;
    doneName = (done = +done + 1) - 1;
    return TAJS_restrictToType((combinator, $__.os.oid6).first, 'undefined'), ($__.fs.J$__v5960504135_263_120 = function J$__v5960504135_263(elem, context, xml) {
var vvv_return, vvv_switch, oldCache, uniqueCache, outerCache, newCache;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], context = arguments[1], xml = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
newCache = [
    dirruns,
    doneName
];
if (xml) {
    while (elem = elem[dir]) {
        if (elem.nodeType === 1 || checkNonElements) {
            if (matcher(elem, context, xml)) {
                return true;
            }
        }
    }
} else {
    while (elem = elem[dir]) {
        if (elem.nodeType === 1 || checkNonElements) {
            outerCache = elem[expando] || (elem[expando] = {});
            uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
            if (skip && skip === elem.nodeName.toLowerCase()) {
                elem = elem[dir] || elem;
            } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                return newCache[2] = oldCache[2];
            } else {
                uniqueCache[key] = newCache;
                if (newCache[2] = matcher(elem, context, xml)) {
                    return true;
                }
            }
        }
    }
}
return false;});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
dir = combinator.dir;
skip = combinator.next;
key = skip || dir;
checkNonElements = base && key === 'parentNode';
doneName = done++;
return combinator.first ? function (elem, context, xml) {
    while (elem = elem[dir]) {
        if (elem.nodeType === 1 || checkNonElements) {
            return matcher(elem, context, xml);
        }
    }
    return false;
} : function (elem, context, xml) {
    var oldCache, uniqueCache, outerCache, newCache = [
            dirruns,
            doneName
        ];
    if (xml) {
        while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
                if (matcher(elem, context, xml)) {
                    return true;
                }
            }
        }
    } else {
        while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
                outerCache = elem[expando] || (elem[expando] = {});
                uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
                if (skip && skip === elem.nodeName.toLowerCase()) {
                    elem = elem[dir] || elem;
                } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                    return newCache[2] = oldCache[2];
                } else {
                    uniqueCache[key] = newCache;
                    if (newCache[2] = matcher(elem, context, xml)) {
                        return true;
                    }
                }
            }
        }
    }
    return false;
};});
    elementMatcher = ($__.fs.elementMatcher_105 = function elementMatcher(matchers) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
matchers = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return matchers.length > 1 ? function (elem, context, xml) {
    var i = matchers.length;
    while (i--) {
        if (!matchers[i](elem, context, xml)) {
            return false;
        }
    }
    return true;
} : matchers[0];});
    multipleContexts = ($__.fs.multipleContexts_106 = function multipleContexts(selector, contexts, results) {
var vvv_return, vvv_switch, i, len;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], contexts = arguments[1], results = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
len = contexts.length;
for (; i < len; i++) {
    Sizzle(selector, contexts[i], results);
}
return results;});
    condense = ($__.fs.condense_107 = function condense(unmatched, map, filter, context, xml) {
var vvv_return, vvv_switch, elem, newUnmatched, i, len, mapped;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
unmatched = arguments[0], map = arguments[1], filter = arguments[2], context = arguments[3], xml = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
newUnmatched = [];
i = 0;
len = unmatched.length;
mapped = map != null;
for (; i < len; i++) {
    if (elem = unmatched[i]) {
        if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);
            if (mapped) {
                map.push(i);
            }
        }
    }
}
return newUnmatched;});
    setMatcher = ($__.fs.setMatcher_108 = function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
preFilter = arguments[0], selector = arguments[1], matcher = arguments[2], postFilter = arguments[3], postFinder = arguments[4], postSelector = arguments[5];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (postFilter && !postFilter[expando]) {
    postFilter = setMatcher(postFilter);
}
if (postFinder && !postFinder[expando]) {
    postFinder = setMatcher(postFinder, postSelector);
}
return markFunction(function (seed, results, context, xml) {
    var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []), matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
    if (matcher) {
        matcher(matcherIn, matcherOut, context, xml);
    }
    if (postFilter) {
        temp = condense(matcherOut, postMap);
        postFilter(temp, [], context, xml);
        i = temp.length;
        while (i--) {
            if (elem = temp[i]) {
                matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
            }
        }
    }
    if (seed) {
        if (postFinder || preFilter) {
            if (postFinder) {
                temp = [];
                i = matcherOut.length;
                while (i--) {
                    if (elem = matcherOut[i]) {
                        temp.push(matcherIn[i] = elem);
                    }
                }
                postFinder(null, matcherOut = [], temp, xml);
            }
            i = matcherOut.length;
            while (i--) {
                if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                    seed[temp] = !(results[temp] = elem);
                }
            }
        }
    } else {
        matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
        if (postFinder) {
            postFinder(null, results, matcherOut, xml);
        } else {
            push.apply(results, matcherOut);
        }
    }
});});
    matcherFromTokens = ($__.fs.matcherFromTokens_109 = function matcherFromTokens(tokens) {
var vvv_return, vvv_switch, checkContext, matcher, j, len, leadingRelative, implicitRelative, i, matchContext, matchAnyContext, matchers;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
tokens = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = tokens.length;
leadingRelative = Expr.relative[tokens[0].type];
implicitRelative = leadingRelative || Expr.relative[' '];
i = leadingRelative ? 1 : 0;
matchContext = addCombinator(function (elem) {
    return elem === checkContext;
}, implicitRelative, true);
matchAnyContext = addCombinator(function (elem) {
    return indexOf(checkContext, elem) > -1;
}, implicitRelative, true);
matchers = [function (elem, context, xml) {
        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
        checkContext = null;
        return ret;
    }];
for (; i < len; i++) {
    if (matcher = Expr.relative[tokens[i].type]) {
        matchers = [addCombinator(elementMatcher(matchers), matcher)];
    } else {
        matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
        if (matcher[expando]) {
            j = ++i;
            for (; j < len; j++) {
                if (Expr.relative[tokens[j].type]) {
                    break;
                }
            }
            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({
                value: tokens[i - 2].type === ' ' ? '*' : ''
            })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
        }
        matchers.push(matcher);
    }
}
return elementMatcher(matchers);});
    matcherFromGroupMatchers = ($__.fs.matcherFromGroupMatchers_110 = function matcherFromGroupMatchers(elementMatchers, setMatchers) {
var vvv_return, vvv_switch, bySet, byElement, superMatcher;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elementMatchers = arguments[0], setMatchers = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
bySet = setMatchers.length > 0;
byElement = elementMatchers.length > 0;
superMatcher = function (seed, context, xml, results, outermost) {
    var elem, j, matcher, matchedCount = 0, i = '0', unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find['TAG']('*', outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
    if (outermost) {
        outermostContext = context === document || context || outermost;
    }
    for (; i !== len && (elem = elems[i]) != null; i++) {
        if (byElement && elem) {
            j = 0;
            if (!context && elem.ownerDocument !== document) {
                setDocument(elem);
                xml = !documentIsHTML;
            }
            while (matcher = elementMatchers[j++]) {
                if (matcher(elem, context || document, xml)) {
                    results.push(elem);
                    break;
                }
            }
            if (outermost) {
                dirruns = dirrunsUnique;
            }
        }
        if (bySet) {
            if (elem = !matcher && elem) {
                matchedCount--;
            }
            if (seed) {
                unmatched.push(elem);
            }
        }
    }
    matchedCount += i;
    if (bySet && i !== matchedCount) {
        j = 0;
        while (matcher = setMatchers[j++]) {
            matcher(unmatched, setMatched, context, xml);
        }
        if (seed) {
            if (matchedCount > 0) {
                while (i--) {
                    if (!(unmatched[i] || setMatched[i])) {
                        setMatched[i] = pop.call(results);
                    }
                }
            }
            setMatched = condense(setMatched);
        }
        push.apply(results, setMatched);
        if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
            Sizzle.uniqueSort(results);
        }
    }
    if (outermost) {
        dirruns = dirrunsUnique;
        outermostContext = contextBackup;
    }
    return unmatched;
};
return bySet ? markFunction(superMatcher) : superMatcher;});
    expando = 'sizzle' + 1 * new Date(1493925426258);
    preferredDoc = TAJS_restrictToType(window.document, 'HTMLDocument');
    dirruns = 0;
    done = 0;
    classCache = (createCache, $__.fs.createCache_92)(0, true, $__.uid);
    tokenCache = (createCache, $__.fs.createCache_92)(1, true, $__.uid);
    compilerCache = (createCache, $__.fs.createCache_92)(2, true, $__.uid);
    sortOrder = ($__.fs.J$__v5960504135_75_114 = function J$__v5960504135_75(a, b) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
a = arguments[0], b = arguments[1];
switch (vvv_switch) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
case 8:
case 9:
case 10:
case 11:
case 12:
case 13:
case 14:
case 15:
case 16:
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 17);
    a === b;
    return 0;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (a === b) {
    hasDuplicate = true;
}
return 0;}, $__.fs.J$__v5960504135_75_114_10 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v5960504135_75(a, b) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v5960504135_75, -2);
    return J$__v5960504135_75;
})($__.fs.J$__v5960504135_75_114, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], false)), $__.fs.J$__v5960504135_75_114);
    hasOwn = TAJS_restrictToType(($__.os.oid4 = {}, $__.os.oid4).hasOwnProperty, 'function');
    arr = [];
    pop = TAJS_restrictToType(arr.pop, 'function');
    push_native = TAJS_restrictToType(arr.push, 'function');
    push = TAJS_restrictToType(arr.push, 'function');
    slice = TAJS_restrictToType(arr.slice, 'function');
    indexOf = ($__.fs.J$__v5960504135_77_115 = function J$__v5960504135_77(list, elem) {
var vvv_return, vvv_switch, i, len;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
list = arguments[0], elem = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
len = list.length;
for (; i < len; i++) {
    if (list[i] === elem) {
        return i;
    }
}
return -1;});
    booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped';
    whitespace = '[\\x20\\t\\r\\n\\f]';
    identifier = '(?:\\\\.|[\\w-]|[^\0-\\xa0])+';
    attributes = '\\[' + whitespace + '*(' + identifier + ')(?:' + whitespace + '*([*^$|!~]?=)' + whitespace + '*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' + identifier + '))|)' + whitespace + '*\\]';
    pseudos = ':(' + identifier + ')(?:\\((' + '(\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|' + '((?:\\\\.|[^\\\\()[\\]]|' + attributes + ')*)|' + '.*' + ')\\)|)';
    rwhitespace = new RegExp(whitespace + '+', 'g');
    rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\])(?:\\\\.)*)' + whitespace + '+$', 'g');
    rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*');
    rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*');
    rattributeQuotes = new RegExp('=' + whitespace + '*([^\\]\'"]*?)' + whitespace + '*\\]', 'g');
    rpseudo = new RegExp(pseudos);
    ridentifier = new RegExp('^' + identifier + '$');
    matchExpr = $__.os.oid5 = {
        'ID': new RegExp('^#(' + identifier + ')'),
        'CLASS': new RegExp('^\\.(' + identifier + ')'),
        'TAG': new RegExp('^(' + identifier + '|[*])'),
        'ATTR': new RegExp('^' + attributes),
        'PSEUDO': new RegExp('^' + pseudos),
        'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' + whitespace + '*(even|odd|(([+-]|)(\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\d+)|))' + whitespace + '*\\)|)', 'i'),
        'bool': new RegExp('^(?:' + booleans + ')$', 'i'),
        'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' + whitespace + '*((?:-\\d)?\\d*)' + whitespace + '*\\)|)(?=[^-]|$)', 'i')
    };
    rinputs = /^(?:input|select|textarea|button)$/i;
    rheader = /^h\d$/i;
    rnative = /^[^{]+\{\s*\[native \w/;
    rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/;
    rsibling = /[+~]/;
    runescape = new RegExp('\\\\([\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig');
    funescape = ($__.fs.J$__v5960504135_79_116 = function J$__v5960504135_79(_, escaped, escapedWhitespace) {
var vvv_return, vvv_switch, high;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], escaped = arguments[1], escapedWhitespace = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
high = '0x' + escaped - 65536;
return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);});
    rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g;
    fcssescape = ($__.fs.J$__v5960504135_81_117 = function J$__v5960504135_81(ch, asCodePoint) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ch = arguments[0], asCodePoint = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (asCodePoint) {
    if (ch === '\0') {
        return '\uFFFD';
    }
    return ch.slice(0, -1) + '\\' + ch.charCodeAt(ch.length - 1).toString(16) + ' ';
}
return '\\' + ch;});
    unloadHandler = ($__.fs.J$__v5960504135_83_118 = function J$__v5960504135_83() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
setDocument();});
    disabledAncestor = (addCombinator, $__.fs.addCombinator_104)(($__.fs.J$__v5960504135_85_119 = function J$__v5960504135_85(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return elem.disabled === true && ('form' in elem || 'label' in elem);}), $__.os.oid6 = {
        'dir': 'parentNode',
        'next': 'legend'
    }, 0, true, $__.uid);
    push['call'](arr = function $__lt1(res) {
        res.length = 2;
        if (res.length != 2)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt1, -2);
    }(slice['call'](TAJS_restrictToType(preferredDoc.childNodes, 'object'))), (vvv_tmp0 = TAJS_restrictToType(preferredDoc.childNodes, 'object'), vvv_tmp0[0]), vvv_tmp0[1]);
    TAJS_restrictToType(arr[(TAJS_restrictToType(preferredDoc.childNodes, 'object').length, 2), 2], 'DocumentType').nodeType, 10;
    support = Sizzle.support = $__.os.oid7 = {};
    isXML = Sizzle.isXML = ($__.fs.J$__v5960504135_113_121 = function J$__v5960504135_113(elem) {
var vvv_return, vvv_switch, documentElement;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    documentElement = (elem, TAJS_restrictToType(((elem.ownerDocument, null), elem).documentElement, 'HTMLHtmlElement'));
    return documentElement, TAJS_restrictToType(documentElement.nodeName, 'string') !== 'HTML';
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
documentElement = elem && (elem.ownerDocument || elem).documentElement;
return documentElement ? documentElement.nodeName !== 'HTML' : false;});
    setDocument = Sizzle.setDocument = ($__.fs.J$__v5960504135_153_122 = function J$__v5960504135_153(node) {
var vvv_return, vvv_switch, hasCompare, subWindow, doc;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
node = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    doc = (node, preferredDoc);
    (doc === document, (doc.nodeType, 9) !== 9), !TAJS_restrictToType(doc.documentElement, 'HTMLHtmlElement');
    document = doc;
    docElem = TAJS_restrictToType(document.documentElement, 'HTMLHtmlElement');
    documentIsHTML = !(isXML, $__.fs.J$__v5960504135_113_121)(document, 0, true, $__.uid);
    preferredDoc !== document;
    (support, $__.os.oid7).attributes = (assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_115_180 = function J$__v5960504135_115(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    el.className = 'i';
    return !el['getAttribute']('className');
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
el.className = 'i';
return !el.getAttribute('className');}), 0, true, $__.uid);
    (support, $__.os.oid7).getElementsByTagName = (assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_117_181 = function J$__v5960504135_117(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    el['appendChild'](document['createComment'](''));
    return !(el['getElementsByTagName']('*').length, 0);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
el.appendChild(document.createComment(''));
return !el.getElementsByTagName('*').length;}), 1, true, $__.uid);
    (support, $__.os.oid7).getElementsByClassName = rnative['test'](TAJS_restrictToType(document.getElementsByClassName, 'function'));
    (support, $__.os.oid7).getById = (assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_119_182 = function J$__v5960504135_119(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    docElem['appendChild'](el).id = expando;
    return !TAJS_restrictToType(document.getElementsByName, 'function'), !(document['getElementsByName'](expando).length, 0);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
docElem.appendChild(el).id = expando;
return !document.getElementsByName || !document.getElementsByName(expando).length;}), 2, true, $__.uid);
    (support, $__.os.oid7).getById, true;
    (((Expr, $__.os.oid18).filter, $__.os.oid16), $__.os.oid16)['ID', 'ID'] = ($__.fs.J$__v5960504135_123_183 = function J$__v5960504135_123(id) {
var vvv_return, vvv_switch, attrId;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
id = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
attrId = id.replace(runescape, funescape);
return function (elem) {
    return elem.getAttribute('id') === attrId;
};});
    (((Expr, $__.os.oid18).find, $__.os.oid9), $__.os.oid9)['ID', 'ID'] = ($__.fs.J$__v5960504135_125_184 = function J$__v5960504135_125(id, context) {
var vvv_return, vvv_switch, elem;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
id = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof context.getElementById !== 'undefined' && documentIsHTML) {
    elem = context.getElementById(id);
    return elem ? [elem] : [];
}});
    (((Expr, $__.os.oid18).find, $__.os.oid9), $__.os.oid9)['TAG', 'TAG'] = (((support, $__.os.oid7).getElementsByTagName, true), ($__.fs.J$__v5960504135_133_185 = function J$__v5960504135_133(tag, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
tag = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof context.getElementsByTagName !== 'undefined') {
    return context.getElementsByTagName(tag);
} else if (support.qsa) {
    return context.querySelectorAll(tag);
}}));
    (((Expr, $__.os.oid18).find, $__.os.oid9), $__.os.oid9)['CLASS', 'CLASS'] = (((support, $__.os.oid7).getElementsByClassName, true), ($__.fs.J$__v5960504135_137_186 = function J$__v5960504135_137(className, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
className = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {
    return context.getElementsByClassName(className);
}}));
    rbuggyMatches = [];
    rbuggyQSA = [];
    (support, $__.os.oid7).qsa = rnative['test'](TAJS_restrictToType(document.querySelectorAll, 'function'));
    (assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_139_187 = function J$__v5960504135_139(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    docElem['appendChild'](el).innerHTML = '<a id=\'' + expando + '\'></a>' + '<select id=\'' + expando + '-\r\\\' msallowcapture=\'\'>' + '<option selected=\'\'></option></select>';
    el['querySelectorAll']('[msallowcapture^=\'\']').length, 0;
    !(el['querySelectorAll']('[selected]').length, 1);
    !(el['querySelectorAll']('[id~=' + expando + '-]').length, 1);
    !(el['querySelectorAll'](':checked').length, 1);
    !(el['querySelectorAll']('a#' + expando + '+*').length, 1);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
docElem.appendChild(el).innerHTML = '<a id=\'' + expando + '\'></a>' + '<select id=\'' + expando + '-\r\\\' msallowcapture=\'\'>' + '<option selected=\'\'></option></select>';
if (el.querySelectorAll('[msallowcapture^=\'\']').length) {
    rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\'\'|"")');
}
if (!el.querySelectorAll('[selected]').length) {
    rbuggyQSA.push('\\[' + whitespace + '*(?:value|' + booleans + ')');
}
if (!el.querySelectorAll('[id~=' + expando + '-]').length) {
    rbuggyQSA.push('~=');
}
if (!el.querySelectorAll(':checked').length) {
    rbuggyQSA.push(':checked');
}
if (!el.querySelectorAll('a#' + expando + '+*').length) {
    rbuggyQSA.push('.#.+[+~]');
}}), 3, true, $__.uid);
    (assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_141_188 = function J$__v5960504135_141(el) {
var vvv_return, vvv_switch, input;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    el.innerHTML = '<a href=\'\' disabled=\'disabled\'></a>' + '<select disabled=\'disabled\'><option/></select>';
    input = document['createElement']('input');
    input['setAttribute']('type', 'hidden');
    el['appendChild'](input)['setAttribute']('name', 'D');
    el['querySelectorAll']('[name=d]').length, 0;
    (el['querySelectorAll'](':enabled').length, 3) !== 2;
    rbuggyQSA['push'](':enabled', ':disabled');
    docElem['appendChild'](el).disabled = true;
    (el['querySelectorAll'](':disabled').length, 2) !== 2;
    el['querySelectorAll']('*,:x');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
el.innerHTML = '<a href=\'\' disabled=\'disabled\'></a>' + '<select disabled=\'disabled\'><option/></select>';
input = document.createElement('input');
input.setAttribute('type', 'hidden');
el.appendChild(input).setAttribute('name', 'D');
if (el.querySelectorAll('[name=d]').length) {
    rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');
}
if (el.querySelectorAll(':enabled').length !== 2) {
    rbuggyQSA.push(':enabled', ':disabled');
}
docElem.appendChild(el).disabled = true;
if (el.querySelectorAll(':disabled').length !== 2) {
    rbuggyQSA.push(':enabled', ':disabled');
}
el.querySelectorAll('*,:x');
rbuggyQSA.push(',.*:');}), 4, true, $__.uid);
    (support, $__.os.oid7).matchesSelector = rnative['test'](matches = TAJS_restrictToType(docElem.matches, 'function'));
    (assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_143_189 = function J$__v5960504135_143(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (support, $__.os.oid7).disconnectedMatch = matches['call'](el, '*');
    matches['call'](el, '[s!=\'\']:x');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
support.disconnectedMatch = matches.call(el, '*');
matches.call(el, '[s!=\'\']:x');
rbuggyMatches.push('!=', pseudos);}), 5, true, $__.uid);
    rbuggyQSA = ((rbuggyQSA.length, 2), new RegExp(rbuggyQSA['join']('|')));
    rbuggyMatches = (rbuggyMatches.length, 0);
    hasCompare = rnative['test'](TAJS_restrictToType(docElem.compareDocumentPosition, 'function'));
    contains = (hasCompare, ($__.fs.J$__v5960504135_145_190 = function J$__v5960504135_145(a, b) {
var vvv_return, vvv_switch, adown, bup;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
a = arguments[0], b = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
adown = a.nodeType === 9 ? a.documentElement : a;
bup = b && b.parentNode;
return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));}));
    sortOrder = (hasCompare, ($__.fs.J$__v5960504135_149_191 = function J$__v5960504135_149(a, b) {
var vvv_return, vvv_switch, compare;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
a = arguments[0], b = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (a === b) {
    hasDuplicate = true;
    return 0;
}
compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
if (compare) {
    return compare;
}
compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
    if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
        return -1;
    }
    if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
        return 1;
    }
    return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
}
return compare & 4 ? -1 : 1;}));
    return document;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
doc = node ? node.ownerDocument || node : preferredDoc;
if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
    return document;
}
document = doc;
docElem = document.documentElement;
documentIsHTML = !isXML(document);
if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {
    if (subWindow.addEventListener) {
        subWindow.addEventListener('unload', unloadHandler, false);
    } else if (subWindow.attachEvent) {
        subWindow.attachEvent('onunload', unloadHandler);
    }
}
support.attributes = assert(function (el) {
    el.className = 'i';
    return !el.getAttribute('className');
});
support.getElementsByTagName = assert(function (el) {
    el.appendChild(document.createComment(''));
    return !el.getElementsByTagName('*').length;
});
support.getElementsByClassName = rnative.test(document.getElementsByClassName);
support.getById = assert(function (el) {
    docElem.appendChild(el).id = expando;
    return !document.getElementsByName || !document.getElementsByName(expando).length;
});
if (support.getById) {
    Expr.filter['ID'] = function (id) {
        var attrId = id.replace(runescape, funescape);
        return function (elem) {
            return elem.getAttribute('id') === attrId;
        };
    };
    Expr.find['ID'] = function (id, context) {
        if (typeof context.getElementById !== 'undefined' && documentIsHTML) {
            var elem = context.getElementById(id);
            return elem ? [elem] : [];
        }
    };
} else {
    Expr.filter['ID'] = function (id) {
        var attrId = id.replace(runescape, funescape);
        return function (elem) {
            var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id');
            return node && node.value === attrId;
        };
    };
    Expr.find['ID'] = function (id, context) {
        if (typeof context.getElementById !== 'undefined' && documentIsHTML) {
            var node, i, elems, elem = context.getElementById(id);
            if (elem) {
                node = elem.getAttributeNode('id');
                if (node && node.value === id) {
                    return [elem];
                }
                elems = context.getElementsByName(id);
                i = 0;
                while (elem = elems[i++]) {
                    node = elem.getAttributeNode('id');
                    if (node && node.value === id) {
                        return [elem];
                    }
                }
            }
            return [];
        }
    };
}
Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {
    if (typeof context.getElementsByTagName !== 'undefined') {
        return context.getElementsByTagName(tag);
    } else if (support.qsa) {
        return context.querySelectorAll(tag);
    }
} : function (tag, context) {
    var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
    if (tag === '*') {
        while (elem = results[i++]) {
            if (elem.nodeType === 1) {
                tmp.push(elem);
            }
        }
        return tmp;
    }
    return results;
};
Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {
    if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {
        return context.getElementsByClassName(className);
    }
};
rbuggyMatches = [];
rbuggyQSA = [];
if (support.qsa = rnative.test(document.querySelectorAll)) {
    assert(function (el) {
        docElem.appendChild(el).innerHTML = '<a id=\'' + expando + '\'></a>' + '<select id=\'' + expando + '-\r\\\' msallowcapture=\'\'>' + '<option selected=\'\'></option></select>';
        if (el.querySelectorAll('[msallowcapture^=\'\']').length) {
            rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\'\'|"")');
        }
        if (!el.querySelectorAll('[selected]').length) {
            rbuggyQSA.push('\\[' + whitespace + '*(?:value|' + booleans + ')');
        }
        if (!el.querySelectorAll('[id~=' + expando + '-]').length) {
            rbuggyQSA.push('~=');
        }
        if (!el.querySelectorAll(':checked').length) {
            rbuggyQSA.push(':checked');
        }
        if (!el.querySelectorAll('a#' + expando + '+*').length) {
            rbuggyQSA.push('.#.+[+~]');
        }
    });
    assert(function (el) {
        el.innerHTML = '<a href=\'\' disabled=\'disabled\'></a>' + '<select disabled=\'disabled\'><option/></select>';
        var input = document.createElement('input');
        input.setAttribute('type', 'hidden');
        el.appendChild(input).setAttribute('name', 'D');
        if (el.querySelectorAll('[name=d]').length) {
            rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');
        }
        if (el.querySelectorAll(':enabled').length !== 2) {
            rbuggyQSA.push(':enabled', ':disabled');
        }
        docElem.appendChild(el).disabled = true;
        if (el.querySelectorAll(':disabled').length !== 2) {
            rbuggyQSA.push(':enabled', ':disabled');
        }
        el.querySelectorAll('*,:x');
        rbuggyQSA.push(',.*:');
    });
}
if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
    assert(function (el) {
        support.disconnectedMatch = matches.call(el, '*');
        matches.call(el, '[s!=\'\']:x');
        rbuggyMatches.push('!=', pseudos);
    });
}
rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));
rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));
hasCompare = rnative.test(docElem.compareDocumentPosition);
contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
    var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;
    return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
} : function (a, b) {
    if (b) {
        while (b = b.parentNode) {
            if (b === a) {
                return true;
            }
        }
    }
    return false;
};
sortOrder = hasCompare ? function (a, b) {
    if (a === b) {
        hasDuplicate = true;
        return 0;
    }
    var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
    if (compare) {
        return compare;
    }
    compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
    if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
        if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
            return -1;
        }
        if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
            return 1;
        }
        return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
    }
    return compare & 4 ? -1 : 1;
} : function (a, b) {
    if (a === b) {
        hasDuplicate = true;
        return 0;
    }
    var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];
    if (!aup || !bup) {
        return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
    } else if (aup === bup) {
        return siblingCheck(a, b);
    }
    cur = a;
    while (cur = cur.parentNode) {
        ap.unshift(cur);
    }
    cur = b;
    while (cur = cur.parentNode) {
        bp.unshift(cur);
    }
    while (ap[i] === bp[i]) {
        i++;
    }
    return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
};
return document;});
    Sizzle.matches = ($__.fs.J$__v5960504135_155_123 = function J$__v5960504135_155(expr, elements) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
expr = arguments[0], elements = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return Sizzle(expr, null, null, elements);});
    Sizzle.matchesSelector = ($__.fs.J$__v5960504135_157_124 = function J$__v5960504135_157(elem, expr) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], expr = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((elem.ownerDocument || elem) !== document) {
    setDocument(elem);
}
expr = expr.replace(rattributeQuotes, '=\'$1\']');
if (support.matchesSelector && documentIsHTML && !compilerCache[expr + ' '] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
    try {
        ret = matches.call(elem, expr);
        if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
            return ret;
        }
    } catch (e) {
    }
}
return Sizzle(expr, document, null, [elem]).length > 0;});
    Sizzle.contains = ($__.fs.J$__v5960504135_159_125 = function J$__v5960504135_159(context, elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0], elem = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((context.ownerDocument || context) !== document) {
    setDocument(context);
}
return contains(context, elem);});
    Sizzle.attr = ($__.fs.J$__v5960504135_161_126 = function J$__v5960504135_161(elem, name) {
var vvv_return, vvv_switch, fn, val;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((elem.ownerDocument || elem) !== document) {
    setDocument(elem);
}
fn = Expr.attrHandle[name.toLowerCase()];
val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;});
    Sizzle.escape = ($__.fs.J$__v5960504135_163_127 = function J$__v5960504135_163(sel) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
sel = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (sel + '').replace(rcssescape, fcssescape);});
    Sizzle.error = ($__.fs.J$__v5960504135_165_128 = function J$__v5960504135_165(msg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
msg = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
throw new Error('Syntax error, unrecognized expression: ' + msg);});
    Sizzle.uniqueSort = ($__.fs.J$__v5960504135_167_129 = function J$__v5960504135_167(results) {
var vvv_return, vvv_switch, elem, duplicates, j, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
results = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
duplicates = [];
j = 0;
i = 0;
hasDuplicate = !support.detectDuplicates;
sortInput = !support.sortStable && results.slice(0);
results.sort(sortOrder);
if (hasDuplicate) {
    while (elem = results[i++]) {
        if (elem === results[i]) {
            j = duplicates.push(i);
        }
    }
    while (j--) {
        results.splice(duplicates[j], 1);
    }
}
sortInput = null;
return results;});
    getText = Sizzle.getText = ($__.fs.J$__v5960504135_169_130 = function J$__v5960504135_169(elem) {
var vvv_return, vvv_switch, node, ret, i, nodeType;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = '';
i = 0;
nodeType = elem.nodeType;
if (!nodeType) {
    while (node = elem[i++]) {
        ret += getText(node);
    }
} else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
    if (typeof elem.textContent === 'string') {
        return elem.textContent;
    } else {
        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            ret += getText(elem);
        }
    }
} else if (nodeType === 3 || nodeType === 4) {
    return elem.nodeValue;
}
return ret;});
    Expr = Sizzle.selectors = $__.os.oid18 = {
        'cacheLength': 50,
        'createPseudo': markFunction,
        'match': matchExpr,
        'attrHandle': $__.os.oid8 = {},
        'find': $__.os.oid9 = {},
        'relative': $__.os.oid14 = {
            '>': $__.os.oid10 = {
                'dir': 'parentNode',
                'first': true
            },
            ' ': $__.os.oid11 = {
                'dir': 'parentNode'
            },
            '+': $__.os.oid12 = {
                'dir': 'previousSibling',
                'first': true
            },
            '~': $__.os.oid13 = {
                'dir': 'previousSibling'
            }
        },
        'preFilter': $__.os.oid15 = {
            'ATTR': ($__.fs.J$__v5960504135_171_131 = function J$__v5960504135_171(match) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
match = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
match[1] = match[1].replace(runescape, funescape);
match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape);
if (match[2] === '~=') {
    match[3] = ' ' + match[3] + ' ';
}
return match.slice(0, 4);}),
            'CHILD': ($__.fs.J$__v5960504135_173_132 = function J$__v5960504135_173(match) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
match = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
match[1] = match[1].toLowerCase();
if (match[1].slice(0, 3) === 'nth') {
    if (!match[3]) {
        Sizzle.error(match[0]);
    }
    match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));
    match[5] = +(match[7] + match[8] || match[3] === 'odd');
} else if (match[3]) {
    Sizzle.error(match[0]);
}
return match;}),
            'PSEUDO': ($__.fs.J$__v5960504135_175_133 = function J$__v5960504135_175(match) {
var vvv_return, vvv_switch, excess, unquoted;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
match = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
unquoted = !match[6] && match[2];
if (matchExpr['CHILD'].test(match[0])) {
    return null;
}
if (match[3]) {
    match[2] = match[4] || match[5] || '';
} else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {
    match[0] = match[0].slice(0, excess);
    match[2] = unquoted.slice(0, excess);
}
return match.slice(0, 3);})
        },
        'filter': $__.os.oid16 = {
            'TAG': ($__.fs.J$__v5960504135_181_134 = function J$__v5960504135_181(nodeNameSelector) {
var vvv_return, vvv_switch, nodeName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
nodeNameSelector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
return nodeNameSelector === '*' ? function () {
    return true;
} : function (elem) {
    return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
};}),
            'CLASS': ($__.fs.J$__v5960504135_185_135 = function J$__v5960504135_185(className) {
var vvv_return, vvv_switch, pattern;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
className = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
pattern = classCache[className + ' '];
return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {
    return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');
});}),
            'ATTR': ($__.fs.J$__v5960504135_189_136 = function J$__v5960504135_189(name, operator, check) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], operator = arguments[1], check = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (elem) {
    var result = Sizzle.attr(elem, name);
    if (result == null) {
        return operator === '!=';
    }
    if (!operator) {
        return true;
    }
    result += '';
    return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;
};}),
            'CHILD': ($__.fs.J$__v5960504135_195_137 = function J$__v5960504135_195(type, what, argument, first, last) {
var vvv_return, vvv_switch, simple, forward, ofType;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0], what = arguments[1], argument = arguments[2], first = arguments[3], last = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
simple = type.slice(0, 3) !== 'nth';
forward = type.slice(-4) !== 'last';
ofType = what === 'of-type';
return first === 1 && last === 0 ? function (elem) {
    return !!elem.parentNode;
} : function (elem, context, xml) {
    var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
    if (parent) {
        if (simple) {
            while (dir) {
                node = elem;
                while (node = node[dir]) {
                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                        return false;
                    }
                }
                start = dir = type === 'only' && !start && 'nextSibling';
            }
            return true;
        }
        start = [forward ? parent.firstChild : parent.lastChild];
        if (forward && useCache) {
            node = parent;
            outerCache = node[expando] || (node[expando] = {});
            uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
            cache = uniqueCache[type] || [];
            nodeIndex = cache[0] === dirruns && cache[1];
            diff = nodeIndex && cache[2];
            node = nodeIndex && parent.childNodes[nodeIndex];
            while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                if (node.nodeType === 1 && ++diff && node === elem) {
                    uniqueCache[type] = [
                        dirruns,
                        nodeIndex,
                        diff
                    ];
                    break;
                }
            }
        } else {
            if (useCache) {
                node = elem;
                outerCache = node[expando] || (node[expando] = {});
                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                cache = uniqueCache[type] || [];
                nodeIndex = cache[0] === dirruns && cache[1];
                diff = nodeIndex;
            }
            if (diff === false) {
                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                        if (useCache) {
                            outerCache = node[expando] || (node[expando] = {});
                            uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                            uniqueCache[type] = [
                                dirruns,
                                diff
                            ];
                        }
                        if (node === elem) {
                            break;
                        }
                    }
                }
            }
        }
        diff -= last;
        return diff === first || diff % first === 0 && diff / first >= 0;
    }
};}),
            'PSEUDO': ($__.fs.J$__v5960504135_201_138 = function J$__v5960504135_201(pseudo, argument) {
var vvv_return, vvv_switch, args, fn;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
pseudo = arguments[0], argument = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);
if (fn[expando]) {
    return fn(argument);
}
if (fn.length > 1) {
    args = [
        pseudo,
        pseudo,
        '',
        argument
    ];
    return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
        var idx, matched = fn(seed, argument), i = matched.length;
        while (i--) {
            idx = indexOf(seed, matched[i]);
            seed[idx] = !(matches[idx] = matched[i]);
        }
    }) : function (elem) {
        return fn(elem, 0, args);
    };
}
return fn;})
        },
        'pseudos': $__.os.oid17 = {
            'not': (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_207_139 = function J$__v5960504135_207(selector) {
var vvv_return, vvv_switch, input, results, matcher;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
input = [];
results = [];
matcher = compile(selector.replace(rtrim, '$1'));
return matcher[expando] ? markFunction(function (seed, matches, context, xml) {
    var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;
    while (i--) {
        if (elem = unmatched[i]) {
            seed[i] = !(matches[i] = elem);
        }
    }
}) : function (elem, context, xml) {
    input[0] = elem;
    matcher(input, null, xml, results);
    input[0] = null;
    return !results.pop();
};}), 0, true, $__.uid),
            'has': (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_211_140 = function J$__v5960504135_211(selector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (elem) {
    return Sizzle(selector, elem).length > 0;
};}), 1, true, $__.uid),
            'contains': (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_215_141 = function J$__v5960504135_215(text) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
text = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
text = text.replace(runescape, funescape);
return function (elem) {
    return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
};}), 2, true, $__.uid),
            'lang': (markFunction, $__.fs.markFunction_93)(($__.fs.J$__v5960504135_219_142 = function J$__v5960504135_219(lang) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
lang = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!ridentifier.test(lang || '')) {
    Sizzle.error('unsupported lang: ' + lang);
}
lang = lang.replace(runescape, funescape).toLowerCase();
return function (elem) {
    var elemLang;
    do {
        if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {
            elemLang = elemLang.toLowerCase();
            return elemLang === lang || elemLang.indexOf(lang + '-') === 0;
        }
    } while ((elem = elem.parentNode) && elem.nodeType === 1);
    return false;
};}), 3, true, $__.uid),
            'target': ($__.fs.J$__v5960504135_221_143 = function J$__v5960504135_221(elem) {
var vvv_return, vvv_switch, hash;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
hash = window.location && window.location.hash;
return hash && hash.slice(1) === elem.id;}),
            'root': ($__.fs.J$__v5960504135_223_144 = function J$__v5960504135_223(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return elem === docElem;}),
            'focus': ($__.fs.J$__v5960504135_225_145 = function J$__v5960504135_225(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);}),
            'enabled': (createDisabledPseudo, $__.fs.createDisabledPseudo_99)(false, 0, true, $__.uid),
            'disabled': (createDisabledPseudo, $__.fs.createDisabledPseudo_99)(true, 1, true, $__.uid),
            'checked': ($__.fs.J$__v5960504135_227_148 = function J$__v5960504135_227(elem) {
var vvv_return, vvv_switch, nodeName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
nodeName = elem.nodeName.toLowerCase();
return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;}),
            'selected': ($__.fs.J$__v5960504135_229_149 = function J$__v5960504135_229(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (elem.parentNode) {
    elem.parentNode.selectedIndex;
}
return elem.selected === true;}),
            'empty': ($__.fs.J$__v5960504135_231_150 = function J$__v5960504135_231(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
    if (elem.nodeType < 6) {
        return false;
    }
}
return true;}),
            'parent': ($__.fs.J$__v5960504135_233_151 = function J$__v5960504135_233(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !Expr.pseudos['empty'](elem);}),
            'header': ($__.fs.J$__v5960504135_235_152 = function J$__v5960504135_235(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return rheader.test(elem.nodeName);}),
            'input': ($__.fs.J$__v5960504135_237_153 = function J$__v5960504135_237(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return rinputs.test(elem.nodeName);}),
            'button': ($__.fs.J$__v5960504135_239_154 = function J$__v5960504135_239(elem) {
var vvv_return, vvv_switch, name;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
name = elem.nodeName.toLowerCase();
return name === 'input' && elem.type === 'button' || name === 'button';}),
            'text': ($__.fs.J$__v5960504135_241_155 = function J$__v5960504135_241(elem) {
var vvv_return, vvv_switch, attr;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text');}),
            'first': (createPositionalPseudo, $__.fs.createPositionalPseudo_100)(($__.fs.J$__v5960504135_243_156 = function J$__v5960504135_243() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return [0];}), 0, true, $__.uid),
            'last': (createPositionalPseudo, $__.fs.createPositionalPseudo_100)(($__.fs.J$__v5960504135_245_158 = function J$__v5960504135_245(matchIndexes, length) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
matchIndexes = arguments[0], length = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return [length - 1];}), 1, true, $__.uid),
            'eq': (createPositionalPseudo, $__.fs.createPositionalPseudo_100)(($__.fs.J$__v5960504135_247_160 = function J$__v5960504135_247(matchIndexes, length, argument) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
matchIndexes = arguments[0], length = arguments[1], argument = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return [argument < 0 ? argument + length : argument];}), 2, true, $__.uid),
            'even': (createPositionalPseudo, $__.fs.createPositionalPseudo_100)(($__.fs.J$__v5960504135_249_162 = function J$__v5960504135_249(matchIndexes, length) {
var vvv_return, vvv_switch, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
matchIndexes = arguments[0], length = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
for (; i < length; i += 2) {
    matchIndexes.push(i);
}
return matchIndexes;}), 3, true, $__.uid),
            'odd': (createPositionalPseudo, $__.fs.createPositionalPseudo_100)(($__.fs.J$__v5960504135_251_164 = function J$__v5960504135_251(matchIndexes, length) {
var vvv_return, vvv_switch, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
matchIndexes = arguments[0], length = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 1;
for (; i < length; i += 2) {
    matchIndexes.push(i);
}
return matchIndexes;}), 4, true, $__.uid),
            'lt': (createPositionalPseudo, $__.fs.createPositionalPseudo_100)(($__.fs.J$__v5960504135_253_166 = function J$__v5960504135_253(matchIndexes, length, argument) {
var vvv_return, vvv_switch, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
matchIndexes = arguments[0], length = arguments[1], argument = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = argument < 0 ? argument + length : argument;
for (; --i >= 0;) {
    matchIndexes.push(i);
}
return matchIndexes;}), 5, true, $__.uid),
            'gt': (createPositionalPseudo, $__.fs.createPositionalPseudo_100)(($__.fs.J$__v5960504135_255_168 = function J$__v5960504135_255(matchIndexes, length, argument) {
var vvv_return, vvv_switch, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
matchIndexes = arguments[0], length = arguments[1], argument = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = argument < 0 ? argument + length : argument;
for (; ++i < length;) {
    matchIndexes.push(i);
}
return matchIndexes;}), 6, true, $__.uid)
        }
    };
    (((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)['nth', 'nth'] = TAJS_restrictToType((((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)['eq', 'eq'], 'function');
    vvv_tmp1 = $__.os.oid19 = {
        'radio': true,
        'checkbox': true,
        'file': true,
        'password': true,
        'image': true
    };
    'radio' in vvv_tmp1;
    i = 'radio';
    (((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)[i, 'radio'] = (createInputPseudo, $__.fs.createInputPseudo_97)(i, 0, true, $__.uid);
    'checkbox' in vvv_tmp1;
    i = 'checkbox';
    (((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)[i, 'checkbox'] = (createInputPseudo, $__.fs.createInputPseudo_97)(i, 1, true, $__.uid);
    'file' in vvv_tmp1;
    i = 'file';
    (((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)[i, 'file'] = (createInputPseudo, $__.fs.createInputPseudo_97)(i, 2, true, $__.uid);
    'password' in vvv_tmp1;
    i = 'password';
    (((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)[i, 'password'] = (createInputPseudo, $__.fs.createInputPseudo_97)(i, 3, true, $__.uid);
    'image' in vvv_tmp1;
    i = 'image';
    (((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)[i, 'image'] = (createInputPseudo, $__.fs.createInputPseudo_97)(i, 4, true, $__.uid);
    vvv_tmp2 = $__.os.oid20 = {
        'submit': true,
        'reset': true
    };
    'submit' in vvv_tmp2;
    i = 'submit';
    (((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)[i, 'submit'] = (createButtonPseudo, $__.fs.createButtonPseudo_98)(i, 0, true, $__.uid);
    'reset' in vvv_tmp2;
    i = 'reset';
    (((Expr, $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17)[i, 'reset'] = (createButtonPseudo, $__.fs.createButtonPseudo_98)(i, 1, true, $__.uid);
    setFilters.prototype = (Expr, $__.os.oid18).filters = ((Expr, $__.os.oid18).pseudos, $__.os.oid17);
    (Expr, $__.os.oid18).setFilters = new (setFilters, $__.fs.setFilters_102)(0, true, $__.uid);
    tokenize = Sizzle.tokenize = ($__.fs.J$__v5960504135_258_177 = function J$__v5960504135_258(selector, parseOnly) {
var vvv_return, vvv_switch, matched, match, tokens, type, soFar, groups, preFilters, cached;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], parseOnly = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
cached = tokenCache[selector + ' '];
if (cached) {
    return parseOnly ? 0 : cached.slice(0);
}
soFar = selector;
groups = [];
preFilters = Expr.preFilter;
while (soFar) {
    if (!matched || (match = rcomma.exec(soFar))) {
        if (match) {
            soFar = soFar.slice(match[0].length) || soFar;
        }
        groups.push(tokens = []);
    }
    matched = false;
    if (match = rcombinators.exec(soFar)) {
        matched = match.shift();
        tokens.push({
            value: matched,
            type: match[0].replace(rtrim, ' ')
        });
        soFar = soFar.slice(matched.length);
    }
    for (type in Expr.filter) {
        if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
            matched = match.shift();
            tokens.push({
                value: matched,
                type: type,
                matches: match
            });
            soFar = soFar.slice(matched.length);
        }
    }
    if (!matched) {
        break;
    }
}
return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);});
    compile = Sizzle.compile = ($__.fs.J$__v5960504135_284_178 = function J$__v5960504135_284(selector, match) {
var vvv_return, vvv_switch, i, setMatchers, elementMatchers, cached;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], match = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
setMatchers = [];
elementMatchers = [];
cached = compilerCache[selector + ' '];
if (!cached) {
    if (!match) {
        match = tokenize(selector);
    }
    i = match.length;
    while (i--) {
        cached = matcherFromTokens(match[i]);
        if (cached[expando]) {
            setMatchers.push(cached);
        } else {
            elementMatchers.push(cached);
        }
    }
    cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
    cached.selector = selector;
}
return cached;});
    select = Sizzle.select = ($__.fs.J$__v5960504135_286_179 = function J$__v5960504135_286(selector, context, results, seed) {
var vvv_return, vvv_switch, i, tokens, token, type, find, compiled, match;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], context = arguments[1], results = arguments[2], seed = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
compiled = typeof selector === 'function' && selector;
match = !seed && tokenize(selector = compiled.selector || selector);
results = results || [];
if (match.length === 1) {
    tokens = match[0] = match[0].slice(0);
    if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
        context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];
        if (!context) {
            return results;
        } else if (compiled) {
            context = context.parentNode;
        }
        selector = selector.slice(tokens.shift().value.length);
    }
    i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;
    while (i--) {
        token = tokens[i];
        if (Expr.relative[type = token.type]) {
            break;
        }
        if (find = Expr.find[type]) {
            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
                tokens.splice(i, 1);
                selector = seed.length && toSelector(tokens);
                if (!selector) {
                    push.apply(results, seed);
                    return results;
                }
                break;
            }
        }
    }
}
(compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
return results;});
    (support, $__.os.oid7).sortStable = function $__lt3(res) {
        res.length = 19;
        if (res.length != 19)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt3, -2);
    }(function $__lt2(res) {
        res.length = 19;
        if (res.length != 19)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt2, -2);
    }(expando['split'](''))['sort'](((sortOrder, $__.fs.J$__v5960504135_75_114), $__.fs.J$__v5960504135_75_114_10)))['join']('') === expando;
    (support, $__.os.oid7).detectDuplicates = !!hasDuplicate;
    (setDocument, $__.fs.J$__v5960504135_153_122)(0, true, $__.uid);
    (support, $__.os.oid7).sortDetached = (assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_288_192 = function J$__v5960504135_288(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return el['compareDocumentPosition'](document['createElement']('fieldset')) & 1;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return el.compareDocumentPosition(document.createElement('fieldset')) & 1;}), 6, true, $__.uid);
    !(assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_290_193 = function J$__v5960504135_290(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    el.innerHTML = '<a href=\'#\'></a>';
    return TAJS_restrictToType(el.firstChild, 'HTMLAnchorElement')['getAttribute']('href') === '#';
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
el.innerHTML = '<a href=\'#\'></a>';
return el.firstChild.getAttribute('href') === '#';}), 7, true, $__.uid);
    !((support, $__.os.oid7).attributes, true), !(assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_294_194 = function J$__v5960504135_294(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    el.innerHTML = '<input/>';
    TAJS_restrictToType(el.firstChild, 'HTMLInputElement')['setAttribute']('value', '');
    return TAJS_restrictToType(el.firstChild, 'HTMLInputElement')['getAttribute']('value') === '';
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
el.innerHTML = '<input/>';
el.firstChild.setAttribute('value', '');
return el.firstChild.getAttribute('value') === '';}), 8, true, $__.uid);
    !(assert, $__.fs.assert_94)(($__.fs.J$__v5960504135_298_195 = function J$__v5960504135_298(el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
el = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return el['getAttribute']('disabled') == null;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return el.getAttribute('disabled') == null;}), 9, true, $__.uid);
    return Sizzle;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
expando = 'sizzle' + 1 * new Date();
preferredDoc = window.document;
dirruns = 0;
done = 0;
classCache = createCache();
tokenCache = createCache();
compilerCache = createCache();
sortOrder = function (a, b) {
    if (a === b) {
        hasDuplicate = true;
    }
    return 0;
};
hasOwn = {}.hasOwnProperty;
arr = [];
pop = arr.pop;
push_native = arr.push;
push = arr.push;
slice = arr.slice;
indexOf = function (list, elem) {
    var i = 0, len = list.length;
    for (; i < len; i++) {
        if (list[i] === elem) {
            return i;
        }
    }
    return -1;
};
booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped';
whitespace = '[\\x20\\t\\r\\n\\f]';
identifier = '(?:\\\\.|[\\w-]|[^\0-\\xa0])+';
attributes = '\\[' + whitespace + '*(' + identifier + ')(?:' + whitespace + '*([*^$|!~]?=)' + whitespace + '*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' + identifier + '))|)' + whitespace + '*\\]';
pseudos = ':(' + identifier + ')(?:\\((' + '(\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|' + '((?:\\\\.|[^\\\\()[\\]]|' + attributes + ')*)|' + '.*' + ')\\)|)';
rwhitespace = new RegExp(whitespace + '+', 'g');
rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\])(?:\\\\.)*)' + whitespace + '+$', 'g');
rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*');
rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*');
rattributeQuotes = new RegExp('=' + whitespace + '*([^\\]\'"]*?)' + whitespace + '*\\]', 'g');
rpseudo = new RegExp(pseudos);
ridentifier = new RegExp('^' + identifier + '$');
matchExpr = {
    'ID': new RegExp('^#(' + identifier + ')'),
    'CLASS': new RegExp('^\\.(' + identifier + ')'),
    'TAG': new RegExp('^(' + identifier + '|[*])'),
    'ATTR': new RegExp('^' + attributes),
    'PSEUDO': new RegExp('^' + pseudos),
    'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' + whitespace + '*(even|odd|(([+-]|)(\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\d+)|))' + whitespace + '*\\)|)', 'i'),
    'bool': new RegExp('^(?:' + booleans + ')$', 'i'),
    'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' + whitespace + '*((?:-\\d)?\\d*)' + whitespace + '*\\)|)(?=[^-]|$)', 'i')
};
rinputs = /^(?:input|select|textarea|button)$/i;
rheader = /^h\d$/i;
rnative = /^[^{]+\{\s*\[native \w/;
rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/;
rsibling = /[+~]/;
runescape = new RegExp('\\\\([\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig');
funescape = function (_, escaped, escapedWhitespace) {
    var high = '0x' + escaped - 65536;
    return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
};
rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g;
fcssescape = function (ch, asCodePoint) {
    if (asCodePoint) {
        if (ch === '\0') {
            return '\uFFFD';
        }
        return ch.slice(0, -1) + '\\' + ch.charCodeAt(ch.length - 1).toString(16) + ' ';
    }
    return '\\' + ch;
};
unloadHandler = function () {
    setDocument();
};
disabledAncestor = addCombinator(function (elem) {
    return elem.disabled === true && ('form' in elem || 'label' in elem);
}, {
    dir: 'parentNode',
    next: 'legend'
});
try {
    push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);
    arr[preferredDoc.childNodes.length].nodeType;
} catch (e) {
    push = {
        apply: arr.length ? function (target, els) {
            push_native.apply(target, slice.call(els));
        } : function (target, els) {
            var j = target.length, i = 0;
            while (target[j++] = els[i++]) {
            }
            target.length = j - 1;
        }
    };
}
support = Sizzle.support = {};
isXML = Sizzle.isXML = function (elem) {
    var documentElement = elem && (elem.ownerDocument || elem).documentElement;
    return documentElement ? documentElement.nodeName !== 'HTML' : false;
};
setDocument = Sizzle.setDocument = function (node) {
    var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;
    if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
        return document;
    }
    document = doc;
    docElem = document.documentElement;
    documentIsHTML = !isXML(document);
    if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {
        if (subWindow.addEventListener) {
            subWindow.addEventListener('unload', unloadHandler, false);
        } else if (subWindow.attachEvent) {
            subWindow.attachEvent('onunload', unloadHandler);
        }
    }
    support.attributes = assert(function (el) {
        el.className = 'i';
        return !el.getAttribute('className');
    });
    support.getElementsByTagName = assert(function (el) {
        el.appendChild(document.createComment(''));
        return !el.getElementsByTagName('*').length;
    });
    support.getElementsByClassName = rnative.test(document.getElementsByClassName);
    support.getById = assert(function (el) {
        docElem.appendChild(el).id = expando;
        return !document.getElementsByName || !document.getElementsByName(expando).length;
    });
    if (support.getById) {
        Expr.filter['ID'] = function (id) {
            var attrId = id.replace(runescape, funescape);
            return function (elem) {
                return elem.getAttribute('id') === attrId;
            };
        };
        Expr.find['ID'] = function (id, context) {
            if (typeof context.getElementById !== 'undefined' && documentIsHTML) {
                var elem = context.getElementById(id);
                return elem ? [elem] : [];
            }
        };
    } else {
        Expr.filter['ID'] = function (id) {
            var attrId = id.replace(runescape, funescape);
            return function (elem) {
                var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id');
                return node && node.value === attrId;
            };
        };
        Expr.find['ID'] = function (id, context) {
            if (typeof context.getElementById !== 'undefined' && documentIsHTML) {
                var node, i, elems, elem = context.getElementById(id);
                if (elem) {
                    node = elem.getAttributeNode('id');
                    if (node && node.value === id) {
                        return [elem];
                    }
                    elems = context.getElementsByName(id);
                    i = 0;
                    while (elem = elems[i++]) {
                        node = elem.getAttributeNode('id');
                        if (node && node.value === id) {
                            return [elem];
                        }
                    }
                }
                return [];
            }
        };
    }
    Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {
        if (typeof context.getElementsByTagName !== 'undefined') {
            return context.getElementsByTagName(tag);
        } else if (support.qsa) {
            return context.querySelectorAll(tag);
        }
    } : function (tag, context) {
        var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
        if (tag === '*') {
            while (elem = results[i++]) {
                if (elem.nodeType === 1) {
                    tmp.push(elem);
                }
            }
            return tmp;
        }
        return results;
    };
    Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {
        if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {
            return context.getElementsByClassName(className);
        }
    };
    rbuggyMatches = [];
    rbuggyQSA = [];
    if (support.qsa = rnative.test(document.querySelectorAll)) {
        assert(function (el) {
            docElem.appendChild(el).innerHTML = '<a id=\'' + expando + '\'></a>' + '<select id=\'' + expando + '-\r\\\' msallowcapture=\'\'>' + '<option selected=\'\'></option></select>';
            if (el.querySelectorAll('[msallowcapture^=\'\']').length) {
                rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\'\'|"")');
            }
            if (!el.querySelectorAll('[selected]').length) {
                rbuggyQSA.push('\\[' + whitespace + '*(?:value|' + booleans + ')');
            }
            if (!el.querySelectorAll('[id~=' + expando + '-]').length) {
                rbuggyQSA.push('~=');
            }
            if (!el.querySelectorAll(':checked').length) {
                rbuggyQSA.push(':checked');
            }
            if (!el.querySelectorAll('a#' + expando + '+*').length) {
                rbuggyQSA.push('.#.+[+~]');
            }
        });
        assert(function (el) {
            el.innerHTML = '<a href=\'\' disabled=\'disabled\'></a>' + '<select disabled=\'disabled\'><option/></select>';
            var input = document.createElement('input');
            input.setAttribute('type', 'hidden');
            el.appendChild(input).setAttribute('name', 'D');
            if (el.querySelectorAll('[name=d]').length) {
                rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');
            }
            if (el.querySelectorAll(':enabled').length !== 2) {
                rbuggyQSA.push(':enabled', ':disabled');
            }
            docElem.appendChild(el).disabled = true;
            if (el.querySelectorAll(':disabled').length !== 2) {
                rbuggyQSA.push(':enabled', ':disabled');
            }
            el.querySelectorAll('*,:x');
            rbuggyQSA.push(',.*:');
        });
    }
    if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
        assert(function (el) {
            support.disconnectedMatch = matches.call(el, '*');
            matches.call(el, '[s!=\'\']:x');
            rbuggyMatches.push('!=', pseudos);
        });
    }
    rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));
    rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));
    hasCompare = rnative.test(docElem.compareDocumentPosition);
    contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
        var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
    } : function (a, b) {
        if (b) {
            while (b = b.parentNode) {
                if (b === a) {
                    return true;
                }
            }
        }
        return false;
    };
    sortOrder = hasCompare ? function (a, b) {
        if (a === b) {
            hasDuplicate = true;
            return 0;
        }
        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
        if (compare) {
            return compare;
        }
        compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
            if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
                return -1;
            }
            if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
                return 1;
            }
            return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
        }
        return compare & 4 ? -1 : 1;
    } : function (a, b) {
        if (a === b) {
            hasDuplicate = true;
            return 0;
        }
        var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];
        if (!aup || !bup) {
            return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
        } else if (aup === bup) {
            return siblingCheck(a, b);
        }
        cur = a;
        while (cur = cur.parentNode) {
            ap.unshift(cur);
        }
        cur = b;
        while (cur = cur.parentNode) {
            bp.unshift(cur);
        }
        while (ap[i] === bp[i]) {
            i++;
        }
        return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
    };
    return document;
};
Sizzle.matches = function (expr, elements) {
    return Sizzle(expr, null, null, elements);
};
Sizzle.matchesSelector = function (elem, expr) {
    if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
    }
    expr = expr.replace(rattributeQuotes, '=\'$1\']');
    if (support.matchesSelector && documentIsHTML && !compilerCache[expr + ' '] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
        try {
            var ret = matches.call(elem, expr);
            if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
                return ret;
            }
        } catch (e) {
        }
    }
    return Sizzle(expr, document, null, [elem]).length > 0;
};
Sizzle.contains = function (context, elem) {
    if ((context.ownerDocument || context) !== document) {
        setDocument(context);
    }
    return contains(context, elem);
};
Sizzle.attr = function (elem, name) {
    if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
    }
    var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
    return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
};
Sizzle.escape = function (sel) {
    return (sel + '').replace(rcssescape, fcssescape);
};
Sizzle.error = function (msg) {
    throw new Error('Syntax error, unrecognized expression: ' + msg);
};
Sizzle.uniqueSort = function (results) {
    var elem, duplicates = [], j = 0, i = 0;
    hasDuplicate = !support.detectDuplicates;
    sortInput = !support.sortStable && results.slice(0);
    results.sort(sortOrder);
    if (hasDuplicate) {
        while (elem = results[i++]) {
            if (elem === results[i]) {
                j = duplicates.push(i);
            }
        }
        while (j--) {
            results.splice(duplicates[j], 1);
        }
    }
    sortInput = null;
    return results;
};
getText = Sizzle.getText = function (elem) {
    var node, ret = '', i = 0, nodeType = elem.nodeType;
    if (!nodeType) {
        while (node = elem[i++]) {
            ret += getText(node);
        }
    } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
        if (typeof elem.textContent === 'string') {
            return elem.textContent;
        } else {
            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                ret += getText(elem);
            }
        }
    } else if (nodeType === 3 || nodeType === 4) {
        return elem.nodeValue;
    }
    return ret;
};
Expr = Sizzle.selectors = {
    cacheLength: 50,
    createPseudo: markFunction,
    match: matchExpr,
    attrHandle: {},
    find: {},
    relative: {
        '>': {
            dir: 'parentNode',
            first: true
        },
        ' ': {
            dir: 'parentNode'
        },
        '+': {
            dir: 'previousSibling',
            first: true
        },
        '~': {
            dir: 'previousSibling'
        }
    },
    preFilter: {
        'ATTR': function (match) {
            match[1] = match[1].replace(runescape, funescape);
            match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape);
            if (match[2] === '~=') {
                match[3] = ' ' + match[3] + ' ';
            }
            return match.slice(0, 4);
        },
        'CHILD': function (match) {
            match[1] = match[1].toLowerCase();
            if (match[1].slice(0, 3) === 'nth') {
                if (!match[3]) {
                    Sizzle.error(match[0]);
                }
                match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));
                match[5] = +(match[7] + match[8] || match[3] === 'odd');
            } else if (match[3]) {
                Sizzle.error(match[0]);
            }
            return match;
        },
        'PSEUDO': function (match) {
            var excess, unquoted = !match[6] && match[2];
            if (matchExpr['CHILD'].test(match[0])) {
                return null;
            }
            if (match[3]) {
                match[2] = match[4] || match[5] || '';
            } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {
                match[0] = match[0].slice(0, excess);
                match[2] = unquoted.slice(0, excess);
            }
            return match.slice(0, 3);
        }
    },
    filter: {
        'TAG': function (nodeNameSelector) {
            var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
            return nodeNameSelector === '*' ? function () {
                return true;
            } : function (elem) {
                return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
            };
        },
        'CLASS': function (className) {
            var pattern = classCache[className + ' '];
            return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {
                return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');
            });
        },
        'ATTR': function (name, operator, check) {
            return function (elem) {
                var result = Sizzle.attr(elem, name);
                if (result == null) {
                    return operator === '!=';
                }
                if (!operator) {
                    return true;
                }
                result += '';
                return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;
            };
        },
        'CHILD': function (type, what, argument, first, last) {
            var simple = type.slice(0, 3) !== 'nth', forward = type.slice(-4) !== 'last', ofType = what === 'of-type';
            return first === 1 && last === 0 ? function (elem) {
                return !!elem.parentNode;
            } : function (elem, context, xml) {
                var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                if (parent) {
                    if (simple) {
                        while (dir) {
                            node = elem;
                            while (node = node[dir]) {
                                if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                                    return false;
                                }
                            }
                            start = dir = type === 'only' && !start && 'nextSibling';
                        }
                        return true;
                    }
                    start = [forward ? parent.firstChild : parent.lastChild];
                    if (forward && useCache) {
                        node = parent;
                        outerCache = node[expando] || (node[expando] = {});
                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                        cache = uniqueCache[type] || [];
                        nodeIndex = cache[0] === dirruns && cache[1];
                        diff = nodeIndex && cache[2];
                        node = nodeIndex && parent.childNodes[nodeIndex];
                        while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                            if (node.nodeType === 1 && ++diff && node === elem) {
                                uniqueCache[type] = [
                                    dirruns,
                                    nodeIndex,
                                    diff
                                ];
                                break;
                            }
                        }
                    } else {
                        if (useCache) {
                            node = elem;
                            outerCache = node[expando] || (node[expando] = {});
                            uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                            cache = uniqueCache[type] || [];
                            nodeIndex = cache[0] === dirruns && cache[1];
                            diff = nodeIndex;
                        }
                        if (diff === false) {
                            while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                                if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                                    if (useCache) {
                                        outerCache = node[expando] || (node[expando] = {});
                                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                        uniqueCache[type] = [
                                            dirruns,
                                            diff
                                        ];
                                    }
                                    if (node === elem) {
                                        break;
                                    }
                                }
                            }
                        }
                    }
                    diff -= last;
                    return diff === first || diff % first === 0 && diff / first >= 0;
                }
            };
        },
        'PSEUDO': function (pseudo, argument) {
            var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);
            if (fn[expando]) {
                return fn(argument);
            }
            if (fn.length > 1) {
                args = [
                    pseudo,
                    pseudo,
                    '',
                    argument
                ];
                return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
                    var idx, matched = fn(seed, argument), i = matched.length;
                    while (i--) {
                        idx = indexOf(seed, matched[i]);
                        seed[idx] = !(matches[idx] = matched[i]);
                    }
                }) : function (elem) {
                    return fn(elem, 0, args);
                };
            }
            return fn;
        }
    },
    pseudos: {
        'not': markFunction(function (selector) {
            var input = [], results = [], matcher = compile(selector.replace(rtrim, '$1'));
            return matcher[expando] ? markFunction(function (seed, matches, context, xml) {
                var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;
                while (i--) {
                    if (elem = unmatched[i]) {
                        seed[i] = !(matches[i] = elem);
                    }
                }
            }) : function (elem, context, xml) {
                input[0] = elem;
                matcher(input, null, xml, results);
                input[0] = null;
                return !results.pop();
            };
        }),
        'has': markFunction(function (selector) {
            return function (elem) {
                return Sizzle(selector, elem).length > 0;
            };
        }),
        'contains': markFunction(function (text) {
            text = text.replace(runescape, funescape);
            return function (elem) {
                return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
            };
        }),
        'lang': markFunction(function (lang) {
            if (!ridentifier.test(lang || '')) {
                Sizzle.error('unsupported lang: ' + lang);
            }
            lang = lang.replace(runescape, funescape).toLowerCase();
            return function (elem) {
                var elemLang;
                do {
                    if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {
                        elemLang = elemLang.toLowerCase();
                        return elemLang === lang || elemLang.indexOf(lang + '-') === 0;
                    }
                } while ((elem = elem.parentNode) && elem.nodeType === 1);
                return false;
            };
        }),
        'target': function (elem) {
            var hash = window.location && window.location.hash;
            return hash && hash.slice(1) === elem.id;
        },
        'root': function (elem) {
            return elem === docElem;
        },
        'focus': function (elem) {
            return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
        },
        'enabled': createDisabledPseudo(false),
        'disabled': createDisabledPseudo(true),
        'checked': function (elem) {
            var nodeName = elem.nodeName.toLowerCase();
            return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;
        },
        'selected': function (elem) {
            if (elem.parentNode) {
                elem.parentNode.selectedIndex;
            }
            return elem.selected === true;
        },
        'empty': function (elem) {
            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                if (elem.nodeType < 6) {
                    return false;
                }
            }
            return true;
        },
        'parent': function (elem) {
            return !Expr.pseudos['empty'](elem);
        },
        'header': function (elem) {
            return rheader.test(elem.nodeName);
        },
        'input': function (elem) {
            return rinputs.test(elem.nodeName);
        },
        'button': function (elem) {
            var name = elem.nodeName.toLowerCase();
            return name === 'input' && elem.type === 'button' || name === 'button';
        },
        'text': function (elem) {
            var attr;
            return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text');
        },
        'first': createPositionalPseudo(function () {
            return [0];
        }),
        'last': createPositionalPseudo(function (matchIndexes, length) {
            return [length - 1];
        }),
        'eq': createPositionalPseudo(function (matchIndexes, length, argument) {
            return [argument < 0 ? argument + length : argument];
        }),
        'even': createPositionalPseudo(function (matchIndexes, length) {
            var i = 0;
            for (; i < length; i += 2) {
                matchIndexes.push(i);
            }
            return matchIndexes;
        }),
        'odd': createPositionalPseudo(function (matchIndexes, length) {
            var i = 1;
            for (; i < length; i += 2) {
                matchIndexes.push(i);
            }
            return matchIndexes;
        }),
        'lt': createPositionalPseudo(function (matchIndexes, length, argument) {
            var i = argument < 0 ? argument + length : argument;
            for (; --i >= 0;) {
                matchIndexes.push(i);
            }
            return matchIndexes;
        }),
        'gt': createPositionalPseudo(function (matchIndexes, length, argument) {
            var i = argument < 0 ? argument + length : argument;
            for (; ++i < length;) {
                matchIndexes.push(i);
            }
            return matchIndexes;
        })
    }
};
Expr.pseudos['nth'] = Expr.pseudos['eq'];
for (i in {
        radio: true,
        checkbox: true,
        file: true,
        password: true,
        image: true
    }) {
    Expr.pseudos[i] = createInputPseudo(i);
}
for (i in {
        submit: true,
        reset: true
    }) {
    Expr.pseudos[i] = createButtonPseudo(i);
}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();
tokenize = Sizzle.tokenize = function (selector, parseOnly) {
    var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + ' '];
    if (cached) {
        return parseOnly ? 0 : cached.slice(0);
    }
    soFar = selector;
    groups = [];
    preFilters = Expr.preFilter;
    while (soFar) {
        if (!matched || (match = rcomma.exec(soFar))) {
            if (match) {
                soFar = soFar.slice(match[0].length) || soFar;
            }
            groups.push(tokens = []);
        }
        matched = false;
        if (match = rcombinators.exec(soFar)) {
            matched = match.shift();
            tokens.push({
                value: matched,
                type: match[0].replace(rtrim, ' ')
            });
            soFar = soFar.slice(matched.length);
        }
        for (type in Expr.filter) {
            if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
                matched = match.shift();
                tokens.push({
                    value: matched,
                    type: type,
                    matches: match
                });
                soFar = soFar.slice(matched.length);
            }
        }
        if (!matched) {
            break;
        }
    }
    return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
};
compile = Sizzle.compile = function (selector, match) {
    var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + ' '];
    if (!cached) {
        if (!match) {
            match = tokenize(selector);
        }
        i = match.length;
        while (i--) {
            cached = matcherFromTokens(match[i]);
            if (cached[expando]) {
                setMatchers.push(cached);
            } else {
                elementMatchers.push(cached);
            }
        }
        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
        cached.selector = selector;
    }
    return cached;
};
select = Sizzle.select = function (selector, context, results, seed) {
    var i, tokens, token, type, find, compiled = typeof selector === 'function' && selector, match = !seed && tokenize(selector = compiled.selector || selector);
    results = results || [];
    if (match.length === 1) {
        tokens = match[0] = match[0].slice(0);
        if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
            context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];
            if (!context) {
                return results;
            } else if (compiled) {
                context = context.parentNode;
            }
            selector = selector.slice(tokens.shift().value.length);
        }
        i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;
        while (i--) {
            token = tokens[i];
            if (Expr.relative[type = token.type]) {
                break;
            }
            if (find = Expr.find[type]) {
                if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
                    tokens.splice(i, 1);
                    selector = seed.length && toSelector(tokens);
                    if (!selector) {
                        push.apply(results, seed);
                        return results;
                    }
                    break;
                }
            }
        }
    }
    (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
    return results;
};
support.sortStable = expando.split('').sort(sortOrder).join('') === expando;
support.detectDuplicates = !!hasDuplicate;
setDocument();
support.sortDetached = assert(function (el) {
    return el.compareDocumentPosition(document.createElement('fieldset')) & 1;
});
if (!assert(function (el) {
        el.innerHTML = '<a href=\'#\'></a>';
        return el.firstChild.getAttribute('href') === '#';
    })) {
    addHandle('type|href|height|width', function (elem, name, isXML) {
        if (!isXML) {
            return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);
        }
    });
}
if (!support.attributes || !assert(function (el) {
        el.innerHTML = '<input/>';
        el.firstChild.setAttribute('value', '');
        return el.firstChild.getAttribute('value') === '';
    })) {
    addHandle('value', function (elem, name, isXML) {
        if (!isXML && elem.nodeName.toLowerCase() === 'input') {
            return elem.defaultValue;
        }
    });
}
if (!assert(function (el) {
        return el.getAttribute('disabled') == null;
    })) {
    addHandle(booleans, function (elem, name, isXML) {
        var val;
        if (!isXML) {
            return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        }
    });
}
return Sizzle;}), $__.fs.J$__v5960504135_302_90)(window, 0, true, $__.uid);
    jQuery.find = Sizzle;
    jQuery.expr = (Sizzle.selectors, $__.os.oid18);
    ((jQuery.expr, $__.os.oid18), $__.os.oid18)[':', ':'] = (((jQuery.expr, $__.os.oid18), $__.os.oid18).pseudos, $__.os.oid17);
    jQuery.uniqueSort = jQuery.unique = TAJS_restrictToType(Sizzle.uniqueSort, 'function');
    jQuery.text = TAJS_restrictToType(Sizzle.getText, 'function');
    jQuery.isXMLDoc = TAJS_restrictToType(Sizzle.isXML, 'function');
    jQuery.contains = TAJS_restrictToType(Sizzle.contains, 'function');
    jQuery.escapeSelector = TAJS_restrictToType(Sizzle.escape, 'function');
    dir = ($__.fs.J$__v5960504135_304_196 = function J$__v5960504135_304(elem, dir, until) {
var vvv_return, vvv_switch, matched, truncate;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], dir = arguments[1], until = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = [];
truncate = until !== undefined;
while ((elem = elem[dir]) && elem.nodeType !== 9) {
    if (elem.nodeType === 1) {
        if (truncate && jQuery(elem).is(until)) {
            break;
        }
        matched.push(elem);
    }
}
return matched;});
    siblings = ($__.fs.J$__v5960504135_306_197 = function J$__v5960504135_306(n, elem) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
n = arguments[0], elem = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = [];
for (; n; n = n.nextSibling) {
    if (n.nodeType === 1 && n !== elem) {
        matched.push(n);
    }
}
return matched;});
    rneedsContext = TAJS_restrictToType(((((jQuery.expr, $__.os.oid18), $__.os.oid18).match, $__.os.oid5), $__.os.oid5).needsContext, 'object');
    rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    risSimple = /^.[^:#\[\.,]*$/;
    jQuery.filter = ($__.fs.J$__v5960504135_320_198 = function J$__v5960504135_320(expr, elems, not) {
var vvv_return, vvv_switch, elem;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
expr = arguments[0], elems = arguments[1], not = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
elem = elems[0];
if (not) {
    expr = ':not(' + expr + ')';
}
if (elems.length === 1 && elem.nodeType === 1) {
    return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
}
return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
    return elem.nodeType === 1;
}));});
    vvv_tmp2 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp2, $__.os.oid21 = {
        'find': ($__.fs.J$__v5960504135_324_199 = function J$__v5960504135_324(selector) {
var vvv_return, vvv_switch, i, ret, len, self;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = this.length;
self = this;
if (typeof selector !== 'string') {
    return this.pushStack(jQuery(selector).filter(function () {
        for (i = 0; i < len; i++) {
            if (jQuery.contains(self[i], this)) {
                return true;
            }
        }
    }));
}
ret = this.pushStack([]);
for (i = 0; i < len; i++) {
    jQuery.find(selector, self[i], ret);
}
return len > 1 ? jQuery.uniqueSort(ret) : ret;}),
        'filter': ($__.fs.J$__v5960504135_326_200 = function J$__v5960504135_326(selector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.pushStack(winnow(this, selector || [], false));}),
        'not': ($__.fs.J$__v5960504135_328_201 = function J$__v5960504135_328(selector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.pushStack(winnow(this, selector || [], true));}),
        'is': ($__.fs.J$__v5960504135_330_202 = function J$__v5960504135_330(selector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!winnow(this, typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;})
    }, 1, true, $__.uid);
    rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    init = ((jQuery.fn, $__.os.oid2), $__.os.oid2).init = ($__.fs.J$__v5960504135_332_203 = function J$__v5960504135_332(selector, context, root) {
var vvv_return, vvv_switch, match, elem;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], context = arguments[1], root = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    !selector;
    root = (root, rootjQuery);
    typeof selector === 'string';
    selector.nodeType, 9;
    this[0, 0] = selector;
    this.length = 1;
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!selector) {
    return this;
}
root = root || rootjQuery;
if (typeof selector === 'string') {
    if (selector[0] === '<' && selector[selector.length - 1] === '>' && selector.length >= 3) {
        match = [
            null,
            selector,
            null
        ];
    } else {
        match = rquickExpr.exec(selector);
    }
    if (match && (match[1] || !context)) {
        if (match[1]) {
            context = context instanceof jQuery ? context[0] : context;
            jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
            if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                for (match in context) {
                    if (jQuery.isFunction(this[match])) {
                        this[match](context[match]);
                    } else {
                        this.attr(match, context[match]);
                    }
                }
            }
            return this;
        } else {
            elem = document.getElementById(match[2]);
            if (elem) {
                this[0] = elem;
                this.length = 1;
            }
            return this;
        }
    } else if (!context || context.jquery) {
        return (context || root).find(selector);
    } else {
        return this.constructor(context).find(selector);
    }
} else if (selector.nodeType) {
    this[0] = selector;
    this.length = 1;
    return this;
} else if (jQuery.isFunction(selector)) {
    return root.ready !== undefined ? root.ready(selector) : selector(jQuery);
}
return jQuery.makeArray(selector, this);});
    init.prototype = (jQuery.fn, $__.os.oid2);
    rootjQuery = (jQuery, $__.fs.J$__v5960504135_6_58)(document, 0, true, $__.uid);
    rparentsprev = /^(?:parents|prev(?:Until|All))/;
    guaranteedUnique = $__.os.oid22 = {
        'children': true,
        'contents': true,
        'next': true,
        'prev': true
    };
    vvv_tmp3 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp3, $__.os.oid23 = {
        'has': ($__.fs.J$__v5960504135_336_204 = function J$__v5960504135_336(target) {
var vvv_return, vvv_switch, targets, l;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
target = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
targets = jQuery(target, this);
l = targets.length;
return this.filter(function () {
    var i = 0;
    for (; i < l; i++) {
        if (jQuery.contains(this, targets[i])) {
            return true;
        }
    }
});}),
        'closest': ($__.fs.J$__v5960504135_338_205 = function J$__v5960504135_338(selectors, context) {
var vvv_return, vvv_switch, cur, i, l, matched, targets;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selectors = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
l = this.length;
matched = [];
targets = typeof selectors !== 'string' && jQuery(selectors);
if (!rneedsContext.test(selectors)) {
    for (; i < l; i++) {
        for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
                matched.push(cur);
                break;
            }
        }
    }
}
return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);}),
        'index': ($__.fs.J$__v5960504135_340_206 = function J$__v5960504135_340(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!elem) {
    return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
}
if (typeof elem === 'string') {
    return indexOf.call(jQuery(elem), this[0]);
}
return indexOf.call(this, elem.jquery ? elem[0] : elem);}),
        'add': ($__.fs.J$__v5960504135_342_207 = function J$__v5960504135_342(selector, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));}),
        'addBack': ($__.fs.J$__v5960504135_344_208 = function J$__v5960504135_344(selector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));})
    }, 2, true, $__.uid);
    vvv_tmp4 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp4, $__.os.oid24 = {
        'parent': ($__.fs.J$__v5960504135_347_209 = function J$__v5960504135_347(elem) {
var vvv_return, vvv_switch, parent;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
parent = elem.parentNode;
return parent && parent.nodeType !== 11 ? parent : null;}, $__.fs.J$__v5960504135_347_209_12 = $__.fs.J$__v5960504135_347_209, $__.fs.J$__v5960504135_347_209),
        'parents': ($__.fs.J$__v5960504135_349_210 = function J$__v5960504135_349(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dir(elem, 'parentNode');}, $__.fs.J$__v5960504135_349_210_14 = $__.fs.J$__v5960504135_349_210, $__.fs.J$__v5960504135_349_210),
        'parentsUntil': ($__.fs.J$__v5960504135_351_211 = function J$__v5960504135_351(elem, i, until) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], i = arguments[1], until = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dir(elem, 'parentNode', until);}, $__.fs.J$__v5960504135_351_211_16 = $__.fs.J$__v5960504135_351_211, $__.fs.J$__v5960504135_351_211),
        'next': ($__.fs.J$__v5960504135_353_212 = function J$__v5960504135_353(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return sibling(elem, 'nextSibling');}, $__.fs.J$__v5960504135_353_212_18 = $__.fs.J$__v5960504135_353_212, $__.fs.J$__v5960504135_353_212),
        'prev': ($__.fs.J$__v5960504135_355_213 = function J$__v5960504135_355(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return sibling(elem, 'previousSibling');}, $__.fs.J$__v5960504135_355_213_20 = $__.fs.J$__v5960504135_355_213, $__.fs.J$__v5960504135_355_213),
        'nextAll': ($__.fs.J$__v5960504135_357_214 = function J$__v5960504135_357(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dir(elem, 'nextSibling');}, $__.fs.J$__v5960504135_357_214_22 = $__.fs.J$__v5960504135_357_214, $__.fs.J$__v5960504135_357_214),
        'prevAll': ($__.fs.J$__v5960504135_359_215 = function J$__v5960504135_359(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dir(elem, 'previousSibling');}, $__.fs.J$__v5960504135_359_215_24 = $__.fs.J$__v5960504135_359_215, $__.fs.J$__v5960504135_359_215),
        'nextUntil': ($__.fs.J$__v5960504135_361_216 = function J$__v5960504135_361(elem, i, until) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], i = arguments[1], until = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dir(elem, 'nextSibling', until);}, $__.fs.J$__v5960504135_361_216_26 = $__.fs.J$__v5960504135_361_216, $__.fs.J$__v5960504135_361_216),
        'prevUntil': ($__.fs.J$__v5960504135_363_217 = function J$__v5960504135_363(elem, i, until) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], i = arguments[1], until = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dir(elem, 'previousSibling', until);}, $__.fs.J$__v5960504135_363_217_28 = $__.fs.J$__v5960504135_363_217, $__.fs.J$__v5960504135_363_217),
        'siblings': ($__.fs.J$__v5960504135_365_218 = function J$__v5960504135_365(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return siblings((elem.parentNode || {}).firstChild, elem);}, $__.fs.J$__v5960504135_365_218_30 = $__.fs.J$__v5960504135_365_218, $__.fs.J$__v5960504135_365_218),
        'children': ($__.fs.J$__v5960504135_367_219 = function J$__v5960504135_367(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return siblings(elem.firstChild);}, $__.fs.J$__v5960504135_367_219_32 = $__.fs.J$__v5960504135_367_219, $__.fs.J$__v5960504135_367_219),
        'contents': ($__.fs.J$__v5960504135_369_220 = function J$__v5960504135_369(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (nodeName(elem, 'iframe')) {
    return elem.contentDocument;
}
if (nodeName(elem, 'template')) {
    elem = elem.content || elem;
}
return jQuery.merge([], elem.childNodes);}, $__.fs.J$__v5960504135_369_220_34 = $__.fs.J$__v5960504135_369_220, $__.fs.J$__v5960504135_369_220)
    }, ($__.fs.J$__v5960504135_373_221 = function J$__v5960504135_373(name, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], fn = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'parent'] = ($__.fs.J$__v5960504135_371_222 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'parents'] = ($__.fs.J$__v5960504135_371_223 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'parentsUntil'] = ($__.fs.J$__v5960504135_371_224 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'next'] = ($__.fs.J$__v5960504135_371_225 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'prev'] = ($__.fs.J$__v5960504135_371_226 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'nextAll'] = ($__.fs.J$__v5960504135_371_227 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'prevAll'] = ($__.fs.J$__v5960504135_371_228 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'nextUntil'] = ($__.fs.J$__v5960504135_371_229 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'prevUntil'] = ($__.fs.J$__v5960504135_371_230 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'siblings'] = ($__.fs.J$__v5960504135_371_231 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'children'] = ($__.fs.J$__v5960504135_371_232 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'contents'] = ($__.fs.J$__v5960504135_371_233 = function J$__v5960504135_371(until, selector) {
var vvv_return, vvv_switch, matched;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
until = arguments[0], selector = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matched = jQuery.map(this, fn, until);
if (name.slice(-5) !== 'Until') {
    selector = until;
}
if (selector && typeof selector === 'string') {
    matched = jQuery.filter(selector, matched);
}
if (this.length > 1) {
    if (!guaranteedUnique[name]) {
        jQuery.uniqueSort(matched);
    }
    if (rparentsprev.test(name)) {
        matched.reverse();
    }
}
return this.pushStack(matched);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.fn[name] = function (until, selector) {
    var matched = jQuery.map(this, fn, until);
    if (name.slice(-5) !== 'Until') {
        selector = until;
    }
    if (selector && typeof selector === 'string') {
        matched = jQuery.filter(selector, matched);
    }
    if (this.length > 1) {
        if (!guaranteedUnique[name]) {
            jQuery.uniqueSort(matched);
        }
        if (rparentsprev.test(name)) {
            matched.reverse();
        }
    }
    return this.pushStack(matched);
};}, $__.fs.J$__v5960504135_373_221), 1, true, $__.uid);
    rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
    jQuery.Callbacks = ($__.fs.J$__v5960504135_407_234 = function J$__v5960504135_407(options) {
var vvv_return, vvv_switch, firing, memory, fired, locked, list, queue, firingIndex, fire, self;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
options = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    options = (typeof options === 'string', (createOptions, $__.fs.createOptions_10)(options, 0, true, $__.uid));
    list = [];
    queue = [];
    firingIndex = -1;
    fire = ($__.fs.J$__v5960504135_378_240 = function J$__v5960504135_378() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = locked || options.once;
fired = firing = true;
for (; queue.length; firingIndex = -1) {
    memory = queue.shift();
    while (++firingIndex < list.length) {
        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
            firingIndex = list.length;
            memory = false;
        }
    }
}
if (!options.memory) {
    memory = false;
}
firing = false;
if (locked) {
    if (memory) {
        list = [];
    } else {
        list = '';
    }
}});
    self = $__.os.oid27 = {
        'add': ($__.fs.J$__v5960504135_383_241 = function J$__v5960504135_383() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    list;
    memory;
    (($__.fs.add_324 = function add(args) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
args = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, args, ($__.fs.J$__v5960504135_380_325 = function J$__v5960504135_380(_, arg) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], arg = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_403_263), 0, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid26).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_403_263));
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(arg)) {
    if (!options.unique || !self.has(arg)) {
        list.push(arg);
    }
} else if (arg && arg.length && jQuery.type(arg) !== 'string') {
    add(arg);
}}, $__.fs.J$__v5960504135_380_325), 8, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(args, function (_, arg) {
    if (jQuery.isFunction(arg)) {
        if (!options.unique || !self.has(arg)) {
            list.push(arg);
        }
    } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
        add(arg);
    }
});}), $__.fs.add_324)(arguments, 0, true, $__.uid);
    memory;
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    if (memory && !firing) {
        firingIndex = list.length - 1;
        queue.push(memory);
    }
    (function add(args) {
        jQuery.each(args, function (_, arg) {
            if (jQuery.isFunction(arg)) {
                if (!options.unique || !self.has(arg)) {
                    list.push(arg);
                }
            } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                add(arg);
            }
        });
    }(arguments));
    if (memory && !firing) {
        fire();
    }
}
return this;}),
        'remove': ($__.fs.J$__v5960504135_387_242 = function J$__v5960504135_387() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(arguments, function (_, arg) {
    var index;
    while ((index = jQuery.inArray(arg, list, index)) > -1) {
        list.splice(index, 1);
        if (index <= firingIndex) {
            firingIndex--;
        }
    }
});
return this;}),
        'has': ($__.fs.J$__v5960504135_389_243 = function J$__v5960504135_389(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;}),
        'empty': ($__.fs.J$__v5960504135_391_244 = function J$__v5960504135_391() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    list = [];
}
return this;}),
        'disable': ($__.fs.J$__v5960504135_393_245 = function J$__v5960504135_393() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
list = memory = '';
return this;}),
        'disabled': ($__.fs.J$__v5960504135_395_246 = function J$__v5960504135_395() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !list;}),
        'lock': ($__.fs.J$__v5960504135_397_247 = function J$__v5960504135_397() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    locked = queue = [];
    !memory, !firing;
    list = memory = '';
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
if (!memory && !firing) {
    list = memory = '';
}
return this;}, $__.fs.J$__v5960504135_397_247_54 = $__.fs.J$__v5960504135_397_247, $__.fs.J$__v5960504135_397_247_63 = $__.fs.J$__v5960504135_397_247, $__.fs.J$__v5960504135_397_247),
        'locked': ($__.fs.J$__v5960504135_399_248 = function J$__v5960504135_399() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!locked;}),
        'fireWith': ($__.fs.J$__v5960504135_401_249 = function J$__v5960504135_401(context, args) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0], args = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!locked) {
    args = args || [];
    args = [
        context,
        args.slice ? args.slice() : args
    ];
    queue.push(args);
    if (!firing) {
        fire();
    }
}
return this;}),
        'fire': ($__.fs.J$__v5960504135_403_250 = function J$__v5960504135_403() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
self.fireWith(this, arguments);
return this;}),
        'fired': ($__.fs.J$__v5960504135_405_251 = function J$__v5960504135_405() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!fired;})
    };
    return self;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    options = (typeof options === 'string', (createOptions, $__.fs.createOptions_10)(options, 1, true, $__.uid));
    list = [];
    queue = [];
    firingIndex = -1;
    fire = ($__.fs.J$__v5960504135_378_253 = function J$__v5960504135_378() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = locked || options.once;
fired = firing = true;
for (; queue.length; firingIndex = -1) {
    memory = queue.shift();
    while (++firingIndex < list.length) {
        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
            firingIndex = list.length;
            memory = false;
        }
    }
}
if (!options.memory) {
    memory = false;
}
firing = false;
if (locked) {
    if (memory) {
        list = [];
    } else {
        list = '';
    }
}});
    self = $__.os.oid29 = {
        'add': ($__.fs.J$__v5960504135_383_254 = function J$__v5960504135_383() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    if (memory && !firing) {
        firingIndex = list.length - 1;
        queue.push(memory);
    }
    (function add(args) {
        jQuery.each(args, function (_, arg) {
            if (jQuery.isFunction(arg)) {
                if (!options.unique || !self.has(arg)) {
                    list.push(arg);
                }
            } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                add(arg);
            }
        });
    }(arguments));
    if (memory && !firing) {
        fire();
    }
}
return this;}),
        'remove': ($__.fs.J$__v5960504135_387_255 = function J$__v5960504135_387() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(arguments, function (_, arg) {
    var index;
    while ((index = jQuery.inArray(arg, list, index)) > -1) {
        list.splice(index, 1);
        if (index <= firingIndex) {
            firingIndex--;
        }
    }
});
return this;}),
        'has': ($__.fs.J$__v5960504135_389_256 = function J$__v5960504135_389(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;}),
        'empty': ($__.fs.J$__v5960504135_391_257 = function J$__v5960504135_391() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    list = [];
}
return this;}),
        'disable': ($__.fs.J$__v5960504135_393_258 = function J$__v5960504135_393() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
list = memory = '';
return this;}),
        'disabled': ($__.fs.J$__v5960504135_395_259 = function J$__v5960504135_395() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !list;}),
        'lock': ($__.fs.J$__v5960504135_397_260 = function J$__v5960504135_397() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
if (!memory && !firing) {
    list = memory = '';
}
return this;}),
        'locked': ($__.fs.J$__v5960504135_399_261 = function J$__v5960504135_399() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!locked;}),
        'fireWith': ($__.fs.J$__v5960504135_401_262 = function J$__v5960504135_401(context, args) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0], args = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!locked) {
    args = args || [];
    args = [
        context,
        args.slice ? args.slice() : args
    ];
    queue.push(args);
    if (!firing) {
        fire();
    }
}
return this;}),
        'fire': ($__.fs.J$__v5960504135_403_263 = function J$__v5960504135_403() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
self.fireWith(this, arguments);
return this;}, $__.fs.J$__v5960504135_403_263_47 = $__.fs.J$__v5960504135_403_263, $__.fs.J$__v5960504135_403_263),
        'fired': ($__.fs.J$__v5960504135_405_264 = function J$__v5960504135_405() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!fired;})
    };
    return self;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    options = (typeof options === 'string', (createOptions, $__.fs.createOptions_10)(options, 2, true, $__.uid));
    list = [];
    queue = [];
    firingIndex = -1;
    fire = ($__.fs.J$__v5960504135_378_266 = function J$__v5960504135_378() {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2, vvv_tmp3, vvv_tmp4, vvv_tmp5, vvv_tmp6, vvv_tmp7;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    locked = (locked, ((options, $__.os.oid30).once, true));
    fired = firing = true;
    queue.length, 1;
    memory = function $__lt18(res) {
        res.length = 2;
        if (res.length != 2)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt18, -2);
    }(queue['shift']());
    (firingIndex = +firingIndex + 1) < (list.length, 4);
    (vvv_tmp1 = TAJS_restrictToType(memory[0, 0], 'HTMLDocument'), (TAJS_restrictToType(list[firingIndex, 0], 'function'), $__.fs.J$__v5960504135_439_327).call(vvv_tmp1, (vvv_tmp0 = TAJS_restrictToType(memory[1, 1], 'object'), vvv_tmp0[0]), 0, true, $__.uid)) === false;
    (firingIndex = +firingIndex + 1) < (list.length, 4);
    (vvv_tmp3 = TAJS_restrictToType(memory[0, 0], 'HTMLDocument'), (TAJS_restrictToType(list[firingIndex, 1], 'function'), $__.fs.J$__v5960504135_393_297).call(vvv_tmp3, (vvv_tmp2 = TAJS_restrictToType(memory[1, 1], 'object'), vvv_tmp2[0]), 0, true, $__.uid)) === false;
    (firingIndex = +firingIndex + 1) < (list.length, 4);
    (vvv_tmp5 = TAJS_restrictToType(memory[0, 0], 'HTMLDocument'), (TAJS_restrictToType(list[firingIndex, 2], 'function'), $__.fs.J$__v5960504135_397_247).call(vvv_tmp5, (vvv_tmp4 = TAJS_restrictToType(memory[1, 1], 'object'), vvv_tmp4[0]), 0, true, $__.uid)) === false;
    (firingIndex = +firingIndex + 1) < (list.length, 4);
    (vvv_tmp7 = TAJS_restrictToType(memory[0, 0], 'HTMLDocument'), (TAJS_restrictToType(list[firingIndex, 3], 'function'), $__.fs.J$__v5960504135_403_289).call(vvv_tmp7, (vvv_tmp6 = TAJS_restrictToType(memory[1, 1], 'object'), vvv_tmp6[0]), 0, true, $__.uid)) === false;
    (firingIndex = +firingIndex + 1) < (list.length, 4);
    firingIndex = -1;
    queue.length, 0;
    !((options, $__.os.oid30).memory, true);
    firing = false;
    locked;
    memory;
    list = [];
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = locked || options.once;
fired = firing = true;
for (; queue.length; firingIndex = -1) {
    memory = queue.shift();
    while (++firingIndex < list.length) {
        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
            firingIndex = list.length;
            memory = false;
        }
    }
}
if (!options.memory) {
    memory = false;
}
firing = false;
if (locked) {
    if (memory) {
        list = [];
    } else {
        list = '';
    }
}});
    self = $__.os.oid31 = {
        'add': ($__.fs.J$__v5960504135_383_267 = function J$__v5960504135_383() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    list;
    memory;
    (($__.fs.add_328 = function add(args) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
args = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, args, ($__.fs.J$__v5960504135_380_329 = function J$__v5960504135_380(_, arg) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], arg = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_439_327), 1, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid30).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_439_327));
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_393_297), 2, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid30).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_393_297));
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_397_247), 3, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid30).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_397_247));
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(arg)) {
    if (!options.unique || !self.has(arg)) {
        list.push(arg);
    }
} else if (arg && arg.length && jQuery.type(arg) !== 'string') {
    add(arg);
}}, $__.fs.J$__v5960504135_380_329), 9, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(args, function (_, arg) {
    if (jQuery.isFunction(arg)) {
        if (!options.unique || !self.has(arg)) {
            list.push(arg);
        }
    } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
        add(arg);
    }
});}), $__.fs.add_328)(arguments, 0, true, $__.uid);
    memory;
    return this;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    list;
    memory;
    (($__.fs.add_330 = function add(args) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
args = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, args, ($__.fs.J$__v5960504135_380_331 = function J$__v5960504135_380(_, arg) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], arg = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_403_289), 4, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid30).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_403_289));
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(arg)) {
    if (!options.unique || !self.has(arg)) {
        list.push(arg);
    }
} else if (arg && arg.length && jQuery.type(arg) !== 'string') {
    add(arg);
}}, $__.fs.J$__v5960504135_380_331), 10, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(args, function (_, arg) {
    if (jQuery.isFunction(arg)) {
        if (!options.unique || !self.has(arg)) {
            list.push(arg);
        }
    } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
        add(arg);
    }
});}), $__.fs.add_330)(arguments, 0, true, $__.uid);
    memory;
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    if (memory && !firing) {
        firingIndex = list.length - 1;
        queue.push(memory);
    }
    (function add(args) {
        jQuery.each(args, function (_, arg) {
            if (jQuery.isFunction(arg)) {
                if (!options.unique || !self.has(arg)) {
                    list.push(arg);
                }
            } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                add(arg);
            }
        });
    }(arguments));
    if (memory && !firing) {
        fire();
    }
}
return this;}),
        'remove': ($__.fs.J$__v5960504135_387_268 = function J$__v5960504135_387() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(arguments, function (_, arg) {
    var index;
    while ((index = jQuery.inArray(arg, list, index)) > -1) {
        list.splice(index, 1);
        if (index <= firingIndex) {
            firingIndex--;
        }
    }
});
return this;}),
        'has': ($__.fs.J$__v5960504135_389_269 = function J$__v5960504135_389(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;}),
        'empty': ($__.fs.J$__v5960504135_391_270 = function J$__v5960504135_391() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    list = [];
}
return this;}),
        'disable': ($__.fs.J$__v5960504135_393_271 = function J$__v5960504135_393() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
list = memory = '';
return this;}, $__.fs.J$__v5960504135_393_271_61 = $__.fs.J$__v5960504135_393_271, $__.fs.J$__v5960504135_393_271),
        'disabled': ($__.fs.J$__v5960504135_395_272 = function J$__v5960504135_395() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !list;}),
        'lock': ($__.fs.J$__v5960504135_397_273 = function J$__v5960504135_397() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
if (!memory && !firing) {
    list = memory = '';
}
return this;}),
        'locked': ($__.fs.J$__v5960504135_399_274 = function J$__v5960504135_399() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!locked;}),
        'fireWith': ($__.fs.J$__v5960504135_401_275 = function J$__v5960504135_401(context, args) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0], args = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    !locked;
    args = args;
    args = [
        context,
        (TAJS_restrictToType(args.slice, 'function'), function $__lt17(res) {
            res.length = 1;
            if (res.length != 1)
                TAJS_dumpValue('Possible loss of precision');
            return res;
            ;
            TAJS_makeContextSensitive($__lt17, -2);
        }(args['slice']()))
    ];
    queue['push'](args);
    !firing;
    (fire, $__.fs.J$__v5960504135_378_266)(0, true, $__.uid);
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!locked) {
    args = args || [];
    args = [
        context,
        args.slice ? args.slice() : args
    ];
    queue.push(args);
    if (!firing) {
        fire();
    }
}
return this;}),
        'fire': ($__.fs.J$__v5960504135_403_276 = function J$__v5960504135_403() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
self.fireWith(this, arguments);
return this;}),
        'fired': ($__.fs.J$__v5960504135_405_277 = function J$__v5960504135_405() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!fired;})
    };
    return self;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    options = (typeof options === 'string', (createOptions, $__.fs.createOptions_10)(options, 3, true, $__.uid));
    list = [];
    queue = [];
    firingIndex = -1;
    fire = ($__.fs.J$__v5960504135_378_279 = function J$__v5960504135_378() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    locked = (locked, ((options, $__.os.oid32).once, true));
    fired = firing = true;
    queue.length, 1;
    memory = function $__lt19(res) {
        res.length = 2;
        if (res.length != 2)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt19, -2);
    }(queue['shift']());
    (firingIndex = +firingIndex + 1) < (list.length, 0);
    firingIndex = -1;
    queue.length, 0;
    !((options, $__.os.oid32).memory, true);
    firing = false;
    locked;
    memory;
    list = [];
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = locked || options.once;
fired = firing = true;
for (; queue.length; firingIndex = -1) {
    memory = queue.shift();
    while (++firingIndex < list.length) {
        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
            firingIndex = list.length;
            memory = false;
        }
    }
}
if (!options.memory) {
    memory = false;
}
firing = false;
if (locked) {
    if (memory) {
        list = [];
    } else {
        list = '';
    }
}});
    self = $__.os.oid33 = {
        'add': ($__.fs.J$__v5960504135_383_280 = function J$__v5960504135_383() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    if (memory && !firing) {
        firingIndex = list.length - 1;
        queue.push(memory);
    }
    (function add(args) {
        jQuery.each(args, function (_, arg) {
            if (jQuery.isFunction(arg)) {
                if (!options.unique || !self.has(arg)) {
                    list.push(arg);
                }
            } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                add(arg);
            }
        });
    }(arguments));
    if (memory && !firing) {
        fire();
    }
}
return this;}),
        'remove': ($__.fs.J$__v5960504135_387_281 = function J$__v5960504135_387() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(arguments, function (_, arg) {
    var index;
    while ((index = jQuery.inArray(arg, list, index)) > -1) {
        list.splice(index, 1);
        if (index <= firingIndex) {
            firingIndex--;
        }
    }
});
return this;}),
        'has': ($__.fs.J$__v5960504135_389_282 = function J$__v5960504135_389(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;}),
        'empty': ($__.fs.J$__v5960504135_391_283 = function J$__v5960504135_391() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    list = [];
}
return this;}),
        'disable': ($__.fs.J$__v5960504135_393_284 = function J$__v5960504135_393() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
list = memory = '';
return this;}),
        'disabled': ($__.fs.J$__v5960504135_395_285 = function J$__v5960504135_395() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !list;}),
        'lock': ($__.fs.J$__v5960504135_397_286 = function J$__v5960504135_397() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
if (!memory && !firing) {
    list = memory = '';
}
return this;}),
        'locked': ($__.fs.J$__v5960504135_399_287 = function J$__v5960504135_399() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!locked;}),
        'fireWith': ($__.fs.J$__v5960504135_401_288 = function J$__v5960504135_401(context, args) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0], args = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    !locked;
    args = args;
    args = [
        context,
        (TAJS_restrictToType(args.slice, 'undefined'), args)
    ];
    queue['push'](args);
    !firing;
    (fire, $__.fs.J$__v5960504135_378_279)(0, true, $__.uid);
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!locked) {
    args = args || [];
    args = [
        context,
        args.slice ? args.slice() : args
    ];
    queue.push(args);
    if (!firing) {
        fire();
    }
}
return this;}),
        'fire': ($__.fs.J$__v5960504135_403_289 = function J$__v5960504135_403() {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = self, 'fireWith', $__.fs.J$__v5960504135_401_288.call(vvv_tmp0, this, arguments, 0, true, $__.uid);
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
self.fireWith(this, arguments);
return this;}, $__.fs.J$__v5960504135_403_289_56 = $__.fs.J$__v5960504135_403_289, $__.fs.J$__v5960504135_403_289),
        'fired': ($__.fs.J$__v5960504135_405_290 = function J$__v5960504135_405() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!fired;})
    };
    return self;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    options = (typeof options === 'string', (createOptions, $__.fs.createOptions_10)(options, 4, true, $__.uid));
    list = [];
    queue = [];
    firingIndex = -1;
    fire = ($__.fs.J$__v5960504135_378_292 = function J$__v5960504135_378() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = locked || options.once;
fired = firing = true;
for (; queue.length; firingIndex = -1) {
    memory = queue.shift();
    while (++firingIndex < list.length) {
        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
            firingIndex = list.length;
            memory = false;
        }
    }
}
if (!options.memory) {
    memory = false;
}
firing = false;
if (locked) {
    if (memory) {
        list = [];
    } else {
        list = '';
    }
}});
    self = $__.os.oid35 = {
        'add': ($__.fs.J$__v5960504135_383_293 = function J$__v5960504135_383() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    list;
    memory;
    (($__.fs.add_334 = function add(args) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
args = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, args, ($__.fs.J$__v5960504135_380_335 = function J$__v5960504135_380(_, arg) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], arg = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_439_333), 5, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid34).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_439_333));
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_393_271), 6, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid34).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_393_271));
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_397_247), 7, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid34).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_397_247));
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(arg)) {
    if (!options.unique || !self.has(arg)) {
        list.push(arg);
    }
} else if (arg && arg.length && jQuery.type(arg) !== 'string') {
    add(arg);
}}, $__.fs.J$__v5960504135_380_335), 11, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(args, function (_, arg) {
    if (jQuery.isFunction(arg)) {
        if (!options.unique || !self.has(arg)) {
            list.push(arg);
        }
    } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
        add(arg);
    }
});}), $__.fs.add_334)(arguments, 0, true, $__.uid);
    memory;
    return this;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    list;
    memory;
    (($__.fs.add_336 = function add(args) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
args = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, args, ($__.fs.J$__v5960504135_380_337 = function J$__v5960504135_380(_, arg) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], arg = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (arg, $__.fs.J$__v5960504135_403_315), 8, true, $__.uid);
    !TAJS_restrictToType((options, $__.os.oid34).unique, 'undefined');
    list['push']((arg, $__.fs.J$__v5960504135_403_315));
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(arg)) {
    if (!options.unique || !self.has(arg)) {
        list.push(arg);
    }
} else if (arg && arg.length && jQuery.type(arg) !== 'string') {
    add(arg);
}}, $__.fs.J$__v5960504135_380_337), 12, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(args, function (_, arg) {
    if (jQuery.isFunction(arg)) {
        if (!options.unique || !self.has(arg)) {
            list.push(arg);
        }
    } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
        add(arg);
    }
});}), $__.fs.add_336)(arguments, 0, true, $__.uid);
    memory;
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    if (memory && !firing) {
        firingIndex = list.length - 1;
        queue.push(memory);
    }
    (function add(args) {
        jQuery.each(args, function (_, arg) {
            if (jQuery.isFunction(arg)) {
                if (!options.unique || !self.has(arg)) {
                    list.push(arg);
                }
            } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                add(arg);
            }
        });
    }(arguments));
    if (memory && !firing) {
        fire();
    }
}
return this;}),
        'remove': ($__.fs.J$__v5960504135_387_294 = function J$__v5960504135_387() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(arguments, function (_, arg) {
    var index;
    while ((index = jQuery.inArray(arg, list, index)) > -1) {
        list.splice(index, 1);
        if (index <= firingIndex) {
            firingIndex--;
        }
    }
});
return this;}),
        'has': ($__.fs.J$__v5960504135_389_295 = function J$__v5960504135_389(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;}),
        'empty': ($__.fs.J$__v5960504135_391_296 = function J$__v5960504135_391() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    list = [];
}
return this;}),
        'disable': ($__.fs.J$__v5960504135_393_297 = function J$__v5960504135_393() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    locked = queue = [];
    list = memory = '';
    return this;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
list = memory = '';
return this;}, $__.fs.J$__v5960504135_393_297_52 = $__.fs.J$__v5960504135_393_297, $__.fs.J$__v5960504135_393_297),
        'disabled': ($__.fs.J$__v5960504135_395_298 = function J$__v5960504135_395() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !list;}),
        'lock': ($__.fs.J$__v5960504135_397_299 = function J$__v5960504135_397() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
if (!memory && !firing) {
    list = memory = '';
}
return this;}),
        'locked': ($__.fs.J$__v5960504135_399_300 = function J$__v5960504135_399() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!locked;}),
        'fireWith': ($__.fs.J$__v5960504135_401_301 = function J$__v5960504135_401(context, args) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0], args = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!locked) {
    args = args || [];
    args = [
        context,
        args.slice ? args.slice() : args
    ];
    queue.push(args);
    if (!firing) {
        fire();
    }
}
return this;}),
        'fire': ($__.fs.J$__v5960504135_403_302 = function J$__v5960504135_403() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
self.fireWith(this, arguments);
return this;}),
        'fired': ($__.fs.J$__v5960504135_405_303 = function J$__v5960504135_405() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!fired;})
    };
    return self;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    options = (typeof options === 'string', (createOptions, $__.fs.createOptions_10)(options, 5, true, $__.uid));
    list = [];
    queue = [];
    firingIndex = -1;
    fire = ($__.fs.J$__v5960504135_378_305 = function J$__v5960504135_378() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = locked || options.once;
fired = firing = true;
for (; queue.length; firingIndex = -1) {
    memory = queue.shift();
    while (++firingIndex < list.length) {
        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
            firingIndex = list.length;
            memory = false;
        }
    }
}
if (!options.memory) {
    memory = false;
}
firing = false;
if (locked) {
    if (memory) {
        list = [];
    } else {
        list = '';
    }
}});
    self = $__.os.oid37 = {
        'add': ($__.fs.J$__v5960504135_383_306 = function J$__v5960504135_383() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    if (memory && !firing) {
        firingIndex = list.length - 1;
        queue.push(memory);
    }
    (function add(args) {
        jQuery.each(args, function (_, arg) {
            if (jQuery.isFunction(arg)) {
                if (!options.unique || !self.has(arg)) {
                    list.push(arg);
                }
            } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                add(arg);
            }
        });
    }(arguments));
    if (memory && !firing) {
        fire();
    }
}
return this;}),
        'remove': ($__.fs.J$__v5960504135_387_307 = function J$__v5960504135_387() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each(arguments, function (_, arg) {
    var index;
    while ((index = jQuery.inArray(arg, list, index)) > -1) {
        list.splice(index, 1);
        if (index <= firingIndex) {
            firingIndex--;
        }
    }
});
return this;}),
        'has': ($__.fs.J$__v5960504135_389_308 = function J$__v5960504135_389(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;}),
        'empty': ($__.fs.J$__v5960504135_391_309 = function J$__v5960504135_391() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (list) {
    list = [];
}
return this;}),
        'disable': ($__.fs.J$__v5960504135_393_310 = function J$__v5960504135_393() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
list = memory = '';
return this;}),
        'disabled': ($__.fs.J$__v5960504135_395_311 = function J$__v5960504135_395() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !list;}),
        'lock': ($__.fs.J$__v5960504135_397_312 = function J$__v5960504135_397() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
locked = queue = [];
if (!memory && !firing) {
    list = memory = '';
}
return this;}),
        'locked': ($__.fs.J$__v5960504135_399_313 = function J$__v5960504135_399() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!locked;}),
        'fireWith': ($__.fs.J$__v5960504135_401_314 = function J$__v5960504135_401(context, args) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
context = arguments[0], args = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!locked) {
    args = args || [];
    args = [
        context,
        args.slice ? args.slice() : args
    ];
    queue.push(args);
    if (!firing) {
        fire();
    }
}
return this;}),
        'fire': ($__.fs.J$__v5960504135_403_315 = function J$__v5960504135_403() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
self.fireWith(this, arguments);
return this;}, $__.fs.J$__v5960504135_403_315_65 = $__.fs.J$__v5960504135_403_315, $__.fs.J$__v5960504135_403_315),
        'fired': ($__.fs.J$__v5960504135_405_316 = function J$__v5960504135_405() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!fired;})
    };
    return self;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
options = typeof options === 'string' ? createOptions(options) : jQuery.extend({}, options);
list = [];
queue = [];
firingIndex = -1;
fire = function () {
    locked = locked || options.once;
    fired = firing = true;
    for (; queue.length; firingIndex = -1) {
        memory = queue.shift();
        while (++firingIndex < list.length) {
            if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                firingIndex = list.length;
                memory = false;
            }
        }
    }
    if (!options.memory) {
        memory = false;
    }
    firing = false;
    if (locked) {
        if (memory) {
            list = [];
        } else {
            list = '';
        }
    }
};
self = {
    add: function () {
        if (list) {
            if (memory && !firing) {
                firingIndex = list.length - 1;
                queue.push(memory);
            }
            (function add(args) {
                jQuery.each(args, function (_, arg) {
                    if (jQuery.isFunction(arg)) {
                        if (!options.unique || !self.has(arg)) {
                            list.push(arg);
                        }
                    } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                        add(arg);
                    }
                });
            }(arguments));
            if (memory && !firing) {
                fire();
            }
        }
        return this;
    },
    remove: function () {
        jQuery.each(arguments, function (_, arg) {
            var index;
            while ((index = jQuery.inArray(arg, list, index)) > -1) {
                list.splice(index, 1);
                if (index <= firingIndex) {
                    firingIndex--;
                }
            }
        });
        return this;
    },
    has: function (fn) {
        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
    },
    empty: function () {
        if (list) {
            list = [];
        }
        return this;
    },
    disable: function () {
        locked = queue = [];
        list = memory = '';
        return this;
    },
    disabled: function () {
        return !list;
    },
    lock: function () {
        locked = queue = [];
        if (!memory && !firing) {
            list = memory = '';
        }
        return this;
    },
    locked: function () {
        return !!locked;
    },
    fireWith: function (context, args) {
        if (!locked) {
            args = args || [];
            args = [
                context,
                args.slice ? args.slice() : args
            ];
            queue.push(args);
            if (!firing) {
                fire();
            }
        }
        return this;
    },
    fire: function () {
        self.fireWith(this, arguments);
        return this;
    },
    fired: function () {
        return !!fired;
    }
};
return self;});
    vvv_tmp5 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp5, $__.os.oid25 = {
        'Deferred': ($__.fs.J$__v5960504135_445_235 = function J$__v5960504135_445(func) {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2, vvv_tmp3, vvv_tmp4, vvv_tmp5, vvv_tmp6, vvv_tmp7, tuples, state, promise, deferred;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
func = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    tuples = [
        [
            'notify',
            'progress',
            (vvv_tmp0 = jQuery, 'Callbacks', $__.fs.J$__v5960504135_407_234.call(vvv_tmp0, 'memory', 0, true, $__.uid)),
            (vvv_tmp1 = jQuery, 'Callbacks', $__.fs.J$__v5960504135_407_234.call(vvv_tmp1, 'memory', 1, true, $__.uid)),
            2
        ],
        [
            'resolve',
            'done',
            (vvv_tmp2 = jQuery, 'Callbacks', $__.fs.J$__v5960504135_407_234.call(vvv_tmp2, 'once memory', 2, true, $__.uid)),
            (vvv_tmp3 = jQuery, 'Callbacks', $__.fs.J$__v5960504135_407_234.call(vvv_tmp3, 'once memory', 3, true, $__.uid)),
            0,
            'resolved'
        ],
        [
            'reject',
            'fail',
            (vvv_tmp4 = jQuery, 'Callbacks', $__.fs.J$__v5960504135_407_234.call(vvv_tmp4, 'once memory', 4, true, $__.uid)),
            (vvv_tmp5 = jQuery, 'Callbacks', $__.fs.J$__v5960504135_407_234.call(vvv_tmp5, 'once memory', 5, true, $__.uid)),
            1,
            'rejected'
        ]
    ];
    state = 'pending';
    promise = $__.os.oid38 = {
        'state': ($__.fs.J$__v5960504135_412_317 = function J$__v5960504135_412() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return state;}),
        'always': ($__.fs.J$__v5960504135_414_318 = function J$__v5960504135_414() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
deferred.done(arguments).fail(arguments);
return this;}),
        'catch': ($__.fs.J$__v5960504135_416_319 = function J$__v5960504135_416(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return promise.then(null, fn);}),
        'pipe': ($__.fs.J$__v5960504135_424_320 = function J$__v5960504135_424() {
var vvv_return, vvv_switch, fns;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
fns = arguments;
return jQuery.Deferred(function (newDefer) {
    jQuery.each(tuples, function (i, tuple) {
        var fn = jQuery.isFunction(fns[tuple[4]]) && fns[tuple[4]];
        deferred[tuple[1]](function () {
            var returned = fn && fn.apply(this, arguments);
            if (returned && jQuery.isFunction(returned.promise)) {
                returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
            } else {
                newDefer[tuple[0] + 'With'](this, fn ? [returned] : arguments);
            }
        });
    });
    fns = null;
}).promise();}),
        'then': ($__.fs.J$__v5960504135_435_321 = function J$__v5960504135_435(onFulfilled, onRejected, onProgress) {
var vvv_return, vvv_switch, maxDepth, resolve;
resolve = function resolve(depth, deferred, handler, special) {
    return function () {
        var that = this, args = arguments, mightThrow = function () {
                var returned, then;
                if (depth < maxDepth) {
                    return;
                }
                returned = handler.apply(that, args);
                if (returned === deferred.promise()) {
                    throw new TypeError('Thenable self-resolution');
                }
                then = returned && (typeof returned === 'object' || typeof returned === 'function') && returned.then;
                if (jQuery.isFunction(then)) {
                    if (special) {
                        then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));
                    } else {
                        maxDepth++;
                        then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
                    }
                } else {
                    if (handler !== Identity) {
                        that = undefined;
                        args = [returned];
                    }
                    (special || deferred.resolveWith)(that, args);
                }
            }, process = special ? mightThrow : function () {
                try {
                    mightThrow();
                } catch (e) {
                    if (jQuery.Deferred.exceptionHook) {
                        jQuery.Deferred.exceptionHook(e, process.stackTrace);
                    }
                    if (depth + 1 >= maxDepth) {
                        if (handler !== Thrower) {
                            that = undefined;
                            args = [e];
                        }
                        deferred.rejectWith(that, args);
                    }
                }
            };
        if (depth) {
            process();
        } else {
            if (jQuery.Deferred.getStackHook) {
                process.stackTrace = jQuery.Deferred.getStackHook();
            }
            window.setTimeout(process);
        }
    };
};
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
onFulfilled = arguments[0], onRejected = arguments[1], onProgress = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
maxDepth = 0;
return jQuery.Deferred(function (newDefer) {
    tuples[0][3].add(resolve(0, newDefer, jQuery.isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));
    tuples[1][3].add(resolve(0, newDefer, jQuery.isFunction(onFulfilled) ? onFulfilled : Identity));
    tuples[2][3].add(resolve(0, newDefer, jQuery.isFunction(onRejected) ? onRejected : Thrower));
}).promise();}),
        'promise': ($__.fs.J$__v5960504135_437_322 = function J$__v5960504135_437(obj) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return obj != null, (vvv_tmp0 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp0, obj, promise, 4, true, $__.uid));
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return obj != null ? jQuery.extend(obj, promise) : promise;})
    };
    deferred = $__.os.oid39 = {};
    vvv_tmp6 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp6, tuples, ($__.fs.J$__v5960504135_443_323 = function J$__v5960504135_443(i, tuple) {
var vvv_return, vvv_switch, vvv_tmp0, list, stateString, vvv_tmp1;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], tuple = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    list = (tuple[2, 2], $__.os.oid27);
    stateString = TAJS_restrictToType(tuple[5, 5], 'undefined');
    (promise, $__.os.oid38)[TAJS_restrictToType(tuple[1, 1], 'string'), 'progress'] = TAJS_restrictToType((list, $__.os.oid27).add, 'function');
    stateString;
    vvv_tmp0 = list, 'add', $__.fs.J$__v5960504135_383_241.call(vvv_tmp0, (TAJS_restrictToType(((tuple[3, 3], $__.os.oid29), $__.os.oid29).fire, 'function'), $__.fs.J$__v5960504135_403_263), 0, true, $__.uid);
    (deferred, $__.os.oid39)[TAJS_restrictToType(tuple[0, 0], 'string'), 'notify'] = ($__.fs.J$__v5960504135_441_326 = function J$__v5960504135_441() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);
return this;});
    (deferred, $__.os.oid39)[TAJS_restrictToType(tuple[0, 0], 'string') + 'With', 'notifyWith'] = TAJS_restrictToType((list, $__.os.oid27).fireWith, 'function');
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    list = (tuple[2, 2], $__.os.oid31);
    stateString = TAJS_restrictToType(tuple[5, 5], 'string');
    (promise, $__.os.oid38)[TAJS_restrictToType(tuple[1, 1], 'string'), 'done'] = TAJS_restrictToType((list, $__.os.oid31).add, 'function');
    stateString;
    vvv_tmp0 = list, 'add', $__.fs.J$__v5960504135_383_267.call(vvv_tmp0, ($__.fs.J$__v5960504135_439_327 = function J$__v5960504135_439() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    state = stateString;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
state = stateString;}, $__.fs.J$__v5960504135_439_327_50 = $__.fs.J$__v5960504135_439_327, $__.fs.J$__v5960504135_439_327), (TAJS_restrictToType(((TAJS_restrictToType(tuples[3 - i, 2], 'object')[2, 2], $__.os.oid35), $__.os.oid35).disable, 'function'), $__.fs.J$__v5960504135_393_297), (TAJS_restrictToType(((TAJS_restrictToType(tuples[0, 0], 'object')[2, 2], $__.os.oid27), $__.os.oid27).lock, 'function'), $__.fs.J$__v5960504135_397_247), 0, true, $__.uid);
    vvv_tmp1 = list, 'add', $__.fs.J$__v5960504135_383_267.call(vvv_tmp1, (TAJS_restrictToType(((tuple[3, 3], $__.os.oid33), $__.os.oid33).fire, 'function'), $__.fs.J$__v5960504135_403_289), 1, true, $__.uid);
    (deferred, $__.os.oid39)[TAJS_restrictToType(tuple[0, 0], 'string'), 'resolve'] = ($__.fs.J$__v5960504135_441_332 = function J$__v5960504135_441() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);
return this;});
    (deferred, $__.os.oid39)[TAJS_restrictToType(tuple[0, 0], 'string') + 'With', 'resolveWith'] = TAJS_restrictToType((list, $__.os.oid31).fireWith, 'function');
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    list = (tuple[2, 2], $__.os.oid35);
    stateString = TAJS_restrictToType(tuple[5, 5], 'string');
    (promise, $__.os.oid38)[TAJS_restrictToType(tuple[1, 1], 'string'), 'fail'] = TAJS_restrictToType((list, $__.os.oid35).add, 'function');
    stateString;
    vvv_tmp0 = list, 'add', $__.fs.J$__v5960504135_383_293.call(vvv_tmp0, ($__.fs.J$__v5960504135_439_333 = function J$__v5960504135_439() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
state = stateString;}, $__.fs.J$__v5960504135_439_333_59 = $__.fs.J$__v5960504135_439_333, $__.fs.J$__v5960504135_439_333), (TAJS_restrictToType(((TAJS_restrictToType(tuples[3 - i, 1], 'object')[2, 2], $__.os.oid31), $__.os.oid31).disable, 'function'), $__.fs.J$__v5960504135_393_271), (TAJS_restrictToType(((TAJS_restrictToType(tuples[0, 0], 'object')[2, 2], $__.os.oid27), $__.os.oid27).lock, 'function'), $__.fs.J$__v5960504135_397_247), 0, true, $__.uid);
    vvv_tmp1 = list, 'add', $__.fs.J$__v5960504135_383_293.call(vvv_tmp1, (TAJS_restrictToType(((tuple[3, 3], $__.os.oid37), $__.os.oid37).fire, 'function'), $__.fs.J$__v5960504135_403_315), 1, true, $__.uid);
    (deferred, $__.os.oid39)[TAJS_restrictToType(tuple[0, 0], 'string'), 'reject'] = ($__.fs.J$__v5960504135_441_338 = function J$__v5960504135_441() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);
return this;});
    (deferred, $__.os.oid39)[TAJS_restrictToType(tuple[0, 0], 'string') + 'With', 'rejectWith'] = TAJS_restrictToType((list, $__.os.oid35).fireWith, 'function');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
list = tuple[2];
stateString = tuple[5];
promise[tuple[1]] = list.add;
if (stateString) {
    list.add(function () {
        state = stateString;
    }, tuples[3 - i][2].disable, tuples[0][2].lock);
}
list.add(tuple[3].fire);
deferred[tuple[0]] = function () {
    deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);
    return this;
};
deferred[tuple[0] + 'With'] = list.fireWith;}, $__.fs.J$__v5960504135_443_323), 13, true, $__.uid);
    vvv_tmp7 = promise, 'promise', $__.fs.J$__v5960504135_437_322.call(vvv_tmp7, deferred, 0, true, $__.uid);
    func;
    return deferred;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
tuples = [
    [
        'notify',
        'progress',
        jQuery.Callbacks('memory'),
        jQuery.Callbacks('memory'),
        2
    ],
    [
        'resolve',
        'done',
        jQuery.Callbacks('once memory'),
        jQuery.Callbacks('once memory'),
        0,
        'resolved'
    ],
    [
        'reject',
        'fail',
        jQuery.Callbacks('once memory'),
        jQuery.Callbacks('once memory'),
        1,
        'rejected'
    ]
];
state = 'pending';
promise = {
    state: function () {
        return state;
    },
    always: function () {
        deferred.done(arguments).fail(arguments);
        return this;
    },
    'catch': function (fn) {
        return promise.then(null, fn);
    },
    pipe: function () {
        var fns = arguments;
        return jQuery.Deferred(function (newDefer) {
            jQuery.each(tuples, function (i, tuple) {
                var fn = jQuery.isFunction(fns[tuple[4]]) && fns[tuple[4]];
                deferred[tuple[1]](function () {
                    var returned = fn && fn.apply(this, arguments);
                    if (returned && jQuery.isFunction(returned.promise)) {
                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                    } else {
                        newDefer[tuple[0] + 'With'](this, fn ? [returned] : arguments);
                    }
                });
            });
            fns = null;
        }).promise();
    },
    then: function (onFulfilled, onRejected, onProgress) {
        var maxDepth = 0;
        function resolve(depth, deferred, handler, special) {
            return function () {
                var that = this, args = arguments, mightThrow = function () {
                        var returned, then;
                        if (depth < maxDepth) {
                            return;
                        }
                        returned = handler.apply(that, args);
                        if (returned === deferred.promise()) {
                            throw new TypeError('Thenable self-resolution');
                        }
                        then = returned && (typeof returned === 'object' || typeof returned === 'function') && returned.then;
                        if (jQuery.isFunction(then)) {
                            if (special) {
                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));
                            } else {
                                maxDepth++;
                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
                            }
                        } else {
                            if (handler !== Identity) {
                                that = undefined;
                                args = [returned];
                            }
                            (special || deferred.resolveWith)(that, args);
                        }
                    }, process = special ? mightThrow : function () {
                        try {
                            mightThrow();
                        } catch (e) {
                            if (jQuery.Deferred.exceptionHook) {
                                jQuery.Deferred.exceptionHook(e, process.stackTrace);
                            }
                            if (depth + 1 >= maxDepth) {
                                if (handler !== Thrower) {
                                    that = undefined;
                                    args = [e];
                                }
                                deferred.rejectWith(that, args);
                            }
                        }
                    };
                if (depth) {
                    process();
                } else {
                    if (jQuery.Deferred.getStackHook) {
                        process.stackTrace = jQuery.Deferred.getStackHook();
                    }
                    window.setTimeout(process);
                }
            };
        }
        return jQuery.Deferred(function (newDefer) {
            tuples[0][3].add(resolve(0, newDefer, jQuery.isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));
            tuples[1][3].add(resolve(0, newDefer, jQuery.isFunction(onFulfilled) ? onFulfilled : Identity));
            tuples[2][3].add(resolve(0, newDefer, jQuery.isFunction(onRejected) ? onRejected : Thrower));
        }).promise();
    },
    promise: function (obj) {
        return obj != null ? jQuery.extend(obj, promise) : promise;
    }
};
deferred = {};
jQuery.each(tuples, function (i, tuple) {
    var list = tuple[2], stateString = tuple[5];
    promise[tuple[1]] = list.add;
    if (stateString) {
        list.add(function () {
            state = stateString;
        }, tuples[3 - i][2].disable, tuples[0][2].lock);
    }
    list.add(tuple[3].fire);
    deferred[tuple[0]] = function () {
        deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);
        return this;
    };
    deferred[tuple[0] + 'With'] = list.fireWith;
});
promise.promise(deferred);
if (func) {
    func.call(deferred, deferred);
}
return deferred;}),
        'when': ($__.fs.J$__v5960504135_451_236 = function J$__v5960504135_451(singleValue) {
var vvv_return, vvv_switch, remaining, i, resolveContexts, resolveValues, master, updateFunc;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
singleValue = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
remaining = arguments.length;
i = remaining;
resolveContexts = Array(i);
resolveValues = slice.call(arguments);
master = jQuery.Deferred();
updateFunc = function (i) {
    return function (value) {
        resolveContexts[i] = this;
        resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;
        if (!--remaining) {
            master.resolveWith(resolveContexts, resolveValues);
        }
    };
};
if (remaining <= 1) {
    adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining);
    if (master.state() === 'pending' || jQuery.isFunction(resolveValues[i] && resolveValues[i].then)) {
        return master.then();
    }
}
while (i--) {
    adoptValue(resolveValues[i], updateFunc(i), master.reject);
}
return master.promise();})
    }, 3, true, $__.uid);
    rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    TAJS_restrictToType(jQuery.Deferred, 'function').exceptionHook = ($__.fs.J$__v5960504135_453_237 = function J$__v5960504135_453(error, stack) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
error = arguments[0], stack = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {
    window.console.warn('jQuery.Deferred exception: ' + error.message, error.stack, stack);
}});
    jQuery.readyException = ($__.fs.J$__v5960504135_457_238 = function J$__v5960504135_457(error) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
error = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
window.setTimeout(function () {
    throw error;
});});
    readyList = (vvv_tmp6 = jQuery, 'Deferred', $__.fs.J$__v5960504135_445_235.call(vvv_tmp6, 0, true, $__.uid));
    ((jQuery.fn, $__.os.oid2), $__.os.oid2).ready = ($__.fs.J$__v5960504135_461_339 = function J$__v5960504135_461(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
readyList.then(fn).catch(function (error) {
    jQuery.readyException(error);
});
return this;});
    vvv_tmp7 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp7, $__.os.oid40 = {
        'isReady': false,
        'readyWait': 1,
        'ready': ($__.fs.J$__v5960504135_463_340 = function J$__v5960504135_463(wait) {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
wait = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    wait === true, (jQuery.isReady, false);
    jQuery.isReady = true;
    wait !== true, ((vvv_tmp0 = jQuery).readyWait = (vvv_tmp0.readyWait, 1) - 1) > 0;
    vvv_tmp1 = readyList, 'resolveWith', $__.fs.J$__v5960504135_401_275.call(vvv_tmp1, document, [jQuery], 0, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
    return;
}
jQuery.isReady = true;
if (wait !== true && --jQuery.readyWait > 0) {
    return;
}
readyList.resolveWith(document, [jQuery]);})
    }, 5, true, $__.uid);
    TAJS_restrictToType(jQuery.ready, 'function').then = TAJS_restrictToType((readyList, $__.os.oid39).then, 'function');
    TAJS_restrictToType(document.readyState, 'string') === 'complete', TAJS_restrictToType(document.readyState, 'string') !== 'loading';
    document['addEventListener']('DOMContentLoaded', ((completed, $__.fs.completed_14), $__.fs.completed_14_66));
    window['addEventListener']('load', ((completed, $__.fs.completed_14), $__.fs.completed_14_67));
    access = ($__.fs.J$__v5960504135_468_341 = function J$__v5960504135_468(elems, fn, key, value, chainable, emptyGet, raw) {
var vvv_return, vvv_switch, i, len, bulk;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elems = arguments[0], fn = arguments[1], key = arguments[2], value = arguments[3], chainable = arguments[4], emptyGet = arguments[5], raw = arguments[6];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
len = elems.length;
bulk = key == null;
if (jQuery.type(key) === 'object') {
    chainable = true;
    for (i in key) {
        access(elems, fn, i, key[i], true, emptyGet, raw);
    }
} else if (value !== undefined) {
    chainable = true;
    if (!jQuery.isFunction(value)) {
        raw = true;
    }
    if (bulk) {
        if (raw) {
            fn.call(elems, value);
            fn = null;
        } else {
            bulk = fn;
            fn = function (elem, key, value) {
                return bulk.call(jQuery(elem), value);
            };
        }
    }
    if (fn) {
        for (; i < len; i++) {
            fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
        }
    }
}
if (chainable) {
    return elems;
}
if (bulk) {
    return fn.call(elems);
}
return len ? fn(elems[0], key) : emptyGet;});
    acceptData = ($__.fs.J$__v5960504135_470_342 = function J$__v5960504135_470(owner) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
owner = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;});
    Data.uid = 1;
    Data.prototype = $__.os.oid41 = {
        'cache': ($__.fs.J$__v5960504135_473_343 = function J$__v5960504135_473(owner) {
var vvv_return, vvv_switch, value;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
owner = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
value = owner[this.expando];
if (!value) {
    value = {};
    if (acceptData(owner)) {
        if (owner.nodeType) {
            owner[this.expando] = value;
        } else {
            Object.defineProperty(owner, this.expando, {
                value: value,
                configurable: true
            });
        }
    }
}
return value;}),
        'set': ($__.fs.J$__v5960504135_475_344 = function J$__v5960504135_475(owner, data, value) {
var vvv_return, vvv_switch, prop, cache;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
owner = arguments[0], data = arguments[1], value = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
cache = this.cache(owner);
if (typeof data === 'string') {
    cache[jQuery.camelCase(data)] = value;
} else {
    for (prop in data) {
        cache[jQuery.camelCase(prop)] = data[prop];
    }
}
return cache;}),
        'get': ($__.fs.J$__v5960504135_477_345 = function J$__v5960504135_477(owner, key) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
owner = arguments[0], key = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return key === undefined ? this.cache(owner) : owner[this.expando] && owner[this.expando][jQuery.camelCase(key)];}),
        'access': ($__.fs.J$__v5960504135_479_346 = function J$__v5960504135_479(owner, key, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
owner = arguments[0], key = arguments[1], value = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (key === undefined || key && typeof key === 'string' && value === undefined) {
    return this.get(owner, key);
}
this.set(owner, key, value);
return value !== undefined ? value : key;}),
        'remove': ($__.fs.J$__v5960504135_481_347 = function J$__v5960504135_481(owner, key) {
var vvv_return, vvv_switch, i, cache;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
owner = arguments[0], key = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
cache = owner[this.expando];
if (cache === undefined) {
    return;
}
if (key !== undefined) {
    if (Array.isArray(key)) {
        key = key.map(jQuery.camelCase);
    } else {
        key = jQuery.camelCase(key);
        key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
    }
    i = key.length;
    while (i--) {
        delete cache[key[i]];
    }
}
if (key === undefined || jQuery.isEmptyObject(cache)) {
    if (owner.nodeType) {
        owner[this.expando] = undefined;
    } else {
        delete owner[this.expando];
    }
}}),
        'hasData': ($__.fs.J$__v5960504135_483_348 = function J$__v5960504135_483(owner) {
var vvv_return, vvv_switch, cache;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
owner = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
cache = owner[this.expando];
return cache !== undefined && !jQuery.isEmptyObject(cache);})
    };
    dataPriv = new (Data, $__.fs.Data_15)(0, true, $__.uid);
    dataUser = new (Data, $__.fs.Data_15)(1, true, $__.uid);
    rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;
    rmultiDash = /[A-Z]/g;
    vvv_tmp8 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp8, $__.os.oid42 = {
        'hasData': ($__.fs.J$__v5960504135_487_349 = function J$__v5960504135_487(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dataUser.hasData(elem) || dataPriv.hasData(elem);}),
        'data': ($__.fs.J$__v5960504135_489_350 = function J$__v5960504135_489(elem, name, data) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], data = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dataUser.access(elem, name, data);}),
        'removeData': ($__.fs.J$__v5960504135_491_351 = function J$__v5960504135_491(elem, name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
dataUser.remove(elem, name);}),
        '_data': ($__.fs.J$__v5960504135_493_352 = function J$__v5960504135_493(elem, name, data) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], data = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return dataPriv.access(elem, name, data);}),
        '_removeData': ($__.fs.J$__v5960504135_495_353 = function J$__v5960504135_495(elem, name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
dataPriv.remove(elem, name);})
    }, 6, true, $__.uid);
    vvv_tmp9 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp9, $__.os.oid43 = {
        'data': ($__.fs.J$__v5960504135_503_354 = function J$__v5960504135_503(key, value) {
var vvv_return, vvv_switch, i, name, data, elem, attrs;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
key = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
elem = this[0];
attrs = elem && elem.attributes;
if (key === undefined) {
    if (this.length) {
        data = dataUser.get(elem);
        if (elem.nodeType === 1 && !dataPriv.get(elem, 'hasDataAttrs')) {
            i = attrs.length;
            while (i--) {
                if (attrs[i]) {
                    name = attrs[i].name;
                    if (name.indexOf('data-') === 0) {
                        name = jQuery.camelCase(name.slice(5));
                        dataAttr(elem, name, data[name]);
                    }
                }
            }
            dataPriv.set(elem, 'hasDataAttrs', true);
        }
    }
    return data;
}
if (typeof key === 'object') {
    return this.each(function () {
        dataUser.set(this, key);
    });
}
return access(this, function (value) {
    var data;
    if (elem && value === undefined) {
        data = dataUser.get(elem, key);
        if (data !== undefined) {
            return data;
        }
        data = dataAttr(elem, key);
        if (data !== undefined) {
            return data;
        }
        return;
    }
    this.each(function () {
        dataUser.set(this, key, value);
    });
}, null, value, arguments.length > 1, null, true);}),
        'removeData': ($__.fs.J$__v5960504135_507_355 = function J$__v5960504135_507(key) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
key = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.each(function () {
    dataUser.remove(this, key);
});})
    }, 7, true, $__.uid);
    vvv_tmp10 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp10, $__.os.oid44 = {
        'queue': ($__.fs.J$__v5960504135_509_356 = function J$__v5960504135_509(elem, type, data) {
var vvv_return, vvv_switch, queue;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], type = arguments[1], data = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (elem) {
    type = (type || 'fx') + 'queue';
    queue = dataPriv.get(elem, type);
    if (data) {
        if (!queue || Array.isArray(data)) {
            queue = dataPriv.access(elem, type, jQuery.makeArray(data));
        } else {
            queue.push(data);
        }
    }
    return queue || [];
}}),
        'dequeue': ($__.fs.J$__v5960504135_513_357 = function J$__v5960504135_513(elem, type) {
var vvv_return, vvv_switch, queue, startLength, fn, hooks, next;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], type = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
type = type || 'fx';
queue = jQuery.queue(elem, type);
startLength = queue.length;
fn = queue.shift();
hooks = jQuery._queueHooks(elem, type);
next = function () {
    jQuery.dequeue(elem, type);
};
if (fn === 'inprogress') {
    fn = queue.shift();
    startLength--;
}
if (fn) {
    if (type === 'fx') {
        queue.unshift('inprogress');
    }
    delete hooks.stop;
    fn.call(elem, next, hooks);
}
if (!startLength && hooks) {
    hooks.empty.fire();
}}),
        '_queueHooks': ($__.fs.J$__v5960504135_517_358 = function J$__v5960504135_517(elem, type) {
var vvv_return, vvv_switch, key;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], type = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
key = type + 'queueHooks';
return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
    empty: jQuery.Callbacks('once memory').add(function () {
        dataPriv.remove(elem, [
            type + 'queue',
            key
        ]);
    })
});})
    }, 8, true, $__.uid);
    vvv_tmp11 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp11, $__.os.oid45 = {
        'queue': ($__.fs.J$__v5960504135_521_359 = function J$__v5960504135_521(type, data) {
var vvv_return, vvv_switch, setter;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0], data = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
setter = 2;
if (typeof type !== 'string') {
    data = type;
    type = 'fx';
    setter--;
}
if (arguments.length < setter) {
    return jQuery.queue(this[0], type);
}
return data === undefined ? this : this.each(function () {
    var queue = jQuery.queue(this, type, data);
    jQuery._queueHooks(this, type);
    if (type === 'fx' && queue[0] !== 'inprogress') {
        jQuery.dequeue(this, type);
    }
});}),
        'dequeue': ($__.fs.J$__v5960504135_525_360 = function J$__v5960504135_525(type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.each(function () {
    jQuery.dequeue(this, type);
});}),
        'clearQueue': ($__.fs.J$__v5960504135_527_361 = function J$__v5960504135_527(type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.queue(type || 'fx', []);}),
        'promise': ($__.fs.J$__v5960504135_531_362 = function J$__v5960504135_531(type, obj) {
var vvv_return, vvv_switch, tmp, count, defer, elements, i, resolve;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0], obj = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
count = 1;
defer = jQuery.Deferred();
elements = this;
i = this.length;
resolve = function () {
    if (!--count) {
        defer.resolveWith(elements, [elements]);
    }
};
if (typeof type !== 'string') {
    obj = type;
    type = undefined;
}
type = type || 'fx';
while (i--) {
    tmp = dataPriv.get(elements[i], type + 'queueHooks');
    if (tmp && tmp.empty) {
        count++;
        tmp.empty.add(resolve);
    }
}
resolve();
return defer.promise(obj);})
    }, 9, true, $__.uid);
    pnum = TAJS_restrictToType(/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, 'string');
    rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i');
    cssExpand = [
        'Top',
        'Right',
        'Bottom',
        'Left'
    ];
    isHiddenWithinTree = ($__.fs.J$__v5960504135_533_363 = function J$__v5960504135_533(elem, el) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], el = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
elem = el || elem;
return elem.style.display === 'none' || elem.style.display === '' && jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, 'display') === 'none';});
    swap = ($__.fs.J$__v5960504135_535_364 = function J$__v5960504135_535(elem, options, callback, args) {
var vvv_return, vvv_switch, ret, name, old;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], options = arguments[1], callback = arguments[2], args = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
old = {};
for (name in options) {
    old[name] = elem.style[name];
    elem.style[name] = options[name];
}
ret = callback.apply(elem, args || []);
for (name in options) {
    elem.style[name] = old[name];
}
return ret;});
    defaultDisplayMap = $__.os.oid46 = {};
    vvv_tmp12 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp12, $__.os.oid47 = {
        'show': ($__.fs.J$__v5960504135_544_365 = function J$__v5960504135_544() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return showHide(this, true);}),
        'hide': ($__.fs.J$__v5960504135_546_366 = function J$__v5960504135_546() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return showHide(this);}),
        'toggle': ($__.fs.J$__v5960504135_550_367 = function J$__v5960504135_550(state) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
state = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof state === 'boolean') {
    return state ? this.show() : this.hide();
}
return this.each(function () {
    if (isHiddenWithinTree(this)) {
        jQuery(this).show();
    } else {
        jQuery(this).hide();
    }
});})
    }, 10, true, $__.uid);
    rcheckableType = /^(?:checkbox|radio)$/i;
    rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i;
    rscriptType = /^$|\/(?:java|ecma)script/i;
    wrapMap = $__.os.oid48 = {
        'option': [
            1,
            '<select multiple=\'multiple\'>',
            '</select>'
        ],
        'thead': [
            1,
            '<table>',
            '</table>'
        ],
        'col': [
            2,
            '<table><colgroup>',
            '</colgroup></table>'
        ],
        'tr': [
            2,
            '<table><tbody>',
            '</tbody></table>'
        ],
        'td': [
            3,
            '<table><tbody><tr>',
            '</tr></tbody></table>'
        ],
        '_default': [
            0,
            '',
            ''
        ]
    };
    (wrapMap, $__.os.oid48).optgroup = TAJS_restrictToType((wrapMap, $__.os.oid48).option, 'object');
    (wrapMap, $__.os.oid48).tbody = (wrapMap, $__.os.oid48).tfoot = (wrapMap, $__.os.oid48).colgroup = (wrapMap, $__.os.oid48).caption = TAJS_restrictToType((wrapMap, $__.os.oid48).thead, 'object');
    (wrapMap, $__.os.oid48).th = TAJS_restrictToType((wrapMap, $__.os.oid48).td, 'object');
    rhtml = /<|&#?\w+;/;
    (($__.fs.J$__v5960504135_555_368 = function J$__v5960504135_555() {
var vvv_return, vvv_switch, fragment, div, input;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    fragment = document['createDocumentFragment']();
    div = fragment['appendChild'](document['createElement']('div'));
    input = document['createElement']('input');
    input['setAttribute']('type', 'radio');
    input['setAttribute']('checked', 'checked');
    input['setAttribute']('name', 't');
    div['appendChild'](input);
    (support, $__.os.oid1).checkClone = (TAJS_restrictToType(div['cloneNode'](true)['cloneNode'](true).lastChild, 'HTMLInputElement').checked, true);
    div.innerHTML = '<textarea>x</textarea>';
    (support, $__.os.oid1).noCloneChecked = !!TAJS_restrictToType(TAJS_restrictToType(div['cloneNode'](true).lastChild, 'HTMLTextAreaElement').defaultValue, 'string');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
fragment = document.createDocumentFragment();
div = fragment.appendChild(document.createElement('div'));
input = document.createElement('input');
input.setAttribute('type', 'radio');
input.setAttribute('checked', 'checked');
input.setAttribute('name', 't');
div.appendChild(input);
support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
div.innerHTML = '<textarea>x</textarea>';
support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;}), $__.fs.J$__v5960504135_555_368)(0, true, $__.uid);
    documentElement = TAJS_restrictToType(document.documentElement, 'HTMLHtmlElement');
    rkeyEvent = /^key/;
    rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;
    rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
    jQuery.event = $__.os.oid56 = {
        'global': $__.os.oid49 = {},
        'add': ($__.fs.J$__v5960504135_567_369 = function J$__v5960504135_567(elem, types, handler, data, selector) {
var vvv_return, vvv_switch, handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], types = arguments[1], handler = arguments[2], data = arguments[3], selector = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
elemData = dataPriv.get(elem);
if (!elemData) {
    return;
}
if (handler.handler) {
    handleObjIn = handler;
    handler = handleObjIn.handler;
    selector = handleObjIn.selector;
}
if (selector) {
    jQuery.find.matchesSelector(documentElement, selector);
}
if (!handler.guid) {
    handler.guid = jQuery.guid++;
}
if (!(events = elemData.events)) {
    events = elemData.events = {};
}
if (!(eventHandle = elemData.handle)) {
    eventHandle = elemData.handle = function (e) {
        return typeof jQuery !== 'undefined' && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
    };
}
types = (types || '').match(rnothtmlwhite) || [''];
t = types.length;
while (t--) {
    tmp = rtypenamespace.exec(types[t]) || [];
    type = origType = tmp[1];
    namespaces = (tmp[2] || '').split('.').sort();
    if (!type) {
        continue;
    }
    special = jQuery.event.special[type] || {};
    type = (selector ? special.delegateType : special.bindType) || type;
    special = jQuery.event.special[type] || {};
    handleObj = jQuery.extend({
        type: type,
        origType: origType,
        data: data,
        handler: handler,
        guid: handler.guid,
        selector: selector,
        needsContext: selector && jQuery.expr.match.needsContext.test(selector),
        namespace: namespaces.join('.')
    }, handleObjIn);
    if (!(handlers = events[type])) {
        handlers = events[type] = [];
        handlers.delegateCount = 0;
        if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
            if (elem.addEventListener) {
                elem.addEventListener(type, eventHandle);
            }
        }
    }
    if (special.add) {
        special.add.call(elem, handleObj);
        if (!handleObj.handler.guid) {
            handleObj.handler.guid = handler.guid;
        }
    }
    if (selector) {
        handlers.splice(handlers.delegateCount++, 0, handleObj);
    } else {
        handlers.push(handleObj);
    }
    jQuery.event.global[type] = true;
}}),
        'remove': ($__.fs.J$__v5960504135_569_370 = function J$__v5960504135_569(elem, types, handler, selector, mappedTypes) {
var vvv_return, vvv_switch, j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], types = arguments[1], handler = arguments[2], selector = arguments[3], mappedTypes = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
if (!elemData || !(events = elemData.events)) {
    return;
}
types = (types || '').match(rnothtmlwhite) || [''];
t = types.length;
while (t--) {
    tmp = rtypenamespace.exec(types[t]) || [];
    type = origType = tmp[1];
    namespaces = (tmp[2] || '').split('.').sort();
    if (!type) {
        for (type in events) {
            jQuery.event.remove(elem, type + types[t], handler, selector, true);
        }
        continue;
    }
    special = jQuery.event.special[type] || {};
    type = (selector ? special.delegateType : special.bindType) || type;
    handlers = events[type] || [];
    tmp = tmp[2] && new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)');
    origCount = j = handlers.length;
    while (j--) {
        handleObj = handlers[j];
        if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === '**' && handleObj.selector)) {
            handlers.splice(j, 1);
            if (handleObj.selector) {
                handlers.delegateCount--;
            }
            if (special.remove) {
                special.remove.call(elem, handleObj);
            }
        }
    }
    if (origCount && !handlers.length) {
        if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
            jQuery.removeEvent(elem, type, elemData.handle);
        }
        delete events[type];
    }
}
if (jQuery.isEmptyObject(events)) {
    dataPriv.remove(elem, 'handle events');
}}),
        'dispatch': ($__.fs.J$__v5960504135_571_371 = function J$__v5960504135_571(nativeEvent) {
var vvv_return, vvv_switch, event, i, j, ret, matched, handleObj, handlerQueue, args, handlers, special;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
nativeEvent = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
event = jQuery.event.fix(nativeEvent);
args = new Array(arguments.length);
handlers = (dataPriv.get(this, 'events') || {})[event.type] || [];
special = jQuery.event.special[event.type] || {};
args[0] = event;
for (i = 1; i < arguments.length; i++) {
    args[i] = arguments[i];
}
event.delegateTarget = this;
if (special.preDispatch && special.preDispatch.call(this, event) === false) {
    return;
}
handlerQueue = jQuery.event.handlers.call(this, event, handlers);
i = 0;
while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
    event.currentTarget = matched.elem;
    j = 0;
    while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
        if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {
            event.handleObj = handleObj;
            event.data = handleObj.data;
            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
            if (ret !== undefined) {
                if ((event.result = ret) === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
            }
        }
    }
}
if (special.postDispatch) {
    special.postDispatch.call(this, event);
}
return event.result;}),
        'handlers': ($__.fs.J$__v5960504135_573_372 = function J$__v5960504135_573(event, handlers) {
var vvv_return, vvv_switch, i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue, delegateCount, cur;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0], handlers = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
handlerQueue = [];
delegateCount = handlers.delegateCount;
cur = event.target;
if (delegateCount && cur.nodeType && !(event.type === 'click' && event.button >= 1)) {
    for (; cur !== this; cur = cur.parentNode || this) {
        if (cur.nodeType === 1 && !(event.type === 'click' && cur.disabled === true)) {
            matchedHandlers = [];
            matchedSelectors = {};
            for (i = 0; i < delegateCount; i++) {
                handleObj = handlers[i];
                sel = handleObj.selector + ' ';
                if (matchedSelectors[sel] === undefined) {
                    matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
                }
                if (matchedSelectors[sel]) {
                    matchedHandlers.push(handleObj);
                }
            }
            if (matchedHandlers.length) {
                handlerQueue.push({
                    elem: cur,
                    handlers: matchedHandlers
                });
            }
        }
    }
}
cur = this;
if (delegateCount < handlers.length) {
    handlerQueue.push({
        elem: cur,
        handlers: handlers.slice(delegateCount)
    });
}
return handlerQueue;}),
        'addProp': ($__.fs.J$__v5960504135_581_373 = function J$__v5960504135_581(name, hook) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], hook = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid59 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 9, true, $__.uid)), ($__.fs.J$__v5960504135_577_386 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_387 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid60 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 10, true, $__.uid)), ($__.fs.J$__v5960504135_577_388 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_389 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid61 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 11, true, $__.uid)), ($__.fs.J$__v5960504135_577_390 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_391 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid62 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 12, true, $__.uid)), ($__.fs.J$__v5960504135_577_392 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_393 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid63 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 13, true, $__.uid)), ($__.fs.J$__v5960504135_577_394 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_395 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid64 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 14, true, $__.uid)), ($__.fs.J$__v5960504135_577_396 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_397 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid65 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 15, true, $__.uid)), ($__.fs.J$__v5960504135_577_398 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_399 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid66 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 16, true, $__.uid)), ($__.fs.J$__v5960504135_577_400 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_401 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid67 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 17, true, $__.uid)), ($__.fs.J$__v5960504135_577_402 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_403 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid68 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 18, true, $__.uid)), ($__.fs.J$__v5960504135_577_404 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_405 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid69 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 19, true, $__.uid)), ($__.fs.J$__v5960504135_577_406 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_407 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid70 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 20, true, $__.uid)), ($__.fs.J$__v5960504135_577_408 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_409 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid71 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 21, true, $__.uid)), ($__.fs.J$__v5960504135_577_410 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_411 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid72 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 22, true, $__.uid)), ($__.fs.J$__v5960504135_577_412 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_413 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid73 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 23, true, $__.uid)), ($__.fs.J$__v5960504135_577_414 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_415 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid74 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 24, true, $__.uid)), ($__.fs.J$__v5960504135_577_416 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_417 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid75 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 25, true, $__.uid)), ($__.fs.J$__v5960504135_577_418 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_419 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 17);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid76 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 26, true, $__.uid)), ($__.fs.J$__v5960504135_577_420 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_421 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid77 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 27, true, $__.uid)), ($__.fs.J$__v5960504135_577_422 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_423 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 19:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 19);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid78 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 28, true, $__.uid)), ($__.fs.J$__v5960504135_577_424 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_425 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid79 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 29, true, $__.uid)), ($__.fs.J$__v5960504135_577_426 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_427 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 21:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 21);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid80 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 30, true, $__.uid)), ($__.fs.J$__v5960504135_577_428 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_429 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 22:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 22);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid81 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 31, true, $__.uid)), ($__.fs.J$__v5960504135_577_430 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_431 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 23:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 23);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid82 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 32, true, $__.uid)), ($__.fs.J$__v5960504135_577_432 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_433 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 24:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 24);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid83 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 33, true, $__.uid)), ($__.fs.J$__v5960504135_577_434 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_435 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 25:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 25);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid84 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 34, true, $__.uid)), ($__.fs.J$__v5960504135_577_436 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_437 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 26:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 26);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid85 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 35, true, $__.uid)), ($__.fs.J$__v5960504135_577_438 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_439 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 27:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 27);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid86 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 36, true, $__.uid)), ($__.fs.J$__v5960504135_577_440 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_441 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 28:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 28);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid87 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, hook, 37, true, $__.uid)), ($__.fs.J$__v5960504135_577_442 = function J$__v5960504135_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return this.originalEvent[name];
}})),
        'set': ($__.fs.J$__v5960504135_579_443 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
case 29:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 29);
    Object['defineProperty']((TAJS_restrictToType(jQuery.Event, 'function').prototype, $__.os.oid57), name, $__.os.oid88 = {
        'enumerable': true,
        'configurable': true,
        'get': ((vvv_tmp0 = jQuery, 'isFunction', $__.fs.J$__v5960504135_38_73.call(vvv_tmp0, (hook, $__.fs.J$__v5960504135_605_385), 38, true, $__.uid)), ($__.fs.J$__v5960504135_575_444 = function J$__v5960504135_575() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.originalEvent) {
    return hook(this.originalEvent);
}})),
        'set': ($__.fs.J$__v5960504135_579_445 = function J$__v5960504135_579(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(this, name, {
    enumerable: true,
    configurable: true,
    writable: true,
    value: value
});})
    });
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Object.defineProperty(jQuery.Event.prototype, name, {
    enumerable: true,
    configurable: true,
    get: jQuery.isFunction(hook) ? function () {
        if (this.originalEvent) {
            return hook(this.originalEvent);
        }
    } : function () {
        if (this.originalEvent) {
            return this.originalEvent[name];
        }
    },
    set: function (value) {
        Object.defineProperty(this, name, {
            enumerable: true,
            configurable: true,
            writable: true,
            value: value
        });
    }
});}, $__.fs.J$__v5960504135_581_373),
        'fix': ($__.fs.J$__v5960504135_583_374 = function J$__v5960504135_583(originalEvent) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
originalEvent = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);}),
        'special': $__.os.oid55 = {
            'load': $__.os.oid50 = {
                'noBubble': true
            },
            'focus': $__.os.oid51 = {
                'trigger': ($__.fs.J$__v5960504135_585_375 = function J$__v5960504135_585() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this !== safeActiveElement() && this.focus) {
    this.focus();
    return false;
}}),
                'delegateType': 'focusin'
            },
            'blur': $__.os.oid52 = {
                'trigger': ($__.fs.J$__v5960504135_587_376 = function J$__v5960504135_587() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this === safeActiveElement() && this.blur) {
    this.blur();
    return false;
}}),
                'delegateType': 'focusout'
            },
            'click': $__.os.oid53 = {
                'trigger': ($__.fs.J$__v5960504135_589_377 = function J$__v5960504135_589() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (rcheckableType.test(this.type) && this.click && nodeName(this, 'input')) {
    this.click();
    return false;
}}),
                '_default': ($__.fs.J$__v5960504135_591_378 = function J$__v5960504135_591(event) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return nodeName(event.target, 'a');})
            },
            'beforeunload': $__.os.oid54 = {
                'postDispatch': ($__.fs.J$__v5960504135_593_379 = function J$__v5960504135_593(event) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (event.result !== undefined && event.originalEvent) {
    event.originalEvent.returnValue = event.result;
}})
            }
        }
    };
    jQuery.removeEvent = ($__.fs.J$__v5960504135_595_380 = function J$__v5960504135_595(elem, type, handle) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], type = arguments[1], handle = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (elem.removeEventListener) {
    elem.removeEventListener(type, handle);
}});
    jQuery.Event = ($__.fs.J$__v5960504135_597_381 = function J$__v5960504135_597(src, props) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
src = arguments[0], props = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!(this instanceof jQuery.Event)) {
    return new jQuery.Event(src, props);
}
if (src && src.type) {
    this.originalEvent = src;
    this.type = src.type;
    this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;
    this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
    this.currentTarget = src.currentTarget;
    this.relatedTarget = src.relatedTarget;
} else {
    this.type = src;
}
if (props) {
    jQuery.extend(this, props);
}
this.timeStamp = src && src.timeStamp || jQuery.now();
this[jQuery.expando] = true;});
    TAJS_restrictToType(jQuery.Event, 'function').prototype = $__.os.oid57 = {
        'constructor': TAJS_restrictToType(jQuery.Event, 'function'),
        'isDefaultPrevented': returnFalse,
        'isPropagationStopped': returnFalse,
        'isImmediatePropagationStopped': returnFalse,
        'isSimulated': false,
        'preventDefault': ($__.fs.J$__v5960504135_599_382 = function J$__v5960504135_599() {
var vvv_return, vvv_switch, e;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
e = this.originalEvent;
this.isDefaultPrevented = returnTrue;
if (e && !this.isSimulated) {
    e.preventDefault();
}}),
        'stopPropagation': ($__.fs.J$__v5960504135_601_383 = function J$__v5960504135_601() {
var vvv_return, vvv_switch, e;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
e = this.originalEvent;
this.isPropagationStopped = returnTrue;
if (e && !this.isSimulated) {
    e.stopPropagation();
}}),
        'stopImmediatePropagation': ($__.fs.J$__v5960504135_603_384 = function J$__v5960504135_603() {
var vvv_return, vvv_switch, e;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
e = this.originalEvent;
this.isImmediatePropagationStopped = returnTrue;
if (e && !this.isSimulated) {
    e.stopImmediatePropagation();
}
this.stopPropagation();})
    };
    vvv_tmp13 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp13, $__.os.oid58 = {
        'altKey': true,
        'bubbles': true,
        'cancelable': true,
        'changedTouches': true,
        'ctrlKey': true,
        'detail': true,
        'eventPhase': true,
        'metaKey': true,
        'pageX': true,
        'pageY': true,
        'shiftKey': true,
        'view': true,
        'char': true,
        'charCode': true,
        'key': true,
        'keyCode': true,
        'button': true,
        'buttons': true,
        'clientX': true,
        'clientY': true,
        'offsetX': true,
        'offsetY': true,
        'pointerId': true,
        'pointerType': true,
        'screenX': true,
        'screenY': true,
        'targetTouches': true,
        'toElement': true,
        'touches': true,
        'which': ($__.fs.J$__v5960504135_605_385 = function J$__v5960504135_605(event) {
var vvv_return, vvv_switch, button;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
button = event.button;
if (event.which == null && rkeyEvent.test(event.type)) {
    return event.charCode != null ? event.charCode : event.keyCode;
}
if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {
    if (button & 1) {
        return 1;
    }
    if (button & 2) {
        return 3;
    }
    if (button & 4) {
        return 2;
    }
    return 0;
}
return event.which;}, $__.fs.J$__v5960504135_605_385_98 = $__.fs.J$__v5960504135_605_385, $__.fs.J$__v5960504135_605_385)
    }, (TAJS_restrictToType(((jQuery.event, $__.os.oid56), $__.os.oid56).addProp, 'function'), $__.fs.J$__v5960504135_581_373), 14, true, $__.uid);
    vvv_tmp14 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp14, $__.os.oid89 = {
        'mouseenter': 'mouseover',
        'mouseleave': 'mouseout',
        'pointerenter': 'pointerover',
        'pointerleave': 'pointerout'
    }, ($__.fs.J$__v5960504135_609_446 = function J$__v5960504135_609(orig, fix) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
orig = arguments[0], fix = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((((jQuery.event, $__.os.oid56), $__.os.oid56).special, $__.os.oid55), $__.os.oid55)[orig, 'mouseenter'] = $__.os.oid90 = {
        'delegateType': fix,
        'bindType': fix,
        'handle': ($__.fs.J$__v5960504135_607_447 = function J$__v5960504135_607(event) {
var vvv_return, vvv_switch, ret, target, related, handleObj;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
target = this;
related = event.relatedTarget;
handleObj = event.handleObj;
if (!related || related !== target && !jQuery.contains(target, related)) {
    event.type = handleObj.origType;
    ret = handleObj.handler.apply(this, arguments);
    event.type = fix;
}
return ret;})
    };
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((((jQuery.event, $__.os.oid56), $__.os.oid56).special, $__.os.oid55), $__.os.oid55)[orig, 'mouseleave'] = $__.os.oid91 = {
        'delegateType': fix,
        'bindType': fix,
        'handle': ($__.fs.J$__v5960504135_607_448 = function J$__v5960504135_607(event) {
var vvv_return, vvv_switch, ret, target, related, handleObj;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
target = this;
related = event.relatedTarget;
handleObj = event.handleObj;
if (!related || related !== target && !jQuery.contains(target, related)) {
    event.type = handleObj.origType;
    ret = handleObj.handler.apply(this, arguments);
    event.type = fix;
}
return ret;})
    };
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((((jQuery.event, $__.os.oid56), $__.os.oid56).special, $__.os.oid55), $__.os.oid55)[orig, 'pointerenter'] = $__.os.oid92 = {
        'delegateType': fix,
        'bindType': fix,
        'handle': ($__.fs.J$__v5960504135_607_449 = function J$__v5960504135_607(event) {
var vvv_return, vvv_switch, ret, target, related, handleObj;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
target = this;
related = event.relatedTarget;
handleObj = event.handleObj;
if (!related || related !== target && !jQuery.contains(target, related)) {
    event.type = handleObj.origType;
    ret = handleObj.handler.apply(this, arguments);
    event.type = fix;
}
return ret;})
    };
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    ((((jQuery.event, $__.os.oid56), $__.os.oid56).special, $__.os.oid55), $__.os.oid55)[orig, 'pointerleave'] = $__.os.oid93 = {
        'delegateType': fix,
        'bindType': fix,
        'handle': ($__.fs.J$__v5960504135_607_450 = function J$__v5960504135_607(event) {
var vvv_return, vvv_switch, ret, target, related, handleObj;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
target = this;
related = event.relatedTarget;
handleObj = event.handleObj;
if (!related || related !== target && !jQuery.contains(target, related)) {
    event.type = handleObj.origType;
    ret = handleObj.handler.apply(this, arguments);
    event.type = fix;
}
return ret;})
    };
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.event.special[orig] = {
    delegateType: fix,
    bindType: fix,
    handle: function (event) {
        var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
        if (!related || related !== target && !jQuery.contains(target, related)) {
            event.type = handleObj.origType;
            ret = handleObj.handler.apply(this, arguments);
            event.type = fix;
        }
        return ret;
    }
};}, $__.fs.J$__v5960504135_609_446), 15, true, $__.uid);
    vvv_tmp15 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp15, $__.os.oid94 = {
        'on': ($__.fs.J$__v5960504135_611_451 = function J$__v5960504135_611(types, selector, data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
types = arguments[0], selector = arguments[1], data = arguments[2], fn = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return on(this, types, selector, data, fn);}),
        'one': ($__.fs.J$__v5960504135_613_452 = function J$__v5960504135_613(types, selector, data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
types = arguments[0], selector = arguments[1], data = arguments[2], fn = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return on(this, types, selector, data, fn, 1);}),
        'off': ($__.fs.J$__v5960504135_617_453 = function J$__v5960504135_617(types, selector, fn) {
var vvv_return, vvv_switch, handleObj, type;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
types = arguments[0], selector = arguments[1], fn = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (types && types.preventDefault && types.handleObj) {
    handleObj = types.handleObj;
    jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
    return this;
}
if (typeof types === 'object') {
    for (type in types) {
        this.off(type, selector, types[type]);
    }
    return this;
}
if (selector === false || typeof selector === 'function') {
    fn = selector;
    selector = undefined;
}
if (fn === false) {
    fn = returnFalse;
}
return this.each(function () {
    jQuery.event.remove(this, types, fn, selector);
});})
    }, 11, true, $__.uid);
    rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi;
    rnoInnerhtml = /<script|<style|<link/i;
    rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i;
    rscriptTypeMasked = /^true\/(.*)/;
    rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    vvv_tmp16 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp16, $__.os.oid95 = {
        'htmlPrefilter': ($__.fs.J$__v5960504135_628_454 = function J$__v5960504135_628(html) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
html = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return html.replace(rxhtmlTag, '<$1></$2>');}),
        'clone': ($__.fs.J$__v5960504135_630_455 = function J$__v5960504135_630(elem, dataAndEvents, deepDataAndEvents) {
var vvv_return, vvv_switch, i, l, srcElements, destElements, clone, inPage;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], dataAndEvents = arguments[1], deepDataAndEvents = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
clone = elem.cloneNode(true);
inPage = jQuery.contains(elem.ownerDocument, elem);
if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
    destElements = getAll(clone);
    srcElements = getAll(elem);
    for (i = 0, l = srcElements.length; i < l; i++) {
        fixInput(srcElements[i], destElements[i]);
    }
}
if (dataAndEvents) {
    if (deepDataAndEvents) {
        srcElements = srcElements || getAll(elem);
        destElements = destElements || getAll(clone);
        for (i = 0, l = srcElements.length; i < l; i++) {
            cloneCopyEvent(srcElements[i], destElements[i]);
        }
    } else {
        cloneCopyEvent(elem, clone);
    }
}
destElements = getAll(clone, 'script');
if (destElements.length > 0) {
    setGlobalEval(destElements, !inPage && getAll(elem, 'script'));
}
return clone;}),
        'cleanData': ($__.fs.J$__v5960504135_632_456 = function J$__v5960504135_632(elems) {
var vvv_return, vvv_switch, data, elem, type, special, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elems = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
special = jQuery.event.special;
i = 0;
for (; (elem = elems[i]) !== undefined; i++) {
    if (acceptData(elem)) {
        if (data = elem[dataPriv.expando]) {
            if (data.events) {
                for (type in data.events) {
                    if (special[type]) {
                        jQuery.event.remove(elem, type);
                    } else {
                        jQuery.removeEvent(elem, type, data.handle);
                    }
                }
            }
            elem[dataPriv.expando] = undefined;
        }
        if (elem[dataUser.expando]) {
            elem[dataUser.expando] = undefined;
        }
    }
}})
    }, 12, true, $__.uid);
    vvv_tmp17 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp17, $__.os.oid96 = {
        'detach': ($__.fs.J$__v5960504135_634_457 = function J$__v5960504135_634(selector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return remove(this, selector, true);}),
        'remove': ($__.fs.J$__v5960504135_636_458 = function J$__v5960504135_636(selector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return remove(this, selector);}),
        'text': ($__.fs.J$__v5960504135_642_459 = function J$__v5960504135_642(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return access(this, function (value) {
    return value === undefined ? jQuery.text(this) : this.empty().each(function () {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            this.textContent = value;
        }
    });
}, null, value, arguments.length);}),
        'append': ($__.fs.J$__v5960504135_646_460 = function J$__v5960504135_646() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return domManip(this, arguments, function (elem) {
    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
        var target = manipulationTarget(this, elem);
        target.appendChild(elem);
    }
});}),
        'prepend': ($__.fs.J$__v5960504135_650_461 = function J$__v5960504135_650() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return domManip(this, arguments, function (elem) {
    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
        var target = manipulationTarget(this, elem);
        target.insertBefore(elem, target.firstChild);
    }
});}),
        'before': ($__.fs.J$__v5960504135_654_462 = function J$__v5960504135_654() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return domManip(this, arguments, function (elem) {
    if (this.parentNode) {
        this.parentNode.insertBefore(elem, this);
    }
});}),
        'after': ($__.fs.J$__v5960504135_658_463 = function J$__v5960504135_658() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return domManip(this, arguments, function (elem) {
    if (this.parentNode) {
        this.parentNode.insertBefore(elem, this.nextSibling);
    }
});}),
        'empty': ($__.fs.J$__v5960504135_660_464 = function J$__v5960504135_660() {
var vvv_return, vvv_switch, elem, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
for (; (elem = this[i]) != null; i++) {
    if (elem.nodeType === 1) {
        jQuery.cleanData(getAll(elem, false));
        elem.textContent = '';
    }
}
return this;}),
        'clone': ($__.fs.J$__v5960504135_664_465 = function J$__v5960504135_664(dataAndEvents, deepDataAndEvents) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
dataAndEvents = arguments[0], deepDataAndEvents = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
return this.map(function () {
    return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
});}),
        'html': ($__.fs.J$__v5960504135_668_466 = function J$__v5960504135_668(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return access(this, function (value) {
    var elem = this[0] || {}, i = 0, l = this.length;
    if (value === undefined && elem.nodeType === 1) {
        return elem.innerHTML;
    }
    if (typeof value === 'string' && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [
            '',
            ''
        ])[1].toLowerCase()]) {
        value = jQuery.htmlPrefilter(value);
        try {
            for (; i < l; i++) {
                elem = this[i] || {};
                if (elem.nodeType === 1) {
                    jQuery.cleanData(getAll(elem, false));
                    elem.innerHTML = value;
                }
            }
            elem = 0;
        } catch (e) {
        }
    }
    if (elem) {
        this.empty().append(value);
    }
}, null, value, arguments.length);}),
        'replaceWith': ($__.fs.J$__v5960504135_672_467 = function J$__v5960504135_672() {
var vvv_return, vvv_switch, ignored;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ignored = [];
return domManip(this, arguments, function (elem) {
    var parent = this.parentNode;
    if (jQuery.inArray(this, ignored) < 0) {
        jQuery.cleanData(getAll(this));
        if (parent) {
            parent.replaceChild(elem, this);
        }
    }
}, ignored);})
    }, 13, true, $__.uid);
    vvv_tmp18 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp18, $__.os.oid97 = {
        'appendTo': 'append',
        'prependTo': 'prepend',
        'insertBefore': 'before',
        'insertAfter': 'after',
        'replaceAll': 'replaceWith'
    }, ($__.fs.J$__v5960504135_676_468 = function J$__v5960504135_676(name, original) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], original = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'appendTo'] = ($__.fs.J$__v5960504135_674_469 = function J$__v5960504135_674(selector) {
var vvv_return, vvv_switch, elems, ret, insert, last, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = [];
insert = jQuery(selector);
last = insert.length - 1;
i = 0;
for (; i <= last; i++) {
    elems = i === last ? this : this.clone(true);
    jQuery(insert[i])[original](elems);
    push.apply(ret, elems.get());
}
return this.pushStack(ret);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'prependTo'] = ($__.fs.J$__v5960504135_674_470 = function J$__v5960504135_674(selector) {
var vvv_return, vvv_switch, elems, ret, insert, last, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = [];
insert = jQuery(selector);
last = insert.length - 1;
i = 0;
for (; i <= last; i++) {
    elems = i === last ? this : this.clone(true);
    jQuery(insert[i])[original](elems);
    push.apply(ret, elems.get());
}
return this.pushStack(ret);});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'insertBefore'] = ($__.fs.J$__v5960504135_674_471 = function J$__v5960504135_674(selector) {
var vvv_return, vvv_switch, elems, ret, insert, last, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = [];
insert = jQuery(selector);
last = insert.length - 1;
i = 0;
for (; i <= last; i++) {
    elems = i === last ? this : this.clone(true);
    jQuery(insert[i])[original](elems);
    push.apply(ret, elems.get());
}
return this.pushStack(ret);});
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'insertAfter'] = ($__.fs.J$__v5960504135_674_472 = function J$__v5960504135_674(selector) {
var vvv_return, vvv_switch, elems, ret, insert, last, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = [];
insert = jQuery(selector);
last = insert.length - 1;
i = 0;
for (; i <= last; i++) {
    elems = i === last ? this : this.clone(true);
    jQuery(insert[i])[original](elems);
    push.apply(ret, elems.get());
}
return this.pushStack(ret);});
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'replaceAll'] = ($__.fs.J$__v5960504135_674_473 = function J$__v5960504135_674(selector) {
var vvv_return, vvv_switch, elems, ret, insert, last, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = [];
insert = jQuery(selector);
last = insert.length - 1;
i = 0;
for (; i <= last; i++) {
    elems = i === last ? this : this.clone(true);
    jQuery(insert[i])[original](elems);
    push.apply(ret, elems.get());
}
return this.pushStack(ret);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.fn[name] = function (selector) {
    var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;
    for (; i <= last; i++) {
        elems = i === last ? this : this.clone(true);
        jQuery(insert[i])[original](elems);
        push.apply(ret, elems.get());
    }
    return this.pushStack(ret);
};}, $__.fs.J$__v5960504135_676_468), 16, true, $__.uid);
    rmargin = /^margin/;
    rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i');
    getStyles = ($__.fs.J$__v5960504135_678_474 = function J$__v5960504135_678(elem) {
var vvv_return, vvv_switch, view;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
view = elem.ownerDocument.defaultView;
if (!view || !view.opener) {
    view = window;
}
return view.getComputedStyle(elem);});
    (($__.fs.J$__v5960504135_689_475 = function J$__v5960504135_689() {
var vvv_return, vvv_switch, vvv_tmp0, computeStyleTests, pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, container, div;
computeStyleTests = function computeStyleTests() {
    if (!div) {
        return;
    }
    div.style.cssText = 'box-sizing:border-box;' + 'position:relative;display:block;' + 'margin:auto;border:1px;padding:1px;' + 'top:1%;width:50%';
    div.innerHTML = '';
    documentElement.appendChild(container);
    var divStyle = window.getComputedStyle(div);
    pixelPositionVal = divStyle.top !== '1%';
    reliableMarginLeftVal = divStyle.marginLeft === '2px';
    boxSizingReliableVal = divStyle.width === '4px';
    div.style.marginRight = '50%';
    pixelMarginRightVal = divStyle.marginRight === '4px';
    documentElement.removeChild(container);
    div = null;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    computeStyleTests = ($__.fs.computeStyleTests_476 = function computeStyleTests() {
var vvv_return, vvv_switch, divStyle;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!div) {
    return;
}
div.style.cssText = 'box-sizing:border-box;' + 'position:relative;display:block;' + 'margin:auto;border:1px;padding:1px;' + 'top:1%;width:50%';
div.innerHTML = '';
documentElement.appendChild(container);
divStyle = window.getComputedStyle(div);
pixelPositionVal = divStyle.top !== '1%';
reliableMarginLeftVal = divStyle.marginLeft === '2px';
boxSizingReliableVal = divStyle.width === '4px';
div.style.marginRight = '50%';
pixelMarginRightVal = divStyle.marginRight === '4px';
documentElement.removeChild(container);
div = null;});
    container = document['createElement']('div');
    div = document['createElement']('div');
    !TAJS_restrictToType(div.style, 'object');
    TAJS_restrictToType(div.style, 'object').backgroundClip = 'content-box';
    TAJS_restrictToType(div['cloneNode'](true).style, 'object').backgroundClip = '';
    (support, $__.os.oid1).clearCloneStyle = TAJS_restrictToType(TAJS_restrictToType(div.style, 'object').backgroundClip, 'string') === 'content-box';
    TAJS_restrictToType(container.style, 'object').cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute';
    container['appendChild'](div);
    vvv_tmp0 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp0, support, $__.os.oid98 = {
        'pixelPosition': ($__.fs.J$__v5960504135_681_477 = function J$__v5960504135_681() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
computeStyleTests();
return pixelPositionVal;}),
        'boxSizingReliable': ($__.fs.J$__v5960504135_683_478 = function J$__v5960504135_683() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
computeStyleTests();
return boxSizingReliableVal;}),
        'pixelMarginRight': ($__.fs.J$__v5960504135_685_479 = function J$__v5960504135_685() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
computeStyleTests();
return pixelMarginRightVal;}),
        'reliableMarginLeft': ($__.fs.J$__v5960504135_687_480 = function J$__v5960504135_687() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
computeStyleTests();
return reliableMarginLeftVal;})
    }, 14, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
container = document.createElement('div');
div = document.createElement('div');
if (!div.style) {
    return;
}
div.style.backgroundClip = 'content-box';
div.cloneNode(true).style.backgroundClip = '';
support.clearCloneStyle = div.style.backgroundClip === 'content-box';
container.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute';
container.appendChild(div);
jQuery.extend(support, {
    pixelPosition: function () {
        computeStyleTests();
        return pixelPositionVal;
    },
    boxSizingReliable: function () {
        computeStyleTests();
        return boxSizingReliableVal;
    },
    pixelMarginRight: function () {
        computeStyleTests();
        return pixelMarginRightVal;
    },
    reliableMarginLeft: function () {
        computeStyleTests();
        return reliableMarginLeftVal;
    }
});}), $__.fs.J$__v5960504135_689_475)(0, true, $__.uid);
    rdisplayswap = /^(none|table(?!-c[ea]).+)/;
    rcustomProp = /^--/;
    cssShow = $__.os.oid99 = {
        'position': 'absolute',
        'visibility': 'hidden',
        'display': 'block'
    };
    cssNormalTransform = $__.os.oid100 = {
        'letterSpacing': '0',
        'fontWeight': '400'
    };
    cssPrefixes = [
        'Webkit',
        'Moz',
        'ms'
    ];
    emptyStyle = TAJS_restrictToType(document['createElement']('div').style, 'object');
    vvv_tmp19 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp19, $__.os.oid105 = {
        'cssHooks': $__.os.oid102 = {
            'opacity': $__.os.oid101 = {
                'get': ($__.fs.J$__v5960504135_700_481 = function J$__v5960504135_700(elem, computed) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], computed = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (computed) {
    ret = curCSS(elem, 'opacity');
    return ret === '' ? '1' : ret;
}})
            }
        },
        'cssNumber': $__.os.oid103 = {
            'animationIterationCount': true,
            'columnCount': true,
            'fillOpacity': true,
            'flexGrow': true,
            'flexShrink': true,
            'fontWeight': true,
            'lineHeight': true,
            'opacity': true,
            'order': true,
            'orphans': true,
            'widows': true,
            'zIndex': true,
            'zoom': true
        },
        'cssProps': $__.os.oid104 = {
            'float': 'cssFloat'
        },
        'style': ($__.fs.J$__v5960504135_702_482 = function J$__v5960504135_702(elem, name, value, extra) {
var vvv_return, vvv_switch, ret, type, hooks, origName, isCustomProp, style;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], value = arguments[2], extra = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
    return;
}
origName = jQuery.camelCase(name);
isCustomProp = rcustomProp.test(name);
style = elem.style;
if (!isCustomProp) {
    name = finalPropName(origName);
}
hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
if (value !== undefined) {
    type = typeof value;
    if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {
        value = adjustCSS(elem, name, ret);
        type = 'number';
    }
    if (value == null || value !== value) {
        return;
    }
    if (type === 'number') {
        value += ret && ret[3] || (jQuery.cssNumber[origName] ? '' : 'px');
    }
    if (!support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {
        style[name] = 'inherit';
    }
    if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
        if (isCustomProp) {
            style.setProperty(name, value);
        } else {
            style[name] = value;
        }
    }
} else {
    if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
        return ret;
    }
    return style[name];
}}),
        'css': ($__.fs.J$__v5960504135_704_483 = function J$__v5960504135_704(elem, name, extra, styles) {
var vvv_return, vvv_switch, val, num, hooks, origName, isCustomProp;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], extra = arguments[2], styles = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
origName = jQuery.camelCase(name);
isCustomProp = rcustomProp.test(name);
if (!isCustomProp) {
    name = finalPropName(origName);
}
hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
if (hooks && 'get' in hooks) {
    val = hooks.get(elem, true, extra);
}
if (val === undefined) {
    val = curCSS(elem, name, styles);
}
if (val === 'normal' && name in cssNormalTransform) {
    val = cssNormalTransform[name];
}
if (extra === '' || extra) {
    num = parseFloat(val);
    return extra === true || isFinite(num) ? num || 0 : val;
}
return val;})
    }, 15, true, $__.uid);
    vvv_tmp20 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp20, [
        'height',
        'width'
    ], ($__.fs.J$__v5960504135_712_484 = function J$__v5960504135_712(i, name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], name = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[name, 'height'] = $__.os.oid106 = {
        'get': ($__.fs.J$__v5960504135_708_485 = function J$__v5960504135_708(elem, computed, extra) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], computed = arguments[1], extra = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (computed) {
    return rdisplayswap.test(jQuery.css(elem, 'display')) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {
        return getWidthOrHeight(elem, name, extra);
    }) : getWidthOrHeight(elem, name, extra);
}}),
        'set': ($__.fs.J$__v5960504135_710_486 = function J$__v5960504135_710(elem, value, extra) {
var vvv_return, vvv_switch, matches, styles, subtract;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1], extra = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
styles = extra && getStyles(elem);
subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles);
if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {
    elem.style[name] = value;
    value = jQuery.css(elem, name);
}
return setPositiveNumber(elem, value, subtract);})
    };
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[name, 'width'] = $__.os.oid107 = {
        'get': ($__.fs.J$__v5960504135_708_487 = function J$__v5960504135_708(elem, computed, extra) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], computed = arguments[1], extra = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (computed) {
    return rdisplayswap.test(jQuery.css(elem, 'display')) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {
        return getWidthOrHeight(elem, name, extra);
    }) : getWidthOrHeight(elem, name, extra);
}}),
        'set': ($__.fs.J$__v5960504135_710_488 = function J$__v5960504135_710(elem, value, extra) {
var vvv_return, vvv_switch, matches, styles, subtract;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1], extra = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
styles = extra && getStyles(elem);
subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles);
if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {
    elem.style[name] = value;
    value = jQuery.css(elem, name);
}
return setPositiveNumber(elem, value, subtract);})
    };
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.cssHooks[name] = {
    get: function (elem, computed, extra) {
        if (computed) {
            return rdisplayswap.test(jQuery.css(elem, 'display')) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {
                return getWidthOrHeight(elem, name, extra);
            }) : getWidthOrHeight(elem, name, extra);
        }
    },
    set: function (elem, value, extra) {
        var matches, styles = extra && getStyles(elem), subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles);
        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {
            elem.style[name] = value;
            value = jQuery.css(elem, name);
        }
        return setPositiveNumber(elem, value, subtract);
    }
};}, $__.fs.J$__v5960504135_712_484), 17, true, $__.uid);
    ((jQuery.cssHooks, $__.os.oid102), $__.os.oid102).marginLeft = (addGetHookIf, $__.fs.addGetHookIf_36)((TAJS_restrictToType((support, $__.os.oid1).reliableMarginLeft, 'function'), $__.fs.J$__v5960504135_687_480), ($__.fs.J$__v5960504135_716_489 = function J$__v5960504135_716(elem, computed) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], computed = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (computed) {
    return (parseFloat(curCSS(elem, 'marginLeft')) || elem.getBoundingClientRect().left - swap(elem, {
        marginLeft: 0
    }, function () {
        return elem.getBoundingClientRect().left;
    })) + 'px';
}}), 0, true, $__.uid);
    vvv_tmp21 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp21, $__.os.oid109 = {
        'margin': '',
        'padding': '',
        'border': 'Width'
    }, ($__.fs.J$__v5960504135_720_491 = function J$__v5960504135_720(prefix, suffix) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
prefix = arguments[0], suffix = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[prefix + suffix, 'margin'] = $__.os.oid110 = {
        'expand': ($__.fs.J$__v5960504135_718_492 = function J$__v5960504135_718(value) {
var vvv_return, vvv_switch, i, expanded, parts;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
expanded = {};
parts = typeof value === 'string' ? value.split(' ') : [value];
for (; i < 4; i++) {
    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
}
return expanded;})
    };
    !rmargin['test'](prefix);
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[prefix + suffix, 'padding'] = $__.os.oid111 = {
        'expand': ($__.fs.J$__v5960504135_718_493 = function J$__v5960504135_718(value) {
var vvv_return, vvv_switch, i, expanded, parts;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
expanded = {};
parts = typeof value === 'string' ? value.split(' ') : [value];
for (; i < 4; i++) {
    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
}
return expanded;})
    };
    !rmargin['test'](prefix);
    ((((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[prefix + suffix, 'padding'], $__.os.oid111), $__.os.oid111).set = setPositiveNumber;
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[prefix + suffix, 'borderWidth'] = $__.os.oid112 = {
        'expand': ($__.fs.J$__v5960504135_718_494 = function J$__v5960504135_718(value) {
var vvv_return, vvv_switch, i, expanded, parts;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
expanded = {};
parts = typeof value === 'string' ? value.split(' ') : [value];
for (; i < 4; i++) {
    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
}
return expanded;})
    };
    !rmargin['test'](prefix);
    ((((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[prefix + suffix, 'borderWidth'], $__.os.oid112), $__.os.oid112).set = setPositiveNumber;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.cssHooks[prefix + suffix] = {
    expand: function (value) {
        var i = 0, expanded = {}, parts = typeof value === 'string' ? value.split(' ') : [value];
        for (; i < 4; i++) {
            expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
        }
        return expanded;
    }
};
if (!rmargin.test(prefix)) {
    jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
}}, $__.fs.J$__v5960504135_720_491), 18, true, $__.uid);
    vvv_tmp22 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp22, $__.os.oid113 = {
        'css': ($__.fs.J$__v5960504135_724_495 = function J$__v5960504135_724(name, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return access(this, function (elem, name, value) {
    var styles, len, map = {}, i = 0;
    if (Array.isArray(name)) {
        styles = getStyles(elem);
        len = name.length;
        for (; i < len; i++) {
            map[name[i]] = jQuery.css(elem, name[i], false, styles);
        }
        return map;
    }
    return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
}, name, value, arguments.length > 1);})
    }, 16, true, $__.uid);
    jQuery.Tween = Tween;
    Tween.prototype = $__.os.oid114 = {
        'constructor': Tween,
        'init': ($__.fs.J$__v5960504135_727_496 = function J$__v5960504135_727(elem, options, prop, end, easing, unit) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], options = arguments[1], prop = arguments[2], end = arguments[3], easing = arguments[4], unit = arguments[5];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.elem = elem;
this.prop = prop;
this.easing = easing || jQuery.easing._default;
this.options = options;
this.start = this.now = this.cur();
this.end = end;
this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');}),
        'cur': ($__.fs.J$__v5960504135_729_497 = function J$__v5960504135_729() {
var vvv_return, vvv_switch, hooks;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
hooks = Tween.propHooks[this.prop];
return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);}),
        'run': ($__.fs.J$__v5960504135_731_498 = function J$__v5960504135_731(percent) {
var vvv_return, vvv_switch, eased, hooks;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
percent = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
hooks = Tween.propHooks[this.prop];
if (this.options.duration) {
    this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
} else {
    this.pos = eased = percent;
}
this.now = (this.end - this.start) * eased + this.start;
if (this.options.step) {
    this.options.step.call(this.elem, this.now, this);
}
if (hooks && hooks.set) {
    hooks.set(this);
} else {
    Tween.propHooks._default.set(this);
}
return this;})
    };
    TAJS_restrictToType(((Tween.prototype, $__.os.oid114), $__.os.oid114).init, 'function').prototype = (Tween.prototype, $__.os.oid114);
    Tween.propHooks = $__.os.oid116 = {
        '_default': $__.os.oid115 = {
            'get': ($__.fs.J$__v5960504135_733_499 = function J$__v5960504135_733(tween) {
var vvv_return, vvv_switch, result;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
tween = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
    return tween.elem[tween.prop];
}
result = jQuery.css(tween.elem, tween.prop, '');
return !result || result === 'auto' ? 0 : result;}),
            'set': ($__.fs.J$__v5960504135_735_500 = function J$__v5960504135_735(tween) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
tween = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.fx.step[tween.prop]) {
    jQuery.fx.step[tween.prop](tween);
} else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
} else {
    tween.elem[tween.prop] = tween.now;
}})
        }
    };
    ((Tween.propHooks, $__.os.oid116), $__.os.oid116).scrollTop = ((Tween.propHooks, $__.os.oid116), $__.os.oid116).scrollLeft = $__.os.oid117 = {
        'set': ($__.fs.J$__v5960504135_737_501 = function J$__v5960504135_737(tween) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
tween = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (tween.elem.nodeType && tween.elem.parentNode) {
    tween.elem[tween.prop] = tween.now;
}})
    };
    jQuery.easing = $__.os.oid118 = {
        'linear': ($__.fs.J$__v5960504135_739_502 = function J$__v5960504135_739(p) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
p = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return p;}),
        'swing': ($__.fs.J$__v5960504135_741_503 = function J$__v5960504135_741(p) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
p = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return 0.5 - Math.cos(p * Math.PI) / 2;}),
        '_default': 'swing'
    };
    jQuery.fx = TAJS_restrictToType(((Tween.prototype, $__.os.oid114), $__.os.oid114).init, 'function');
    TAJS_restrictToType(jQuery.fx, 'function').step = $__.os.oid119 = {};
    rfxtypes = /^(?:toggle|show|hide)$/;
    rrun = /queueHooks$/;
    jQuery.Animation = (vvv_tmp23 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp23, (Animation, $__.fs.Animation_49), $__.os.oid121 = {
        'tweeners': $__.os.oid120 = {
            '*': [($__.fs.J$__v5960504135_772_504 = function J$__v5960504135_772(prop, value) {
var vvv_return, vvv_switch, tween;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
prop = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
tween = this.createTween(prop, value);
adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
return tween;})]
        },
        'tweener': ($__.fs.J$__v5960504135_774_505 = function J$__v5960504135_774(props, callback) {
var vvv_return, vvv_switch, prop, index, length;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
props = arguments[0], callback = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(props)) {
    callback = props;
    props = ['*'];
} else {
    props = props.match(rnothtmlwhite);
}
index = 0;
length = props.length;
for (; index < length; index++) {
    prop = props[index];
    Animation.tweeners[prop] = Animation.tweeners[prop] || [];
    Animation.tweeners[prop].unshift(callback);
}}),
        'prefilters': [defaultPrefilter],
        'prefilter': ($__.fs.J$__v5960504135_776_506 = function J$__v5960504135_776(callback, prepend) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
callback = arguments[0], prepend = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (prepend) {
    Animation.prefilters.unshift(callback);
} else {
    Animation.prefilters.push(callback);
}})
    }, 17, true, $__.uid));
    jQuery.speed = ($__.fs.J$__v5960504135_780_507 = function J$__v5960504135_780(speed, easing, fn) {
var vvv_return, vvv_switch, opt;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], fn = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
opt = speed && typeof speed === 'object' ? jQuery.extend({}, speed) : {
    complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
    duration: speed,
    easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
};
if (jQuery.fx.off) {
    opt.duration = 0;
} else {
    if (typeof opt.duration !== 'number') {
        if (opt.duration in jQuery.fx.speeds) {
            opt.duration = jQuery.fx.speeds[opt.duration];
        } else {
            opt.duration = jQuery.fx.speeds._default;
        }
    }
}
if (opt.queue == null || opt.queue === true) {
    opt.queue = 'fx';
}
opt.old = opt.complete;
opt.complete = function () {
    if (jQuery.isFunction(opt.old)) {
        opt.old.call(this);
    }
    if (opt.queue) {
        jQuery.dequeue(this, opt.queue);
    }
};
return opt;});
    vvv_tmp24 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp24, $__.os.oid122 = {
        'fadeTo': ($__.fs.J$__v5960504135_782_508 = function J$__v5960504135_782(speed, to, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], to = arguments[1], easing = arguments[2], callback = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.filter(isHiddenWithinTree).css('opacity', 0).show().end().animate({
    opacity: to
}, speed, easing, callback);}),
        'animate': ($__.fs.J$__v5960504135_786_509 = function J$__v5960504135_786(prop, speed, easing, callback) {
var vvv_return, vvv_switch, empty, optall, doAnimation;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
prop = arguments[0], speed = arguments[1], easing = arguments[2], callback = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
empty = jQuery.isEmptyObject(prop);
optall = jQuery.speed(speed, easing, callback);
doAnimation = function () {
    var anim = Animation(this, jQuery.extend({}, prop), optall);
    if (empty || dataPriv.get(this, 'finish')) {
        anim.stop(true);
    }
};
doAnimation.finish = doAnimation;
return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);}),
        'stop': ($__.fs.J$__v5960504135_792_510 = function J$__v5960504135_792(type, clearQueue, gotoEnd) {
var vvv_return, vvv_switch, stopQueue;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0], clearQueue = arguments[1], gotoEnd = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
stopQueue = function (hooks) {
    var stop = hooks.stop;
    delete hooks.stop;
    stop(gotoEnd);
};
if (typeof type !== 'string') {
    gotoEnd = clearQueue;
    clearQueue = type;
    type = undefined;
}
if (clearQueue && type !== false) {
    this.queue(type || 'fx', []);
}
return this.each(function () {
    var dequeue = true, index = type != null && type + 'queueHooks', timers = jQuery.timers, data = dataPriv.get(this);
    if (index) {
        if (data[index] && data[index].stop) {
            stopQueue(data[index]);
        }
    } else {
        for (index in data) {
            if (data[index] && data[index].stop && rrun.test(index)) {
                stopQueue(data[index]);
            }
        }
    }
    for (index = timers.length; index--;) {
        if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
            timers[index].anim.stop(gotoEnd);
            dequeue = false;
            timers.splice(index, 1);
        }
    }
    if (dequeue || !gotoEnd) {
        jQuery.dequeue(this, type);
    }
});}),
        'finish': ($__.fs.J$__v5960504135_796_511 = function J$__v5960504135_796(type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (type !== false) {
    type = type || 'fx';
}
return this.each(function () {
    var index, data = dataPriv.get(this), queue = data[type + 'queue'], hooks = data[type + 'queueHooks'], timers = jQuery.timers, length = queue ? queue.length : 0;
    data.finish = true;
    jQuery.queue(this, type, []);
    if (hooks && hooks.stop) {
        hooks.stop.call(this, true);
    }
    for (index = timers.length; index--;) {
        if (timers[index].elem === this && timers[index].queue === type) {
            timers[index].anim.stop(true);
            timers.splice(index, 1);
        }
    }
    for (index = 0; index < length; index++) {
        if (queue[index] && queue[index].finish) {
            queue[index].finish.call(this);
        }
    }
    delete data.finish;
});})
    }, 18, true, $__.uid);
    vvv_tmp25 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp25, [
        'toggle',
        'show',
        'hide'
    ], ($__.fs.J$__v5960504135_800_512 = function J$__v5960504135_800(i, name) {
var vvv_return, vvv_switch, cssFn;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], name = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    cssFn = TAJS_restrictToType(((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'toggle'], 'function');
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'toggle'] = ($__.fs.J$__v5960504135_798_513 = function J$__v5960504135_798(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    cssFn = TAJS_restrictToType(((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'show'], 'function');
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'show'] = ($__.fs.J$__v5960504135_798_514 = function J$__v5960504135_798(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    cssFn = TAJS_restrictToType(((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'hide'], 'function');
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'hide'] = ($__.fs.J$__v5960504135_798_515 = function J$__v5960504135_798(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
cssFn = jQuery.fn[name];
jQuery.fn[name] = function (speed, easing, callback) {
    return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
};}, $__.fs.J$__v5960504135_800_512), 19, true, $__.uid);
    vvv_tmp26 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp26, $__.os.oid129 = {
        'slideDown': (genFx, $__.fs.genFx_45)('show', 0, true, $__.uid),
        'slideUp': (genFx, $__.fs.genFx_45)('hide', 1, true, $__.uid),
        'slideToggle': (genFx, $__.fs.genFx_45)('toggle', 2, true, $__.uid),
        'fadeIn': $__.os.oid126 = {
            'opacity': 'show'
        },
        'fadeOut': $__.os.oid127 = {
            'opacity': 'hide'
        },
        'fadeToggle': $__.os.oid128 = {
            'opacity': 'toggle'
        }
    }, ($__.fs.J$__v5960504135_804_516 = function J$__v5960504135_804(name, props) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], props = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'slideDown'] = ($__.fs.J$__v5960504135_802_517 = function J$__v5960504135_802(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.animate(props, speed, easing, callback);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'slideUp'] = ($__.fs.J$__v5960504135_802_518 = function J$__v5960504135_802(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.animate(props, speed, easing, callback);});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'slideToggle'] = ($__.fs.J$__v5960504135_802_519 = function J$__v5960504135_802(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.animate(props, speed, easing, callback);});
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'fadeIn'] = ($__.fs.J$__v5960504135_802_520 = function J$__v5960504135_802(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.animate(props, speed, easing, callback);});
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'fadeOut'] = ($__.fs.J$__v5960504135_802_521 = function J$__v5960504135_802(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.animate(props, speed, easing, callback);});
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'fadeToggle'] = ($__.fs.J$__v5960504135_802_522 = function J$__v5960504135_802(speed, easing, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
speed = arguments[0], easing = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.animate(props, speed, easing, callback);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.fn[name] = function (speed, easing, callback) {
    return this.animate(props, speed, easing, callback);
};}, $__.fs.J$__v5960504135_804_516), 20, true, $__.uid);
    jQuery.timers = [];
    TAJS_restrictToType(jQuery.fx, 'function').tick = ($__.fs.J$__v5960504135_806_523 = function J$__v5960504135_806() {
var vvv_return, vvv_switch, timer, i, timers;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
timers = jQuery.timers;
fxNow = jQuery.now();
for (; i < timers.length; i++) {
    timer = timers[i];
    if (!timer() && timers[i] === timer) {
        timers.splice(i--, 1);
    }
}
if (!timers.length) {
    jQuery.fx.stop();
}
fxNow = undefined;});
    TAJS_restrictToType(jQuery.fx, 'function').timer = ($__.fs.J$__v5960504135_808_524 = function J$__v5960504135_808(timer) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
timer = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.timers.push(timer);
jQuery.fx.start();});
    TAJS_restrictToType(jQuery.fx, 'function').interval = 13;
    TAJS_restrictToType(jQuery.fx, 'function').start = ($__.fs.J$__v5960504135_810_525 = function J$__v5960504135_810() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (inProgress) {
    return;
}
inProgress = true;
schedule();});
    TAJS_restrictToType(jQuery.fx, 'function').stop = ($__.fs.J$__v5960504135_812_526 = function J$__v5960504135_812() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
inProgress = null;});
    TAJS_restrictToType(jQuery.fx, 'function').speeds = $__.os.oid130 = {
        'slow': 600,
        'fast': 200,
        '_default': 400
    };
    ((jQuery.fn, $__.os.oid2), $__.os.oid2).delay = ($__.fs.J$__v5960504135_818_527 = function J$__v5960504135_818(time, type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
time = arguments[0], type = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
type = type || 'fx';
return this.queue(type, function (next, hooks) {
    var timeout = window.setTimeout(next, time);
    hooks.stop = function () {
        window.clearTimeout(timeout);
    };
});});
    (($__.fs.J$__v5960504135_820_528 = function J$__v5960504135_820() {
var vvv_return, vvv_switch, input, select, opt;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    input = document['createElement']('input');
    select = document['createElement']('select');
    opt = select['appendChild'](document['createElement']('option'));
    input.type = 'checkbox';
    (support, $__.os.oid1).checkOn = TAJS_restrictToType(input.value, 'string') !== '';
    (support, $__.os.oid1).optSelected = (opt.selected, true);
    input = document['createElement']('input');
    input.value = 't';
    input.type = 'radio';
    (support, $__.os.oid1).radioValue = TAJS_restrictToType(input.value, 'string') === 't';
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
input = document.createElement('input');
select = document.createElement('select');
opt = select.appendChild(document.createElement('option'));
input.type = 'checkbox';
support.checkOn = input.value !== '';
support.optSelected = opt.selected;
input = document.createElement('input');
input.value = 't';
input.type = 'radio';
support.radioValue = input.value === 't';}), $__.fs.J$__v5960504135_820_528)(0, true, $__.uid);
    attrHandle = (((jQuery.expr, $__.os.oid18), $__.os.oid18).attrHandle, $__.os.oid8);
    vvv_tmp27 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp27, $__.os.oid131 = {
        'attr': ($__.fs.J$__v5960504135_822_529 = function J$__v5960504135_822(name, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return access(this, jQuery.attr, name, value, arguments.length > 1);}),
        'removeAttr': ($__.fs.J$__v5960504135_826_530 = function J$__v5960504135_826(name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.each(function () {
    jQuery.removeAttr(this, name);
});})
    }, 19, true, $__.uid);
    vvv_tmp28 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp28, $__.os.oid134 = {
        'attr': ($__.fs.J$__v5960504135_828_531 = function J$__v5960504135_828(elem, name, value) {
var vvv_return, vvv_switch, ret, hooks, nType;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], value = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
nType = elem.nodeType;
if (nType === 3 || nType === 8 || nType === 2) {
    return;
}
if (typeof elem.getAttribute === 'undefined') {
    return jQuery.prop(elem, name, value);
}
if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
    hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
}
if (value !== undefined) {
    if (value === null) {
        jQuery.removeAttr(elem, name);
        return;
    }
    if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
        return ret;
    }
    elem.setAttribute(name, value + '');
    return value;
}
if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
    return ret;
}
ret = jQuery.find.attr(elem, name);
return ret == null ? undefined : ret;}),
        'attrHooks': $__.os.oid133 = {
            'type': $__.os.oid132 = {
                'set': ($__.fs.J$__v5960504135_830_532 = function J$__v5960504135_830(elem, value) {
var vvv_return, vvv_switch, val;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!support.radioValue && value === 'radio' && nodeName(elem, 'input')) {
    val = elem.value;
    elem.setAttribute('type', value);
    if (val) {
        elem.value = val;
    }
    return value;
}})
            }
        },
        'removeAttr': ($__.fs.J$__v5960504135_832_533 = function J$__v5960504135_832(elem, value) {
var vvv_return, vvv_switch, name, i, attrNames;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
attrNames = value && value.match(rnothtmlwhite);
if (attrNames && elem.nodeType === 1) {
    while (name = attrNames[i++]) {
        elem.removeAttribute(name);
    }
}})
    }, 20, true, $__.uid);
    boolHook = $__.os.oid135 = {
        'set': ($__.fs.J$__v5960504135_834_534 = function J$__v5960504135_834(elem, value, name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1], name = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (value === false) {
    jQuery.removeAttr(elem, name);
} else {
    elem.setAttribute(name, name);
}
return name;})
    };
    vvv_tmp29 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp29, function $__lt10(res) {
        res.length = 16;
        if (res.length != 16)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt10, -2);
    }(TAJS_restrictToType(TAJS_restrictToType(((((jQuery.expr, $__.os.oid18), $__.os.oid18).match, $__.os.oid5), $__.os.oid5).bool, 'object').source, 'string')['match'](/\w+/g)), ($__.fs.J$__v5960504135_838_535 = function J$__v5960504135_838(i, name) {
var vvv_return, vvv_switch, getter;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], name = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'checked'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'checked'] = ($__.fs.J$__v5960504135_836_536 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'selected'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'selected'] = ($__.fs.J$__v5960504135_836_537 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'async'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'async'] = ($__.fs.J$__v5960504135_836_538 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'autofocus'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'autofocus'] = ($__.fs.J$__v5960504135_836_539 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'autoplay'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'autoplay'] = ($__.fs.J$__v5960504135_836_540 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'controls'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'controls'] = ($__.fs.J$__v5960504135_836_541 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'defer'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'defer'] = ($__.fs.J$__v5960504135_836_542 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'disabled'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'disabled'] = ($__.fs.J$__v5960504135_836_543 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'hidden'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'hidden'] = ($__.fs.J$__v5960504135_836_544 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'ismap'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'ismap'] = ($__.fs.J$__v5960504135_836_545 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'loop'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'loop'] = ($__.fs.J$__v5960504135_836_546 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'multiple'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'multiple'] = ($__.fs.J$__v5960504135_836_547 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'open'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'open'] = ($__.fs.J$__v5960504135_836_548 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'readonly'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'readonly'] = ($__.fs.J$__v5960504135_836_549 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'required'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'required'] = ($__.fs.J$__v5960504135_836_550 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    getter = (TAJS_restrictToType((attrHandle, $__.os.oid8)[name, 'scoped'], 'undefined'), TAJS_restrictToType(TAJS_restrictToType(jQuery.find, 'function').attr, 'function'));
    (attrHandle, $__.os.oid8)[name, 'scoped'] = ($__.fs.J$__v5960504135_836_551 = function J$__v5960504135_836(elem, name, isXML) {
var vvv_return, vvv_switch, ret, handle, lowercaseName;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], isXML = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lowercaseName = name.toLowerCase();
if (!isXML) {
    handle = attrHandle[lowercaseName];
    attrHandle[lowercaseName] = ret;
    ret = getter(elem, name, isXML) != null ? lowercaseName : null;
    attrHandle[lowercaseName] = handle;
}
return ret;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
getter = attrHandle[name] || jQuery.find.attr;
attrHandle[name] = function (elem, name, isXML) {
    var ret, handle, lowercaseName = name.toLowerCase();
    if (!isXML) {
        handle = attrHandle[lowercaseName];
        attrHandle[lowercaseName] = ret;
        ret = getter(elem, name, isXML) != null ? lowercaseName : null;
        attrHandle[lowercaseName] = handle;
    }
    return ret;
};}, $__.fs.J$__v5960504135_838_535), 21, true, $__.uid);
    rfocusable = /^(?:input|select|textarea|button)$/i;
    rclickable = /^(?:a|area)$/i;
    vvv_tmp30 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp30, $__.os.oid136 = {
        'prop': ($__.fs.J$__v5960504135_840_552 = function J$__v5960504135_840(name, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return access(this, jQuery.prop, name, value, arguments.length > 1);}),
        'removeProp': ($__.fs.J$__v5960504135_844_553 = function J$__v5960504135_844(name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.each(function () {
    delete this[jQuery.propFix[name] || name];
});})
    }, 21, true, $__.uid);
    vvv_tmp31 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp31, $__.os.oid140 = {
        'prop': ($__.fs.J$__v5960504135_846_554 = function J$__v5960504135_846(elem, name, value) {
var vvv_return, vvv_switch, ret, hooks, nType;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], name = arguments[1], value = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
nType = elem.nodeType;
if (nType === 3 || nType === 8 || nType === 2) {
    return;
}
if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
    name = jQuery.propFix[name] || name;
    hooks = jQuery.propHooks[name];
}
if (value !== undefined) {
    if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
        return ret;
    }
    return elem[name] = value;
}
if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
    return ret;
}
return elem[name];}),
        'propHooks': $__.os.oid138 = {
            'tabIndex': $__.os.oid137 = {
                'get': ($__.fs.J$__v5960504135_848_555 = function J$__v5960504135_848(elem) {
var vvv_return, vvv_switch, tabindex;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
tabindex = jQuery.find.attr(elem, 'tabindex');
if (tabindex) {
    return parseInt(tabindex, 10);
}
if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
    return 0;
}
return -1;})
            }
        },
        'propFix': $__.os.oid139 = {
            'for': 'htmlFor',
            'class': 'className'
        }
    }, 22, true, $__.uid);
    !((support, $__.os.oid1).optSelected, true);
    vvv_tmp32 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp32, [
        'tabIndex',
        'readOnly',
        'maxLength',
        'cellSpacing',
        'cellPadding',
        'rowSpan',
        'colSpan',
        'useMap',
        'frameBorder',
        'contentEditable'
    ], ($__.fs.J$__v5960504135_854_556 = function J$__v5960504135_854() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'tabindex'] = this;
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'readonly'] = this;
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'maxlength'] = this;
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'cellspacing'] = this;
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'cellpadding'] = this;
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'rowspan'] = this;
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'colspan'] = this;
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'usemap'] = this;
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'frameborder'] = this;
    return;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    ((jQuery.propFix, $__.os.oid139), $__.os.oid139)[this['toLowerCase'](), 'contenteditable'] = this;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.propFix[this.toLowerCase()] = this;}, $__.fs.J$__v5960504135_854_556), 22, true, $__.uid);
    vvv_tmp33 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp33, $__.os.oid141 = {
        'addClass': ($__.fs.J$__v5960504135_860_557 = function J$__v5960504135_860(value) {
var vvv_return, vvv_switch, classes, elem, cur, curValue, clazz, j, finalValue, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
if (jQuery.isFunction(value)) {
    return this.each(function (j) {
        jQuery(this).addClass(value.call(this, j, getClass(this)));
    });
}
if (typeof value === 'string' && value) {
    classes = value.match(rnothtmlwhite) || [];
    while (elem = this[i++]) {
        curValue = getClass(elem);
        cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';
        if (cur) {
            j = 0;
            while (clazz = classes[j++]) {
                if (cur.indexOf(' ' + clazz + ' ') < 0) {
                    cur += clazz + ' ';
                }
            }
            finalValue = stripAndCollapse(cur);
            if (curValue !== finalValue) {
                elem.setAttribute('class', finalValue);
            }
        }
    }
}
return this;}),
        'removeClass': ($__.fs.J$__v5960504135_864_558 = function J$__v5960504135_864(value) {
var vvv_return, vvv_switch, classes, elem, cur, curValue, clazz, j, finalValue, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
if (jQuery.isFunction(value)) {
    return this.each(function (j) {
        jQuery(this).removeClass(value.call(this, j, getClass(this)));
    });
}
if (!arguments.length) {
    return this.attr('class', '');
}
if (typeof value === 'string' && value) {
    classes = value.match(rnothtmlwhite) || [];
    while (elem = this[i++]) {
        curValue = getClass(elem);
        cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';
        if (cur) {
            j = 0;
            while (clazz = classes[j++]) {
                while (cur.indexOf(' ' + clazz + ' ') > -1) {
                    cur = cur.replace(' ' + clazz + ' ', ' ');
                }
            }
            finalValue = stripAndCollapse(cur);
            if (curValue !== finalValue) {
                elem.setAttribute('class', finalValue);
            }
        }
    }
}
return this;}),
        'toggleClass': ($__.fs.J$__v5960504135_870_559 = function J$__v5960504135_870(value, stateVal) {
var vvv_return, vvv_switch, type;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], stateVal = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
type = typeof value;
if (typeof stateVal === 'boolean' && type === 'string') {
    return stateVal ? this.addClass(value) : this.removeClass(value);
}
if (jQuery.isFunction(value)) {
    return this.each(function (i) {
        jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
    });
}
return this.each(function () {
    var className, i, self, classNames;
    if (type === 'string') {
        i = 0;
        self = jQuery(this);
        classNames = value.match(rnothtmlwhite) || [];
        while (className = classNames[i++]) {
            if (self.hasClass(className)) {
                self.removeClass(className);
            } else {
                self.addClass(className);
            }
        }
    } else if (value === undefined || type === 'boolean') {
        className = getClass(this);
        if (className) {
            dataPriv.set(this, '__className__', className);
        }
        if (this.setAttribute) {
            this.setAttribute('class', className || value === false ? '' : dataPriv.get(this, '__className__') || '');
        }
    }
});}),
        'hasClass': ($__.fs.J$__v5960504135_872_560 = function J$__v5960504135_872(selector) {
var vvv_return, vvv_switch, className, elem, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
className = ' ' + selector + ' ';
while (elem = this[i++]) {
    if (elem.nodeType === 1 && (' ' + stripAndCollapse(getClass(elem)) + ' ').indexOf(className) > -1) {
        return true;
    }
}
return false;})
    }, 23, true, $__.uid);
    rreturn = /\r/g;
    vvv_tmp34 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp34, $__.os.oid142 = {
        'val': ($__.fs.J$__v5960504135_878_561 = function J$__v5960504135_878(value) {
var vvv_return, vvv_switch, hooks, ret, isFunction, elem;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
elem = this[0];
if (!arguments.length) {
    if (elem) {
        hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
        if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {
            return ret;
        }
        ret = elem.value;
        if (typeof ret === 'string') {
            return ret.replace(rreturn, '');
        }
        return ret == null ? '' : ret;
    }
    return;
}
isFunction = jQuery.isFunction(value);
return this.each(function (i) {
    var val;
    if (this.nodeType !== 1) {
        return;
    }
    if (isFunction) {
        val = value.call(this, i, jQuery(this).val());
    } else {
        val = value;
    }
    if (val == null) {
        val = '';
    } else if (typeof val === 'number') {
        val += '';
    } else if (Array.isArray(val)) {
        val = jQuery.map(val, function (value) {
            return value == null ? '' : value + '';
        });
    }
    hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
    if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {
        this.value = val;
    }
});})
    }, 24, true, $__.uid);
    vvv_tmp35 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp35, $__.os.oid146 = {
        'valHooks': $__.os.oid145 = {
            'option': $__.os.oid143 = {
                'get': ($__.fs.J$__v5960504135_880_562 = function J$__v5960504135_880(elem) {
var vvv_return, vvv_switch, val;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
val = jQuery.find.attr(elem, 'value');
return val != null ? val : stripAndCollapse(jQuery.text(elem));})
            },
            'select': $__.os.oid144 = {
                'get': ($__.fs.J$__v5960504135_882_563 = function J$__v5960504135_882(elem) {
var vvv_return, vvv_switch, value, option, i, options, index, one, values, max;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
options = elem.options;
index = elem.selectedIndex;
one = elem.type === 'select-one';
values = one ? null : [];
max = one ? index + 1 : options.length;
if (index < 0) {
    i = max;
} else {
    i = one ? index : 0;
}
for (; i < max; i++) {
    option = options[i];
    if ((option.selected || i === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, 'optgroup'))) {
        value = jQuery(option).val();
        if (one) {
            return value;
        }
        values.push(value);
    }
}
return values;}),
                'set': ($__.fs.J$__v5960504135_884_564 = function J$__v5960504135_884(elem, value) {
var vvv_return, vvv_switch, optionSet, option, options, values, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
options = elem.options;
values = jQuery.makeArray(value);
i = options.length;
while (i--) {
    option = options[i];
    if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
        optionSet = true;
    }
}
if (!optionSet) {
    elem.selectedIndex = -1;
}
return values;})
            }
        }
    }, 25, true, $__.uid);
    vvv_tmp36 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp36, [
        'radio',
        'checkbox'
    ], ($__.fs.J$__v5960504135_890_565 = function J$__v5960504135_890() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.valHooks, $__.os.oid145), $__.os.oid145)[this, 'radio'] = $__.os.oid147 = {
        'set': ($__.fs.J$__v5960504135_886_566 = function J$__v5960504135_886(elem, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (Array.isArray(value)) {
    return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
}})
    };
    !((support, $__.os.oid1).checkOn, true);
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.valHooks, $__.os.oid145), $__.os.oid145)[this, 'checkbox'] = $__.os.oid148 = {
        'set': ($__.fs.J$__v5960504135_886_567 = function J$__v5960504135_886(elem, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (Array.isArray(value)) {
    return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
}})
    };
    !((support, $__.os.oid1).checkOn, true);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.valHooks[this] = {
    set: function (elem, value) {
        if (Array.isArray(value)) {
            return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
        }
    }
};
if (!support.checkOn) {
    jQuery.valHooks[this].get = function (elem) {
        return elem.getAttribute('value') === null ? 'on' : elem.value;
    };
}}, $__.fs.J$__v5960504135_890_565), 23, true, $__.uid);
    rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
    vvv_tmp37 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp37, (jQuery.event, $__.os.oid56), $__.os.oid149 = {
        'trigger': ($__.fs.J$__v5960504135_892_568 = function J$__v5960504135_892(event, data, elem, onlyHandlers) {
var vvv_return, vvv_switch, i, cur, tmp, bubbleType, ontype, handle, special, eventPath, type, namespaces;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0], data = arguments[1], elem = arguments[2], onlyHandlers = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
eventPath = [elem || document];
type = hasOwn.call(event, 'type') ? event.type : event;
namespaces = hasOwn.call(event, 'namespace') ? event.namespace.split('.') : [];
cur = tmp = elem = elem || document;
if (elem.nodeType === 3 || elem.nodeType === 8) {
    return;
}
if (rfocusMorph.test(type + jQuery.event.triggered)) {
    return;
}
if (type.indexOf('.') > -1) {
    namespaces = type.split('.');
    type = namespaces.shift();
    namespaces.sort();
}
ontype = type.indexOf(':') < 0 && 'on' + type;
event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event);
event.isTrigger = onlyHandlers ? 2 : 3;
event.namespace = namespaces.join('.');
event.rnamespace = event.namespace ? new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)') : null;
event.result = undefined;
if (!event.target) {
    event.target = elem;
}
data = data == null ? [event] : jQuery.makeArray(data, [event]);
special = jQuery.event.special[type] || {};
if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
    return;
}
if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
    bubbleType = special.delegateType || type;
    if (!rfocusMorph.test(bubbleType + type)) {
        cur = cur.parentNode;
    }
    for (; cur; cur = cur.parentNode) {
        eventPath.push(cur);
        tmp = cur;
    }
    if (tmp === (elem.ownerDocument || document)) {
        eventPath.push(tmp.defaultView || tmp.parentWindow || window);
    }
}
i = 0;
while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
    event.type = i > 1 ? bubbleType : special.bindType || type;
    handle = (dataPriv.get(cur, 'events') || {})[event.type] && dataPriv.get(cur, 'handle');
    if (handle) {
        handle.apply(cur, data);
    }
    handle = ontype && cur[ontype];
    if (handle && handle.apply && acceptData(cur)) {
        event.result = handle.apply(cur, data);
        if (event.result === false) {
            event.preventDefault();
        }
    }
}
event.type = type;
if (!onlyHandlers && !event.isDefaultPrevented()) {
    if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
        if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
            tmp = elem[ontype];
            if (tmp) {
                elem[ontype] = null;
            }
            jQuery.event.triggered = type;
            elem[type]();
            jQuery.event.triggered = undefined;
            if (tmp) {
                elem[ontype] = tmp;
            }
        }
    }
}
return event.result;}),
        'simulate': ($__.fs.J$__v5960504135_894_569 = function J$__v5960504135_894(type, elem, event) {
var vvv_return, vvv_switch, e;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0], elem = arguments[1], event = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
e = jQuery.extend(new jQuery.Event(), event, {
    type: type,
    isSimulated: true
});
jQuery.event.trigger(e, null, elem);})
    }, 26, true, $__.uid);
    vvv_tmp38 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp38, $__.os.oid150 = {
        'trigger': ($__.fs.J$__v5960504135_898_570 = function J$__v5960504135_898(type, data) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0], data = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.each(function () {
    jQuery.event.trigger(type, data, this);
});}),
        'triggerHandler': ($__.fs.J$__v5960504135_900_571 = function J$__v5960504135_900(type, data) {
var vvv_return, vvv_switch, elem;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
type = arguments[0], data = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
elem = this[0];
if (elem) {
    return jQuery.event.trigger(type, data, elem, true);
}})
    }, 27, true, $__.uid);
    vvv_tmp39 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp39, function $__lt11(res) {
        res.length = 22;
        if (res.length != 22)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt11, -2);
    }(('blur focus focusin focusout resize scroll click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup contextmenu')['split'](' ')), ($__.fs.J$__v5960504135_904_572 = function J$__v5960504135_904(i, name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], name = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'blur'] = ($__.fs.J$__v5960504135_902_573 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'focus'] = ($__.fs.J$__v5960504135_902_574 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'focusin'] = ($__.fs.J$__v5960504135_902_575 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'focusout'] = ($__.fs.J$__v5960504135_902_576 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'resize'] = ($__.fs.J$__v5960504135_902_577 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'scroll'] = ($__.fs.J$__v5960504135_902_578 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'click'] = ($__.fs.J$__v5960504135_902_579 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'dblclick'] = ($__.fs.J$__v5960504135_902_580 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'mousedown'] = ($__.fs.J$__v5960504135_902_581 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'mouseup'] = ($__.fs.J$__v5960504135_902_582 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'mousemove'] = ($__.fs.J$__v5960504135_902_583 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'mouseover'] = ($__.fs.J$__v5960504135_902_584 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'mouseout'] = ($__.fs.J$__v5960504135_902_585 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'mouseenter'] = ($__.fs.J$__v5960504135_902_586 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'mouseleave'] = ($__.fs.J$__v5960504135_902_587 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'change'] = ($__.fs.J$__v5960504135_902_588 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'select'] = ($__.fs.J$__v5960504135_902_589 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 17);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'submit'] = ($__.fs.J$__v5960504135_902_590 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'keydown'] = ($__.fs.J$__v5960504135_902_591 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 19:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 19);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'keypress'] = ($__.fs.J$__v5960504135_902_592 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'keyup'] = ($__.fs.J$__v5960504135_902_593 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
case 21:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 21);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[name, 'contextmenu'] = ($__.fs.J$__v5960504135_902_594 = function J$__v5960504135_902(data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.fn[name] = function (data, fn) {
    return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
};}, $__.fs.J$__v5960504135_904_572), 24, true, $__.uid);
    vvv_tmp40 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp40, $__.os.oid151 = {
        'hover': ($__.fs.J$__v5960504135_906_595 = function J$__v5960504135_906(fnOver, fnOut) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fnOver = arguments[0], fnOut = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);})
    }, 28, true, $__.uid);
    (support, $__.os.oid1).focusin = 'onfocusin' in window;
    !((support, $__.os.oid1).focusin, false);
    vvv_tmp41 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp41, $__.os.oid152 = {
        'focus': 'focusin',
        'blur': 'focusout'
    }, ($__.fs.J$__v5960504135_914_596 = function J$__v5960504135_914(orig, fix) {
var vvv_return, vvv_switch, handler;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
orig = arguments[0], fix = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    handler = ($__.fs.J$__v5960504135_908_597 = function J$__v5960504135_908(event) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));});
    ((((jQuery.event, $__.os.oid56), $__.os.oid56).special, $__.os.oid55), $__.os.oid55)[fix, 'focusin'] = $__.os.oid153 = {
        'setup': ($__.fs.J$__v5960504135_910_598 = function J$__v5960504135_910() {
var vvv_return, vvv_switch, doc, attaches;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
doc = this.ownerDocument || this;
attaches = dataPriv.access(doc, fix);
if (!attaches) {
    doc.addEventListener(orig, handler, true);
}
dataPriv.access(doc, fix, (attaches || 0) + 1);}),
        'teardown': ($__.fs.J$__v5960504135_912_599 = function J$__v5960504135_912() {
var vvv_return, vvv_switch, doc, attaches;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
doc = this.ownerDocument || this;
attaches = dataPriv.access(doc, fix) - 1;
if (!attaches) {
    doc.removeEventListener(orig, handler, true);
    dataPriv.remove(doc, fix);
} else {
    dataPriv.access(doc, fix, attaches);
}})
    };
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    handler = ($__.fs.J$__v5960504135_908_600 = function J$__v5960504135_908(event) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
event = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));});
    ((((jQuery.event, $__.os.oid56), $__.os.oid56).special, $__.os.oid55), $__.os.oid55)[fix, 'focusout'] = $__.os.oid154 = {
        'setup': ($__.fs.J$__v5960504135_910_601 = function J$__v5960504135_910() {
var vvv_return, vvv_switch, doc, attaches;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
doc = this.ownerDocument || this;
attaches = dataPriv.access(doc, fix);
if (!attaches) {
    doc.addEventListener(orig, handler, true);
}
dataPriv.access(doc, fix, (attaches || 0) + 1);}),
        'teardown': ($__.fs.J$__v5960504135_912_602 = function J$__v5960504135_912() {
var vvv_return, vvv_switch, doc, attaches;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
doc = this.ownerDocument || this;
attaches = dataPriv.access(doc, fix) - 1;
if (!attaches) {
    doc.removeEventListener(orig, handler, true);
    dataPriv.remove(doc, fix);
} else {
    dataPriv.access(doc, fix, attaches);
}})
    };
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
handler = function (event) {
    jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
};
jQuery.event.special[fix] = {
    setup: function () {
        var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix);
        if (!attaches) {
            doc.addEventListener(orig, handler, true);
        }
        dataPriv.access(doc, fix, (attaches || 0) + 1);
    },
    teardown: function () {
        var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix) - 1;
        if (!attaches) {
            doc.removeEventListener(orig, handler, true);
            dataPriv.remove(doc, fix);
        } else {
            dataPriv.access(doc, fix, attaches);
        }
    }
};}, $__.fs.J$__v5960504135_914_596), 25, true, $__.uid);
    location = TAJS_restrictToType(window.location, 'object');
    nonce = jQuery['now']();
    rquery = /\?/;
    jQuery.parseXML = ($__.fs.J$__v5960504135_916_603 = function J$__v5960504135_916(data) {
var vvv_return, vvv_switch, xml;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!data || typeof data !== 'string') {
    return null;
}
try {
    xml = new window.DOMParser().parseFromString(data, 'text/xml');
} catch (e) {
    xml = undefined;
}
if (!xml || xml.getElementsByTagName('parsererror').length) {
    jQuery.error('Invalid XML: ' + data);
}
return xml;});
    rbracket = /\[\]$/;
    rCRLF = /\r?\n/g;
    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i;
    rsubmittable = /^(?:input|select|textarea|keygen)/i;
    jQuery.param = ($__.fs.J$__v5960504135_925_604 = function J$__v5960504135_925(a, traditional) {
var vvv_return, vvv_switch, prefix, s, add;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
a = arguments[0], traditional = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
s = [];
add = function (key, valueOrFunction) {
    var value = jQuery.isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
    s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value == null ? '' : value);
};
if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
    jQuery.each(a, function () {
        add(this.name, this.value);
    });
} else {
    for (prefix in a) {
        buildParams(prefix, a[prefix], traditional, add);
    }
}
return s.join('&');});
    vvv_tmp42 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp42, $__.os.oid155 = {
        'serialize': ($__.fs.J$__v5960504135_927_605 = function J$__v5960504135_927() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return jQuery.param(this.serializeArray());}),
        'serializeArray': ($__.fs.J$__v5960504135_937_606 = function J$__v5960504135_937() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.map(function () {
    var elements = jQuery.prop(this, 'elements');
    return elements ? jQuery.makeArray(elements) : this;
}).filter(function () {
    var type = this.type;
    return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
}).map(function (i, elem) {
    var val = jQuery(this).val();
    if (val == null) {
        return null;
    }
    if (Array.isArray(val)) {
        return jQuery.map(val, function (val) {
            return {
                name: elem.name,
                value: val.replace(rCRLF, '\r\n')
            };
        });
    }
    return {
        name: elem.name,
        value: val.replace(rCRLF, '\r\n')
    };
}).get();})
    }, 29, true, $__.uid);
    r20 = /%20/g;
    rhash = /#.*$/;
    rantiCache = /([?&])_=[^&]*/;
    rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm;
    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/;
    rnoContent = /^(?:GET|HEAD)$/;
    rprotocol = /^\/\//;
    prefilters = $__.os.oid156 = {};
    transports = $__.os.oid157 = {};
    allTypes = '*/'['concat']('*');
    originAnchor = document['createElement']('a');
    originAnchor.href = TAJS_restrictToType(location.href, 'string');
    vvv_tmp43 = jQuery, 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp43, $__.os.oid166 = {
        'active': 0,
        'lastModified': $__.os.oid158 = {},
        'etag': $__.os.oid159 = {},
        'ajaxSettings': $__.os.oid165 = {
            'url': TAJS_restrictToType(location.href, 'string'),
            'type': 'GET',
            'isLocal': rlocalProtocol['test'](TAJS_restrictToType(location.protocol, 'string')),
            'global': true,
            'processData': true,
            'async': true,
            'contentType': 'application/x-www-form-urlencoded; charset=UTF-8',
            'accepts': $__.os.oid160 = {
                '*': allTypes,
                'text': 'text/plain',
                'html': 'text/html',
                'xml': 'application/xml, text/xml',
                'json': 'application/json, text/javascript'
            },
            'contents': $__.os.oid161 = {
                'xml': /\bxml\b/,
                'html': /\bhtml/,
                'json': /\bjson\b/
            },
            'responseFields': $__.os.oid162 = {
                'xml': 'responseXML',
                'text': 'responseText',
                'json': 'responseJSON'
            },
            'converters': $__.os.oid163 = {
                '* text': String,
                'text html': true,
                'text json': TAJS_restrictToType(JSON.parse, 'function'),
                'text xml': TAJS_restrictToType(jQuery.parseXML, 'function')
            },
            'flatOptions': $__.os.oid164 = {
                'url': true,
                'context': true
            }
        },
        'ajaxSetup': ($__.fs.J$__v5960504135_949_607 = function J$__v5960504135_949(target, settings) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
target = arguments[0], settings = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return settings, (ajaxExtend, $__.fs.ajaxExtend_55)((jQuery.ajaxSettings, $__.os.oid165), target, 0, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    return settings, (ajaxExtend, $__.fs.ajaxExtend_55)((jQuery.ajaxSettings, $__.os.oid165), target, 1, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);}),
        'ajaxPrefilter': (addToPrefiltersOrTransports, $__.fs.addToPrefiltersOrTransports_53)(prefilters, 0, true, $__.uid),
        'ajaxTransport': (addToPrefiltersOrTransports, $__.fs.addToPrefiltersOrTransports_53)(transports, 1, true, $__.uid),
        'ajax': ($__.fs.J$__v5960504135_966_610 = function J$__v5960504135_966(url, options) {
var vvv_return, vvv_switch, transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, completed, fireGlobals, i, uncached, s, callbackContext, globalEventContext, deferred, completeDeferred, statusCode, requestHeaders, requestHeadersNames, strAbort, jqXHR, done;
done = function done(status, nativeStatusText, responses, headers) {
    var isSuccess, success, error, response, modified, statusText = nativeStatusText;
    if (completed) {
        return;
    }
    completed = true;
    if (timeoutTimer) {
        window.clearTimeout(timeoutTimer);
    }
    transport = undefined;
    responseHeadersString = headers || '';
    jqXHR.readyState = status > 0 ? 4 : 0;
    isSuccess = status >= 200 && status < 300 || status === 304;
    if (responses) {
        response = ajaxHandleResponses(s, jqXHR, responses);
    }
    response = ajaxConvert(s, response, jqXHR, isSuccess);
    if (isSuccess) {
        if (s.ifModified) {
            modified = jqXHR.getResponseHeader('Last-Modified');
            if (modified) {
                jQuery.lastModified[cacheURL] = modified;
            }
            modified = jqXHR.getResponseHeader('etag');
            if (modified) {
                jQuery.etag[cacheURL] = modified;
            }
        }
        if (status === 204 || s.type === 'HEAD') {
            statusText = 'nocontent';
        } else if (status === 304) {
            statusText = 'notmodified';
        } else {
            statusText = response.state;
            success = response.data;
            error = response.error;
            isSuccess = !error;
        }
    } else {
        error = statusText;
        if (status || !statusText) {
            statusText = 'error';
            if (status < 0) {
                status = 0;
            }
        }
    }
    jqXHR.status = status;
    jqXHR.statusText = (nativeStatusText || statusText) + '';
    if (isSuccess) {
        deferred.resolveWith(callbackContext, [
            success,
            statusText,
            jqXHR
        ]);
    } else {
        deferred.rejectWith(callbackContext, [
            jqXHR,
            statusText,
            error
        ]);
    }
    jqXHR.statusCode(statusCode);
    statusCode = undefined;
    if (fireGlobals) {
        globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [
            jqXHR,
            s,
            isSuccess ? success : error
        ]);
    }
    completeDeferred.fireWith(callbackContext, [
        jqXHR,
        statusText
    ]);
    if (fireGlobals) {
        globalEventContext.trigger('ajaxComplete', [
            jqXHR,
            s
        ]);
        if (!--jQuery.active) {
            jQuery.event.trigger('ajaxStop');
        }
    }
};
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
url = arguments[0], options = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof url === 'object') {
    options = url;
    url = undefined;
}
options = options || {};
s = jQuery.ajaxSetup({}, options);
callbackContext = s.context || s;
globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event;
deferred = jQuery.Deferred();
completeDeferred = jQuery.Callbacks('once memory');
statusCode = s.statusCode || {};
requestHeaders = {};
requestHeadersNames = {};
strAbort = 'canceled';
jqXHR = {
    readyState: 0,
    getResponseHeader: function (key) {
        var match;
        if (completed) {
            if (!responseHeaders) {
                responseHeaders = {};
                while (match = rheaders.exec(responseHeadersString)) {
                    responseHeaders[match[1].toLowerCase()] = match[2];
                }
            }
            match = responseHeaders[key.toLowerCase()];
        }
        return match == null ? null : match;
    },
    getAllResponseHeaders: function () {
        return completed ? responseHeadersString : null;
    },
    setRequestHeader: function (name, value) {
        if (completed == null) {
            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
            requestHeaders[name] = value;
        }
        return this;
    },
    overrideMimeType: function (type) {
        if (completed == null) {
            s.mimeType = type;
        }
        return this;
    },
    statusCode: function (map) {
        var code;
        if (map) {
            if (completed) {
                jqXHR.always(map[jqXHR.status]);
            } else {
                for (code in map) {
                    statusCode[code] = [
                        statusCode[code],
                        map[code]
                    ];
                }
            }
        }
        return this;
    },
    abort: function (statusText) {
        var finalText = statusText || strAbort;
        if (transport) {
            transport.abort(finalText);
        }
        done(0, finalText);
        return this;
    }
};
deferred.promise(jqXHR);
s.url = ((url || s.url || location.href) + '').replace(rprotocol, location.protocol + '//');
s.type = options.method || options.type || s.method || s.type;
s.dataTypes = (s.dataType || '*').toLowerCase().match(rnothtmlwhite) || [''];
if (s.crossDomain == null) {
    urlAnchor = document.createElement('a');
    try {
        urlAnchor.href = s.url;
        urlAnchor.href = urlAnchor.href;
        s.crossDomain = originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host;
    } catch (e) {
        s.crossDomain = true;
    }
}
if (s.data && s.processData && typeof s.data !== 'string') {
    s.data = jQuery.param(s.data, s.traditional);
}
inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
if (completed) {
    return jqXHR;
}
fireGlobals = jQuery.event && s.global;
if (fireGlobals && jQuery.active++ === 0) {
    jQuery.event.trigger('ajaxStart');
}
s.type = s.type.toUpperCase();
s.hasContent = !rnoContent.test(s.type);
cacheURL = s.url.replace(rhash, '');
if (!s.hasContent) {
    uncached = s.url.slice(cacheURL.length);
    if (s.data) {
        cacheURL += (rquery.test(cacheURL) ? '&' : '?') + s.data;
        delete s.data;
    }
    if (s.cache === false) {
        cacheURL = cacheURL.replace(rantiCache, '$1');
        uncached = (rquery.test(cacheURL) ? '&' : '?') + '_=' + nonce++ + uncached;
    }
    s.url = cacheURL + uncached;
} else if (s.data && s.processData && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0) {
    s.data = s.data.replace(r20, '+');
}
if (s.ifModified) {
    if (jQuery.lastModified[cacheURL]) {
        jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL]);
    }
    if (jQuery.etag[cacheURL]) {
        jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);
    }
}
if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
    jqXHR.setRequestHeader('Content-Type', s.contentType);
}
jqXHR.setRequestHeader('Accept', s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '') : s.accepts['*']);
for (i in s.headers) {
    jqXHR.setRequestHeader(i, s.headers[i]);
}
if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {
    return jqXHR.abort();
}
strAbort = 'abort';
completeDeferred.add(s.complete);
jqXHR.done(s.success);
jqXHR.fail(s.error);
transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
if (!transport) {
    done(-1, 'No Transport');
} else {
    jqXHR.readyState = 1;
    if (fireGlobals) {
        globalEventContext.trigger('ajaxSend', [
            jqXHR,
            s
        ]);
    }
    if (completed) {
        return jqXHR;
    }
    if (s.async && s.timeout > 0) {
        timeoutTimer = window.setTimeout(function () {
            jqXHR.abort('timeout');
        }, s.timeout);
    }
    try {
        completed = false;
        transport.send(requestHeaders, done);
    } catch (e) {
        if (completed) {
            throw e;
        }
        done(-1, e);
    }
}
return jqXHR;}),
        'getJSON': ($__.fs.J$__v5960504135_968_611 = function J$__v5960504135_968(url, data, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
url = arguments[0], data = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return jQuery.get(url, data, callback, 'json');}),
        'getScript': ($__.fs.J$__v5960504135_970_612 = function J$__v5960504135_970(url, callback) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
url = arguments[0], callback = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return jQuery.get(url, undefined, callback, 'script');})
    }, 30, true, $__.uid);
    vvv_tmp44 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp44, [
        'get',
        'post'
    ], ($__.fs.J$__v5960504135_974_613 = function J$__v5960504135_974(i, method) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], method = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    jQuery[method, 'get'] = ($__.fs.J$__v5960504135_972_614 = function J$__v5960504135_972(url, data, callback, type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
url = arguments[0], data = arguments[1], callback = arguments[2], type = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(data)) {
    type = type || callback;
    callback = data;
    data = undefined;
}
return jQuery.ajax(jQuery.extend({
    url: url,
    type: method,
    dataType: type,
    data: data,
    success: callback
}, jQuery.isPlainObject(url) && url));});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    jQuery[method, 'post'] = ($__.fs.J$__v5960504135_972_615 = function J$__v5960504135_972(url, data, callback, type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
url = arguments[0], data = arguments[1], callback = arguments[2], type = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(data)) {
    type = type || callback;
    callback = data;
    data = undefined;
}
return jQuery.ajax(jQuery.extend({
    url: url,
    type: method,
    dataType: type,
    data: data,
    success: callback
}, jQuery.isPlainObject(url) && url));});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery[method] = function (url, data, callback, type) {
    if (jQuery.isFunction(data)) {
        type = type || callback;
        callback = data;
        data = undefined;
    }
    return jQuery.ajax(jQuery.extend({
        url: url,
        type: method,
        dataType: type,
        data: data,
        success: callback
    }, jQuery.isPlainObject(url) && url));
};}, $__.fs.J$__v5960504135_974_613), 26, true, $__.uid);
    jQuery._evalUrl = ($__.fs.J$__v5960504135_976_616 = function J$__v5960504135_976(url) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
url = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return jQuery.ajax({
    url: url,
    type: 'GET',
    dataType: 'script',
    cache: true,
    async: false,
    global: false,
    'throws': true
});});
    vvv_tmp45 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp45, $__.os.oid167 = {
        'wrapAll': ($__.fs.J$__v5960504135_980_617 = function J$__v5960504135_980(html) {
var vvv_return, vvv_switch, wrap;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
html = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this[0]) {
    if (jQuery.isFunction(html)) {
        html = html.call(this[0]);
    }
    wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
    if (this[0].parentNode) {
        wrap.insertBefore(this[0]);
    }
    wrap.map(function () {
        var elem = this;
        while (elem.firstElementChild) {
            elem = elem.firstElementChild;
        }
        return elem;
    }).append(this);
}
return this;}),
        'wrapInner': ($__.fs.J$__v5960504135_986_618 = function J$__v5960504135_986(html) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
html = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (jQuery.isFunction(html)) {
    return this.each(function (i) {
        jQuery(this).wrapInner(html.call(this, i));
    });
}
return this.each(function () {
    var self = jQuery(this), contents = self.contents();
    if (contents.length) {
        contents.wrapAll(html);
    } else {
        self.append(html);
    }
});}),
        'wrap': ($__.fs.J$__v5960504135_990_619 = function J$__v5960504135_990(html) {
var vvv_return, vvv_switch, isFunction;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
html = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
isFunction = jQuery.isFunction(html);
return this.each(function (i) {
    jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
});}),
        'unwrap': ($__.fs.J$__v5960504135_994_620 = function J$__v5960504135_994(selector) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.parent(selector).not('body').each(function () {
    jQuery(this).replaceWith(this.childNodes);
});
return this;})
    }, 31, true, $__.uid);
    ((((jQuery.expr, $__.os.oid18), $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17).hidden = ($__.fs.J$__v5960504135_996_621 = function J$__v5960504135_996(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !jQuery.expr.pseudos.visible(elem);});
    ((((jQuery.expr, $__.os.oid18), $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17).visible = ($__.fs.J$__v5960504135_998_622 = function J$__v5960504135_998(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);});
    ((jQuery.ajaxSettings, $__.os.oid165), $__.os.oid165).xhr = ($__.fs.J$__v5960504135_1000_623 = function J$__v5960504135_1000() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return new window['XMLHttpRequest']();
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    return new window.XMLHttpRequest();
} catch (e) {
}});
    xhrSuccessStatus = $__.os.oid168 = {
        0: 200,
        1223: 204
    };
    xhrSupported = (vvv_tmp46 = (jQuery.ajaxSettings, $__.os.oid165), 'xhr', $__.fs.J$__v5960504135_1000_623.call(vvv_tmp46, 0, true, $__.uid));
    (support, $__.os.oid1).cors = (!!xhrSupported, 'withCredentials' in xhrSupported);
    (support, $__.os.oid1).ajax = xhrSupported = !!xhrSupported;
    vvv_tmp47 = jQuery, 'ajaxTransport', $__.fs.J$__v5960504135_939_609.call(vvv_tmp47, ($__.fs.J$__v5960504135_1014_624 = function J$__v5960504135_1014(options) {
var vvv_return, vvv_switch, callback, errorCallback;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
options = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (support.cors || xhrSupported && !options.crossDomain) {
    return {
        send: function (headers, complete) {
            var i, xhr = options.xhr();
            xhr.open(options.type, options.url, options.async, options.username, options.password);
            if (options.xhrFields) {
                for (i in options.xhrFields) {
                    xhr[i] = options.xhrFields[i];
                }
            }
            if (options.mimeType && xhr.overrideMimeType) {
                xhr.overrideMimeType(options.mimeType);
            }
            if (!options.crossDomain && !headers['X-Requested-With']) {
                headers['X-Requested-With'] = 'XMLHttpRequest';
            }
            for (i in headers) {
                xhr.setRequestHeader(i, headers[i]);
            }
            callback = function (type) {
                return function () {
                    if (callback) {
                        callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;
                        if (type === 'abort') {
                            xhr.abort();
                        } else if (type === 'error') {
                            if (typeof xhr.status !== 'number') {
                                complete(0, 'error');
                            } else {
                                complete(xhr.status, xhr.statusText);
                            }
                        } else {
                            complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || 'text') !== 'text' || typeof xhr.responseText !== 'string' ? {
                                binary: xhr.response
                            } : {
                                text: xhr.responseText
                            }, xhr.getAllResponseHeaders());
                        }
                    }
                };
            };
            xhr.onload = callback();
            errorCallback = xhr.onerror = callback('error');
            if (xhr.onabort !== undefined) {
                xhr.onabort = errorCallback;
            } else {
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        window.setTimeout(function () {
                            if (callback) {
                                errorCallback();
                            }
                        });
                    }
                };
            }
            callback = callback('abort');
            try {
                xhr.send(options.hasContent && options.data || null);
            } catch (e) {
                if (callback) {
                    throw e;
                }
            }
        },
        abort: function () {
            if (callback) {
                callback();
            }
        }
    };
}}, $__.fs.J$__v5960504135_1014_624_177 = $__.fs.J$__v5960504135_1014_624, $__.fs.J$__v5960504135_1014_624_178 = $__.fs.J$__v5960504135_1014_624, $__.fs.J$__v5960504135_1014_624), 0, true, $__.uid);
    vvv_tmp48 = jQuery, 'ajaxPrefilter', $__.fs.J$__v5960504135_939_608.call(vvv_tmp48, ($__.fs.J$__v5960504135_1016_625 = function J$__v5960504135_1016(s) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
s = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (s.crossDomain) {
    s.contents.script = false;
}}, $__.fs.J$__v5960504135_1016_625_179 = $__.fs.J$__v5960504135_1016_625, $__.fs.J$__v5960504135_1016_625_180 = $__.fs.J$__v5960504135_1016_625, $__.fs.J$__v5960504135_1016_625), 0, true, $__.uid);
    vvv_tmp49 = jQuery, 'ajaxSetup', $__.fs.J$__v5960504135_949_607.call(vvv_tmp49, $__.os.oid172 = {
        'accepts': $__.os.oid169 = {
            'script': 'text/javascript, application/javascript, ' + 'application/ecmascript, application/x-ecmascript'
        },
        'contents': $__.os.oid170 = {
            'script': /\b(?:java|ecma)script\b/
        },
        'converters': $__.os.oid171 = {
            'text script': ($__.fs.J$__v5960504135_1018_626 = function J$__v5960504135_1018(text) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
text = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.globalEval(text);
return text;}, $__.fs.J$__v5960504135_1018_626_181 = $__.fs.J$__v5960504135_1018_626, $__.fs.J$__v5960504135_1018_626_182 = $__.fs.J$__v5960504135_1018_626, $__.fs.J$__v5960504135_1018_626)
        }
    }, 0, true, $__.uid);
    vvv_tmp50 = jQuery, 'ajaxPrefilter', $__.fs.J$__v5960504135_939_608.call(vvv_tmp50, 'script', ($__.fs.J$__v5960504135_1020_627 = function J$__v5960504135_1020(s) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
s = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (s.cache === undefined) {
    s.cache = false;
}
if (s.crossDomain) {
    s.type = 'GET';
}}, $__.fs.J$__v5960504135_1020_627_183 = $__.fs.J$__v5960504135_1020_627, $__.fs.J$__v5960504135_1020_627_184 = $__.fs.J$__v5960504135_1020_627, $__.fs.J$__v5960504135_1020_627), 1, true, $__.uid);
    vvv_tmp51 = jQuery, 'ajaxTransport', $__.fs.J$__v5960504135_939_609.call(vvv_tmp51, 'script', ($__.fs.J$__v5960504135_1028_628 = function J$__v5960504135_1028(s) {
var vvv_return, vvv_switch, script, callback;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
s = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (s.crossDomain) {
    return {
        send: function (_, complete) {
            script = jQuery('<script>').prop({
                charset: s.scriptCharset,
                src: s.url
            }).on('load error', callback = function (evt) {
                script.remove();
                callback = null;
                if (evt) {
                    complete(evt.type === 'error' ? 404 : 200, evt.type);
                }
            });
            document.head.appendChild(script[0]);
        },
        abort: function () {
            if (callback) {
                callback();
            }
        }
    };
}}, $__.fs.J$__v5960504135_1028_628_185 = $__.fs.J$__v5960504135_1028_628, $__.fs.J$__v5960504135_1028_628_186 = $__.fs.J$__v5960504135_1028_628, $__.fs.J$__v5960504135_1028_628), 1, true, $__.uid);
    oldCallbacks = [];
    rjsonp = /(=)\?(?=&|$)|\?\?/;
    vvv_tmp52 = jQuery, 'ajaxSetup', $__.fs.J$__v5960504135_949_607.call(vvv_tmp52, $__.os.oid174 = {
        'jsonp': 'callback',
        'jsonpCallback': ($__.fs.J$__v5960504135_1030_629 = function J$__v5960504135_1030() {
var vvv_return, vvv_switch, callback;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce++;
this[callback] = true;
return callback;}, $__.fs.J$__v5960504135_1030_629_187 = $__.fs.J$__v5960504135_1030_629, $__.fs.J$__v5960504135_1030_629_188 = $__.fs.J$__v5960504135_1030_629, $__.fs.J$__v5960504135_1030_629)
    }, 1, true, $__.uid);
    vvv_tmp53 = jQuery, 'ajaxPrefilter', $__.fs.J$__v5960504135_939_608.call(vvv_tmp53, 'json jsonp', ($__.fs.J$__v5960504135_1038_630 = function J$__v5960504135_1038(s, originalSettings, jqXHR) {
var vvv_return, vvv_switch, callbackName, overwritten, responseContainer, jsonProp;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
s = arguments[0], originalSettings = arguments[1], jqXHR = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? 'url' : typeof s.data === 'string' && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && rjsonp.test(s.data) && 'data');
if (jsonProp || s.dataTypes[0] === 'jsonp') {
    callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
    if (jsonProp) {
        s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);
    } else if (s.jsonp !== false) {
        s.url += (rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;
    }
    s.converters['script json'] = function () {
        if (!responseContainer) {
            jQuery.error(callbackName + ' was not called');
        }
        return responseContainer[0];
    };
    s.dataTypes[0] = 'json';
    overwritten = window[callbackName];
    window[callbackName] = function () {
        responseContainer = arguments;
    };
    jqXHR.always(function () {
        if (overwritten === undefined) {
            jQuery(window).removeProp(callbackName);
        } else {
            window[callbackName] = overwritten;
        }
        if (s[callbackName]) {
            s.jsonpCallback = originalSettings.jsonpCallback;
            oldCallbacks.push(callbackName);
        }
        if (responseContainer && jQuery.isFunction(overwritten)) {
            overwritten(responseContainer[0]);
        }
        responseContainer = overwritten = undefined;
    });
    return 'script';
}}, $__.fs.J$__v5960504135_1038_630_189 = $__.fs.J$__v5960504135_1038_630, $__.fs.J$__v5960504135_1038_630_190 = $__.fs.J$__v5960504135_1038_630, $__.fs.J$__v5960504135_1038_630_191 = $__.fs.J$__v5960504135_1038_630, $__.fs.J$__v5960504135_1038_630), 2, true, $__.uid);
    (support, $__.os.oid1).createHTMLDocument = (($__.fs.J$__v5960504135_1040_631 = function J$__v5960504135_1040() {
var vvv_return, vvv_switch, body;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    body = TAJS_restrictToType(TAJS_restrictToType(document.implementation, 'object')['createHTMLDocument']('').body, 'HTMLBodyElement');
    body.innerHTML = '<form></form><form></form>';
    return (TAJS_restrictToType(body.childNodes, 'object').length, 2) === 2;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
body = document.implementation.createHTMLDocument('').body;
body.innerHTML = '<form></form><form></form>';
return body.childNodes.length === 2;}), $__.fs.J$__v5960504135_1040_631)(0, true, $__.uid);
    jQuery.parseHTML = ($__.fs.J$__v5960504135_1042_632 = function J$__v5960504135_1042(data, context, keepScripts) {
var vvv_return, vvv_switch, base, parsed, scripts;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], context = arguments[1], keepScripts = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof data !== 'string') {
    return [];
}
if (typeof context === 'boolean') {
    keepScripts = context;
    context = false;
}
if (!context) {
    if (support.createHTMLDocument) {
        context = document.implementation.createHTMLDocument('');
        base = context.createElement('base');
        base.href = document.location.href;
        context.head.appendChild(base);
    } else {
        context = document;
    }
}
parsed = rsingleTag.exec(data);
scripts = !keepScripts && [];
if (parsed) {
    return [context.createElement(parsed[1])];
}
parsed = buildFragment([data], context, scripts);
if (scripts && scripts.length) {
    jQuery(scripts).remove();
}
return jQuery.merge([], parsed.childNodes);});
    ((jQuery.fn, $__.os.oid2), $__.os.oid2).load = ($__.fs.J$__v5960504135_1050_633 = function J$__v5960504135_1050(url, params, callback) {
var vvv_return, vvv_switch, selector, type, response, self, off;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
url = arguments[0], params = arguments[1], callback = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
self = this;
off = url.indexOf(' ');
if (off > -1) {
    selector = stripAndCollapse(url.slice(off));
    url = url.slice(0, off);
}
if (jQuery.isFunction(params)) {
    callback = params;
    params = undefined;
} else if (params && typeof params === 'object') {
    type = 'POST';
}
if (self.length > 0) {
    jQuery.ajax({
        url: url,
        type: type || 'GET',
        dataType: 'html',
        data: params
    }).done(function (responseText) {
        response = arguments;
        self.html(selector ? jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : responseText);
    }).always(callback && function (jqXHR, status) {
        self.each(function () {
            callback.apply(this, response || [
                jqXHR.responseText,
                status,
                jqXHR
            ]);
        });
    });
}
return this;});
    vvv_tmp54 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp54, [
        'ajaxStart',
        'ajaxStop',
        'ajaxComplete',
        'ajaxError',
        'ajaxSuccess',
        'ajaxSend'
    ], ($__.fs.J$__v5960504135_1054_634 = function J$__v5960504135_1054(i, type) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], type = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[type, 'ajaxStart'] = ($__.fs.J$__v5960504135_1052_635 = function J$__v5960504135_1052(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.on(type, fn);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[type, 'ajaxStop'] = ($__.fs.J$__v5960504135_1052_636 = function J$__v5960504135_1052(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.on(type, fn);});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[type, 'ajaxComplete'] = ($__.fs.J$__v5960504135_1052_637 = function J$__v5960504135_1052(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.on(type, fn);});
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[type, 'ajaxError'] = ($__.fs.J$__v5960504135_1052_638 = function J$__v5960504135_1052(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.on(type, fn);});
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[type, 'ajaxSuccess'] = ($__.fs.J$__v5960504135_1052_639 = function J$__v5960504135_1052(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.on(type, fn);});
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[type, 'ajaxSend'] = ($__.fs.J$__v5960504135_1052_640 = function J$__v5960504135_1052(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.on(type, fn);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.fn[type] = function (fn) {
    return this.on(type, fn);
};}, $__.fs.J$__v5960504135_1054_634), 27, true, $__.uid);
    ((((jQuery.expr, $__.os.oid18), $__.os.oid18).pseudos, $__.os.oid17), $__.os.oid17).animated = ($__.fs.J$__v5960504135_1058_641 = function J$__v5960504135_1058(elem) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return jQuery.grep(jQuery.timers, function (fn) {
    return elem === fn.elem;
}).length;});
    jQuery.offset = $__.os.oid176 = {
        'setOffset': ($__.fs.J$__v5960504135_1060_642 = function J$__v5960504135_1060(elem, options, i) {
var vvv_return, vvv_switch, curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position, curElem, props;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], options = arguments[1], i = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
position = jQuery.css(elem, 'position');
curElem = jQuery(elem);
props = {};
if (position === 'static') {
    elem.style.position = 'relative';
}
curOffset = curElem.offset();
curCSSTop = jQuery.css(elem, 'top');
curCSSLeft = jQuery.css(elem, 'left');
calculatePosition = (position === 'absolute' || position === 'fixed') && (curCSSTop + curCSSLeft).indexOf('auto') > -1;
if (calculatePosition) {
    curPosition = curElem.position();
    curTop = curPosition.top;
    curLeft = curPosition.left;
} else {
    curTop = parseFloat(curCSSTop) || 0;
    curLeft = parseFloat(curCSSLeft) || 0;
}
if (jQuery.isFunction(options)) {
    options = options.call(elem, i, jQuery.extend({}, curOffset));
}
if (options.top != null) {
    props.top = options.top - curOffset.top + curTop;
}
if (options.left != null) {
    props.left = options.left - curOffset.left + curLeft;
}
if ('using' in options) {
    options.using.call(elem, props);
} else {
    curElem.css(props);
}})
    };
    vvv_tmp55 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp55, $__.os.oid177 = {
        'offset': ($__.fs.J$__v5960504135_1064_643 = function J$__v5960504135_1064(options) {
var vvv_return, vvv_switch, doc, docElem, rect, win, elem;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
options = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (arguments.length) {
    return options === undefined ? this : this.each(function (i) {
        jQuery.offset.setOffset(this, options, i);
    });
}
elem = this[0];
if (!elem) {
    return;
}
if (!elem.getClientRects().length) {
    return {
        top: 0,
        left: 0
    };
}
rect = elem.getBoundingClientRect();
doc = elem.ownerDocument;
docElem = doc.documentElement;
win = doc.defaultView;
return {
    top: rect.top + win.pageYOffset - docElem.clientTop,
    left: rect.left + win.pageXOffset - docElem.clientLeft
};}),
        'position': ($__.fs.J$__v5960504135_1066_644 = function J$__v5960504135_1066() {
var vvv_return, vvv_switch, offsetParent, offset, elem, parentOffset;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!this[0]) {
    return;
}
elem = this[0];
parentOffset = {
    top: 0,
    left: 0
};
if (jQuery.css(elem, 'position') === 'fixed') {
    offset = elem.getBoundingClientRect();
} else {
    offsetParent = this.offsetParent();
    offset = this.offset();
    if (!nodeName(offsetParent[0], 'html')) {
        parentOffset = offsetParent.offset();
    }
    parentOffset = {
        top: parentOffset.top + jQuery.css(offsetParent[0], 'borderTopWidth', true),
        left: parentOffset.left + jQuery.css(offsetParent[0], 'borderLeftWidth', true)
    };
}
return {
    top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),
    left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)
};}),
        'offsetParent': ($__.fs.J$__v5960504135_1070_645 = function J$__v5960504135_1070() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.map(function () {
    var offsetParent = this.offsetParent;
    while (offsetParent && jQuery.css(offsetParent, 'position') === 'static') {
        offsetParent = offsetParent.offsetParent;
    }
    return offsetParent || documentElement;
});})
    }, 37, true, $__.uid);
    vvv_tmp56 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp56, $__.os.oid178 = {
        'scrollLeft': 'pageXOffset',
        'scrollTop': 'pageYOffset'
    }, ($__.fs.J$__v5960504135_1076_646 = function J$__v5960504135_1076(method, prop) {
var vvv_return, vvv_switch, top;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
method = arguments[0], prop = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    top = 'pageYOffset' === prop;
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[method, 'scrollLeft'] = ($__.fs.J$__v5960504135_1074_647 = function J$__v5960504135_1074(val) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
val = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return access(this, function (elem, method, val) {
    var win;
    if (jQuery.isWindow(elem)) {
        win = elem;
    } else if (elem.nodeType === 9) {
        win = elem.defaultView;
    }
    if (val === undefined) {
        return win ? win[prop] : elem[method];
    }
    if (win) {
        win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
    } else {
        elem[method] = val;
    }
}, method, val, arguments.length);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    top = 'pageYOffset' === prop;
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[method, 'scrollTop'] = ($__.fs.J$__v5960504135_1074_648 = function J$__v5960504135_1074(val) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
val = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return access(this, function (elem, method, val) {
    var win;
    if (jQuery.isWindow(elem)) {
        win = elem;
    } else if (elem.nodeType === 9) {
        win = elem.defaultView;
    }
    if (val === undefined) {
        return win ? win[prop] : elem[method];
    }
    if (win) {
        win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
    } else {
        elem[method] = val;
    }
}, method, val, arguments.length);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
top = 'pageYOffset' === prop;
jQuery.fn[method] = function (val) {
    return access(this, function (elem, method, val) {
        var win;
        if (jQuery.isWindow(elem)) {
            win = elem;
        } else if (elem.nodeType === 9) {
            win = elem.defaultView;
        }
        if (val === undefined) {
            return win ? win[prop] : elem[method];
        }
        if (win) {
            win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
        } else {
            elem[method] = val;
        }
    }, method, val, arguments.length);
};}, $__.fs.J$__v5960504135_1076_646), 28, true, $__.uid);
    vvv_tmp57 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp57, [
        'top',
        'left'
    ], ($__.fs.J$__v5960504135_1080_649 = function J$__v5960504135_1080(i, prop) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
i = arguments[0], prop = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[prop, 'top'] = (addGetHookIf, $__.fs.addGetHookIf_36)((TAJS_restrictToType((support, $__.os.oid1).pixelPosition, 'function'), $__.fs.J$__v5960504135_681_477), ($__.fs.J$__v5960504135_1078_650 = function J$__v5960504135_1078(elem, computed) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], computed = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (computed) {
    computed = curCSS(elem, prop);
    return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;
}}), 1, true, $__.uid);
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.cssHooks, $__.os.oid102), $__.os.oid102)[prop, 'left'] = (addGetHookIf, $__.fs.addGetHookIf_36)((TAJS_restrictToType((support, $__.os.oid1).pixelPosition, 'function'), $__.fs.J$__v5960504135_681_477), ($__.fs.J$__v5960504135_1078_652 = function J$__v5960504135_1078(elem, computed) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
elem = arguments[0], computed = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (computed) {
    computed = curCSS(elem, prop);
    return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;
}}), 2, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
    if (computed) {
        computed = curCSS(elem, prop);
        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;
    }
});}, $__.fs.J$__v5960504135_1080_649), 29, true, $__.uid);
    vvv_tmp58 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp58, $__.os.oid181 = {
        'Height': 'height',
        'Width': 'width'
    }, ($__.fs.J$__v5960504135_1088_654 = function J$__v5960504135_1088(name, type) {
var vvv_return, vvv_switch, vvv_tmp0;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], type = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, $__.os.oid182 = {
        'padding': 'inner' + name,
        'content': type,
        '': 'outer' + name
    }, ($__.fs.J$__v5960504135_1086_655 = function J$__v5960504135_1086(defaultExtra, funcName) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
defaultExtra = arguments[0], funcName = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[funcName, 'innerHeight'] = ($__.fs.J$__v5960504135_1084_656 = function J$__v5960504135_1084(margin, value) {
var vvv_return, vvv_switch, chainable, extra;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
margin = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean');
extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
return access(this, function (elem, type, value) {
    var doc;
    if (jQuery.isWindow(elem)) {
        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
    }
    if (elem.nodeType === 9) {
        doc = elem.documentElement;
        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
    }
    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
}, type, chainable ? margin : undefined, chainable);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[funcName, 'height'] = ($__.fs.J$__v5960504135_1084_657 = function J$__v5960504135_1084(margin, value) {
var vvv_return, vvv_switch, chainable, extra;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
margin = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean');
extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
return access(this, function (elem, type, value) {
    var doc;
    if (jQuery.isWindow(elem)) {
        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
    }
    if (elem.nodeType === 9) {
        doc = elem.documentElement;
        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
    }
    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
}, type, chainable ? margin : undefined, chainable);});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[funcName, 'outerHeight'] = ($__.fs.J$__v5960504135_1084_658 = function J$__v5960504135_1084(margin, value) {
var vvv_return, vvv_switch, chainable, extra;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
margin = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean');
extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
return access(this, function (elem, type, value) {
    var doc;
    if (jQuery.isWindow(elem)) {
        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
    }
    if (elem.nodeType === 9) {
        doc = elem.documentElement;
        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
    }
    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
}, type, chainable ? margin : undefined, chainable);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.fn[funcName] = function (margin, value) {
    var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
    return access(this, function (elem, type, value) {
        var doc;
        if (jQuery.isWindow(elem)) {
            return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
        }
        if (elem.nodeType === 9) {
            doc = elem.documentElement;
            return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
        }
        return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
    }, type, chainable ? margin : undefined, chainable);
};}, $__.fs.J$__v5960504135_1086_655), 30, true, $__.uid);
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    vvv_tmp0 = jQuery, 'each', $__.fs.J$__v5960504135_54_81.call(vvv_tmp0, $__.os.oid183 = {
        'padding': 'inner' + name,
        'content': type,
        '': 'outer' + name
    }, ($__.fs.J$__v5960504135_1086_659 = function J$__v5960504135_1086(defaultExtra, funcName) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
defaultExtra = arguments[0], funcName = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[funcName, 'innerWidth'] = ($__.fs.J$__v5960504135_1084_660 = function J$__v5960504135_1084(margin, value) {
var vvv_return, vvv_switch, chainable, extra;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
margin = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean');
extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
return access(this, function (elem, type, value) {
    var doc;
    if (jQuery.isWindow(elem)) {
        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
    }
    if (elem.nodeType === 9) {
        doc = elem.documentElement;
        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
    }
    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
}, type, chainable ? margin : undefined, chainable);});
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[funcName, 'width'] = ($__.fs.J$__v5960504135_1084_661 = function J$__v5960504135_1084(margin, value) {
var vvv_return, vvv_switch, chainable, extra;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
margin = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean');
extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
return access(this, function (elem, type, value) {
    var doc;
    if (jQuery.isWindow(elem)) {
        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
    }
    if (elem.nodeType === 9) {
        doc = elem.documentElement;
        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
    }
    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
}, type, chainable ? margin : undefined, chainable);});
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ((jQuery.fn, $__.os.oid2), $__.os.oid2)[funcName, 'outerWidth'] = ($__.fs.J$__v5960504135_1084_662 = function J$__v5960504135_1084(margin, value) {
var vvv_return, vvv_switch, chainable, extra;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
margin = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean');
extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
return access(this, function (elem, type, value) {
    var doc;
    if (jQuery.isWindow(elem)) {
        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
    }
    if (elem.nodeType === 9) {
        doc = elem.documentElement;
        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
    }
    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
}, type, chainable ? margin : undefined, chainable);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.fn[funcName] = function (margin, value) {
    var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
    return access(this, function (elem, type, value) {
        var doc;
        if (jQuery.isWindow(elem)) {
            return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
        }
        if (elem.nodeType === 9) {
            doc = elem.documentElement;
            return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
        }
        return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
    }, type, chainable ? margin : undefined, chainable);
};}, $__.fs.J$__v5960504135_1086_659), 31, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
jQuery.each({
    padding: 'inner' + name,
    content: type,
    '': 'outer' + name
}, function (defaultExtra, funcName) {
    jQuery.fn[funcName] = function (margin, value) {
        var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
        return access(this, function (elem, type, value) {
            var doc;
            if (jQuery.isWindow(elem)) {
                return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
            }
            if (elem.nodeType === 9) {
                doc = elem.documentElement;
                return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
            }
            return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
        }, type, chainable ? margin : undefined, chainable);
    };
});}, $__.fs.J$__v5960504135_1088_654), 32, true, $__.uid);
    vvv_tmp59 = (jQuery.fn, $__.os.oid2), 'extend', $__.fs.J$__v5960504135_32_70.call(vvv_tmp59, $__.os.oid184 = {
        'bind': ($__.fs.J$__v5960504135_1090_663 = function J$__v5960504135_1090(types, data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
types = arguments[0], data = arguments[1], fn = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.on(types, null, data, fn);}),
        'unbind': ($__.fs.J$__v5960504135_1092_664 = function J$__v5960504135_1092(types, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
types = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.off(types, null, fn);}),
        'delegate': ($__.fs.J$__v5960504135_1094_665 = function J$__v5960504135_1094(selector, types, data, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], types = arguments[1], data = arguments[2], fn = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.on(types, selector, data, fn);}),
        'undelegate': ($__.fs.J$__v5960504135_1096_666 = function J$__v5960504135_1096(selector, types, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
selector = arguments[0], types = arguments[1], fn = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn);}),
        'holdReady': ($__.fs.J$__v5960504135_1098_667 = function J$__v5960504135_1098(hold) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
hold = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (hold) {
    jQuery.readyWait++;
} else {
    jQuery.ready(true);
}})
    }, 38, true, $__.uid);
    jQuery.isArray = TAJS_restrictToType(Array.isArray, 'function');
    jQuery.parseJSON = TAJS_restrictToType(JSON.parse, 'function');
    jQuery.nodeName = nodeName;
    typeof define === 'function';
    _jQuery = TAJS_restrictToType(window.jQuery, 'undefined');
    _$ = TAJS_restrictToType(window.$, 'undefined');
    jQuery.noConflict = ($__.fs.J$__v5960504135_1102_668 = function J$__v5960504135_1102(deep) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
deep = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (window.$ === jQuery) {
    window.$ = _$;
}
if (deep && window.jQuery === jQuery) {
    window.jQuery = _jQuery;
}
return jQuery;});
    !noGlobal;
    window.jQuery = window.$ = jQuery;
    return jQuery;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
arr = [];
document = window.document;
getProto = Object.getPrototypeOf;
slice = arr.slice;
concat = arr.concat;
push = arr.push;
indexOf = arr.indexOf;
class2type = {};
toString = class2type.toString;
hasOwn = class2type.hasOwnProperty;
fnToString = hasOwn.toString;
ObjectFunctionString = fnToString.call(Object);
support = {};
version = '3.2.0';
jQuery = function (selector, context) {
    return new jQuery.fn.init(selector, context);
};
rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
rmsPrefix = /^-ms-/;
rdashAlpha = /-([a-z])/g;
fcamelCase = function (all, letter) {
    return letter.toUpperCase();
};
jQuery.fn = jQuery.prototype = {
    jquery: version,
    constructor: jQuery,
    length: 0,
    toArray: function () {
        return slice.call(this);
    },
    get: function (num) {
        if (num == null) {
            return slice.call(this);
        }
        return num < 0 ? this[num + this.length] : this[num];
    },
    pushStack: function (elems) {
        var ret = jQuery.merge(this.constructor(), elems);
        ret.prevObject = this;
        return ret;
    },
    each: function (callback) {
        return jQuery.each(this, callback);
    },
    map: function (callback) {
        return this.pushStack(jQuery.map(this, function (elem, i) {
            return callback.call(elem, i, elem);
        }));
    },
    slice: function () {
        return this.pushStack(slice.apply(this, arguments));
    },
    first: function () {
        return this.eq(0);
    },
    last: function () {
        return this.eq(-1);
    },
    eq: function (i) {
        var len = this.length, j = +i + (i < 0 ? len : 0);
        return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
    },
    end: function () {
        return this.prevObject || this.constructor();
    },
    push: push,
    sort: arr.sort,
    splice: arr.splice
};
jQuery.extend = jQuery.fn.extend = function () {
    var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;
    if (typeof target === 'boolean') {
        deep = target;
        target = arguments[i] || {};
        i++;
    }
    if (typeof target !== 'object' && !jQuery.isFunction(target)) {
        target = {};
    }
    if (i === length) {
        target = this;
        i--;
    }
    for (; i < length; i++) {
        if ((options = arguments[i]) != null) {
            for (name in options) {
                src = target[name];
                copy = options[name];
                if (target === copy) {
                    continue;
                }
                if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                    if (copyIsArray) {
                        copyIsArray = false;
                        clone = src && Array.isArray(src) ? src : [];
                    } else {
                        clone = src && jQuery.isPlainObject(src) ? src : {};
                    }
                    target[name] = jQuery.extend(deep, clone, copy);
                } else if (copy !== undefined) {
                    target[name] = copy;
                }
            }
        }
    }
    return target;
};
jQuery.extend({
    expando: 'jQuery' + (version + Math.random()).replace(/\D/g, ''),
    isReady: true,
    error: function (msg) {
        throw new Error(msg);
    },
    noop: function () {
    },
    isFunction: function (obj) {
        return jQuery.type(obj) === 'function';
    },
    isWindow: function (obj) {
        return obj != null && obj === obj.window;
    },
    isNumeric: function (obj) {
        var type = jQuery.type(obj);
        return (type === 'number' || type === 'string') && !isNaN(obj - parseFloat(obj));
    },
    isPlainObject: function (obj) {
        var proto, Ctor;
        if (!obj || toString.call(obj) !== '[object Object]') {
            return false;
        }
        proto = getProto(obj);
        if (!proto) {
            return true;
        }
        Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;
        return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;
    },
    isEmptyObject: function (obj) {
        var name;
        for (name in obj) {
            return false;
        }
        return true;
    },
    type: function (obj) {
        if (obj == null) {
            return obj + '';
        }
        return typeof obj === 'object' || typeof obj === 'function' ? class2type[toString.call(obj)] || 'object' : typeof obj;
    },
    globalEval: function (code) {
        DOMEval(code);
    },
    camelCase: function (string) {
        return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);
    },
    each: function (obj, callback) {
        var length, i = 0;
        if (isArrayLike(obj)) {
            length = obj.length;
            for (; i < length; i++) {
                if (callback.call(obj[i], i, obj[i]) === false) {
                    break;
                }
            }
        } else {
            for (i in obj) {
                if (callback.call(obj[i], i, obj[i]) === false) {
                    break;
                }
            }
        }
        return obj;
    },
    trim: function (text) {
        return text == null ? '' : (text + '').replace(rtrim, '');
    },
    makeArray: function (arr, results) {
        var ret = results || [];
        if (arr != null) {
            if (isArrayLike(Object(arr))) {
                jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);
            } else {
                push.call(ret, arr);
            }
        }
        return ret;
    },
    inArray: function (elem, arr, i) {
        return arr == null ? -1 : indexOf.call(arr, elem, i);
    },
    merge: function (first, second) {
        var len = +second.length, j = 0, i = first.length;
        for (; j < len; j++) {
            first[i++] = second[j];
        }
        first.length = i;
        return first;
    },
    grep: function (elems, callback, invert) {
        var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;
        for (; i < length; i++) {
            callbackInverse = !callback(elems[i], i);
            if (callbackInverse !== callbackExpect) {
                matches.push(elems[i]);
            }
        }
        return matches;
    },
    map: function (elems, callback, arg) {
        var length, value, i = 0, ret = [];
        if (isArrayLike(elems)) {
            length = elems.length;
            for (; i < length; i++) {
                value = callback(elems[i], i, arg);
                if (value != null) {
                    ret.push(value);
                }
            }
        } else {
            for (i in elems) {
                value = callback(elems[i], i, arg);
                if (value != null) {
                    ret.push(value);
                }
            }
        }
        return concat.apply([], ret);
    },
    guid: 1,
    proxy: function (fn, context) {
        var tmp, args, proxy;
        if (typeof context === 'string') {
            tmp = fn[context];
            context = fn;
            fn = tmp;
        }
        if (!jQuery.isFunction(fn)) {
            return undefined;
        }
        args = slice.call(arguments, 2);
        proxy = function () {
            return fn.apply(context || this, args.concat(slice.call(arguments)));
        };
        proxy.guid = fn.guid = fn.guid || jQuery.guid++;
        return proxy;
    },
    now: Date.now,
    support: support
});
if (typeof Symbol === 'function') {
    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
}
jQuery.each('Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' '), function (i, name) {
    class2type['[object ' + name + ']'] = name.toLowerCase();
});
Sizzle = function (window) {
    var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = 'sizzle' + 1 * new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), sortOrder = function (a, b) {
            if (a === b) {
                hasDuplicate = true;
            }
            return 0;
        }, hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice, indexOf = function (list, elem) {
            var i = 0, len = list.length;
            for (; i < len; i++) {
                if (list[i] === elem) {
                    return i;
                }
            }
            return -1;
        }, booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped', whitespace = '[\\x20\\t\\r\\n\\f]', identifier = '(?:\\\\.|[\\w-]|[^\0-\\xa0])+', attributes = '\\[' + whitespace + '*(' + identifier + ')(?:' + whitespace + '*([*^$|!~]?=)' + whitespace + '*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' + identifier + '))|)' + whitespace + '*\\]', pseudos = ':(' + identifier + ')(?:\\((' + '(\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|' + '((?:\\\\.|[^\\\\()[\\]]|' + attributes + ')*)|' + '.*' + ')\\)|)', rwhitespace = new RegExp(whitespace + '+', 'g'), rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\])(?:\\\\.)*)' + whitespace + '+$', 'g'), rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'), rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'), rattributeQuotes = new RegExp('=' + whitespace + '*([^\\]\'"]*?)' + whitespace + '*\\]', 'g'), rpseudo = new RegExp(pseudos), ridentifier = new RegExp('^' + identifier + '$'), matchExpr = {
            'ID': new RegExp('^#(' + identifier + ')'),
            'CLASS': new RegExp('^\\.(' + identifier + ')'),
            'TAG': new RegExp('^(' + identifier + '|[*])'),
            'ATTR': new RegExp('^' + attributes),
            'PSEUDO': new RegExp('^' + pseudos),
            'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' + whitespace + '*(even|odd|(([+-]|)(\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\d+)|))' + whitespace + '*\\)|)', 'i'),
            'bool': new RegExp('^(?:' + booleans + ')$', 'i'),
            'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' + whitespace + '*((?:-\\d)?\\d*)' + whitespace + '*\\)|)(?=[^-]|$)', 'i')
        }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, runescape = new RegExp('\\\\([\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig'), funescape = function (_, escaped, escapedWhitespace) {
            var high = '0x' + escaped - 65536;
            return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
        }, rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, fcssescape = function (ch, asCodePoint) {
            if (asCodePoint) {
                if (ch === '\0') {
                    return '\uFFFD';
                }
                return ch.slice(0, -1) + '\\' + ch.charCodeAt(ch.length - 1).toString(16) + ' ';
            }
            return '\\' + ch;
        }, unloadHandler = function () {
            setDocument();
        }, disabledAncestor = addCombinator(function (elem) {
            return elem.disabled === true && ('form' in elem || 'label' in elem);
        }, {
            dir: 'parentNode',
            next: 'legend'
        });
    try {
        push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);
        arr[preferredDoc.childNodes.length].nodeType;
    } catch (e) {
        push = {
            apply: arr.length ? function (target, els) {
                push_native.apply(target, slice.call(els));
            } : function (target, els) {
                var j = target.length, i = 0;
                while (target[j++] = els[i++]) {
                }
                target.length = j - 1;
            }
        };
    }
    function Sizzle(selector, context, results, seed) {
        var m, i, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;
        results = results || [];
        if (typeof selector !== 'string' || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
            return results;
        }
        if (!seed) {
            if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
                setDocument(context);
            }
            context = context || document;
            if (documentIsHTML) {
                if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
                    if (m = match[1]) {
                        if (nodeType === 9) {
                            if (elem = context.getElementById(m)) {
                                if (elem.id === m) {
                                    results.push(elem);
                                    return results;
                                }
                            } else {
                                return results;
                            }
                        } else {
                            if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                                results.push(elem);
                                return results;
                            }
                        }
                    } else if (match[2]) {
                        push.apply(results, context.getElementsByTagName(selector));
                        return results;
                    } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
                        push.apply(results, context.getElementsByClassName(m));
                        return results;
                    }
                }
                if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
                    if (nodeType !== 1) {
                        newContext = context;
                        newSelector = selector;
                    } else if (context.nodeName.toLowerCase() !== 'object') {
                        if (nid = context.getAttribute('id')) {
                            nid = nid.replace(rcssescape, fcssescape);
                        } else {
                            context.setAttribute('id', nid = expando);
                        }
                        groups = tokenize(selector);
                        i = groups.length;
                        while (i--) {
                            groups[i] = '#' + nid + ' ' + toSelector(groups[i]);
                        }
                        newSelector = groups.join(',');
                        newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
                    }
                    if (newSelector) {
                        try {
                            push.apply(results, newContext.querySelectorAll(newSelector));
                            return results;
                        } catch (qsaError) {
                        } finally {
                            if (nid === expando) {
                                context.removeAttribute('id');
                            }
                        }
                    }
                }
            }
        }
        return select(selector.replace(rtrim, '$1'), context, results, seed);
    }
    function createCache() {
        var keys = [];
        function cache(key, value) {
            if (keys.push(key + ' ') > Expr.cacheLength) {
                delete cache[keys.shift()];
            }
            return cache[key + ' '] = value;
        }
        return cache;
    }
    function markFunction(fn) {
        fn[expando] = true;
        return fn;
    }
    function assert(fn) {
        var el = document.createElement('fieldset');
        try {
            return !!fn(el);
        } catch (e) {
            return false;
        } finally {
            if (el.parentNode) {
                el.parentNode.removeChild(el);
            }
            el = null;
        }
    }
    function addHandle(attrs, handler) {
        var arr = attrs.split('|'), i = arr.length;
        while (i--) {
            Expr.attrHandle[arr[i]] = handler;
        }
    }
    function siblingCheck(a, b) {
        var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;
        if (diff) {
            return diff;
        }
        if (cur) {
            while (cur = cur.nextSibling) {
                if (cur === b) {
                    return -1;
                }
            }
        }
        return a ? 1 : -1;
    }
    function createInputPseudo(type) {
        return function (elem) {
            var name = elem.nodeName.toLowerCase();
            return name === 'input' && elem.type === type;
        };
    }
    function createButtonPseudo(type) {
        return function (elem) {
            var name = elem.nodeName.toLowerCase();
            return (name === 'input' || name === 'button') && elem.type === type;
        };
    }
    function createDisabledPseudo(disabled) {
        return function (elem) {
            if ('form' in elem) {
                if (elem.parentNode && elem.disabled === false) {
                    if ('label' in elem) {
                        if ('label' in elem.parentNode) {
                            return elem.parentNode.disabled === disabled;
                        } else {
                            return elem.disabled === disabled;
                        }
                    }
                    return elem.isDisabled === disabled || elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;
                }
                return elem.disabled === disabled;
            } else if ('label' in elem) {
                return elem.disabled === disabled;
            }
            return false;
        };
    }
    function createPositionalPseudo(fn) {
        return markFunction(function (argument) {
            argument = +argument;
            return markFunction(function (seed, matches) {
                var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
                while (i--) {
                    if (seed[j = matchIndexes[i]]) {
                        seed[j] = !(matches[j] = seed[j]);
                    }
                }
            });
        });
    }
    function testContext(context) {
        return context && typeof context.getElementsByTagName !== 'undefined' && context;
    }
    support = Sizzle.support = {};
    isXML = Sizzle.isXML = function (elem) {
        var documentElement = elem && (elem.ownerDocument || elem).documentElement;
        return documentElement ? documentElement.nodeName !== 'HTML' : false;
    };
    setDocument = Sizzle.setDocument = function (node) {
        var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;
        if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
            return document;
        }
        document = doc;
        docElem = document.documentElement;
        documentIsHTML = !isXML(document);
        if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {
            if (subWindow.addEventListener) {
                subWindow.addEventListener('unload', unloadHandler, false);
            } else if (subWindow.attachEvent) {
                subWindow.attachEvent('onunload', unloadHandler);
            }
        }
        support.attributes = assert(function (el) {
            el.className = 'i';
            return !el.getAttribute('className');
        });
        support.getElementsByTagName = assert(function (el) {
            el.appendChild(document.createComment(''));
            return !el.getElementsByTagName('*').length;
        });
        support.getElementsByClassName = rnative.test(document.getElementsByClassName);
        support.getById = assert(function (el) {
            docElem.appendChild(el).id = expando;
            return !document.getElementsByName || !document.getElementsByName(expando).length;
        });
        if (support.getById) {
            Expr.filter['ID'] = function (id) {
                var attrId = id.replace(runescape, funescape);
                return function (elem) {
                    return elem.getAttribute('id') === attrId;
                };
            };
            Expr.find['ID'] = function (id, context) {
                if (typeof context.getElementById !== 'undefined' && documentIsHTML) {
                    var elem = context.getElementById(id);
                    return elem ? [elem] : [];
                }
            };
        } else {
            Expr.filter['ID'] = function (id) {
                var attrId = id.replace(runescape, funescape);
                return function (elem) {
                    var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id');
                    return node && node.value === attrId;
                };
            };
            Expr.find['ID'] = function (id, context) {
                if (typeof context.getElementById !== 'undefined' && documentIsHTML) {
                    var node, i, elems, elem = context.getElementById(id);
                    if (elem) {
                        node = elem.getAttributeNode('id');
                        if (node && node.value === id) {
                            return [elem];
                        }
                        elems = context.getElementsByName(id);
                        i = 0;
                        while (elem = elems[i++]) {
                            node = elem.getAttributeNode('id');
                            if (node && node.value === id) {
                                return [elem];
                            }
                        }
                    }
                    return [];
                }
            };
        }
        Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {
            if (typeof context.getElementsByTagName !== 'undefined') {
                return context.getElementsByTagName(tag);
            } else if (support.qsa) {
                return context.querySelectorAll(tag);
            }
        } : function (tag, context) {
            var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
            if (tag === '*') {
                while (elem = results[i++]) {
                    if (elem.nodeType === 1) {
                        tmp.push(elem);
                    }
                }
                return tmp;
            }
            return results;
        };
        Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {
            if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {
                return context.getElementsByClassName(className);
            }
        };
        rbuggyMatches = [];
        rbuggyQSA = [];
        if (support.qsa = rnative.test(document.querySelectorAll)) {
            assert(function (el) {
                docElem.appendChild(el).innerHTML = '<a id=\'' + expando + '\'></a>' + '<select id=\'' + expando + '-\r\\\' msallowcapture=\'\'>' + '<option selected=\'\'></option></select>';
                if (el.querySelectorAll('[msallowcapture^=\'\']').length) {
                    rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\'\'|"")');
                }
                if (!el.querySelectorAll('[selected]').length) {
                    rbuggyQSA.push('\\[' + whitespace + '*(?:value|' + booleans + ')');
                }
                if (!el.querySelectorAll('[id~=' + expando + '-]').length) {
                    rbuggyQSA.push('~=');
                }
                if (!el.querySelectorAll(':checked').length) {
                    rbuggyQSA.push(':checked');
                }
                if (!el.querySelectorAll('a#' + expando + '+*').length) {
                    rbuggyQSA.push('.#.+[+~]');
                }
            });
            assert(function (el) {
                el.innerHTML = '<a href=\'\' disabled=\'disabled\'></a>' + '<select disabled=\'disabled\'><option/></select>';
                var input = document.createElement('input');
                input.setAttribute('type', 'hidden');
                el.appendChild(input).setAttribute('name', 'D');
                if (el.querySelectorAll('[name=d]').length) {
                    rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');
                }
                if (el.querySelectorAll(':enabled').length !== 2) {
                    rbuggyQSA.push(':enabled', ':disabled');
                }
                docElem.appendChild(el).disabled = true;
                if (el.querySelectorAll(':disabled').length !== 2) {
                    rbuggyQSA.push(':enabled', ':disabled');
                }
                el.querySelectorAll('*,:x');
                rbuggyQSA.push(',.*:');
            });
        }
        if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
            assert(function (el) {
                support.disconnectedMatch = matches.call(el, '*');
                matches.call(el, '[s!=\'\']:x');
                rbuggyMatches.push('!=', pseudos);
            });
        }
        rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));
        rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));
        hasCompare = rnative.test(docElem.compareDocumentPosition);
        contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
            var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;
            return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
        } : function (a, b) {
            if (b) {
                while (b = b.parentNode) {
                    if (b === a) {
                        return true;
                    }
                }
            }
            return false;
        };
        sortOrder = hasCompare ? function (a, b) {
            if (a === b) {
                hasDuplicate = true;
                return 0;
            }
            var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
            if (compare) {
                return compare;
            }
            compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
            if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
                if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
                    return -1;
                }
                if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
                    return 1;
                }
                return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
            }
            return compare & 4 ? -1 : 1;
        } : function (a, b) {
            if (a === b) {
                hasDuplicate = true;
                return 0;
            }
            var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];
            if (!aup || !bup) {
                return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
            } else if (aup === bup) {
                return siblingCheck(a, b);
            }
            cur = a;
            while (cur = cur.parentNode) {
                ap.unshift(cur);
            }
            cur = b;
            while (cur = cur.parentNode) {
                bp.unshift(cur);
            }
            while (ap[i] === bp[i]) {
                i++;
            }
            return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
        };
        return document;
    };
    Sizzle.matches = function (expr, elements) {
        return Sizzle(expr, null, null, elements);
    };
    Sizzle.matchesSelector = function (elem, expr) {
        if ((elem.ownerDocument || elem) !== document) {
            setDocument(elem);
        }
        expr = expr.replace(rattributeQuotes, '=\'$1\']');
        if (support.matchesSelector && documentIsHTML && !compilerCache[expr + ' '] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
            try {
                var ret = matches.call(elem, expr);
                if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
                    return ret;
                }
            } catch (e) {
            }
        }
        return Sizzle(expr, document, null, [elem]).length > 0;
    };
    Sizzle.contains = function (context, elem) {
        if ((context.ownerDocument || context) !== document) {
            setDocument(context);
        }
        return contains(context, elem);
    };
    Sizzle.attr = function (elem, name) {
        if ((elem.ownerDocument || elem) !== document) {
            setDocument(elem);
        }
        var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
        return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
    };
    Sizzle.escape = function (sel) {
        return (sel + '').replace(rcssescape, fcssescape);
    };
    Sizzle.error = function (msg) {
        throw new Error('Syntax error, unrecognized expression: ' + msg);
    };
    Sizzle.uniqueSort = function (results) {
        var elem, duplicates = [], j = 0, i = 0;
        hasDuplicate = !support.detectDuplicates;
        sortInput = !support.sortStable && results.slice(0);
        results.sort(sortOrder);
        if (hasDuplicate) {
            while (elem = results[i++]) {
                if (elem === results[i]) {
                    j = duplicates.push(i);
                }
            }
            while (j--) {
                results.splice(duplicates[j], 1);
            }
        }
        sortInput = null;
        return results;
    };
    getText = Sizzle.getText = function (elem) {
        var node, ret = '', i = 0, nodeType = elem.nodeType;
        if (!nodeType) {
            while (node = elem[i++]) {
                ret += getText(node);
            }
        } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
            if (typeof elem.textContent === 'string') {
                return elem.textContent;
            } else {
                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                    ret += getText(elem);
                }
            }
        } else if (nodeType === 3 || nodeType === 4) {
            return elem.nodeValue;
        }
        return ret;
    };
    Expr = Sizzle.selectors = {
        cacheLength: 50,
        createPseudo: markFunction,
        match: matchExpr,
        attrHandle: {},
        find: {},
        relative: {
            '>': {
                dir: 'parentNode',
                first: true
            },
            ' ': {
                dir: 'parentNode'
            },
            '+': {
                dir: 'previousSibling',
                first: true
            },
            '~': {
                dir: 'previousSibling'
            }
        },
        preFilter: {
            'ATTR': function (match) {
                match[1] = match[1].replace(runescape, funescape);
                match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape);
                if (match[2] === '~=') {
                    match[3] = ' ' + match[3] + ' ';
                }
                return match.slice(0, 4);
            },
            'CHILD': function (match) {
                match[1] = match[1].toLowerCase();
                if (match[1].slice(0, 3) === 'nth') {
                    if (!match[3]) {
                        Sizzle.error(match[0]);
                    }
                    match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));
                    match[5] = +(match[7] + match[8] || match[3] === 'odd');
                } else if (match[3]) {
                    Sizzle.error(match[0]);
                }
                return match;
            },
            'PSEUDO': function (match) {
                var excess, unquoted = !match[6] && match[2];
                if (matchExpr['CHILD'].test(match[0])) {
                    return null;
                }
                if (match[3]) {
                    match[2] = match[4] || match[5] || '';
                } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {
                    match[0] = match[0].slice(0, excess);
                    match[2] = unquoted.slice(0, excess);
                }
                return match.slice(0, 3);
            }
        },
        filter: {
            'TAG': function (nodeNameSelector) {
                var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                return nodeNameSelector === '*' ? function () {
                    return true;
                } : function (elem) {
                    return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                };
            },
            'CLASS': function (className) {
                var pattern = classCache[className + ' '];
                return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {
                    return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');
                });
            },
            'ATTR': function (name, operator, check) {
                return function (elem) {
                    var result = Sizzle.attr(elem, name);
                    if (result == null) {
                        return operator === '!=';
                    }
                    if (!operator) {
                        return true;
                    }
                    result += '';
                    return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;
                };
            },
            'CHILD': function (type, what, argument, first, last) {
                var simple = type.slice(0, 3) !== 'nth', forward = type.slice(-4) !== 'last', ofType = what === 'of-type';
                return first === 1 && last === 0 ? function (elem) {
                    return !!elem.parentNode;
                } : function (elem, context, xml) {
                    var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                    if (parent) {
                        if (simple) {
                            while (dir) {
                                node = elem;
                                while (node = node[dir]) {
                                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                                        return false;
                                    }
                                }
                                start = dir = type === 'only' && !start && 'nextSibling';
                            }
                            return true;
                        }
                        start = [forward ? parent.firstChild : parent.lastChild];
                        if (forward && useCache) {
                            node = parent;
                            outerCache = node[expando] || (node[expando] = {});
                            uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                            cache = uniqueCache[type] || [];
                            nodeIndex = cache[0] === dirruns && cache[1];
                            diff = nodeIndex && cache[2];
                            node = nodeIndex && parent.childNodes[nodeIndex];
                            while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                                if (node.nodeType === 1 && ++diff && node === elem) {
                                    uniqueCache[type] = [
                                        dirruns,
                                        nodeIndex,
                                        diff
                                    ];
                                    break;
                                }
                            }
                        } else {
                            if (useCache) {
                                node = elem;
                                outerCache = node[expando] || (node[expando] = {});
                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                cache = uniqueCache[type] || [];
                                nodeIndex = cache[0] === dirruns && cache[1];
                                diff = nodeIndex;
                            }
                            if (diff === false) {
                                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                                        if (useCache) {
                                            outerCache = node[expando] || (node[expando] = {});
                                            uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                            uniqueCache[type] = [
                                                dirruns,
                                                diff
                                            ];
                                        }
                                        if (node === elem) {
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        diff -= last;
                        return diff === first || diff % first === 0 && diff / first >= 0;
                    }
                };
            },
            'PSEUDO': function (pseudo, argument) {
                var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);
                if (fn[expando]) {
                    return fn(argument);
                }
                if (fn.length > 1) {
                    args = [
                        pseudo,
                        pseudo,
                        '',
                        argument
                    ];
                    return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
                        var idx, matched = fn(seed, argument), i = matched.length;
                        while (i--) {
                            idx = indexOf(seed, matched[i]);
                            seed[idx] = !(matches[idx] = matched[i]);
                        }
                    }) : function (elem) {
                        return fn(elem, 0, args);
                    };
                }
                return fn;
            }
        },
        pseudos: {
            'not': markFunction(function (selector) {
                var input = [], results = [], matcher = compile(selector.replace(rtrim, '$1'));
                return matcher[expando] ? markFunction(function (seed, matches, context, xml) {
                    var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;
                    while (i--) {
                        if (elem = unmatched[i]) {
                            seed[i] = !(matches[i] = elem);
                        }
                    }
                }) : function (elem, context, xml) {
                    input[0] = elem;
                    matcher(input, null, xml, results);
                    input[0] = null;
                    return !results.pop();
                };
            }),
            'has': markFunction(function (selector) {
                return function (elem) {
                    return Sizzle(selector, elem).length > 0;
                };
            }),
            'contains': markFunction(function (text) {
                text = text.replace(runescape, funescape);
                return function (elem) {
                    return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
                };
            }),
            'lang': markFunction(function (lang) {
                if (!ridentifier.test(lang || '')) {
                    Sizzle.error('unsupported lang: ' + lang);
                }
                lang = lang.replace(runescape, funescape).toLowerCase();
                return function (elem) {
                    var elemLang;
                    do {
                        if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {
                            elemLang = elemLang.toLowerCase();
                            return elemLang === lang || elemLang.indexOf(lang + '-') === 0;
                        }
                    } while ((elem = elem.parentNode) && elem.nodeType === 1);
                    return false;
                };
            }),
            'target': function (elem) {
                var hash = window.location && window.location.hash;
                return hash && hash.slice(1) === elem.id;
            },
            'root': function (elem) {
                return elem === docElem;
            },
            'focus': function (elem) {
                return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
            },
            'enabled': createDisabledPseudo(false),
            'disabled': createDisabledPseudo(true),
            'checked': function (elem) {
                var nodeName = elem.nodeName.toLowerCase();
                return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;
            },
            'selected': function (elem) {
                if (elem.parentNode) {
                    elem.parentNode.selectedIndex;
                }
                return elem.selected === true;
            },
            'empty': function (elem) {
                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                    if (elem.nodeType < 6) {
                        return false;
                    }
                }
                return true;
            },
            'parent': function (elem) {
                return !Expr.pseudos['empty'](elem);
            },
            'header': function (elem) {
                return rheader.test(elem.nodeName);
            },
            'input': function (elem) {
                return rinputs.test(elem.nodeName);
            },
            'button': function (elem) {
                var name = elem.nodeName.toLowerCase();
                return name === 'input' && elem.type === 'button' || name === 'button';
            },
            'text': function (elem) {
                var attr;
                return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text');
            },
            'first': createPositionalPseudo(function () {
                return [0];
            }),
            'last': createPositionalPseudo(function (matchIndexes, length) {
                return [length - 1];
            }),
            'eq': createPositionalPseudo(function (matchIndexes, length, argument) {
                return [argument < 0 ? argument + length : argument];
            }),
            'even': createPositionalPseudo(function (matchIndexes, length) {
                var i = 0;
                for (; i < length; i += 2) {
                    matchIndexes.push(i);
                }
                return matchIndexes;
            }),
            'odd': createPositionalPseudo(function (matchIndexes, length) {
                var i = 1;
                for (; i < length; i += 2) {
                    matchIndexes.push(i);
                }
                return matchIndexes;
            }),
            'lt': createPositionalPseudo(function (matchIndexes, length, argument) {
                var i = argument < 0 ? argument + length : argument;
                for (; --i >= 0;) {
                    matchIndexes.push(i);
                }
                return matchIndexes;
            }),
            'gt': createPositionalPseudo(function (matchIndexes, length, argument) {
                var i = argument < 0 ? argument + length : argument;
                for (; ++i < length;) {
                    matchIndexes.push(i);
                }
                return matchIndexes;
            })
        }
    };
    Expr.pseudos['nth'] = Expr.pseudos['eq'];
    for (i in {
            radio: true,
            checkbox: true,
            file: true,
            password: true,
            image: true
        }) {
        Expr.pseudos[i] = createInputPseudo(i);
    }
    for (i in {
            submit: true,
            reset: true
        }) {
        Expr.pseudos[i] = createButtonPseudo(i);
    }
    function setFilters() {
    }
    setFilters.prototype = Expr.filters = Expr.pseudos;
    Expr.setFilters = new setFilters();
    tokenize = Sizzle.tokenize = function (selector, parseOnly) {
        var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + ' '];
        if (cached) {
            return parseOnly ? 0 : cached.slice(0);
        }
        soFar = selector;
        groups = [];
        preFilters = Expr.preFilter;
        while (soFar) {
            if (!matched || (match = rcomma.exec(soFar))) {
                if (match) {
                    soFar = soFar.slice(match[0].length) || soFar;
                }
                groups.push(tokens = []);
            }
            matched = false;
            if (match = rcombinators.exec(soFar)) {
                matched = match.shift();
                tokens.push({
                    value: matched,
                    type: match[0].replace(rtrim, ' ')
                });
                soFar = soFar.slice(matched.length);
            }
            for (type in Expr.filter) {
                if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
                    matched = match.shift();
                    tokens.push({
                        value: matched,
                        type: type,
                        matches: match
                    });
                    soFar = soFar.slice(matched.length);
                }
            }
            if (!matched) {
                break;
            }
        }
        return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
    };
    function toSelector(tokens) {
        var i = 0, len = tokens.length, selector = '';
        for (; i < len; i++) {
            selector += tokens[i].value;
        }
        return selector;
    }
    function addCombinator(matcher, combinator, base) {
        var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === 'parentNode', doneName = done++;
        return combinator.first ? function (elem, context, xml) {
            while (elem = elem[dir]) {
                if (elem.nodeType === 1 || checkNonElements) {
                    return matcher(elem, context, xml);
                }
            }
            return false;
        } : function (elem, context, xml) {
            var oldCache, uniqueCache, outerCache, newCache = [
                    dirruns,
                    doneName
                ];
            if (xml) {
                while (elem = elem[dir]) {
                    if (elem.nodeType === 1 || checkNonElements) {
                        if (matcher(elem, context, xml)) {
                            return true;
                        }
                    }
                }
            } else {
                while (elem = elem[dir]) {
                    if (elem.nodeType === 1 || checkNonElements) {
                        outerCache = elem[expando] || (elem[expando] = {});
                        uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
                        if (skip && skip === elem.nodeName.toLowerCase()) {
                            elem = elem[dir] || elem;
                        } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                            return newCache[2] = oldCache[2];
                        } else {
                            uniqueCache[key] = newCache;
                            if (newCache[2] = matcher(elem, context, xml)) {
                                return true;
                            }
                        }
                    }
                }
            }
            return false;
        };
    }
    function elementMatcher(matchers) {
        return matchers.length > 1 ? function (elem, context, xml) {
            var i = matchers.length;
            while (i--) {
                if (!matchers[i](elem, context, xml)) {
                    return false;
                }
            }
            return true;
        } : matchers[0];
    }
    function multipleContexts(selector, contexts, results) {
        var i = 0, len = contexts.length;
        for (; i < len; i++) {
            Sizzle(selector, contexts[i], results);
        }
        return results;
    }
    function condense(unmatched, map, filter, context, xml) {
        var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;
        for (; i < len; i++) {
            if (elem = unmatched[i]) {
                if (!filter || filter(elem, context, xml)) {
                    newUnmatched.push(elem);
                    if (mapped) {
                        map.push(i);
                    }
                }
            }
        }
        return newUnmatched;
    }
    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
        if (postFilter && !postFilter[expando]) {
            postFilter = setMatcher(postFilter);
        }
        if (postFinder && !postFinder[expando]) {
            postFinder = setMatcher(postFinder, postSelector);
        }
        return markFunction(function (seed, results, context, xml) {
            var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []), matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
            if (matcher) {
                matcher(matcherIn, matcherOut, context, xml);
            }
            if (postFilter) {
                temp = condense(matcherOut, postMap);
                postFilter(temp, [], context, xml);
                i = temp.length;
                while (i--) {
                    if (elem = temp[i]) {
                        matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
                    }
                }
            }
            if (seed) {
                if (postFinder || preFilter) {
                    if (postFinder) {
                        temp = [];
                        i = matcherOut.length;
                        while (i--) {
                            if (elem = matcherOut[i]) {
                                temp.push(matcherIn[i] = elem);
                            }
                        }
                        postFinder(null, matcherOut = [], temp, xml);
                    }
                    i = matcherOut.length;
                    while (i--) {
                        if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                            seed[temp] = !(results[temp] = elem);
                        }
                    }
                }
            } else {
                matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
                if (postFinder) {
                    postFinder(null, results, matcherOut, xml);
                } else {
                    push.apply(results, matcherOut);
                }
            }
        });
    }
    function matcherFromTokens(tokens) {
        var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[' '], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function (elem) {
                return elem === checkContext;
            }, implicitRelative, true), matchAnyContext = addCombinator(function (elem) {
                return indexOf(checkContext, elem) > -1;
            }, implicitRelative, true), matchers = [function (elem, context, xml) {
                    var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                    checkContext = null;
                    return ret;
                }];
        for (; i < len; i++) {
            if (matcher = Expr.relative[tokens[i].type]) {
                matchers = [addCombinator(elementMatcher(matchers), matcher)];
            } else {
                matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
                if (matcher[expando]) {
                    j = ++i;
                    for (; j < len; j++) {
                        if (Expr.relative[tokens[j].type]) {
                            break;
                        }
                    }
                    return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({
                        value: tokens[i - 2].type === ' ' ? '*' : ''
                    })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
                }
                matchers.push(matcher);
            }
        }
        return elementMatcher(matchers);
    }
    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
        var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function (seed, context, xml, results, outermost) {
                var elem, j, matcher, matchedCount = 0, i = '0', unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find['TAG']('*', outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
                if (outermost) {
                    outermostContext = context === document || context || outermost;
                }
                for (; i !== len && (elem = elems[i]) != null; i++) {
                    if (byElement && elem) {
                        j = 0;
                        if (!context && elem.ownerDocument !== document) {
                            setDocument(elem);
                            xml = !documentIsHTML;
                        }
                        while (matcher = elementMatchers[j++]) {
                            if (matcher(elem, context || document, xml)) {
                                results.push(elem);
                                break;
                            }
                        }
                        if (outermost) {
                            dirruns = dirrunsUnique;
                        }
                    }
                    if (bySet) {
                        if (elem = !matcher && elem) {
                            matchedCount--;
                        }
                        if (seed) {
                            unmatched.push(elem);
                        }
                    }
                }
                matchedCount += i;
                if (bySet && i !== matchedCount) {
                    j = 0;
                    while (matcher = setMatchers[j++]) {
                        matcher(unmatched, setMatched, context, xml);
                    }
                    if (seed) {
                        if (matchedCount > 0) {
                            while (i--) {
                                if (!(unmatched[i] || setMatched[i])) {
                                    setMatched[i] = pop.call(results);
                                }
                            }
                        }
                        setMatched = condense(setMatched);
                    }
                    push.apply(results, setMatched);
                    if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
                        Sizzle.uniqueSort(results);
                    }
                }
                if (outermost) {
                    dirruns = dirrunsUnique;
                    outermostContext = contextBackup;
                }
                return unmatched;
            };
        return bySet ? markFunction(superMatcher) : superMatcher;
    }
    compile = Sizzle.compile = function (selector, match) {
        var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + ' '];
        if (!cached) {
            if (!match) {
                match = tokenize(selector);
            }
            i = match.length;
            while (i--) {
                cached = matcherFromTokens(match[i]);
                if (cached[expando]) {
                    setMatchers.push(cached);
                } else {
                    elementMatchers.push(cached);
                }
            }
            cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
            cached.selector = selector;
        }
        return cached;
    };
    select = Sizzle.select = function (selector, context, results, seed) {
        var i, tokens, token, type, find, compiled = typeof selector === 'function' && selector, match = !seed && tokenize(selector = compiled.selector || selector);
        results = results || [];
        if (match.length === 1) {
            tokens = match[0] = match[0].slice(0);
            if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
                context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];
                if (!context) {
                    return results;
                } else if (compiled) {
                    context = context.parentNode;
                }
                selector = selector.slice(tokens.shift().value.length);
            }
            i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;
            while (i--) {
                token = tokens[i];
                if (Expr.relative[type = token.type]) {
                    break;
                }
                if (find = Expr.find[type]) {
                    if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
                        tokens.splice(i, 1);
                        selector = seed.length && toSelector(tokens);
                        if (!selector) {
                            push.apply(results, seed);
                            return results;
                        }
                        break;
                    }
                }
            }
        }
        (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
        return results;
    };
    support.sortStable = expando.split('').sort(sortOrder).join('') === expando;
    support.detectDuplicates = !!hasDuplicate;
    setDocument();
    support.sortDetached = assert(function (el) {
        return el.compareDocumentPosition(document.createElement('fieldset')) & 1;
    });
    if (!assert(function (el) {
            el.innerHTML = '<a href=\'#\'></a>';
            return el.firstChild.getAttribute('href') === '#';
        })) {
        addHandle('type|href|height|width', function (elem, name, isXML) {
            if (!isXML) {
                return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);
            }
        });
    }
    if (!support.attributes || !assert(function (el) {
            el.innerHTML = '<input/>';
            el.firstChild.setAttribute('value', '');
            return el.firstChild.getAttribute('value') === '';
        })) {
        addHandle('value', function (elem, name, isXML) {
            if (!isXML && elem.nodeName.toLowerCase() === 'input') {
                return elem.defaultValue;
            }
        });
    }
    if (!assert(function (el) {
            return el.getAttribute('disabled') == null;
        })) {
        addHandle(booleans, function (elem, name, isXML) {
            var val;
            if (!isXML) {
                return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
            }
        });
    }
    return Sizzle;
}(window);
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[':'] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;
dir = function (elem, dir, until) {
    var matched = [], truncate = until !== undefined;
    while ((elem = elem[dir]) && elem.nodeType !== 9) {
        if (elem.nodeType === 1) {
            if (truncate && jQuery(elem).is(until)) {
                break;
            }
            matched.push(elem);
        }
    }
    return matched;
};
siblings = function (n, elem) {
    var matched = [];
    for (; n; n = n.nextSibling) {
        if (n.nodeType === 1 && n !== elem) {
            matched.push(n);
        }
    }
    return matched;
};
rneedsContext = jQuery.expr.match.needsContext;
;
rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
risSimple = /^.[^:#\[\.,]*$/;
jQuery.filter = function (expr, elems, not) {
    var elem = elems[0];
    if (not) {
        expr = ':not(' + expr + ')';
    }
    if (elems.length === 1 && elem.nodeType === 1) {
        return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
    }
    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
        return elem.nodeType === 1;
    }));
};
jQuery.fn.extend({
    find: function (selector) {
        var i, ret, len = this.length, self = this;
        if (typeof selector !== 'string') {
            return this.pushStack(jQuery(selector).filter(function () {
                for (i = 0; i < len; i++) {
                    if (jQuery.contains(self[i], this)) {
                        return true;
                    }
                }
            }));
        }
        ret = this.pushStack([]);
        for (i = 0; i < len; i++) {
            jQuery.find(selector, self[i], ret);
        }
        return len > 1 ? jQuery.uniqueSort(ret) : ret;
    },
    filter: function (selector) {
        return this.pushStack(winnow(this, selector || [], false));
    },
    not: function (selector) {
        return this.pushStack(winnow(this, selector || [], true));
    },
    is: function (selector) {
        return !!winnow(this, typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
    }
});
rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
init = jQuery.fn.init = function (selector, context, root) {
    var match, elem;
    if (!selector) {
        return this;
    }
    root = root || rootjQuery;
    if (typeof selector === 'string') {
        if (selector[0] === '<' && selector[selector.length - 1] === '>' && selector.length >= 3) {
            match = [
                null,
                selector,
                null
            ];
        } else {
            match = rquickExpr.exec(selector);
        }
        if (match && (match[1] || !context)) {
            if (match[1]) {
                context = context instanceof jQuery ? context[0] : context;
                jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
                if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                    for (match in context) {
                        if (jQuery.isFunction(this[match])) {
                            this[match](context[match]);
                        } else {
                            this.attr(match, context[match]);
                        }
                    }
                }
                return this;
            } else {
                elem = document.getElementById(match[2]);
                if (elem) {
                    this[0] = elem;
                    this.length = 1;
                }
                return this;
            }
        } else if (!context || context.jquery) {
            return (context || root).find(selector);
        } else {
            return this.constructor(context).find(selector);
        }
    } else if (selector.nodeType) {
        this[0] = selector;
        this.length = 1;
        return this;
    } else if (jQuery.isFunction(selector)) {
        return root.ready !== undefined ? root.ready(selector) : selector(jQuery);
    }
    return jQuery.makeArray(selector, this);
};
init.prototype = jQuery.fn;
rootjQuery = jQuery(document);
rparentsprev = /^(?:parents|prev(?:Until|All))/;
guaranteedUnique = {
    children: true,
    contents: true,
    next: true,
    prev: true
};
jQuery.fn.extend({
    has: function (target) {
        var targets = jQuery(target, this), l = targets.length;
        return this.filter(function () {
            var i = 0;
            for (; i < l; i++) {
                if (jQuery.contains(this, targets[i])) {
                    return true;
                }
            }
        });
    },
    closest: function (selectors, context) {
        var cur, i = 0, l = this.length, matched = [], targets = typeof selectors !== 'string' && jQuery(selectors);
        if (!rneedsContext.test(selectors)) {
            for (; i < l; i++) {
                for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
                    if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
                        matched.push(cur);
                        break;
                    }
                }
            }
        }
        return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
    },
    index: function (elem) {
        if (!elem) {
            return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        }
        if (typeof elem === 'string') {
            return indexOf.call(jQuery(elem), this[0]);
        }
        return indexOf.call(this, elem.jquery ? elem[0] : elem);
    },
    add: function (selector, context) {
        return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
    },
    addBack: function (selector) {
        return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
    }
});
jQuery.each({
    parent: function (elem) {
        var parent = elem.parentNode;
        return parent && parent.nodeType !== 11 ? parent : null;
    },
    parents: function (elem) {
        return dir(elem, 'parentNode');
    },
    parentsUntil: function (elem, i, until) {
        return dir(elem, 'parentNode', until);
    },
    next: function (elem) {
        return sibling(elem, 'nextSibling');
    },
    prev: function (elem) {
        return sibling(elem, 'previousSibling');
    },
    nextAll: function (elem) {
        return dir(elem, 'nextSibling');
    },
    prevAll: function (elem) {
        return dir(elem, 'previousSibling');
    },
    nextUntil: function (elem, i, until) {
        return dir(elem, 'nextSibling', until);
    },
    prevUntil: function (elem, i, until) {
        return dir(elem, 'previousSibling', until);
    },
    siblings: function (elem) {
        return siblings((elem.parentNode || {}).firstChild, elem);
    },
    children: function (elem) {
        return siblings(elem.firstChild);
    },
    contents: function (elem) {
        if (nodeName(elem, 'iframe')) {
            return elem.contentDocument;
        }
        if (nodeName(elem, 'template')) {
            elem = elem.content || elem;
        }
        return jQuery.merge([], elem.childNodes);
    }
}, function (name, fn) {
    jQuery.fn[name] = function (until, selector) {
        var matched = jQuery.map(this, fn, until);
        if (name.slice(-5) !== 'Until') {
            selector = until;
        }
        if (selector && typeof selector === 'string') {
            matched = jQuery.filter(selector, matched);
        }
        if (this.length > 1) {
            if (!guaranteedUnique[name]) {
                jQuery.uniqueSort(matched);
            }
            if (rparentsprev.test(name)) {
                matched.reverse();
            }
        }
        return this.pushStack(matched);
    };
});
rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
jQuery.Callbacks = function (options) {
    options = typeof options === 'string' ? createOptions(options) : jQuery.extend({}, options);
    var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, fire = function () {
            locked = locked || options.once;
            fired = firing = true;
            for (; queue.length; firingIndex = -1) {
                memory = queue.shift();
                while (++firingIndex < list.length) {
                    if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                        firingIndex = list.length;
                        memory = false;
                    }
                }
            }
            if (!options.memory) {
                memory = false;
            }
            firing = false;
            if (locked) {
                if (memory) {
                    list = [];
                } else {
                    list = '';
                }
            }
        }, self = {
            add: function () {
                if (list) {
                    if (memory && !firing) {
                        firingIndex = list.length - 1;
                        queue.push(memory);
                    }
                    (function add(args) {
                        jQuery.each(args, function (_, arg) {
                            if (jQuery.isFunction(arg)) {
                                if (!options.unique || !self.has(arg)) {
                                    list.push(arg);
                                }
                            } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                                add(arg);
                            }
                        });
                    }(arguments));
                    if (memory && !firing) {
                        fire();
                    }
                }
                return this;
            },
            remove: function () {
                jQuery.each(arguments, function (_, arg) {
                    var index;
                    while ((index = jQuery.inArray(arg, list, index)) > -1) {
                        list.splice(index, 1);
                        if (index <= firingIndex) {
                            firingIndex--;
                        }
                    }
                });
                return this;
            },
            has: function (fn) {
                return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
            },
            empty: function () {
                if (list) {
                    list = [];
                }
                return this;
            },
            disable: function () {
                locked = queue = [];
                list = memory = '';
                return this;
            },
            disabled: function () {
                return !list;
            },
            lock: function () {
                locked = queue = [];
                if (!memory && !firing) {
                    list = memory = '';
                }
                return this;
            },
            locked: function () {
                return !!locked;
            },
            fireWith: function (context, args) {
                if (!locked) {
                    args = args || [];
                    args = [
                        context,
                        args.slice ? args.slice() : args
                    ];
                    queue.push(args);
                    if (!firing) {
                        fire();
                    }
                }
                return this;
            },
            fire: function () {
                self.fireWith(this, arguments);
                return this;
            },
            fired: function () {
                return !!fired;
            }
        };
    return self;
};
jQuery.extend({
    Deferred: function (func) {
        var tuples = [
                [
                    'notify',
                    'progress',
                    jQuery.Callbacks('memory'),
                    jQuery.Callbacks('memory'),
                    2
                ],
                [
                    'resolve',
                    'done',
                    jQuery.Callbacks('once memory'),
                    jQuery.Callbacks('once memory'),
                    0,
                    'resolved'
                ],
                [
                    'reject',
                    'fail',
                    jQuery.Callbacks('once memory'),
                    jQuery.Callbacks('once memory'),
                    1,
                    'rejected'
                ]
            ], state = 'pending', promise = {
                state: function () {
                    return state;
                },
                always: function () {
                    deferred.done(arguments).fail(arguments);
                    return this;
                },
                'catch': function (fn) {
                    return promise.then(null, fn);
                },
                pipe: function () {
                    var fns = arguments;
                    return jQuery.Deferred(function (newDefer) {
                        jQuery.each(tuples, function (i, tuple) {
                            var fn = jQuery.isFunction(fns[tuple[4]]) && fns[tuple[4]];
                            deferred[tuple[1]](function () {
                                var returned = fn && fn.apply(this, arguments);
                                if (returned && jQuery.isFunction(returned.promise)) {
                                    returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                                } else {
                                    newDefer[tuple[0] + 'With'](this, fn ? [returned] : arguments);
                                }
                            });
                        });
                        fns = null;
                    }).promise();
                },
                then: function (onFulfilled, onRejected, onProgress) {
                    var maxDepth = 0;
                    function resolve(depth, deferred, handler, special) {
                        return function () {
                            var that = this, args = arguments, mightThrow = function () {
                                    var returned, then;
                                    if (depth < maxDepth) {
                                        return;
                                    }
                                    returned = handler.apply(that, args);
                                    if (returned === deferred.promise()) {
                                        throw new TypeError('Thenable self-resolution');
                                    }
                                    then = returned && (typeof returned === 'object' || typeof returned === 'function') && returned.then;
                                    if (jQuery.isFunction(then)) {
                                        if (special) {
                                            then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));
                                        } else {
                                            maxDepth++;
                                            then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
                                        }
                                    } else {
                                        if (handler !== Identity) {
                                            that = undefined;
                                            args = [returned];
                                        }
                                        (special || deferred.resolveWith)(that, args);
                                    }
                                }, process = special ? mightThrow : function () {
                                    try {
                                        mightThrow();
                                    } catch (e) {
                                        if (jQuery.Deferred.exceptionHook) {
                                            jQuery.Deferred.exceptionHook(e, process.stackTrace);
                                        }
                                        if (depth + 1 >= maxDepth) {
                                            if (handler !== Thrower) {
                                                that = undefined;
                                                args = [e];
                                            }
                                            deferred.rejectWith(that, args);
                                        }
                                    }
                                };
                            if (depth) {
                                process();
                            } else {
                                if (jQuery.Deferred.getStackHook) {
                                    process.stackTrace = jQuery.Deferred.getStackHook();
                                }
                                window.setTimeout(process);
                            }
                        };
                    }
                    return jQuery.Deferred(function (newDefer) {
                        tuples[0][3].add(resolve(0, newDefer, jQuery.isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));
                        tuples[1][3].add(resolve(0, newDefer, jQuery.isFunction(onFulfilled) ? onFulfilled : Identity));
                        tuples[2][3].add(resolve(0, newDefer, jQuery.isFunction(onRejected) ? onRejected : Thrower));
                    }).promise();
                },
                promise: function (obj) {
                    return obj != null ? jQuery.extend(obj, promise) : promise;
                }
            }, deferred = {};
        jQuery.each(tuples, function (i, tuple) {
            var list = tuple[2], stateString = tuple[5];
            promise[tuple[1]] = list.add;
            if (stateString) {
                list.add(function () {
                    state = stateString;
                }, tuples[3 - i][2].disable, tuples[0][2].lock);
            }
            list.add(tuple[3].fire);
            deferred[tuple[0]] = function () {
                deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);
                return this;
            };
            deferred[tuple[0] + 'With'] = list.fireWith;
        });
        promise.promise(deferred);
        if (func) {
            func.call(deferred, deferred);
        }
        return deferred;
    },
    when: function (singleValue) {
        var remaining = arguments.length, i = remaining, resolveContexts = Array(i), resolveValues = slice.call(arguments), master = jQuery.Deferred(), updateFunc = function (i) {
                return function (value) {
                    resolveContexts[i] = this;
                    resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;
                    if (!--remaining) {
                        master.resolveWith(resolveContexts, resolveValues);
                    }
                };
            };
        if (remaining <= 1) {
            adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining);
            if (master.state() === 'pending' || jQuery.isFunction(resolveValues[i] && resolveValues[i].then)) {
                return master.then();
            }
        }
        while (i--) {
            adoptValue(resolveValues[i], updateFunc(i), master.reject);
        }
        return master.promise();
    }
});
rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
jQuery.Deferred.exceptionHook = function (error, stack) {
    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {
        window.console.warn('jQuery.Deferred exception: ' + error.message, error.stack, stack);
    }
};
jQuery.readyException = function (error) {
    window.setTimeout(function () {
        throw error;
    });
};
readyList = jQuery.Deferred();
jQuery.fn.ready = function (fn) {
    readyList.then(fn).catch(function (error) {
        jQuery.readyException(error);
    });
    return this;
};
jQuery.extend({
    isReady: false,
    readyWait: 1,
    ready: function (wait) {
        if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
            return;
        }
        jQuery.isReady = true;
        if (wait !== true && --jQuery.readyWait > 0) {
            return;
        }
        readyList.resolveWith(document, [jQuery]);
    }
});
jQuery.ready.then = readyList.then;
if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {
    window.setTimeout(jQuery.ready);
} else {
    document.addEventListener('DOMContentLoaded', completed);
    window.addEventListener('load', completed);
}
access = function (elems, fn, key, value, chainable, emptyGet, raw) {
    var i = 0, len = elems.length, bulk = key == null;
    if (jQuery.type(key) === 'object') {
        chainable = true;
        for (i in key) {
            access(elems, fn, i, key[i], true, emptyGet, raw);
        }
    } else if (value !== undefined) {
        chainable = true;
        if (!jQuery.isFunction(value)) {
            raw = true;
        }
        if (bulk) {
            if (raw) {
                fn.call(elems, value);
                fn = null;
            } else {
                bulk = fn;
                fn = function (elem, key, value) {
                    return bulk.call(jQuery(elem), value);
                };
            }
        }
        if (fn) {
            for (; i < len; i++) {
                fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
            }
        }
    }
    if (chainable) {
        return elems;
    }
    if (bulk) {
        return fn.call(elems);
    }
    return len ? fn(elems[0], key) : emptyGet;
};
acceptData = function (owner) {
    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
};
Data.uid = 1;
Data.prototype = {
    cache: function (owner) {
        var value = owner[this.expando];
        if (!value) {
            value = {};
            if (acceptData(owner)) {
                if (owner.nodeType) {
                    owner[this.expando] = value;
                } else {
                    Object.defineProperty(owner, this.expando, {
                        value: value,
                        configurable: true
                    });
                }
            }
        }
        return value;
    },
    set: function (owner, data, value) {
        var prop, cache = this.cache(owner);
        if (typeof data === 'string') {
            cache[jQuery.camelCase(data)] = value;
        } else {
            for (prop in data) {
                cache[jQuery.camelCase(prop)] = data[prop];
            }
        }
        return cache;
    },
    get: function (owner, key) {
        return key === undefined ? this.cache(owner) : owner[this.expando] && owner[this.expando][jQuery.camelCase(key)];
    },
    access: function (owner, key, value) {
        if (key === undefined || key && typeof key === 'string' && value === undefined) {
            return this.get(owner, key);
        }
        this.set(owner, key, value);
        return value !== undefined ? value : key;
    },
    remove: function (owner, key) {
        var i, cache = owner[this.expando];
        if (cache === undefined) {
            return;
        }
        if (key !== undefined) {
            if (Array.isArray(key)) {
                key = key.map(jQuery.camelCase);
            } else {
                key = jQuery.camelCase(key);
                key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
            }
            i = key.length;
            while (i--) {
                delete cache[key[i]];
            }
        }
        if (key === undefined || jQuery.isEmptyObject(cache)) {
            if (owner.nodeType) {
                owner[this.expando] = undefined;
            } else {
                delete owner[this.expando];
            }
        }
    },
    hasData: function (owner) {
        var cache = owner[this.expando];
        return cache !== undefined && !jQuery.isEmptyObject(cache);
    }
};
dataPriv = new Data();
dataUser = new Data();
rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;
rmultiDash = /[A-Z]/g;
jQuery.extend({
    hasData: function (elem) {
        return dataUser.hasData(elem) || dataPriv.hasData(elem);
    },
    data: function (elem, name, data) {
        return dataUser.access(elem, name, data);
    },
    removeData: function (elem, name) {
        dataUser.remove(elem, name);
    },
    _data: function (elem, name, data) {
        return dataPriv.access(elem, name, data);
    },
    _removeData: function (elem, name) {
        dataPriv.remove(elem, name);
    }
});
jQuery.fn.extend({
    data: function (key, value) {
        var i, name, data, elem = this[0], attrs = elem && elem.attributes;
        if (key === undefined) {
            if (this.length) {
                data = dataUser.get(elem);
                if (elem.nodeType === 1 && !dataPriv.get(elem, 'hasDataAttrs')) {
                    i = attrs.length;
                    while (i--) {
                        if (attrs[i]) {
                            name = attrs[i].name;
                            if (name.indexOf('data-') === 0) {
                                name = jQuery.camelCase(name.slice(5));
                                dataAttr(elem, name, data[name]);
                            }
                        }
                    }
                    dataPriv.set(elem, 'hasDataAttrs', true);
                }
            }
            return data;
        }
        if (typeof key === 'object') {
            return this.each(function () {
                dataUser.set(this, key);
            });
        }
        return access(this, function (value) {
            var data;
            if (elem && value === undefined) {
                data = dataUser.get(elem, key);
                if (data !== undefined) {
                    return data;
                }
                data = dataAttr(elem, key);
                if (data !== undefined) {
                    return data;
                }
                return;
            }
            this.each(function () {
                dataUser.set(this, key, value);
            });
        }, null, value, arguments.length > 1, null, true);
    },
    removeData: function (key) {
        return this.each(function () {
            dataUser.remove(this, key);
        });
    }
});
jQuery.extend({
    queue: function (elem, type, data) {
        var queue;
        if (elem) {
            type = (type || 'fx') + 'queue';
            queue = dataPriv.get(elem, type);
            if (data) {
                if (!queue || Array.isArray(data)) {
                    queue = dataPriv.access(elem, type, jQuery.makeArray(data));
                } else {
                    queue.push(data);
                }
            }
            return queue || [];
        }
    },
    dequeue: function (elem, type) {
        type = type || 'fx';
        var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function () {
                jQuery.dequeue(elem, type);
            };
        if (fn === 'inprogress') {
            fn = queue.shift();
            startLength--;
        }
        if (fn) {
            if (type === 'fx') {
                queue.unshift('inprogress');
            }
            delete hooks.stop;
            fn.call(elem, next, hooks);
        }
        if (!startLength && hooks) {
            hooks.empty.fire();
        }
    },
    _queueHooks: function (elem, type) {
        var key = type + 'queueHooks';
        return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
            empty: jQuery.Callbacks('once memory').add(function () {
                dataPriv.remove(elem, [
                    type + 'queue',
                    key
                ]);
            })
        });
    }
});
jQuery.fn.extend({
    queue: function (type, data) {
        var setter = 2;
        if (typeof type !== 'string') {
            data = type;
            type = 'fx';
            setter--;
        }
        if (arguments.length < setter) {
            return jQuery.queue(this[0], type);
        }
        return data === undefined ? this : this.each(function () {
            var queue = jQuery.queue(this, type, data);
            jQuery._queueHooks(this, type);
            if (type === 'fx' && queue[0] !== 'inprogress') {
                jQuery.dequeue(this, type);
            }
        });
    },
    dequeue: function (type) {
        return this.each(function () {
            jQuery.dequeue(this, type);
        });
    },
    clearQueue: function (type) {
        return this.queue(type || 'fx', []);
    },
    promise: function (type, obj) {
        var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function () {
                if (!--count) {
                    defer.resolveWith(elements, [elements]);
                }
            };
        if (typeof type !== 'string') {
            obj = type;
            type = undefined;
        }
        type = type || 'fx';
        while (i--) {
            tmp = dataPriv.get(elements[i], type + 'queueHooks');
            if (tmp && tmp.empty) {
                count++;
                tmp.empty.add(resolve);
            }
        }
        resolve();
        return defer.promise(obj);
    }
});
pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i');
cssExpand = [
    'Top',
    'Right',
    'Bottom',
    'Left'
];
isHiddenWithinTree = function (elem, el) {
    elem = el || elem;
    return elem.style.display === 'none' || elem.style.display === '' && jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, 'display') === 'none';
};
swap = function (elem, options, callback, args) {
    var ret, name, old = {};
    for (name in options) {
        old[name] = elem.style[name];
        elem.style[name] = options[name];
    }
    ret = callback.apply(elem, args || []);
    for (name in options) {
        elem.style[name] = old[name];
    }
    return ret;
};
defaultDisplayMap = {};
jQuery.fn.extend({
    show: function () {
        return showHide(this, true);
    },
    hide: function () {
        return showHide(this);
    },
    toggle: function (state) {
        if (typeof state === 'boolean') {
            return state ? this.show() : this.hide();
        }
        return this.each(function () {
            if (isHiddenWithinTree(this)) {
                jQuery(this).show();
            } else {
                jQuery(this).hide();
            }
        });
    }
});
rcheckableType = /^(?:checkbox|radio)$/i;
rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i;
rscriptType = /^$|\/(?:java|ecma)script/i;
wrapMap = {
    option: [
        1,
        '<select multiple=\'multiple\'>',
        '</select>'
    ],
    thead: [
        1,
        '<table>',
        '</table>'
    ],
    col: [
        2,
        '<table><colgroup>',
        '</colgroup></table>'
    ],
    tr: [
        2,
        '<table><tbody>',
        '</tbody></table>'
    ],
    td: [
        3,
        '<table><tbody><tr>',
        '</tr></tbody></table>'
    ],
    _default: [
        0,
        '',
        ''
    ]
};
wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;
rhtml = /<|&#?\w+;/;
(function () {
    var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement('div')), input = document.createElement('input');
    input.setAttribute('type', 'radio');
    input.setAttribute('checked', 'checked');
    input.setAttribute('name', 't');
    div.appendChild(input);
    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
    div.innerHTML = '<textarea>x</textarea>';
    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
}());
documentElement = document.documentElement;
rkeyEvent = /^key/;
rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;
rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
jQuery.event = {
    global: {},
    add: function (elem, types, handler, data, selector) {
        var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
        if (!elemData) {
            return;
        }
        if (handler.handler) {
            handleObjIn = handler;
            handler = handleObjIn.handler;
            selector = handleObjIn.selector;
        }
        if (selector) {
            jQuery.find.matchesSelector(documentElement, selector);
        }
        if (!handler.guid) {
            handler.guid = jQuery.guid++;
        }
        if (!(events = elemData.events)) {
            events = elemData.events = {};
        }
        if (!(eventHandle = elemData.handle)) {
            eventHandle = elemData.handle = function (e) {
                return typeof jQuery !== 'undefined' && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
            };
        }
        types = (types || '').match(rnothtmlwhite) || [''];
        t = types.length;
        while (t--) {
            tmp = rtypenamespace.exec(types[t]) || [];
            type = origType = tmp[1];
            namespaces = (tmp[2] || '').split('.').sort();
            if (!type) {
                continue;
            }
            special = jQuery.event.special[type] || {};
            type = (selector ? special.delegateType : special.bindType) || type;
            special = jQuery.event.special[type] || {};
            handleObj = jQuery.extend({
                type: type,
                origType: origType,
                data: data,
                handler: handler,
                guid: handler.guid,
                selector: selector,
                needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                namespace: namespaces.join('.')
            }, handleObjIn);
            if (!(handlers = events[type])) {
                handlers = events[type] = [];
                handlers.delegateCount = 0;
                if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                    if (elem.addEventListener) {
                        elem.addEventListener(type, eventHandle);
                    }
                }
            }
            if (special.add) {
                special.add.call(elem, handleObj);
                if (!handleObj.handler.guid) {
                    handleObj.handler.guid = handler.guid;
                }
            }
            if (selector) {
                handlers.splice(handlers.delegateCount++, 0, handleObj);
            } else {
                handlers.push(handleObj);
            }
            jQuery.event.global[type] = true;
        }
    },
    remove: function (elem, types, handler, selector, mappedTypes) {
        var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
        if (!elemData || !(events = elemData.events)) {
            return;
        }
        types = (types || '').match(rnothtmlwhite) || [''];
        t = types.length;
        while (t--) {
            tmp = rtypenamespace.exec(types[t]) || [];
            type = origType = tmp[1];
            namespaces = (tmp[2] || '').split('.').sort();
            if (!type) {
                for (type in events) {
                    jQuery.event.remove(elem, type + types[t], handler, selector, true);
                }
                continue;
            }
            special = jQuery.event.special[type] || {};
            type = (selector ? special.delegateType : special.bindType) || type;
            handlers = events[type] || [];
            tmp = tmp[2] && new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)');
            origCount = j = handlers.length;
            while (j--) {
                handleObj = handlers[j];
                if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === '**' && handleObj.selector)) {
                    handlers.splice(j, 1);
                    if (handleObj.selector) {
                        handlers.delegateCount--;
                    }
                    if (special.remove) {
                        special.remove.call(elem, handleObj);
                    }
                }
            }
            if (origCount && !handlers.length) {
                if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
                    jQuery.removeEvent(elem, type, elemData.handle);
                }
                delete events[type];
            }
        }
        if (jQuery.isEmptyObject(events)) {
            dataPriv.remove(elem, 'handle events');
        }
    },
    dispatch: function (nativeEvent) {
        var event = jQuery.event.fix(nativeEvent);
        var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), handlers = (dataPriv.get(this, 'events') || {})[event.type] || [], special = jQuery.event.special[event.type] || {};
        args[0] = event;
        for (i = 1; i < arguments.length; i++) {
            args[i] = arguments[i];
        }
        event.delegateTarget = this;
        if (special.preDispatch && special.preDispatch.call(this, event) === false) {
            return;
        }
        handlerQueue = jQuery.event.handlers.call(this, event, handlers);
        i = 0;
        while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
            event.currentTarget = matched.elem;
            j = 0;
            while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
                if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {
                    event.handleObj = handleObj;
                    event.data = handleObj.data;
                    ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                    if (ret !== undefined) {
                        if ((event.result = ret) === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                    }
                }
            }
        }
        if (special.postDispatch) {
            special.postDispatch.call(this, event);
        }
        return event.result;
    },
    handlers: function (event, handlers) {
        var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
        if (delegateCount && cur.nodeType && !(event.type === 'click' && event.button >= 1)) {
            for (; cur !== this; cur = cur.parentNode || this) {
                if (cur.nodeType === 1 && !(event.type === 'click' && cur.disabled === true)) {
                    matchedHandlers = [];
                    matchedSelectors = {};
                    for (i = 0; i < delegateCount; i++) {
                        handleObj = handlers[i];
                        sel = handleObj.selector + ' ';
                        if (matchedSelectors[sel] === undefined) {
                            matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
                        }
                        if (matchedSelectors[sel]) {
                            matchedHandlers.push(handleObj);
                        }
                    }
                    if (matchedHandlers.length) {
                        handlerQueue.push({
                            elem: cur,
                            handlers: matchedHandlers
                        });
                    }
                }
            }
        }
        cur = this;
        if (delegateCount < handlers.length) {
            handlerQueue.push({
                elem: cur,
                handlers: handlers.slice(delegateCount)
            });
        }
        return handlerQueue;
    },
    addProp: function (name, hook) {
        Object.defineProperty(jQuery.Event.prototype, name, {
            enumerable: true,
            configurable: true,
            get: jQuery.isFunction(hook) ? function () {
                if (this.originalEvent) {
                    return hook(this.originalEvent);
                }
            } : function () {
                if (this.originalEvent) {
                    return this.originalEvent[name];
                }
            },
            set: function (value) {
                Object.defineProperty(this, name, {
                    enumerable: true,
                    configurable: true,
                    writable: true,
                    value: value
                });
            }
        });
    },
    fix: function (originalEvent) {
        return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
    },
    special: {
        load: {
            noBubble: true
        },
        focus: {
            trigger: function () {
                if (this !== safeActiveElement() && this.focus) {
                    this.focus();
                    return false;
                }
            },
            delegateType: 'focusin'
        },
        blur: {
            trigger: function () {
                if (this === safeActiveElement() && this.blur) {
                    this.blur();
                    return false;
                }
            },
            delegateType: 'focusout'
        },
        click: {
            trigger: function () {
                if (rcheckableType.test(this.type) && this.click && nodeName(this, 'input')) {
                    this.click();
                    return false;
                }
            },
            _default: function (event) {
                return nodeName(event.target, 'a');
            }
        },
        beforeunload: {
            postDispatch: function (event) {
                if (event.result !== undefined && event.originalEvent) {
                    event.originalEvent.returnValue = event.result;
                }
            }
        }
    }
};
jQuery.removeEvent = function (elem, type, handle) {
    if (elem.removeEventListener) {
        elem.removeEventListener(type, handle);
    }
};
jQuery.Event = function (src, props) {
    if (!(this instanceof jQuery.Event)) {
        return new jQuery.Event(src, props);
    }
    if (src && src.type) {
        this.originalEvent = src;
        this.type = src.type;
        this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;
        this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
        this.currentTarget = src.currentTarget;
        this.relatedTarget = src.relatedTarget;
    } else {
        this.type = src;
    }
    if (props) {
        jQuery.extend(this, props);
    }
    this.timeStamp = src && src.timeStamp || jQuery.now();
    this[jQuery.expando] = true;
};
jQuery.Event.prototype = {
    constructor: jQuery.Event,
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse,
    isSimulated: false,
    preventDefault: function () {
        var e = this.originalEvent;
        this.isDefaultPrevented = returnTrue;
        if (e && !this.isSimulated) {
            e.preventDefault();
        }
    },
    stopPropagation: function () {
        var e = this.originalEvent;
        this.isPropagationStopped = returnTrue;
        if (e && !this.isSimulated) {
            e.stopPropagation();
        }
    },
    stopImmediatePropagation: function () {
        var e = this.originalEvent;
        this.isImmediatePropagationStopped = returnTrue;
        if (e && !this.isSimulated) {
            e.stopImmediatePropagation();
        }
        this.stopPropagation();
    }
};
jQuery.each({
    altKey: true,
    bubbles: true,
    cancelable: true,
    changedTouches: true,
    ctrlKey: true,
    detail: true,
    eventPhase: true,
    metaKey: true,
    pageX: true,
    pageY: true,
    shiftKey: true,
    view: true,
    'char': true,
    charCode: true,
    key: true,
    keyCode: true,
    button: true,
    buttons: true,
    clientX: true,
    clientY: true,
    offsetX: true,
    offsetY: true,
    pointerId: true,
    pointerType: true,
    screenX: true,
    screenY: true,
    targetTouches: true,
    toElement: true,
    touches: true,
    which: function (event) {
        var button = event.button;
        if (event.which == null && rkeyEvent.test(event.type)) {
            return event.charCode != null ? event.charCode : event.keyCode;
        }
        if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {
            if (button & 1) {
                return 1;
            }
            if (button & 2) {
                return 3;
            }
            if (button & 4) {
                return 2;
            }
            return 0;
        }
        return event.which;
    }
}, jQuery.event.addProp);
jQuery.each({
    mouseenter: 'mouseover',
    mouseleave: 'mouseout',
    pointerenter: 'pointerover',
    pointerleave: 'pointerout'
}, function (orig, fix) {
    jQuery.event.special[orig] = {
        delegateType: fix,
        bindType: fix,
        handle: function (event) {
            var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
            if (!related || related !== target && !jQuery.contains(target, related)) {
                event.type = handleObj.origType;
                ret = handleObj.handler.apply(this, arguments);
                event.type = fix;
            }
            return ret;
        }
    };
});
jQuery.fn.extend({
    on: function (types, selector, data, fn) {
        return on(this, types, selector, data, fn);
    },
    one: function (types, selector, data, fn) {
        return on(this, types, selector, data, fn, 1);
    },
    off: function (types, selector, fn) {
        var handleObj, type;
        if (types && types.preventDefault && types.handleObj) {
            handleObj = types.handleObj;
            jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
            return this;
        }
        if (typeof types === 'object') {
            for (type in types) {
                this.off(type, selector, types[type]);
            }
            return this;
        }
        if (selector === false || typeof selector === 'function') {
            fn = selector;
            selector = undefined;
        }
        if (fn === false) {
            fn = returnFalse;
        }
        return this.each(function () {
            jQuery.event.remove(this, types, fn, selector);
        });
    }
});
rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi;
rnoInnerhtml = /<script|<style|<link/i;
rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i;
rscriptTypeMasked = /^true\/(.*)/;
rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
jQuery.extend({
    htmlPrefilter: function (html) {
        return html.replace(rxhtmlTag, '<$1></$2>');
    },
    clone: function (elem, dataAndEvents, deepDataAndEvents) {
        var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = jQuery.contains(elem.ownerDocument, elem);
        if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
            destElements = getAll(clone);
            srcElements = getAll(elem);
            for (i = 0, l = srcElements.length; i < l; i++) {
                fixInput(srcElements[i], destElements[i]);
            }
        }
        if (dataAndEvents) {
            if (deepDataAndEvents) {
                srcElements = srcElements || getAll(elem);
                destElements = destElements || getAll(clone);
                for (i = 0, l = srcElements.length; i < l; i++) {
                    cloneCopyEvent(srcElements[i], destElements[i]);
                }
            } else {
                cloneCopyEvent(elem, clone);
            }
        }
        destElements = getAll(clone, 'script');
        if (destElements.length > 0) {
            setGlobalEval(destElements, !inPage && getAll(elem, 'script'));
        }
        return clone;
    },
    cleanData: function (elems) {
        var data, elem, type, special = jQuery.event.special, i = 0;
        for (; (elem = elems[i]) !== undefined; i++) {
            if (acceptData(elem)) {
                if (data = elem[dataPriv.expando]) {
                    if (data.events) {
                        for (type in data.events) {
                            if (special[type]) {
                                jQuery.event.remove(elem, type);
                            } else {
                                jQuery.removeEvent(elem, type, data.handle);
                            }
                        }
                    }
                    elem[dataPriv.expando] = undefined;
                }
                if (elem[dataUser.expando]) {
                    elem[dataUser.expando] = undefined;
                }
            }
        }
    }
});
jQuery.fn.extend({
    detach: function (selector) {
        return remove(this, selector, true);
    },
    remove: function (selector) {
        return remove(this, selector);
    },
    text: function (value) {
        return access(this, function (value) {
            return value === undefined ? jQuery.text(this) : this.empty().each(function () {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    this.textContent = value;
                }
            });
        }, null, value, arguments.length);
    },
    append: function () {
        return domManip(this, arguments, function (elem) {
            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                var target = manipulationTarget(this, elem);
                target.appendChild(elem);
            }
        });
    },
    prepend: function () {
        return domManip(this, arguments, function (elem) {
            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                var target = manipulationTarget(this, elem);
                target.insertBefore(elem, target.firstChild);
            }
        });
    },
    before: function () {
        return domManip(this, arguments, function (elem) {
            if (this.parentNode) {
                this.parentNode.insertBefore(elem, this);
            }
        });
    },
    after: function () {
        return domManip(this, arguments, function (elem) {
            if (this.parentNode) {
                this.parentNode.insertBefore(elem, this.nextSibling);
            }
        });
    },
    empty: function () {
        var elem, i = 0;
        for (; (elem = this[i]) != null; i++) {
            if (elem.nodeType === 1) {
                jQuery.cleanData(getAll(elem, false));
                elem.textContent = '';
            }
        }
        return this;
    },
    clone: function (dataAndEvents, deepDataAndEvents) {
        dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
        deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
        return this.map(function () {
            return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
        });
    },
    html: function (value) {
        return access(this, function (value) {
            var elem = this[0] || {}, i = 0, l = this.length;
            if (value === undefined && elem.nodeType === 1) {
                return elem.innerHTML;
            }
            if (typeof value === 'string' && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [
                    '',
                    ''
                ])[1].toLowerCase()]) {
                value = jQuery.htmlPrefilter(value);
                try {
                    for (; i < l; i++) {
                        elem = this[i] || {};
                        if (elem.nodeType === 1) {
                            jQuery.cleanData(getAll(elem, false));
                            elem.innerHTML = value;
                        }
                    }
                    elem = 0;
                } catch (e) {
                }
            }
            if (elem) {
                this.empty().append(value);
            }
        }, null, value, arguments.length);
    },
    replaceWith: function () {
        var ignored = [];
        return domManip(this, arguments, function (elem) {
            var parent = this.parentNode;
            if (jQuery.inArray(this, ignored) < 0) {
                jQuery.cleanData(getAll(this));
                if (parent) {
                    parent.replaceChild(elem, this);
                }
            }
        }, ignored);
    }
});
jQuery.each({
    appendTo: 'append',
    prependTo: 'prepend',
    insertBefore: 'before',
    insertAfter: 'after',
    replaceAll: 'replaceWith'
}, function (name, original) {
    jQuery.fn[name] = function (selector) {
        var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;
        for (; i <= last; i++) {
            elems = i === last ? this : this.clone(true);
            jQuery(insert[i])[original](elems);
            push.apply(ret, elems.get());
        }
        return this.pushStack(ret);
    };
});
rmargin = /^margin/;
rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i');
getStyles = function (elem) {
    var view = elem.ownerDocument.defaultView;
    if (!view || !view.opener) {
        view = window;
    }
    return view.getComputedStyle(elem);
};
(function () {
    function computeStyleTests() {
        if (!div) {
            return;
        }
        div.style.cssText = 'box-sizing:border-box;' + 'position:relative;display:block;' + 'margin:auto;border:1px;padding:1px;' + 'top:1%;width:50%';
        div.innerHTML = '';
        documentElement.appendChild(container);
        var divStyle = window.getComputedStyle(div);
        pixelPositionVal = divStyle.top !== '1%';
        reliableMarginLeftVal = divStyle.marginLeft === '2px';
        boxSizingReliableVal = divStyle.width === '4px';
        div.style.marginRight = '50%';
        pixelMarginRightVal = divStyle.marginRight === '4px';
        documentElement.removeChild(container);
        div = null;
    }
    var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, container = document.createElement('div'), div = document.createElement('div');
    if (!div.style) {
        return;
    }
    div.style.backgroundClip = 'content-box';
    div.cloneNode(true).style.backgroundClip = '';
    support.clearCloneStyle = div.style.backgroundClip === 'content-box';
    container.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute';
    container.appendChild(div);
    jQuery.extend(support, {
        pixelPosition: function () {
            computeStyleTests();
            return pixelPositionVal;
        },
        boxSizingReliable: function () {
            computeStyleTests();
            return boxSizingReliableVal;
        },
        pixelMarginRight: function () {
            computeStyleTests();
            return pixelMarginRightVal;
        },
        reliableMarginLeft: function () {
            computeStyleTests();
            return reliableMarginLeftVal;
        }
    });
}());
rdisplayswap = /^(none|table(?!-c[ea]).+)/;
rcustomProp = /^--/;
cssShow = {
    position: 'absolute',
    visibility: 'hidden',
    display: 'block'
};
cssNormalTransform = {
    letterSpacing: '0',
    fontWeight: '400'
};
cssPrefixes = [
    'Webkit',
    'Moz',
    'ms'
];
emptyStyle = document.createElement('div').style;
jQuery.extend({
    cssHooks: {
        opacity: {
            get: function (elem, computed) {
                if (computed) {
                    var ret = curCSS(elem, 'opacity');
                    return ret === '' ? '1' : ret;
                }
            }
        }
    },
    cssNumber: {
        'animationIterationCount': true,
        'columnCount': true,
        'fillOpacity': true,
        'flexGrow': true,
        'flexShrink': true,
        'fontWeight': true,
        'lineHeight': true,
        'opacity': true,
        'order': true,
        'orphans': true,
        'widows': true,
        'zIndex': true,
        'zoom': true
    },
    cssProps: {
        'float': 'cssFloat'
    },
    style: function (elem, name, value, extra) {
        if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
            return;
        }
        var ret, type, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
        if (!isCustomProp) {
            name = finalPropName(origName);
        }
        hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
        if (value !== undefined) {
            type = typeof value;
            if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {
                value = adjustCSS(elem, name, ret);
                type = 'number';
            }
            if (value == null || value !== value) {
                return;
            }
            if (type === 'number') {
                value += ret && ret[3] || (jQuery.cssNumber[origName] ? '' : 'px');
            }
            if (!support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {
                style[name] = 'inherit';
            }
            if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
                if (isCustomProp) {
                    style.setProperty(name, value);
                } else {
                    style[name] = value;
                }
            }
        } else {
            if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
                return ret;
            }
            return style[name];
        }
    },
    css: function (elem, name, extra, styles) {
        var val, num, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name);
        if (!isCustomProp) {
            name = finalPropName(origName);
        }
        hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
        if (hooks && 'get' in hooks) {
            val = hooks.get(elem, true, extra);
        }
        if (val === undefined) {
            val = curCSS(elem, name, styles);
        }
        if (val === 'normal' && name in cssNormalTransform) {
            val = cssNormalTransform[name];
        }
        if (extra === '' || extra) {
            num = parseFloat(val);
            return extra === true || isFinite(num) ? num || 0 : val;
        }
        return val;
    }
});
jQuery.each([
    'height',
    'width'
], function (i, name) {
    jQuery.cssHooks[name] = {
        get: function (elem, computed, extra) {
            if (computed) {
                return rdisplayswap.test(jQuery.css(elem, 'display')) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {
                    return getWidthOrHeight(elem, name, extra);
                }) : getWidthOrHeight(elem, name, extra);
            }
        },
        set: function (elem, value, extra) {
            var matches, styles = extra && getStyles(elem), subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles);
            if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {
                elem.style[name] = value;
                value = jQuery.css(elem, name);
            }
            return setPositiveNumber(elem, value, subtract);
        }
    };
});
jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {
    if (computed) {
        return (parseFloat(curCSS(elem, 'marginLeft')) || elem.getBoundingClientRect().left - swap(elem, {
            marginLeft: 0
        }, function () {
            return elem.getBoundingClientRect().left;
        })) + 'px';
    }
});
jQuery.each({
    margin: '',
    padding: '',
    border: 'Width'
}, function (prefix, suffix) {
    jQuery.cssHooks[prefix + suffix] = {
        expand: function (value) {
            var i = 0, expanded = {}, parts = typeof value === 'string' ? value.split(' ') : [value];
            for (; i < 4; i++) {
                expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
            }
            return expanded;
        }
    };
    if (!rmargin.test(prefix)) {
        jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    }
});
jQuery.fn.extend({
    css: function (name, value) {
        return access(this, function (elem, name, value) {
            var styles, len, map = {}, i = 0;
            if (Array.isArray(name)) {
                styles = getStyles(elem);
                len = name.length;
                for (; i < len; i++) {
                    map[name[i]] = jQuery.css(elem, name[i], false, styles);
                }
                return map;
            }
            return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
        }, name, value, arguments.length > 1);
    }
});
jQuery.Tween = Tween;
Tween.prototype = {
    constructor: Tween,
    init: function (elem, options, prop, end, easing, unit) {
        this.elem = elem;
        this.prop = prop;
        this.easing = easing || jQuery.easing._default;
        this.options = options;
        this.start = this.now = this.cur();
        this.end = end;
        this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');
    },
    cur: function () {
        var hooks = Tween.propHooks[this.prop];
        return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
    },
    run: function (percent) {
        var eased, hooks = Tween.propHooks[this.prop];
        if (this.options.duration) {
            this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
        } else {
            this.pos = eased = percent;
        }
        this.now = (this.end - this.start) * eased + this.start;
        if (this.options.step) {
            this.options.step.call(this.elem, this.now, this);
        }
        if (hooks && hooks.set) {
            hooks.set(this);
        } else {
            Tween.propHooks._default.set(this);
        }
        return this;
    }
};
Tween.prototype.init.prototype = Tween.prototype;
Tween.propHooks = {
    _default: {
        get: function (tween) {
            var result;
            if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
                return tween.elem[tween.prop];
            }
            result = jQuery.css(tween.elem, tween.prop, '');
            return !result || result === 'auto' ? 0 : result;
        },
        set: function (tween) {
            if (jQuery.fx.step[tween.prop]) {
                jQuery.fx.step[tween.prop](tween);
            } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
                jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
            } else {
                tween.elem[tween.prop] = tween.now;
            }
        }
    }
};
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
    set: function (tween) {
        if (tween.elem.nodeType && tween.elem.parentNode) {
            tween.elem[tween.prop] = tween.now;
        }
    }
};
jQuery.easing = {
    linear: function (p) {
        return p;
    },
    swing: function (p) {
        return 0.5 - Math.cos(p * Math.PI) / 2;
    },
    _default: 'swing'
};
jQuery.fx = Tween.prototype.init;
jQuery.fx.step = {};
rfxtypes = /^(?:toggle|show|hide)$/;
rrun = /queueHooks$/;
jQuery.Animation = jQuery.extend(Animation, {
    tweeners: {
        '*': [function (prop, value) {
                var tween = this.createTween(prop, value);
                adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
                return tween;
            }]
    },
    tweener: function (props, callback) {
        if (jQuery.isFunction(props)) {
            callback = props;
            props = ['*'];
        } else {
            props = props.match(rnothtmlwhite);
        }
        var prop, index = 0, length = props.length;
        for (; index < length; index++) {
            prop = props[index];
            Animation.tweeners[prop] = Animation.tweeners[prop] || [];
            Animation.tweeners[prop].unshift(callback);
        }
    },
    prefilters: [defaultPrefilter],
    prefilter: function (callback, prepend) {
        if (prepend) {
            Animation.prefilters.unshift(callback);
        } else {
            Animation.prefilters.push(callback);
        }
    }
});
jQuery.speed = function (speed, easing, fn) {
    var opt = speed && typeof speed === 'object' ? jQuery.extend({}, speed) : {
        complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
        duration: speed,
        easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
    };
    if (jQuery.fx.off) {
        opt.duration = 0;
    } else {
        if (typeof opt.duration !== 'number') {
            if (opt.duration in jQuery.fx.speeds) {
                opt.duration = jQuery.fx.speeds[opt.duration];
            } else {
                opt.duration = jQuery.fx.speeds._default;
            }
        }
    }
    if (opt.queue == null || opt.queue === true) {
        opt.queue = 'fx';
    }
    opt.old = opt.complete;
    opt.complete = function () {
        if (jQuery.isFunction(opt.old)) {
            opt.old.call(this);
        }
        if (opt.queue) {
            jQuery.dequeue(this, opt.queue);
        }
    };
    return opt;
};
jQuery.fn.extend({
    fadeTo: function (speed, to, easing, callback) {
        return this.filter(isHiddenWithinTree).css('opacity', 0).show().end().animate({
            opacity: to
        }, speed, easing, callback);
    },
    animate: function (prop, speed, easing, callback) {
        var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function () {
                var anim = Animation(this, jQuery.extend({}, prop), optall);
                if (empty || dataPriv.get(this, 'finish')) {
                    anim.stop(true);
                }
            };
        doAnimation.finish = doAnimation;
        return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
    },
    stop: function (type, clearQueue, gotoEnd) {
        var stopQueue = function (hooks) {
            var stop = hooks.stop;
            delete hooks.stop;
            stop(gotoEnd);
        };
        if (typeof type !== 'string') {
            gotoEnd = clearQueue;
            clearQueue = type;
            type = undefined;
        }
        if (clearQueue && type !== false) {
            this.queue(type || 'fx', []);
        }
        return this.each(function () {
            var dequeue = true, index = type != null && type + 'queueHooks', timers = jQuery.timers, data = dataPriv.get(this);
            if (index) {
                if (data[index] && data[index].stop) {
                    stopQueue(data[index]);
                }
            } else {
                for (index in data) {
                    if (data[index] && data[index].stop && rrun.test(index)) {
                        stopQueue(data[index]);
                    }
                }
            }
            for (index = timers.length; index--;) {
                if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                    timers[index].anim.stop(gotoEnd);
                    dequeue = false;
                    timers.splice(index, 1);
                }
            }
            if (dequeue || !gotoEnd) {
                jQuery.dequeue(this, type);
            }
        });
    },
    finish: function (type) {
        if (type !== false) {
            type = type || 'fx';
        }
        return this.each(function () {
            var index, data = dataPriv.get(this), queue = data[type + 'queue'], hooks = data[type + 'queueHooks'], timers = jQuery.timers, length = queue ? queue.length : 0;
            data.finish = true;
            jQuery.queue(this, type, []);
            if (hooks && hooks.stop) {
                hooks.stop.call(this, true);
            }
            for (index = timers.length; index--;) {
                if (timers[index].elem === this && timers[index].queue === type) {
                    timers[index].anim.stop(true);
                    timers.splice(index, 1);
                }
            }
            for (index = 0; index < length; index++) {
                if (queue[index] && queue[index].finish) {
                    queue[index].finish.call(this);
                }
            }
            delete data.finish;
        });
    }
});
jQuery.each([
    'toggle',
    'show',
    'hide'
], function (i, name) {
    var cssFn = jQuery.fn[name];
    jQuery.fn[name] = function (speed, easing, callback) {
        return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
    };
});
jQuery.each({
    slideDown: genFx('show'),
    slideUp: genFx('hide'),
    slideToggle: genFx('toggle'),
    fadeIn: {
        opacity: 'show'
    },
    fadeOut: {
        opacity: 'hide'
    },
    fadeToggle: {
        opacity: 'toggle'
    }
}, function (name, props) {
    jQuery.fn[name] = function (speed, easing, callback) {
        return this.animate(props, speed, easing, callback);
    };
});
jQuery.timers = [];
jQuery.fx.tick = function () {
    var timer, i = 0, timers = jQuery.timers;
    fxNow = jQuery.now();
    for (; i < timers.length; i++) {
        timer = timers[i];
        if (!timer() && timers[i] === timer) {
            timers.splice(i--, 1);
        }
    }
    if (!timers.length) {
        jQuery.fx.stop();
    }
    fxNow = undefined;
};
jQuery.fx.timer = function (timer) {
    jQuery.timers.push(timer);
    jQuery.fx.start();
};
jQuery.fx.interval = 13;
jQuery.fx.start = function () {
    if (inProgress) {
        return;
    }
    inProgress = true;
    schedule();
};
jQuery.fx.stop = function () {
    inProgress = null;
};
jQuery.fx.speeds = {
    slow: 600,
    fast: 200,
    _default: 400
};
jQuery.fn.delay = function (time, type) {
    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
    type = type || 'fx';
    return this.queue(type, function (next, hooks) {
        var timeout = window.setTimeout(next, time);
        hooks.stop = function () {
            window.clearTimeout(timeout);
        };
    });
};
(function () {
    var input = document.createElement('input'), select = document.createElement('select'), opt = select.appendChild(document.createElement('option'));
    input.type = 'checkbox';
    support.checkOn = input.value !== '';
    support.optSelected = opt.selected;
    input = document.createElement('input');
    input.value = 't';
    input.type = 'radio';
    support.radioValue = input.value === 't';
}());
attrHandle = jQuery.expr.attrHandle;
jQuery.fn.extend({
    attr: function (name, value) {
        return access(this, jQuery.attr, name, value, arguments.length > 1);
    },
    removeAttr: function (name) {
        return this.each(function () {
            jQuery.removeAttr(this, name);
        });
    }
});
jQuery.extend({
    attr: function (elem, name, value) {
        var ret, hooks, nType = elem.nodeType;
        if (nType === 3 || nType === 8 || nType === 2) {
            return;
        }
        if (typeof elem.getAttribute === 'undefined') {
            return jQuery.prop(elem, name, value);
        }
        if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
            hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
        }
        if (value !== undefined) {
            if (value === null) {
                jQuery.removeAttr(elem, name);
                return;
            }
            if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
                return ret;
            }
            elem.setAttribute(name, value + '');
            return value;
        }
        if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
            return ret;
        }
        ret = jQuery.find.attr(elem, name);
        return ret == null ? undefined : ret;
    },
    attrHooks: {
        type: {
            set: function (elem, value) {
                if (!support.radioValue && value === 'radio' && nodeName(elem, 'input')) {
                    var val = elem.value;
                    elem.setAttribute('type', value);
                    if (val) {
                        elem.value = val;
                    }
                    return value;
                }
            }
        }
    },
    removeAttr: function (elem, value) {
        var name, i = 0, attrNames = value && value.match(rnothtmlwhite);
        if (attrNames && elem.nodeType === 1) {
            while (name = attrNames[i++]) {
                elem.removeAttribute(name);
            }
        }
    }
});
boolHook = {
    set: function (elem, value, name) {
        if (value === false) {
            jQuery.removeAttr(elem, name);
        } else {
            elem.setAttribute(name, name);
        }
        return name;
    }
};
jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
    var getter = attrHandle[name] || jQuery.find.attr;
    attrHandle[name] = function (elem, name, isXML) {
        var ret, handle, lowercaseName = name.toLowerCase();
        if (!isXML) {
            handle = attrHandle[lowercaseName];
            attrHandle[lowercaseName] = ret;
            ret = getter(elem, name, isXML) != null ? lowercaseName : null;
            attrHandle[lowercaseName] = handle;
        }
        return ret;
    };
});
rfocusable = /^(?:input|select|textarea|button)$/i;
rclickable = /^(?:a|area)$/i;
jQuery.fn.extend({
    prop: function (name, value) {
        return access(this, jQuery.prop, name, value, arguments.length > 1);
    },
    removeProp: function (name) {
        return this.each(function () {
            delete this[jQuery.propFix[name] || name];
        });
    }
});
jQuery.extend({
    prop: function (elem, name, value) {
        var ret, hooks, nType = elem.nodeType;
        if (nType === 3 || nType === 8 || nType === 2) {
            return;
        }
        if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
            name = jQuery.propFix[name] || name;
            hooks = jQuery.propHooks[name];
        }
        if (value !== undefined) {
            if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
                return ret;
            }
            return elem[name] = value;
        }
        if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
            return ret;
        }
        return elem[name];
    },
    propHooks: {
        tabIndex: {
            get: function (elem) {
                var tabindex = jQuery.find.attr(elem, 'tabindex');
                if (tabindex) {
                    return parseInt(tabindex, 10);
                }
                if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
                    return 0;
                }
                return -1;
            }
        }
    },
    propFix: {
        'for': 'htmlFor',
        'class': 'className'
    }
});
if (!support.optSelected) {
    jQuery.propHooks.selected = {
        get: function (elem) {
            var parent = elem.parentNode;
            if (parent && parent.parentNode) {
                parent.parentNode.selectedIndex;
            }
            return null;
        },
        set: function (elem) {
            var parent = elem.parentNode;
            if (parent) {
                parent.selectedIndex;
                if (parent.parentNode) {
                    parent.parentNode.selectedIndex;
                }
            }
        }
    };
}
jQuery.each([
    'tabIndex',
    'readOnly',
    'maxLength',
    'cellSpacing',
    'cellPadding',
    'rowSpan',
    'colSpan',
    'useMap',
    'frameBorder',
    'contentEditable'
], function () {
    jQuery.propFix[this.toLowerCase()] = this;
});
jQuery.fn.extend({
    addClass: function (value) {
        var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
        if (jQuery.isFunction(value)) {
            return this.each(function (j) {
                jQuery(this).addClass(value.call(this, j, getClass(this)));
            });
        }
        if (typeof value === 'string' && value) {
            classes = value.match(rnothtmlwhite) || [];
            while (elem = this[i++]) {
                curValue = getClass(elem);
                cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';
                if (cur) {
                    j = 0;
                    while (clazz = classes[j++]) {
                        if (cur.indexOf(' ' + clazz + ' ') < 0) {
                            cur += clazz + ' ';
                        }
                    }
                    finalValue = stripAndCollapse(cur);
                    if (curValue !== finalValue) {
                        elem.setAttribute('class', finalValue);
                    }
                }
            }
        }
        return this;
    },
    removeClass: function (value) {
        var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
        if (jQuery.isFunction(value)) {
            return this.each(function (j) {
                jQuery(this).removeClass(value.call(this, j, getClass(this)));
            });
        }
        if (!arguments.length) {
            return this.attr('class', '');
        }
        if (typeof value === 'string' && value) {
            classes = value.match(rnothtmlwhite) || [];
            while (elem = this[i++]) {
                curValue = getClass(elem);
                cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';
                if (cur) {
                    j = 0;
                    while (clazz = classes[j++]) {
                        while (cur.indexOf(' ' + clazz + ' ') > -1) {
                            cur = cur.replace(' ' + clazz + ' ', ' ');
                        }
                    }
                    finalValue = stripAndCollapse(cur);
                    if (curValue !== finalValue) {
                        elem.setAttribute('class', finalValue);
                    }
                }
            }
        }
        return this;
    },
    toggleClass: function (value, stateVal) {
        var type = typeof value;
        if (typeof stateVal === 'boolean' && type === 'string') {
            return stateVal ? this.addClass(value) : this.removeClass(value);
        }
        if (jQuery.isFunction(value)) {
            return this.each(function (i) {
                jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
            });
        }
        return this.each(function () {
            var className, i, self, classNames;
            if (type === 'string') {
                i = 0;
                self = jQuery(this);
                classNames = value.match(rnothtmlwhite) || [];
                while (className = classNames[i++]) {
                    if (self.hasClass(className)) {
                        self.removeClass(className);
                    } else {
                        self.addClass(className);
                    }
                }
            } else if (value === undefined || type === 'boolean') {
                className = getClass(this);
                if (className) {
                    dataPriv.set(this, '__className__', className);
                }
                if (this.setAttribute) {
                    this.setAttribute('class', className || value === false ? '' : dataPriv.get(this, '__className__') || '');
                }
            }
        });
    },
    hasClass: function (selector) {
        var className, elem, i = 0;
        className = ' ' + selector + ' ';
        while (elem = this[i++]) {
            if (elem.nodeType === 1 && (' ' + stripAndCollapse(getClass(elem)) + ' ').indexOf(className) > -1) {
                return true;
            }
        }
        return false;
    }
});
rreturn = /\r/g;
jQuery.fn.extend({
    val: function (value) {
        var hooks, ret, isFunction, elem = this[0];
        if (!arguments.length) {
            if (elem) {
                hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
                if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {
                    return ret;
                }
                ret = elem.value;
                if (typeof ret === 'string') {
                    return ret.replace(rreturn, '');
                }
                return ret == null ? '' : ret;
            }
            return;
        }
        isFunction = jQuery.isFunction(value);
        return this.each(function (i) {
            var val;
            if (this.nodeType !== 1) {
                return;
            }
            if (isFunction) {
                val = value.call(this, i, jQuery(this).val());
            } else {
                val = value;
            }
            if (val == null) {
                val = '';
            } else if (typeof val === 'number') {
                val += '';
            } else if (Array.isArray(val)) {
                val = jQuery.map(val, function (value) {
                    return value == null ? '' : value + '';
                });
            }
            hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
            if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {
                this.value = val;
            }
        });
    }
});
jQuery.extend({
    valHooks: {
        option: {
            get: function (elem) {
                var val = jQuery.find.attr(elem, 'value');
                return val != null ? val : stripAndCollapse(jQuery.text(elem));
            }
        },
        select: {
            get: function (elem) {
                var value, option, i, options = elem.options, index = elem.selectedIndex, one = elem.type === 'select-one', values = one ? null : [], max = one ? index + 1 : options.length;
                if (index < 0) {
                    i = max;
                } else {
                    i = one ? index : 0;
                }
                for (; i < max; i++) {
                    option = options[i];
                    if ((option.selected || i === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, 'optgroup'))) {
                        value = jQuery(option).val();
                        if (one) {
                            return value;
                        }
                        values.push(value);
                    }
                }
                return values;
            },
            set: function (elem, value) {
                var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;
                while (i--) {
                    option = options[i];
                    if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
                        optionSet = true;
                    }
                }
                if (!optionSet) {
                    elem.selectedIndex = -1;
                }
                return values;
            }
        }
    }
});
jQuery.each([
    'radio',
    'checkbox'
], function () {
    jQuery.valHooks[this] = {
        set: function (elem, value) {
            if (Array.isArray(value)) {
                return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
            }
        }
    };
    if (!support.checkOn) {
        jQuery.valHooks[this].get = function (elem) {
            return elem.getAttribute('value') === null ? 'on' : elem.value;
        };
    }
});
rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
jQuery.extend(jQuery.event, {
    trigger: function (event, data, elem, onlyHandlers) {
        var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document], type = hasOwn.call(event, 'type') ? event.type : event, namespaces = hasOwn.call(event, 'namespace') ? event.namespace.split('.') : [];
        cur = tmp = elem = elem || document;
        if (elem.nodeType === 3 || elem.nodeType === 8) {
            return;
        }
        if (rfocusMorph.test(type + jQuery.event.triggered)) {
            return;
        }
        if (type.indexOf('.') > -1) {
            namespaces = type.split('.');
            type = namespaces.shift();
            namespaces.sort();
        }
        ontype = type.indexOf(':') < 0 && 'on' + type;
        event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event);
        event.isTrigger = onlyHandlers ? 2 : 3;
        event.namespace = namespaces.join('.');
        event.rnamespace = event.namespace ? new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)') : null;
        event.result = undefined;
        if (!event.target) {
            event.target = elem;
        }
        data = data == null ? [event] : jQuery.makeArray(data, [event]);
        special = jQuery.event.special[type] || {};
        if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
            return;
        }
        if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
            bubbleType = special.delegateType || type;
            if (!rfocusMorph.test(bubbleType + type)) {
                cur = cur.parentNode;
            }
            for (; cur; cur = cur.parentNode) {
                eventPath.push(cur);
                tmp = cur;
            }
            if (tmp === (elem.ownerDocument || document)) {
                eventPath.push(tmp.defaultView || tmp.parentWindow || window);
            }
        }
        i = 0;
        while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
            event.type = i > 1 ? bubbleType : special.bindType || type;
            handle = (dataPriv.get(cur, 'events') || {})[event.type] && dataPriv.get(cur, 'handle');
            if (handle) {
                handle.apply(cur, data);
            }
            handle = ontype && cur[ontype];
            if (handle && handle.apply && acceptData(cur)) {
                event.result = handle.apply(cur, data);
                if (event.result === false) {
                    event.preventDefault();
                }
            }
        }
        event.type = type;
        if (!onlyHandlers && !event.isDefaultPrevented()) {
            if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
                if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
                    tmp = elem[ontype];
                    if (tmp) {
                        elem[ontype] = null;
                    }
                    jQuery.event.triggered = type;
                    elem[type]();
                    jQuery.event.triggered = undefined;
                    if (tmp) {
                        elem[ontype] = tmp;
                    }
                }
            }
        }
        return event.result;
    },
    simulate: function (type, elem, event) {
        var e = jQuery.extend(new jQuery.Event(), event, {
            type: type,
            isSimulated: true
        });
        jQuery.event.trigger(e, null, elem);
    }
});
jQuery.fn.extend({
    trigger: function (type, data) {
        return this.each(function () {
            jQuery.event.trigger(type, data, this);
        });
    },
    triggerHandler: function (type, data) {
        var elem = this[0];
        if (elem) {
            return jQuery.event.trigger(type, data, elem, true);
        }
    }
});
jQuery.each(('blur focus focusin focusout resize scroll click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup contextmenu').split(' '), function (i, name) {
    jQuery.fn[name] = function (data, fn) {
        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
    };
});
jQuery.fn.extend({
    hover: function (fnOver, fnOut) {
        return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    }
});
support.focusin = 'onfocusin' in window;
if (!support.focusin) {
    jQuery.each({
        focus: 'focusin',
        blur: 'focusout'
    }, function (orig, fix) {
        var handler = function (event) {
            jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
        };
        jQuery.event.special[fix] = {
            setup: function () {
                var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix);
                if (!attaches) {
                    doc.addEventListener(orig, handler, true);
                }
                dataPriv.access(doc, fix, (attaches || 0) + 1);
            },
            teardown: function () {
                var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix) - 1;
                if (!attaches) {
                    doc.removeEventListener(orig, handler, true);
                    dataPriv.remove(doc, fix);
                } else {
                    dataPriv.access(doc, fix, attaches);
                }
            }
        };
    });
}
location = window.location;
nonce = jQuery.now();
rquery = /\?/;
jQuery.parseXML = function (data) {
    var xml;
    if (!data || typeof data !== 'string') {
        return null;
    }
    try {
        xml = new window.DOMParser().parseFromString(data, 'text/xml');
    } catch (e) {
        xml = undefined;
    }
    if (!xml || xml.getElementsByTagName('parsererror').length) {
        jQuery.error('Invalid XML: ' + data);
    }
    return xml;
};
rbracket = /\[\]$/;
rCRLF = /\r?\n/g;
rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i;
rsubmittable = /^(?:input|select|textarea|keygen)/i;
jQuery.param = function (a, traditional) {
    var prefix, s = [], add = function (key, valueOrFunction) {
            var value = jQuery.isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
            s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value == null ? '' : value);
        };
    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
        jQuery.each(a, function () {
            add(this.name, this.value);
        });
    } else {
        for (prefix in a) {
            buildParams(prefix, a[prefix], traditional, add);
        }
    }
    return s.join('&');
};
jQuery.fn.extend({
    serialize: function () {
        return jQuery.param(this.serializeArray());
    },
    serializeArray: function () {
        return this.map(function () {
            var elements = jQuery.prop(this, 'elements');
            return elements ? jQuery.makeArray(elements) : this;
        }).filter(function () {
            var type = this.type;
            return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
        }).map(function (i, elem) {
            var val = jQuery(this).val();
            if (val == null) {
                return null;
            }
            if (Array.isArray(val)) {
                return jQuery.map(val, function (val) {
                    return {
                        name: elem.name,
                        value: val.replace(rCRLF, '\r\n')
                    };
                });
            }
            return {
                name: elem.name,
                value: val.replace(rCRLF, '\r\n')
            };
        }).get();
    }
});
r20 = /%20/g;
rhash = /#.*$/;
rantiCache = /([?&])_=[^&]*/;
rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm;
rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/;
rnoContent = /^(?:GET|HEAD)$/;
rprotocol = /^\/\//;
prefilters = {};
transports = {};
allTypes = '*/'.concat('*');
originAnchor = document.createElement('a');
originAnchor.href = location.href;
jQuery.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
        url: location.href,
        type: 'GET',
        isLocal: rlocalProtocol.test(location.protocol),
        global: true,
        processData: true,
        async: true,
        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
        accepts: {
            '*': allTypes,
            text: 'text/plain',
            html: 'text/html',
            xml: 'application/xml, text/xml',
            json: 'application/json, text/javascript'
        },
        contents: {
            xml: /\bxml\b/,
            html: /\bhtml/,
            json: /\bjson\b/
        },
        responseFields: {
            xml: 'responseXML',
            text: 'responseText',
            json: 'responseJSON'
        },
        converters: {
            '* text': String,
            'text html': true,
            'text json': JSON.parse,
            'text xml': jQuery.parseXML
        },
        flatOptions: {
            url: true,
            context: true
        }
    },
    ajaxSetup: function (target, settings) {
        return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
    },
    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
    ajaxTransport: addToPrefiltersOrTransports(transports),
    ajax: function (url, options) {
        if (typeof url === 'object') {
            options = url;
            url = undefined;
        }
        options = options || {};
        var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, completed, fireGlobals, i, uncached, s = jQuery.ajaxSetup({}, options), callbackContext = s.context || s, globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event, deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks('once memory'), statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, strAbort = 'canceled', jqXHR = {
                readyState: 0,
                getResponseHeader: function (key) {
                    var match;
                    if (completed) {
                        if (!responseHeaders) {
                            responseHeaders = {};
                            while (match = rheaders.exec(responseHeadersString)) {
                                responseHeaders[match[1].toLowerCase()] = match[2];
                            }
                        }
                        match = responseHeaders[key.toLowerCase()];
                    }
                    return match == null ? null : match;
                },
                getAllResponseHeaders: function () {
                    return completed ? responseHeadersString : null;
                },
                setRequestHeader: function (name, value) {
                    if (completed == null) {
                        name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
                        requestHeaders[name] = value;
                    }
                    return this;
                },
                overrideMimeType: function (type) {
                    if (completed == null) {
                        s.mimeType = type;
                    }
                    return this;
                },
                statusCode: function (map) {
                    var code;
                    if (map) {
                        if (completed) {
                            jqXHR.always(map[jqXHR.status]);
                        } else {
                            for (code in map) {
                                statusCode[code] = [
                                    statusCode[code],
                                    map[code]
                                ];
                            }
                        }
                    }
                    return this;
                },
                abort: function (statusText) {
                    var finalText = statusText || strAbort;
                    if (transport) {
                        transport.abort(finalText);
                    }
                    done(0, finalText);
                    return this;
                }
            };
        deferred.promise(jqXHR);
        s.url = ((url || s.url || location.href) + '').replace(rprotocol, location.protocol + '//');
        s.type = options.method || options.type || s.method || s.type;
        s.dataTypes = (s.dataType || '*').toLowerCase().match(rnothtmlwhite) || [''];
        if (s.crossDomain == null) {
            urlAnchor = document.createElement('a');
            try {
                urlAnchor.href = s.url;
                urlAnchor.href = urlAnchor.href;
                s.crossDomain = originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host;
            } catch (e) {
                s.crossDomain = true;
            }
        }
        if (s.data && s.processData && typeof s.data !== 'string') {
            s.data = jQuery.param(s.data, s.traditional);
        }
        inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
        if (completed) {
            return jqXHR;
        }
        fireGlobals = jQuery.event && s.global;
        if (fireGlobals && jQuery.active++ === 0) {
            jQuery.event.trigger('ajaxStart');
        }
        s.type = s.type.toUpperCase();
        s.hasContent = !rnoContent.test(s.type);
        cacheURL = s.url.replace(rhash, '');
        if (!s.hasContent) {
            uncached = s.url.slice(cacheURL.length);
            if (s.data) {
                cacheURL += (rquery.test(cacheURL) ? '&' : '?') + s.data;
                delete s.data;
            }
            if (s.cache === false) {
                cacheURL = cacheURL.replace(rantiCache, '$1');
                uncached = (rquery.test(cacheURL) ? '&' : '?') + '_=' + nonce++ + uncached;
            }
            s.url = cacheURL + uncached;
        } else if (s.data && s.processData && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0) {
            s.data = s.data.replace(r20, '+');
        }
        if (s.ifModified) {
            if (jQuery.lastModified[cacheURL]) {
                jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL]);
            }
            if (jQuery.etag[cacheURL]) {
                jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);
            }
        }
        if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
            jqXHR.setRequestHeader('Content-Type', s.contentType);
        }
        jqXHR.setRequestHeader('Accept', s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '') : s.accepts['*']);
        for (i in s.headers) {
            jqXHR.setRequestHeader(i, s.headers[i]);
        }
        if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {
            return jqXHR.abort();
        }
        strAbort = 'abort';
        completeDeferred.add(s.complete);
        jqXHR.done(s.success);
        jqXHR.fail(s.error);
        transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
        if (!transport) {
            done(-1, 'No Transport');
        } else {
            jqXHR.readyState = 1;
            if (fireGlobals) {
                globalEventContext.trigger('ajaxSend', [
                    jqXHR,
                    s
                ]);
            }
            if (completed) {
                return jqXHR;
            }
            if (s.async && s.timeout > 0) {
                timeoutTimer = window.setTimeout(function () {
                    jqXHR.abort('timeout');
                }, s.timeout);
            }
            try {
                completed = false;
                transport.send(requestHeaders, done);
            } catch (e) {
                if (completed) {
                    throw e;
                }
                done(-1, e);
            }
        }
        function done(status, nativeStatusText, responses, headers) {
            var isSuccess, success, error, response, modified, statusText = nativeStatusText;
            if (completed) {
                return;
            }
            completed = true;
            if (timeoutTimer) {
                window.clearTimeout(timeoutTimer);
            }
            transport = undefined;
            responseHeadersString = headers || '';
            jqXHR.readyState = status > 0 ? 4 : 0;
            isSuccess = status >= 200 && status < 300 || status === 304;
            if (responses) {
                response = ajaxHandleResponses(s, jqXHR, responses);
            }
            response = ajaxConvert(s, response, jqXHR, isSuccess);
            if (isSuccess) {
                if (s.ifModified) {
                    modified = jqXHR.getResponseHeader('Last-Modified');
                    if (modified) {
                        jQuery.lastModified[cacheURL] = modified;
                    }
                    modified = jqXHR.getResponseHeader('etag');
                    if (modified) {
                        jQuery.etag[cacheURL] = modified;
                    }
                }
                if (status === 204 || s.type === 'HEAD') {
                    statusText = 'nocontent';
                } else if (status === 304) {
                    statusText = 'notmodified';
                } else {
                    statusText = response.state;
                    success = response.data;
                    error = response.error;
                    isSuccess = !error;
                }
            } else {
                error = statusText;
                if (status || !statusText) {
                    statusText = 'error';
                    if (status < 0) {
                        status = 0;
                    }
                }
            }
            jqXHR.status = status;
            jqXHR.statusText = (nativeStatusText || statusText) + '';
            if (isSuccess) {
                deferred.resolveWith(callbackContext, [
                    success,
                    statusText,
                    jqXHR
                ]);
            } else {
                deferred.rejectWith(callbackContext, [
                    jqXHR,
                    statusText,
                    error
                ]);
            }
            jqXHR.statusCode(statusCode);
            statusCode = undefined;
            if (fireGlobals) {
                globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [
                    jqXHR,
                    s,
                    isSuccess ? success : error
                ]);
            }
            completeDeferred.fireWith(callbackContext, [
                jqXHR,
                statusText
            ]);
            if (fireGlobals) {
                globalEventContext.trigger('ajaxComplete', [
                    jqXHR,
                    s
                ]);
                if (!--jQuery.active) {
                    jQuery.event.trigger('ajaxStop');
                }
            }
        }
        return jqXHR;
    },
    getJSON: function (url, data, callback) {
        return jQuery.get(url, data, callback, 'json');
    },
    getScript: function (url, callback) {
        return jQuery.get(url, undefined, callback, 'script');
    }
});
jQuery.each([
    'get',
    'post'
], function (i, method) {
    jQuery[method] = function (url, data, callback, type) {
        if (jQuery.isFunction(data)) {
            type = type || callback;
            callback = data;
            data = undefined;
        }
        return jQuery.ajax(jQuery.extend({
            url: url,
            type: method,
            dataType: type,
            data: data,
            success: callback
        }, jQuery.isPlainObject(url) && url));
    };
});
jQuery._evalUrl = function (url) {
    return jQuery.ajax({
        url: url,
        type: 'GET',
        dataType: 'script',
        cache: true,
        async: false,
        global: false,
        'throws': true
    });
};
jQuery.fn.extend({
    wrapAll: function (html) {
        var wrap;
        if (this[0]) {
            if (jQuery.isFunction(html)) {
                html = html.call(this[0]);
            }
            wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
            if (this[0].parentNode) {
                wrap.insertBefore(this[0]);
            }
            wrap.map(function () {
                var elem = this;
                while (elem.firstElementChild) {
                    elem = elem.firstElementChild;
                }
                return elem;
            }).append(this);
        }
        return this;
    },
    wrapInner: function (html) {
        if (jQuery.isFunction(html)) {
            return this.each(function (i) {
                jQuery(this).wrapInner(html.call(this, i));
            });
        }
        return this.each(function () {
            var self = jQuery(this), contents = self.contents();
            if (contents.length) {
                contents.wrapAll(html);
            } else {
                self.append(html);
            }
        });
    },
    wrap: function (html) {
        var isFunction = jQuery.isFunction(html);
        return this.each(function (i) {
            jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
        });
    },
    unwrap: function (selector) {
        this.parent(selector).not('body').each(function () {
            jQuery(this).replaceWith(this.childNodes);
        });
        return this;
    }
});
jQuery.expr.pseudos.hidden = function (elem) {
    return !jQuery.expr.pseudos.visible(elem);
};
jQuery.expr.pseudos.visible = function (elem) {
    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
};
jQuery.ajaxSettings.xhr = function () {
    try {
        return new window.XMLHttpRequest();
    } catch (e) {
    }
};
xhrSuccessStatus = {
    0: 200,
    1223: 204
};
xhrSupported = jQuery.ajaxSettings.xhr();
support.cors = !!xhrSupported && 'withCredentials' in xhrSupported;
support.ajax = xhrSupported = !!xhrSupported;
jQuery.ajaxTransport(function (options) {
    var callback, errorCallback;
    if (support.cors || xhrSupported && !options.crossDomain) {
        return {
            send: function (headers, complete) {
                var i, xhr = options.xhr();
                xhr.open(options.type, options.url, options.async, options.username, options.password);
                if (options.xhrFields) {
                    for (i in options.xhrFields) {
                        xhr[i] = options.xhrFields[i];
                    }
                }
                if (options.mimeType && xhr.overrideMimeType) {
                    xhr.overrideMimeType(options.mimeType);
                }
                if (!options.crossDomain && !headers['X-Requested-With']) {
                    headers['X-Requested-With'] = 'XMLHttpRequest';
                }
                for (i in headers) {
                    xhr.setRequestHeader(i, headers[i]);
                }
                callback = function (type) {
                    return function () {
                        if (callback) {
                            callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;
                            if (type === 'abort') {
                                xhr.abort();
                            } else if (type === 'error') {
                                if (typeof xhr.status !== 'number') {
                                    complete(0, 'error');
                                } else {
                                    complete(xhr.status, xhr.statusText);
                                }
                            } else {
                                complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || 'text') !== 'text' || typeof xhr.responseText !== 'string' ? {
                                    binary: xhr.response
                                } : {
                                    text: xhr.responseText
                                }, xhr.getAllResponseHeaders());
                            }
                        }
                    };
                };
                xhr.onload = callback();
                errorCallback = xhr.onerror = callback('error');
                if (xhr.onabort !== undefined) {
                    xhr.onabort = errorCallback;
                } else {
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            window.setTimeout(function () {
                                if (callback) {
                                    errorCallback();
                                }
                            });
                        }
                    };
                }
                callback = callback('abort');
                try {
                    xhr.send(options.hasContent && options.data || null);
                } catch (e) {
                    if (callback) {
                        throw e;
                    }
                }
            },
            abort: function () {
                if (callback) {
                    callback();
                }
            }
        };
    }
});
jQuery.ajaxPrefilter(function (s) {
    if (s.crossDomain) {
        s.contents.script = false;
    }
});
jQuery.ajaxSetup({
    accepts: {
        script: 'text/javascript, application/javascript, ' + 'application/ecmascript, application/x-ecmascript'
    },
    contents: {
        script: /\b(?:java|ecma)script\b/
    },
    converters: {
        'text script': function (text) {
            jQuery.globalEval(text);
            return text;
        }
    }
});
jQuery.ajaxPrefilter('script', function (s) {
    if (s.cache === undefined) {
        s.cache = false;
    }
    if (s.crossDomain) {
        s.type = 'GET';
    }
});
jQuery.ajaxTransport('script', function (s) {
    if (s.crossDomain) {
        var script, callback;
        return {
            send: function (_, complete) {
                script = jQuery('<script>').prop({
                    charset: s.scriptCharset,
                    src: s.url
                }).on('load error', callback = function (evt) {
                    script.remove();
                    callback = null;
                    if (evt) {
                        complete(evt.type === 'error' ? 404 : 200, evt.type);
                    }
                });
                document.head.appendChild(script[0]);
            },
            abort: function () {
                if (callback) {
                    callback();
                }
            }
        };
    }
});
oldCallbacks = [];
rjsonp = /(=)\?(?=&|$)|\?\?/;
jQuery.ajaxSetup({
    jsonp: 'callback',
    jsonpCallback: function () {
        var callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce++;
        this[callback] = true;
        return callback;
    }
});
jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {
    var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? 'url' : typeof s.data === 'string' && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && rjsonp.test(s.data) && 'data');
    if (jsonProp || s.dataTypes[0] === 'jsonp') {
        callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
        if (jsonProp) {
            s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);
        } else if (s.jsonp !== false) {
            s.url += (rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;
        }
        s.converters['script json'] = function () {
            if (!responseContainer) {
                jQuery.error(callbackName + ' was not called');
            }
            return responseContainer[0];
        };
        s.dataTypes[0] = 'json';
        overwritten = window[callbackName];
        window[callbackName] = function () {
            responseContainer = arguments;
        };
        jqXHR.always(function () {
            if (overwritten === undefined) {
                jQuery(window).removeProp(callbackName);
            } else {
                window[callbackName] = overwritten;
            }
            if (s[callbackName]) {
                s.jsonpCallback = originalSettings.jsonpCallback;
                oldCallbacks.push(callbackName);
            }
            if (responseContainer && jQuery.isFunction(overwritten)) {
                overwritten(responseContainer[0]);
            }
            responseContainer = overwritten = undefined;
        });
        return 'script';
    }
});
support.createHTMLDocument = function () {
    var body = document.implementation.createHTMLDocument('').body;
    body.innerHTML = '<form></form><form></form>';
    return body.childNodes.length === 2;
}();
jQuery.parseHTML = function (data, context, keepScripts) {
    if (typeof data !== 'string') {
        return [];
    }
    if (typeof context === 'boolean') {
        keepScripts = context;
        context = false;
    }
    var base, parsed, scripts;
    if (!context) {
        if (support.createHTMLDocument) {
            context = document.implementation.createHTMLDocument('');
            base = context.createElement('base');
            base.href = document.location.href;
            context.head.appendChild(base);
        } else {
            context = document;
        }
    }
    parsed = rsingleTag.exec(data);
    scripts = !keepScripts && [];
    if (parsed) {
        return [context.createElement(parsed[1])];
    }
    parsed = buildFragment([data], context, scripts);
    if (scripts && scripts.length) {
        jQuery(scripts).remove();
    }
    return jQuery.merge([], parsed.childNodes);
};
jQuery.fn.load = function (url, params, callback) {
    var selector, type, response, self = this, off = url.indexOf(' ');
    if (off > -1) {
        selector = stripAndCollapse(url.slice(off));
        url = url.slice(0, off);
    }
    if (jQuery.isFunction(params)) {
        callback = params;
        params = undefined;
    } else if (params && typeof params === 'object') {
        type = 'POST';
    }
    if (self.length > 0) {
        jQuery.ajax({
            url: url,
            type: type || 'GET',
            dataType: 'html',
            data: params
        }).done(function (responseText) {
            response = arguments;
            self.html(selector ? jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : responseText);
        }).always(callback && function (jqXHR, status) {
            self.each(function () {
                callback.apply(this, response || [
                    jqXHR.responseText,
                    status,
                    jqXHR
                ]);
            });
        });
    }
    return this;
};
jQuery.each([
    'ajaxStart',
    'ajaxStop',
    'ajaxComplete',
    'ajaxError',
    'ajaxSuccess',
    'ajaxSend'
], function (i, type) {
    jQuery.fn[type] = function (fn) {
        return this.on(type, fn);
    };
});
jQuery.expr.pseudos.animated = function (elem) {
    return jQuery.grep(jQuery.timers, function (fn) {
        return elem === fn.elem;
    }).length;
};
jQuery.offset = {
    setOffset: function (elem, options, i) {
        var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, 'position'), curElem = jQuery(elem), props = {};
        if (position === 'static') {
            elem.style.position = 'relative';
        }
        curOffset = curElem.offset();
        curCSSTop = jQuery.css(elem, 'top');
        curCSSLeft = jQuery.css(elem, 'left');
        calculatePosition = (position === 'absolute' || position === 'fixed') && (curCSSTop + curCSSLeft).indexOf('auto') > -1;
        if (calculatePosition) {
            curPosition = curElem.position();
            curTop = curPosition.top;
            curLeft = curPosition.left;
        } else {
            curTop = parseFloat(curCSSTop) || 0;
            curLeft = parseFloat(curCSSLeft) || 0;
        }
        if (jQuery.isFunction(options)) {
            options = options.call(elem, i, jQuery.extend({}, curOffset));
        }
        if (options.top != null) {
            props.top = options.top - curOffset.top + curTop;
        }
        if (options.left != null) {
            props.left = options.left - curOffset.left + curLeft;
        }
        if ('using' in options) {
            options.using.call(elem, props);
        } else {
            curElem.css(props);
        }
    }
};
jQuery.fn.extend({
    offset: function (options) {
        if (arguments.length) {
            return options === undefined ? this : this.each(function (i) {
                jQuery.offset.setOffset(this, options, i);
            });
        }
        var doc, docElem, rect, win, elem = this[0];
        if (!elem) {
            return;
        }
        if (!elem.getClientRects().length) {
            return {
                top: 0,
                left: 0
            };
        }
        rect = elem.getBoundingClientRect();
        doc = elem.ownerDocument;
        docElem = doc.documentElement;
        win = doc.defaultView;
        return {
            top: rect.top + win.pageYOffset - docElem.clientTop,
            left: rect.left + win.pageXOffset - docElem.clientLeft
        };
    },
    position: function () {
        if (!this[0]) {
            return;
        }
        var offsetParent, offset, elem = this[0], parentOffset = {
                top: 0,
                left: 0
            };
        if (jQuery.css(elem, 'position') === 'fixed') {
            offset = elem.getBoundingClientRect();
        } else {
            offsetParent = this.offsetParent();
            offset = this.offset();
            if (!nodeName(offsetParent[0], 'html')) {
                parentOffset = offsetParent.offset();
            }
            parentOffset = {
                top: parentOffset.top + jQuery.css(offsetParent[0], 'borderTopWidth', true),
                left: parentOffset.left + jQuery.css(offsetParent[0], 'borderLeftWidth', true)
            };
        }
        return {
            top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),
            left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)
        };
    },
    offsetParent: function () {
        return this.map(function () {
            var offsetParent = this.offsetParent;
            while (offsetParent && jQuery.css(offsetParent, 'position') === 'static') {
                offsetParent = offsetParent.offsetParent;
            }
            return offsetParent || documentElement;
        });
    }
});
jQuery.each({
    scrollLeft: 'pageXOffset',
    scrollTop: 'pageYOffset'
}, function (method, prop) {
    var top = 'pageYOffset' === prop;
    jQuery.fn[method] = function (val) {
        return access(this, function (elem, method, val) {
            var win;
            if (jQuery.isWindow(elem)) {
                win = elem;
            } else if (elem.nodeType === 9) {
                win = elem.defaultView;
            }
            if (val === undefined) {
                return win ? win[prop] : elem[method];
            }
            if (win) {
                win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
            } else {
                elem[method] = val;
            }
        }, method, val, arguments.length);
    };
});
jQuery.each([
    'top',
    'left'
], function (i, prop) {
    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
        if (computed) {
            computed = curCSS(elem, prop);
            return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;
        }
    });
});
jQuery.each({
    Height: 'height',
    Width: 'width'
}, function (name, type) {
    jQuery.each({
        padding: 'inner' + name,
        content: type,
        '': 'outer' + name
    }, function (defaultExtra, funcName) {
        jQuery.fn[funcName] = function (margin, value) {
            var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
            return access(this, function (elem, type, value) {
                var doc;
                if (jQuery.isWindow(elem)) {
                    return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];
                }
                if (elem.nodeType === 9) {
                    doc = elem.documentElement;
                    return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
                }
                return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
            }, type, chainable ? margin : undefined, chainable);
        };
    });
});
jQuery.fn.extend({
    bind: function (types, data, fn) {
        return this.on(types, null, data, fn);
    },
    unbind: function (types, fn) {
        return this.off(types, null, fn);
    },
    delegate: function (selector, types, data, fn) {
        return this.on(types, selector, data, fn);
    },
    undelegate: function (selector, types, fn) {
        return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn);
    },
    holdReady: function (hold) {
        if (hold) {
            jQuery.readyWait++;
        } else {
            jQuery.ready(true);
        }
    }
});
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
if (typeof define === 'function' && define.amd) {
    define('jquery', [], function () {
        return jQuery;
    });
}
_jQuery = window.jQuery;
_$ = window.$;
jQuery.noConflict = function (deep) {
    if (window.$ === jQuery) {
        window.$ = _$;
    }
    if (deep && window.jQuery === jQuery) {
        window.jQuery = _jQuery;
    }
    return jQuery;
};
if (!noGlobal) {
    window.jQuery = window.$ = jQuery;
}
return jQuery;})), 0, true, $__.uid);