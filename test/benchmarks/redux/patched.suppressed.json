{
  "suppressions": [
    {
      "path": "redux.compose(obj,...obj)",
      "comment": "TAJS is unable to reason a certain index in a non-fixed-size array does not contain undefined."
    },
    {
      "path": "redux.compose(,...obj)",
      "comment": "TAJS is unable to reason a certain index in a non-fixed-size array does not contain undefined."
    },
    {
      "path": "redux.compose()()._isUnboundGeneric",
      "comment": "compose is inprecise on purpose. ."
    },
    {
      "path": "redux.compose().<>()._isUnboundGeneric",
      "comment": "compose is inprecise on purpose. ."
    },
    {
      "path": "redux.compose().<>(typeParameter)._isUnboundGeneric",
      "comment": "compose is inprecise on purpose. ."
    },
    {
      "path": "redux.compose().<>(typeParameter,typeParameter)._isUnboundGeneric",
      "comment": "compose is inprecise on purpose. ."
    },
    {
      "path": "redux.compose().<>(typeParameter,typeParameter,typeParameter,...any)._isUnboundGeneric",
      "comment": "compose is inprecise on purpose. ."
    },
    {
      "path": "redux.compose()(,...any)._isUnboundGeneric",
      "comment": "compose is inprecise on purpose. ."
    },
    {
      "path": "redux.compose()(typeParameter,typeParameter)._isUnboundGeneric",
      "comment": "The declaration of compose is imprecise on purpose. Because TypeScript is unable to capture the actual type."
    },
    {
      "path": "redux.compose()()",
      "comment": "The declaration of compose is imprecise on purpose. Because TypeScript is unable to capture the actual type."
    },
    {
      "path": "window.redux.compose.[arg3] {patched.redux.js142:32}",
      "comment": "TAJS inprecision. TAJS is unable to reason that the last argument has been removed form a list. "
    },
    {
      "path": "window.redux.compose.[arg1] {patched.redux.js142:32}",
      "comment": "TAJS inprecision. Tajs is generally unable to reason about which function gets called with what."
    },
    {
      "path": "window.redux.compose.[arg2] {patched.redux.js142:32}",
      "comment": "TAJS inprecision. Tajs is generally unable to reason about which function gets called with what."
    },
    {
      "path": "window.redux.compose.[arg0]",
      "comment": "Somewhat same as above. TAJS is unable to prove which functions gets called with what arguments. Since some tricky array-manipulation is happening."
    },
    {
      "path": "window.redux.applyMiddleware.[arg0].[typeArg0].().[arg0] {patched.redux.js573:37",
      "comment": "i think any from compose is leaking."
    },
    {
      "path": "window.redux.compose.[arg0].[arg0] {patched.redux.js142:32}._isUnboundGeneric",
      "comment": "Somewhat same as above. TAJS is unable to prove which functions gets called with what arguments. Since some tricky array-manipulation is happening."
    },
    {
      "path": "redux.bindActionCreators(typeParameter,obj)._isUnboundGeneric",
      "comment": "Functions are copied over, but other properties are not. I think exact error was showcased in paper for TSTest."
    },
    {
      "path": "redux.compose().<>(typeParameter)",
      "comment": "Seems to be related to the \"any\" variant of compose."
    },
    {
      "path": "redux.combineReducers().<>(typeParameter,union)._isUnboundGeneric",
      "comment": "Oversimplified it is basically an \"<T>foo(a: any): T\" function, so it has an error and that is expected."
    },
    {
      "path": "window.redux.compose.[arg2].[arg0] {patched.redux.js142:32}._isUnboundGeneric",
      "comment": "The \"any\" overload of compose seem to be leaking. This thing is working, but TAJS is unable to reason about it."
    },
    {
      "path": "redux.compose().<>(typeParameter,typeParameter)",
      "comment": "Definitely imprecision by TAJS"
    },
    {
      "path": "window.redux.compose.[arg0] {patched.redux.js143:24}",
      "comment": "Unable to reason that you don't get the first element when fetching the last element. And thus the two gets mixed together."
    },
    {
      "path": "window.redux.compose.[arg0] {patched.redux.js0:0}",
      "comment": "Same as above"
    },
    {
      "path": "window.redux.compose.[arg0].[arg0] {patched.redux.js142:32}",
      "comment": "The any case of compose gets mixed together with the others."
    },
    {
      "path": "window.redux.compose.[arg2].[arg0] {patched.redux.js142:32}",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg1].[arg0] {patched.redux.js142:32}",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg2].[arg0] {patched.redux.js143:24}._isUnboundGeneric",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg1].[arg0] {patched.redux.js142:32}._isUnboundGeneric",
      "comment": "Variation on the above."
    },
    {
      "path": "redux.compose().<>()",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg2].[arg0] {patched.redux.js143:24}",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg1].[arg0] {patched.redux.js143:24}",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg3].[arg0] {patched.redux.js142:32}._isUnboundGeneric",
      "comment": "Variation on the above."
    },
    {
      "path": "redux.compose()(,...any)",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg3].[arg0] {patched.redux.js143:24}._isUnboundGeneric",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg3].[arg0] {patched.redux.js142:32}",
      "comment": "Variation on the above."
    },
    {
      "path": "redux.compose().<>(typeParameter,typeParameter,typeParameter,...any)",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.compose.[arg1].[arg0] {patched.redux.js143:24}._isUnboundGeneric",
      "comment": "Variation on the above."
    },
    {
      "path": "window.redux.applyMiddleware.[arg0].[typeArg0].().[arg0] {patched.redux.js143:24}",
      "comment": "Variation on the above."
    },
    {
      "path": "redux.createStore.[arg0].<>.[arg1]",
      "comment": "Spurious writes to _isUnboundGeneric"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter,undefined).replaceReducer",
      "comment": "Spurious write"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter).replaceReducer",
      "comment": "Spurious write"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj).replaceReducer",
      "comment": "See above"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,undefined,undefined).replaceReducer",
      "comment": "See above"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter,obj).replaceReducer",
      "comment": "See above"
    },
    {
      "path": "redux.createStore().<>.replaceReducer",
      "comment": "See above"
    },
    {
      "path": "redux.applyMiddleware()().<>().<>.replaceReducer",
      "comment": "See above"
    },
    {
      "path": "window.redux.applyMiddleware.[arg0].[typeArg0].().[arg0] {patched.redux.js142:32}",
      "comment": "Variation on one of the above"
    },
    {
      "path": "window.redux.applyMiddleware.().[arg0].[arg0].[arg1] {patched.redux.js0:0}",
      "comment": "Variation on one of the above"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,undefined,undefined).getState",
      "comment": "Spurious write"
    },
    {
      "path": "redux.applyMiddleware()().<>().<>.getState",
      "comment": "Spurious write"
    },
    {
      "path": "redux.applyMiddleware.[restArg].[arg0].<>.getState",
      "comment": "Spurious write"
    },
    {
      "path": "redux.createStore().<>.getState",
      "comment": "Spurious write"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter).getState",
      "comment": "Spurious write"
    },
    {
      "path": "window.redux.applyMiddleware.[arg0].[numberindexer].[arg0] {patched.redux.js571:36}.getState",
      "comment": "Spurious write"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter,undefined).getState",
      "comment": "Spurious write"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter,obj).getState",
      "comment": "Spurious write"
    },
    {
      "path": "redux.compose(typeParameter)._isUnboundGeneric",
      "comment": "One of the usual compose issues"
    },
    {
      "path": "redux.applyMiddleware.[restArg].().[arg0].<>(typeParameter)._isUnboundGeneric",
      "comment": "Spurious write"
    },
    {
      "path": "redux.applyMiddleware.[restArg].().[arg0].<>(typeParameter)",
      "comment": "Spurious write"
    },
    {
      "path": "window.redux.applyMiddleware.[arg0].[typeArg0].().[arg0] {patched.redux.js142:32}",
      "comment": "One of the usual compose issues"
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter,obj).dispatch",
      "comment": "Unable to prove that the property is definitely present. / spurious write."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj).dispatch",
      "comment": "Unable to prove that the property is definitely present. / spurious write."
    },
    {
      "path": "redux.applyMiddleware()().<>().<>.dispatch",
      "comment": "Unable to prove that the property is definitely present. / spurious write."
    },
    {
      "path": "redux.createStore().<>.dispatch",
      "comment": "Unable to prove that the property is definitely present. / spurious write."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter,undefined).dispatch",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,undefined,undefined).dispatch",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter).dispatch",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,undefined).dispatch",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter,obj).subscribe",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter).subscribe",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,typeParameter,undefined).subscribe",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,undefined,undefined).subscribe",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj,undefined).subscribe",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>(obj).subscribe",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.applyMiddleware()().<>().<>.subscribe",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "redux.createStore().<>.subscribe",
      "comment": "Unable to prove that the property is definitely present."
    },
    {
      "path": "window.redux.applyMiddleware.[arg0].[typeArg0].().[arg0] {patched.redux.js142:32}",
      "comment": "Variation on one of the above."
    },
    {
      "path": "redux.applyMiddleware()().<>.[arg0].<>.[arg1]",
      "comment": "Is actually spurious write to _isunboundgeneric."
    },
    {
      "path": "redux.createStore.[arg2].<>.[arg0].<>.[arg0].<>.[arg1]",
      "comment": "Is actually spurious write to _isunboundgeneric."
    },
    {
      "path": "window.redux.createStore.().replaceReducer.[arg0].[arg0] {patched.redux.js329:40}",
      "comment": "Is actually spurious write to _isunboundgeneric."
    },
    {
      "path": "window.redux.applyMiddleware.[arg0].[typeArg0].().[arg0] {patched.redux.js573:37}",
      "comment": "Spurious write"
    },
    {
      "path": "redux.ReducersMapObject.[stringIndexer].[union0].[arg1] {patched.redux.js773:47}",
      "comment": "TajsUniTests.noneObject"
    },
    {
      "path": "window.redux.applyMiddleware.().[arg0].[arg0].[arg0] {patched.redux.js329:40}",
      "comment": "Is caused by one of these supressions"
    },
    {
      "path": "window.redux.createStore.[arg0].[arg0] {patched.redux.js329:40}",
      "comment": "Is caused by one of these supressions"
    },
    {
      "path": "redux.createStore().<>.getState()",
      "comment": "A spurious write on getState happens in applyMiddleware"
    },
    {
      "path": "redux.applyMiddleware()().<>().<>.getState()",
      "comment": "A spurious write on getState happens in applyMiddleware"
    },
    {
      "path": "redux.applyMiddleware.[restArg].[arg0].<>.getState()",
      "comment": "A spurious write on getState happens in applyMiddleware"
    },
    {
      "path": "window.redux.bindActionCreators.[arg1].[arg0] {patched.redux.js592:28}",
      "comment": "A use of any in the declaration file, to get around something that is hard to write type-safe. "
    },
    {
      "path": "window.redux.bindActionCreators.[arg1].[arg0] {patched.redux.js592:28}._isUnboundGeneric",
      "comment": "A use of any in the declaration file, to get around something that is hard to write type-safe. "
    }
  ]
}