Object.defineProperty(typeof window === 'undefined' ? global : window, '$__', { configurable: false, enumerable: false, value: {
    fs: {},
    os: {},
    functionRegExp: /^function .*\([\s\S]*\) {[\s\S]*\}$/g,
    refs: {
        pop: Array.prototype.pop,
        slice: Array.prototype.slice
    },
    uid: Symbol('bHvKvd19fGrk'),
    w: window
}});
(!(((($__.fs.J$__v757635546_1_3 = function J$__v757635546_1(e) {
var vvv_return, vvv_switch, f;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    'object' == typeof exports;
    'function' == typeof define;
    ('undefined' != typeof window, f = window), f.Promise = (e, $__.fs.J$__v757635546_1069_4)(0, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ('object' == typeof exports && 'undefined' != typeof module)
    module.exports = e();
else if ('function' == typeof define && define.amd)
    define([], e);
else {
    'undefined' != typeof window ? f = window : 'undefined' != typeof global ? f = global : 'undefined' != typeof self && (f = self), f.Promise = e();
}})), $__.fs.J$__v757635546_1_3))((($__.fs.J$__v757635546_1069_4 = function J$__v757635546_1069() {
var vvv_return, vvv_switch, define, module, exports;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return ((($__.fs.e_5 = function e(t, n, r) {
var vvv_return, vvv_switch, s, i, o;
s = function s(o, u) {
    if (!n[o]) {
        if (!t[o]) {
            var a = typeof _dereq_ == 'function' && _dereq_;
            if (!u && a)
                return a(o, !0);
            if (i)
                return i(o, !0);
            var f = new Error('Cannot find module \'' + o + '\'');
            throw f.code = 'MODULE_NOT_FOUND', f;
        }
        var l = n[o] = {
            exports: {}
        };
        t[o][0].call(l.exports, function (e) {
            var n = t[o][1][e];
            return s(n ? n : e);
        }, l, l.exports, e, t, n, r);
    }
    return n[o].exports;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
t = arguments[0], n = arguments[1], r = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    s = ($__.fs.s_42 = function s(o, u) {
var vvv_return, vvv_switch, vvv_tmp0, a, f, l;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
o = arguments[0], u = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 22], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object');
    l = (n, $__.os.oid37)[o, 22] = $__.os.oid41 = {
        'exports': $__.os.oid40 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid41).exports, $__.os.oid40), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_658_27).call(vvv_tmp0, ($__.fs.J$__v757635546_3_45 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 36);
    return (s, $__.fs.s_42)((n, n), 2, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 13);
    return (s, $__.fs.s_42)((n, n), 3, true, $__.uid);
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 2);
    return (s, $__.fs.s_42)((n, n), 8, true, $__.uid);
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 12);
    return (s, $__.fs.s_42)((n, n), 11, true, $__.uid);
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 33);
    return (s, $__.fs.s_42)((n, n), 12, true, $__.uid);
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 23);
    return (s, $__.fs.s_42)((n, n), 14, true, $__.uid);
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 8);
    return (s, $__.fs.s_42)((n, n), 16, true, $__.uid);
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 9);
    return (s, $__.fs.s_42)((n, n), 17, true, $__.uid);
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 15);
    return (s, $__.fs.s_42)((n, n), 20, true, $__.uid);
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 7);
    return (s, $__.fs.s_42)((n, n), 25, true, $__.uid);
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 20);
    return (s, $__.fs.s_42)((n, n), 31, true, $__.uid);
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 19);
    return (s, $__.fs.s_42)((n, n), 32, true, $__.uid);
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 3);
    return (s, $__.fs.s_42)((n, n), 34, true, $__.uid);
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 6);
    return (s, $__.fs.s_42)((n, n), 35, true, $__.uid);
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 10);
    return (s, $__.fs.s_42)((n, n), 37, true, $__.uid);
case 15:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 15);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 32);
    return (s, $__.fs.s_42)((n, n), 38, true, $__.uid);
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 17);
    return (s, $__.fs.s_42)((n, n), 39, true, $__.uid);
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 17);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 18);
    return (s, $__.fs.s_42)((n, n), 41, true, $__.uid);
case 18:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 18);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 5);
    return (s, $__.fs.s_42)((n, n), 43, true, $__.uid);
case 19:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 19);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 35);
    return (s, $__.fs.s_42)((n, n), 45, true, $__.uid);
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 34);
    return (s, $__.fs.s_42)((n, n), 49, true, $__.uid);
case 21:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 21);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 16);
    return (s, $__.fs.s_42)((n, n), 51, true, $__.uid);
case 22:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 22);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 21);
    return (s, $__.fs.s_42)((n, n), 54, true, $__.uid);
case 23:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 23);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 24);
    return (s, $__.fs.s_42)((n, n), 56, true, $__.uid);
case 24:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 24);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 25);
    return (s, $__.fs.s_42)((n, n), 60, true, $__.uid);
case 25:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 25);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 27);
    return (s, $__.fs.s_42)((n, n), 63, true, $__.uid);
case 26:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 26);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 28);
    return (s, $__.fs.s_42)((n, n), 65, true, $__.uid);
case 27:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 27);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 30);
    return (s, $__.fs.s_42)((n, n), 67, true, $__.uid);
case 28:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 28);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 31);
    return (s, $__.fs.s_42)((n, n), 69, true, $__.uid);
case 29:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 29);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 14);
    return (s, $__.fs.s_42)((n, n), 73, true, $__.uid);
case 30:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 30);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 11);
    return (s, $__.fs.s_42)((n, n), 74, true, $__.uid);
case 31:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 31);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 22], 'object')[1, 1], $__.os.oid21), $__.os.oid21)[e], 1);
    return (s, $__.fs.s_42)((n, n), 75, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_45_4 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_45, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], false)), $__.fs.J$__v757635546_3_45), l, ((l, $__.os.oid41).exports, $__.os.oid40), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 22], $__.os.oid41), $__.os.oid41).exports, 'function');
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 13], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 13], 'object');
    l = (n, $__.os.oid37)[o, 13] = $__.os.oid46 = {
        'exports': $__.os.oid45 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid46).exports, $__.os.oid45), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 13], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_386_18).call(vvv_tmp0, ($__.fs.J$__v757635546_3_80 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_80_10 = $__.fs.J$__v757635546_3_80, $__.fs.J$__v757635546_3_80), l, ((l, $__.os.oid46).exports, $__.os.oid45), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return (((n, $__.os.oid37)[o, 13], $__.os.oid46), $__.os.oid46).exports, $__.os.oid47;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 36], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 36], 'object');
    l = (n, $__.os.oid37)[o, 36] = $__.os.oid44 = {
        'exports': $__.os.oid43 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid44).exports, $__.os.oid43), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 36], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_1067_41).call(vvv_tmp0, ($__.fs.J$__v757635546_3_56 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 36], 'object')[1, 1], $__.os.oid35), $__.os.oid35)[e], 13);
    return (s, $__.fs.s_42)((n, n), 1, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_56_7 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_56, [0], false)), $__.fs.J$__v757635546_3_56), l, ((l, $__.os.oid44).exports, $__.os.oid43), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return (((n, $__.os.oid37)[o, 36], $__.os.oid44), $__.os.oid44).exports, $__.os.oid50;
case 3:
case 9:
case 24:
case 27:
case 30:
case 62:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(3 <= vvv_switch && vvv_switch <= 62);
    !((n, $__.os.oid37)[o, 13], $__.os.oid46);
    return (((n, $__.os.oid37)[o, 13], $__.os.oid46), $__.os.oid46).exports, $__.os.oid47;
case 4:
case 7:
case 10:
case 13:
case 15:
case 19:
case 21:
case 23:
case 26:
case 28:
case 33:
case 36:
case 40:
case 42:
case 44:
case 46:
case 48:
case 50:
case 53:
case 55:
case 57:
case 61:
case 64:
case 66:
case 68:
case 70:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(4 <= vvv_switch && vvv_switch <= 70);
    !((n, $__.os.oid37)[o, 36], $__.os.oid44);
    return (((n, $__.os.oid37)[o, 36], $__.os.oid44), $__.os.oid44).exports, $__.os.oid50;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 29], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 29], 'object');
    l = (n, $__.os.oid37)[o, 29] = $__.os.oid55 = {
        'exports': $__.os.oid54 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid55).exports, $__.os.oid54), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 29], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_835_34).call(vvv_tmp0, ($__.fs.J$__v757635546_3_98 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 29], 'object')[1, 1], $__.os.oid28), $__.os.oid28)[e], 36);
    return (s, $__.fs.s_42)((n, n), 4, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_98_16 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_98, [0], false)), $__.fs.J$__v757635546_3_98), l, ((l, $__.os.oid55).exports, $__.os.oid54), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 29], $__.os.oid55), $__.os.oid55).exports, 'function');
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 26], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 26], 'object');
    l = (n, $__.os.oid37)[o, 26] = $__.os.oid58 = {
        'exports': $__.os.oid57 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid58).exports, $__.os.oid57), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 26], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_770_31).call(vvv_tmp0, ($__.fs.J$__v757635546_3_102 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_102_20 = $__.fs.J$__v757635546_3_102, $__.fs.J$__v757635546_3_102), l, ((l, $__.os.oid58).exports, $__.os.oid57), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 26], $__.os.oid58), $__.os.oid58).exports, 'function');
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 2], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 2], 'object');
    l = (n, $__.os.oid37)[o, 2] = $__.os.oid53 = {
        'exports': $__.os.oid52 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid53).exports, $__.os.oid52), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 2], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_64_7).call(vvv_tmp0, ($__.fs.J$__v757635546_3_93 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 2], 'object')[1, 1], $__.os.oid1), $__.os.oid1)[e], 29);
    return (s, $__.fs.s_42)((n, n), 5, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 2], 'object')[1, 1], $__.os.oid1), $__.os.oid1)[e], 26);
    return (s, $__.fs.s_42)((n, n), 6, true, $__.uid);
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 2], 'object')[1, 1], $__.os.oid1), $__.os.oid1)[e], 36);
    return (s, $__.fs.s_42)((n, n), 7, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_93_13 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_93, [0, 1, 2], false)), $__.fs.J$__v757635546_3_93), l, ((l, $__.os.oid53).exports, $__.os.oid52), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 2], $__.os.oid53), $__.os.oid53).exports, 'function');
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 12], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 12], 'object');
    l = (n, $__.os.oid37)[o, 12] = $__.os.oid61 = {
        'exports': $__.os.oid60 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid61).exports, $__.os.oid60), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 12], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_366_17).call(vvv_tmp0, ($__.fs.J$__v757635546_3_127 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 12], 'object')[1, 1], $__.os.oid11), $__.os.oid11)[e], 13);
    return (s, $__.fs.s_42)((n, n), 9, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 12], 'object')[1, 1], $__.os.oid11), $__.os.oid11)[e], 36);
    return (s, $__.fs.s_42)((n, n), 10, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_127_23 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_127, [0, 1], false)), $__.fs.J$__v757635546_3_127), l, ((l, $__.os.oid61).exports, $__.os.oid60), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return (((n, $__.os.oid37)[o, 12], $__.os.oid61), $__.os.oid61).exports, $__.os.oid70;
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 33], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 33], 'object');
    l = (n, $__.os.oid37)[o, 33] = $__.os.oid74 = {
        'exports': $__.os.oid73 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid74).exports, $__.os.oid73), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 33], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_946_38).call(vvv_tmp0, ($__.fs.J$__v757635546_3_141 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 33], 'object')[1, 1], $__.os.oid32), $__.os.oid32)[e], 36);
    return (s, $__.fs.s_42)((n, n), 13, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_141_26 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_141, [0], false)), $__.fs.J$__v757635546_3_141), l, ((l, $__.os.oid74).exports, $__.os.oid73), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 33], $__.os.oid74), $__.os.oid74).exports, 'function');
case 14:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 14);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 23], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 23], 'object');
    l = (n, $__.os.oid37)[o, 23] = $__.os.oid77 = {
        'exports': $__.os.oid76 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid77).exports, $__.os.oid76), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 23], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_691_28).call(vvv_tmp0, ($__.fs.J$__v757635546_3_148 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 23], 'object')[1, 1], $__.os.oid22), $__.os.oid22)[e], 36);
    return (s, $__.fs.s_42)((n, n), 15, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_148_29 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_148, [0], false)), $__.fs.J$__v757635546_3_148), l, ((l, $__.os.oid77).exports, $__.os.oid76), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 23], $__.os.oid77), $__.os.oid77).exports, 'function');
case 16:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 16);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 8], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 8], 'object');
    l = (n, $__.os.oid37)[o, 8] = $__.os.oid80 = {
        'exports': $__.os.oid79 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid80).exports, $__.os.oid79), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 8], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_175_13).call(vvv_tmp0, ($__.fs.J$__v757635546_3_167 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_167_32 = $__.fs.J$__v757635546_3_167, $__.fs.J$__v757635546_3_167), l, ((l, $__.os.oid80).exports, $__.os.oid79), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 8], $__.os.oid80), $__.os.oid80).exports, 'function');
case 17:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 17);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 9], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 9], 'object');
    l = (n, $__.os.oid37)[o, 9] = $__.os.oid82 = {
        'exports': $__.os.oid81 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid82).exports, $__.os.oid81), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 9], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_329_14).call(vvv_tmp0, ($__.fs.J$__v757635546_3_180 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 9], 'object')[1, 1], $__.os.oid8), $__.os.oid8)[e], 12);
    return (s, $__.fs.s_42)((n, n), 18, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 9], 'object')[1, 1], $__.os.oid8), $__.os.oid8)[e], 36);
    return (s, $__.fs.s_42)((n, n), 19, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_180_35 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_180, [0, 1], false)), $__.fs.J$__v757635546_3_180), l, ((l, $__.os.oid82).exports, $__.os.oid81), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 9], $__.os.oid82), $__.os.oid82).exports, 'function');
case 18:
case 29:
case 47:
case 52:
case 59:
case 71:
case 72:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(18 <= vvv_switch && vvv_switch <= 72);
    !((n, $__.os.oid37)[o, 12], $__.os.oid61);
    return (((n, $__.os.oid37)[o, 12], $__.os.oid61), $__.os.oid61).exports, $__.os.oid70;
case 20:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 20);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 15], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 15], 'object');
    l = (n, $__.os.oid37)[o, 15] = $__.os.oid88 = {
        'exports': $__.os.oid87 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid88).exports, $__.os.oid87), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 15], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_416_20).call(vvv_tmp0, ($__.fs.J$__v757635546_3_265 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 15], 'object')[1, 1], $__.os.oid14), $__.os.oid14)[e], 36);
    return (s, $__.fs.s_42)((n, n), 21, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 15], 'object')[1, 1], $__.os.oid14), $__.os.oid14)[e], 7);
    return (s, $__.fs.s_42)((n, n), 22, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_265_38 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_265, [0, 1], false)), $__.fs.J$__v757635546_3_265), l, ((l, $__.os.oid88).exports, $__.os.oid87), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 15], $__.os.oid88), $__.os.oid88).exports, 'function');
case 22:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 22);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 7], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 7], 'object');
    l = (n, $__.os.oid37)[o, 7] = $__.os.oid90 = {
        'exports': $__.os.oid89 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid90).exports, $__.os.oid89), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 7], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_148_12).call(vvv_tmp0, ($__.fs.J$__v757635546_3_273 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 7], 'object')[1, 1], $__.os.oid6), $__.os.oid6)[e], 36);
    return (s, $__.fs.s_42)((n, n), 23, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 7], 'object')[1, 1], $__.os.oid6), $__.os.oid6)[e], 13);
    return (s, $__.fs.s_42)((n, n), 24, true, $__.uid);
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 7], 'object')[1, 1], $__.os.oid6), $__.os.oid6)[e], 36);
    return (s, $__.fs.s_42)((n, n), 26, true, $__.uid);
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 7], 'object')[1, 1], $__.os.oid6), $__.os.oid6)[e], 13);
    return (s, $__.fs.s_42)((n, n), 27, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_273_41 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_273, [0, 1, 2, 3], false)), $__.fs.J$__v757635546_3_273), l, ((l, $__.os.oid90).exports, $__.os.oid89), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 7], $__.os.oid90), $__.os.oid90).exports, 'function');
case 25:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 25);
    !((n, $__.os.oid37)[o, 7], $__.os.oid90);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 7], $__.os.oid90), $__.os.oid90).exports, 'function');
case 31:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 31);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 20], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 20], 'object');
    l = (n, $__.os.oid37)[o, 20] = $__.os.oid92 = {
        'exports': $__.os.oid91 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid92).exports, $__.os.oid91), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 20], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_507_25).call(vvv_tmp0, ($__.fs.J$__v757635546_3_283 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 20], 'object')[1, 1], $__.os.oid19), $__.os.oid19)[e], 36);
    return (s, $__.fs.s_42)((n, n), 28, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 20], 'object')[1, 1], $__.os.oid19), $__.os.oid19)[e], 12);
    return (s, $__.fs.s_42)((n, n), 29, true, $__.uid);
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 20], 'object')[1, 1], $__.os.oid19), $__.os.oid19)[e], 13);
    return (s, $__.fs.s_42)((n, n), 30, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_283_44 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_283, [0, 1, 2], false)), $__.fs.J$__v757635546_3_283), l, ((l, $__.os.oid92).exports, $__.os.oid91), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 20], $__.os.oid92), $__.os.oid92).exports, 'function');
case 32:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 32);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 19], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 19], 'object');
    l = (n, $__.os.oid37)[o, 19] = $__.os.oid95 = {
        'exports': $__.os.oid94 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid95).exports, $__.os.oid94), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 19], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_500_24).call(vvv_tmp0, ($__.fs.J$__v757635546_3_344 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 19], 'object')[1, 1], $__.os.oid18), $__.os.oid18)[e], 36);
    return (s, $__.fs.s_42)((n, n), 33, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_344_47 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_344, [0], false)), $__.fs.J$__v757635546_3_344), l, ((l, $__.os.oid95).exports, $__.os.oid94), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 19], $__.os.oid95), $__.os.oid95).exports, 'function');
case 34:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 34);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 3], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 3], 'object');
    l = (n, $__.os.oid37)[o, 3] = $__.os.oid97 = {
        'exports': $__.os.oid96 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid97).exports, $__.os.oid96), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 3], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_84_8).call(vvv_tmp0, ($__.fs.J$__v757635546_3_349 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_349_50 = $__.fs.J$__v757635546_3_349, $__.fs.J$__v757635546_3_349), l, ((l, $__.os.oid97).exports, $__.os.oid96), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 3], $__.os.oid97), $__.os.oid97).exports, 'function');
case 35:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 35);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 6], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 6], 'object');
    l = (n, $__.os.oid37)[o, 6] = $__.os.oid99 = {
        'exports': $__.os.oid98 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid99).exports, $__.os.oid98), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 6], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_141_11).call(vvv_tmp0, ($__.fs.J$__v757635546_3_359 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 6], 'object')[1, 1], $__.os.oid5), $__.os.oid5)[e], 36);
    return (s, $__.fs.s_42)((n, n), 36, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_359_53 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_359, [0], false)), $__.fs.J$__v757635546_3_359), l, ((l, $__.os.oid99).exports, $__.os.oid98), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 6], $__.os.oid99), $__.os.oid99).exports, 'function');
case 37:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 37);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 10], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 10], 'object');
    l = (n, $__.os.oid37)[o, 10] = $__.os.oid101 = {
        'exports': $__.os.oid100 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid101).exports, $__.os.oid100), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 10], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_347_15).call(vvv_tmp0, ($__.fs.J$__v757635546_3_375 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_375_56 = $__.fs.J$__v757635546_3_375, $__.fs.J$__v757635546_3_375), l, ((l, $__.os.oid101).exports, $__.os.oid100), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 10], $__.os.oid101), $__.os.oid101).exports, 'function');
case 38:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 38);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 32], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 32], 'object');
    l = (n, $__.os.oid37)[o, 32] = $__.os.oid103 = {
        'exports': $__.os.oid102 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid103).exports, $__.os.oid102), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 32], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_935_37).call(vvv_tmp0, ($__.fs.J$__v757635546_3_383 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_383_59 = $__.fs.J$__v757635546_3_383, $__.fs.J$__v757635546_3_383), l, ((l, $__.os.oid103).exports, $__.os.oid102), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 32], $__.os.oid103), $__.os.oid103).exports, 'function');
case 39:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 39);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 17], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 17], 'object');
    l = (n, $__.os.oid37)[o, 17] = $__.os.oid105 = {
        'exports': $__.os.oid104 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid105).exports, $__.os.oid104), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 17], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_466_22).call(vvv_tmp0, ($__.fs.J$__v757635546_3_405 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 17], 'object')[1, 1], $__.os.oid16), $__.os.oid16)[e], 36);
    return (s, $__.fs.s_42)((n, n), 40, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_405_62 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_405, [0], false)), $__.fs.J$__v757635546_3_405), l, ((l, $__.os.oid105).exports, $__.os.oid104), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 17], $__.os.oid105), $__.os.oid105).exports, 'function');
case 41:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 41);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 18], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 18], 'object');
    l = (n, $__.os.oid37)[o, 18] = $__.os.oid107 = {
        'exports': $__.os.oid106 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid107).exports, $__.os.oid106), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 18], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_488_23).call(vvv_tmp0, ($__.fs.J$__v757635546_3_408 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 18], 'object')[1, 1], $__.os.oid17), $__.os.oid17)[e], 36);
    return (s, $__.fs.s_42)((n, n), 42, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_408_65 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_408, [0], false)), $__.fs.J$__v757635546_3_408), l, ((l, $__.os.oid107).exports, $__.os.oid106), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 18], $__.os.oid107), $__.os.oid107).exports, 'function');
case 43:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 43);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 5], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 5], 'object');
    l = (n, $__.os.oid37)[o, 5] = $__.os.oid110 = {
        'exports': $__.os.oid109 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid110).exports, $__.os.oid109), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 5], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_109_10).call(vvv_tmp0, ($__.fs.J$__v757635546_3_421 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 5], 'object')[1, 1], $__.os.oid4), $__.os.oid4)[e], 36);
    return (s, $__.fs.s_42)((n, n), 44, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_421_68 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_421, [0], false)), $__.fs.J$__v757635546_3_421), l, ((l, $__.os.oid110).exports, $__.os.oid109), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 5], $__.os.oid110), $__.os.oid110).exports, 'function');
case 45:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 45);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 35], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 35], 'object');
    l = (n, $__.os.oid37)[o, 35] = $__.os.oid112 = {
        'exports': $__.os.oid111 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid112).exports, $__.os.oid111), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 35], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_1012_40).call(vvv_tmp0, ($__.fs.J$__v757635546_3_429 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 35], 'object')[1, 1], $__.os.oid34), $__.os.oid34)[e], 36);
    return (s, $__.fs.s_42)((n, n), 46, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 35], 'object')[1, 1], $__.os.oid34), $__.os.oid34)[e], 12);
    return (s, $__.fs.s_42)((n, n), 47, true, $__.uid);
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 35], 'object')[1, 1], $__.os.oid34), $__.os.oid34)[e], 36);
    return (s, $__.fs.s_42)((n, n), 48, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_429_71 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_429, [0, 1, 2], false)), $__.fs.J$__v757635546_3_429), l, ((l, $__.os.oid112).exports, $__.os.oid111), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 35], $__.os.oid112), $__.os.oid112).exports, 'function');
case 49:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 49);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 34], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 34], 'object');
    l = (n, $__.os.oid37)[o, 34] = $__.os.oid116 = {
        'exports': $__.os.oid115 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid116).exports, $__.os.oid115), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 34], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_968_39).call(vvv_tmp0, ($__.fs.J$__v757635546_3_452 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 34], 'object')[1, 1], $__.os.oid33), $__.os.oid33)[e], 36);
    return (s, $__.fs.s_42)((n, n), 50, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_452_74 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_452, [0], false)), $__.fs.J$__v757635546_3_452), l, ((l, $__.os.oid116).exports, $__.os.oid115), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 34], $__.os.oid116), $__.os.oid116).exports, 'function');
case 51:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 51);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 16], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 16], 'object');
    l = (n, $__.os.oid37)[o, 16] = $__.os.oid118 = {
        'exports': $__.os.oid117 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid118).exports, $__.os.oid117), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 16], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_450_21).call(vvv_tmp0, ($__.fs.J$__v757635546_3_463 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 16], 'object')[1, 1], $__.os.oid15), $__.os.oid15)[e], 12);
    return (s, $__.fs.s_42)((n, n), 52, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 16], 'object')[1, 1], $__.os.oid15), $__.os.oid15)[e], 36);
    return (s, $__.fs.s_42)((n, n), 53, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_463_77 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_463, [0, 1], false)), $__.fs.J$__v757635546_3_463), l, ((l, $__.os.oid118).exports, $__.os.oid117), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 16], $__.os.oid118), $__.os.oid118).exports, 'function');
case 54:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 54);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 21], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 21], 'object');
    l = (n, $__.os.oid37)[o, 21] = $__.os.oid121 = {
        'exports': $__.os.oid120 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid121).exports, $__.os.oid120), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 21], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_516_26).call(vvv_tmp0, ($__.fs.J$__v757635546_3_480 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 21], 'object')[1, 1], $__.os.oid20), $__.os.oid20)[e], 36);
    return (s, $__.fs.s_42)((n, n), 55, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_480_80 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_480, [0], false)), $__.fs.J$__v757635546_3_480), l, ((l, $__.os.oid121).exports, $__.os.oid120), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 21], $__.os.oid121), $__.os.oid121).exports, 'function');
case 56:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 56);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 24], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 24], 'object');
    l = (n, $__.os.oid37)[o, 24] = $__.os.oid123 = {
        'exports': $__.os.oid122 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid123).exports, $__.os.oid122), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 24], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_728_29).call(vvv_tmp0, ($__.fs.J$__v757635546_3_486 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 24], 'object')[1, 1], $__.os.oid23), $__.os.oid23)[e], 36);
    return (s, $__.fs.s_42)((n, n), 57, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 24], 'object')[1, 1], $__.os.oid23), $__.os.oid23)[e], 20);
    return (s, $__.fs.s_42)((n, n), 58, true, $__.uid);
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 24], 'object')[1, 1], $__.os.oid23), $__.os.oid23)[e], 12);
    return (s, $__.fs.s_42)((n, n), 59, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_486_83 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_486, [0, 1, 2], false)), $__.fs.J$__v757635546_3_486), l, ((l, $__.os.oid123).exports, $__.os.oid122), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 24], $__.os.oid123), $__.os.oid123).exports, 'function');
case 58:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 58);
    !((n, $__.os.oid37)[o, 20], $__.os.oid92);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 20], $__.os.oid92), $__.os.oid92).exports, 'function');
case 60:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 60);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 25], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 25], 'object');
    l = (n, $__.os.oid37)[o, 25] = $__.os.oid127 = {
        'exports': $__.os.oid126 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid127).exports, $__.os.oid126), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 25], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_752_30).call(vvv_tmp0, ($__.fs.J$__v757635546_3_500 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 25], 'object')[1, 1], $__.os.oid24), $__.os.oid24)[e], 36);
    return (s, $__.fs.s_42)((n, n), 61, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 25], 'object')[1, 1], $__.os.oid24), $__.os.oid24)[e], 13);
    return (s, $__.fs.s_42)((n, n), 62, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_500_86 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_500, [0, 1], false)), $__.fs.J$__v757635546_3_500), l, ((l, $__.os.oid127).exports, $__.os.oid126), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 25], $__.os.oid127), $__.os.oid127).exports, 'function');
case 63:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 63);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 27], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 27], 'object');
    l = (n, $__.os.oid37)[o, 27] = $__.os.oid130 = {
        'exports': $__.os.oid129 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid130).exports, $__.os.oid129), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 27], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_783_32).call(vvv_tmp0, ($__.fs.J$__v757635546_3_515 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 27], 'object')[1, 1], $__.os.oid26), $__.os.oid26)[e], 36);
    return (s, $__.fs.s_42)((n, n), 64, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_515_89 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_515, [0], false)), $__.fs.J$__v757635546_3_515), l, ((l, $__.os.oid130).exports, $__.os.oid129), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 27], $__.os.oid130), $__.os.oid130).exports, 'function');
case 65:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 65);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 28], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 28], 'object');
    l = (n, $__.os.oid37)[o, 28] = $__.os.oid132 = {
        'exports': $__.os.oid131 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid132).exports, $__.os.oid131), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 28], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_812_33).call(vvv_tmp0, ($__.fs.J$__v757635546_3_521 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 28], 'object')[1, 1], $__.os.oid27), $__.os.oid27)[e], 36);
    return (s, $__.fs.s_42)((n, n), 66, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_521_92 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_521, [0], false)), $__.fs.J$__v757635546_3_521), l, ((l, $__.os.oid132).exports, $__.os.oid131), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 28], $__.os.oid132), $__.os.oid132).exports, 'function');
case 67:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 67);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 30], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 30], 'object');
    l = (n, $__.os.oid37)[o, 30] = $__.os.oid135 = {
        'exports': $__.os.oid134 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid135).exports, $__.os.oid134), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 30], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_850_35).call(vvv_tmp0, ($__.fs.J$__v757635546_3_539 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 30], 'object')[1, 1], $__.os.oid29), $__.os.oid29)[e], 36);
    return (s, $__.fs.s_42)((n, n), 68, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_539_95 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_539, [0], false)), $__.fs.J$__v757635546_3_539), l, ((l, $__.os.oid135).exports, $__.os.oid134), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 30], $__.os.oid135), $__.os.oid135).exports, 'function');
case 69:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 69);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 31], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 31], 'object');
    l = (n, $__.os.oid37)[o, 31] = $__.os.oid138 = {
        'exports': $__.os.oid137 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid138).exports, $__.os.oid137), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 31], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_892_36).call(vvv_tmp0, ($__.fs.J$__v757635546_3_548 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 31], 'object')[1, 1], $__.os.oid30), $__.os.oid30)[e], 36);
    return (s, $__.fs.s_42)((n, n), 70, true, $__.uid);
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 31], 'object')[1, 1], $__.os.oid30), $__.os.oid30)[e], 12);
    return (s, $__.fs.s_42)((n, n), 71, true, $__.uid);
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 31], 'object')[1, 1], $__.os.oid30), $__.os.oid30)[e], 12);
    return (s, $__.fs.s_42)((n, n), 72, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_548_98 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_548, [0, 1, 2], false)), $__.fs.J$__v757635546_3_548), l, ((l, $__.os.oid138).exports, $__.os.oid137), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 31], $__.os.oid138), $__.os.oid138).exports, 'function');
case 73:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 73);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 14], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 14], 'object');
    l = (n, $__.os.oid37)[o, 14] = $__.os.oid142 = {
        'exports': $__.os.oid141 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid142).exports, $__.os.oid141), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 14], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_394_19).call(vvv_tmp0, ($__.fs.J$__v757635546_3_571 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_571_101 = $__.fs.J$__v757635546_3_571, $__.fs.J$__v757635546_3_571), l, ((l, $__.os.oid142).exports, $__.os.oid141), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 14], $__.os.oid142), $__.os.oid142).exports, 'function');
case 74:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 74);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 11], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 11], 'object');
    l = (n, $__.os.oid37)[o, 11] = $__.os.oid144 = {
        'exports': $__.os.oid143 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid144).exports, $__.os.oid143), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 11], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_359_16).call(vvv_tmp0, ($__.fs.J$__v757635546_3_575 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_575_104 = $__.fs.J$__v757635546_3_575, $__.fs.J$__v757635546_3_575), l, ((l, $__.os.oid144).exports, $__.os.oid143), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 11], $__.os.oid144), $__.os.oid144).exports, 'function');
case 75:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 75);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 1], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 1], 'object');
    l = (n, $__.os.oid37)[o, 1] = $__.os.oid146 = {
        'exports': $__.os.oid145 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid146).exports, $__.os.oid145), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 1], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_14_6).call(vvv_tmp0, ($__.fs.J$__v757635546_3_582 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_582_107 = $__.fs.J$__v757635546_3_582, $__.fs.J$__v757635546_3_582), l, ((l, $__.os.oid146).exports, $__.os.oid145), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 1], $__.os.oid146), $__.os.oid146).exports, 'function');
case 76:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 76);
    !TAJS_restrictToType((n, $__.os.oid37)[o, 4], 'undefined');
    !TAJS_restrictToType((t, $__.os.oid36)[o, 4], 'object');
    l = (n, $__.os.oid37)[o, 4] = $__.os.oid39 = {
        'exports': $__.os.oid38 = {}
    };
    vvv_tmp0 = ((l, $__.os.oid39).exports, $__.os.oid38), (TAJS_restrictToType(TAJS_restrictToType((t, $__.os.oid36)[o, 4], 'object')[0, 0], 'function'), $__.fs.J$__v757635546_87_9).call(vvv_tmp0, ($__.fs.J$__v757635546_3_43 = function J$__v757635546_3(e) {
var vvv_return, vvv_switch, n;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    n = (((TAJS_restrictToType((t, $__.os.oid36)[o, 4], 'object')[1, 1], $__.os.oid3), $__.os.oid3)[e], 22);
    return (s, $__.fs.s_42)((n, n), 0, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
n = t[o][1][e];
return s(n ? n : e);}, $__.fs.J$__v757635546_3_43_1 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_3(e) {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_3, -2);
    return J$__v757635546_3;
})($__.fs.J$__v757635546_3_43, [0], false)), $__.fs.J$__v757635546_3_43), l, ((l, $__.os.oid39).exports, $__.os.oid38), (e, $__.fs.e_5), t, n, r, 0, true, $__.uid);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 4], $__.os.oid39), $__.os.oid39).exports, 'function');
case 77:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 77);
    !((n, $__.os.oid37)[o, 4], $__.os.oid39);
    return TAJS_restrictToType((((n, $__.os.oid37)[o, 4], $__.os.oid39), $__.os.oid39).exports, 'function');
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!n[o]) {
    if (!t[o]) {
        a = typeof _dereq_ == 'function' && _dereq_;
        if (!u && a)
            return a(o, !0);
        if (i)
            return i(o, !0);
        f = new Error('Cannot find module \'' + o + '\'');
        throw f.code = 'MODULE_NOT_FOUND', f;
    }
    l = n[o] = {
        exports: {}
    };
    t[o][0].call(l.exports, function (e) {
        var n = t[o][1][e];
        return s(n ? n : e);
    }, l, l.exports, e, t, n, r);
}
return n[o].exports;});
    i = typeof _dereq_ == 'function';
    o = 0;
    o < (r.length, 1);
    (s, $__.fs.s_42)((r[o, 0], 4), 76, true, $__.uid);
    (o = +o + 1) - 1;
    o < (r.length, 1);
    return s;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = typeof _dereq_ == 'function' && _dereq_;
for (var o = 0; o < r.length; o++)
    s(r[o]);
return s;}, $__.fs.e_5_2 = $__.fs.e_5, $__.fs.e_5_5 = $__.fs.e_5, $__.fs.e_5_8 = $__.fs.e_5, $__.fs.e_5_11 = $__.fs.e_5, $__.fs.e_5_14 = $__.fs.e_5, $__.fs.e_5_17 = $__.fs.e_5, $__.fs.e_5_21 = $__.fs.e_5, $__.fs.e_5_24 = $__.fs.e_5, $__.fs.e_5_27 = $__.fs.e_5, $__.fs.e_5_30 = $__.fs.e_5, $__.fs.e_5_33 = $__.fs.e_5, $__.fs.e_5_36 = $__.fs.e_5, $__.fs.e_5_39 = $__.fs.e_5, $__.fs.e_5_42 = $__.fs.e_5, $__.fs.e_5_45 = $__.fs.e_5, $__.fs.e_5_48 = $__.fs.e_5, $__.fs.e_5_51 = $__.fs.e_5, $__.fs.e_5_54 = $__.fs.e_5, $__.fs.e_5_57 = $__.fs.e_5, $__.fs.e_5_60 = $__.fs.e_5, $__.fs.e_5_63 = $__.fs.e_5, $__.fs.e_5_66 = $__.fs.e_5, $__.fs.e_5_69 = $__.fs.e_5, $__.fs.e_5_72 = $__.fs.e_5, $__.fs.e_5_75 = $__.fs.e_5, $__.fs.e_5_78 = $__.fs.e_5, $__.fs.e_5_81 = $__.fs.e_5, $__.fs.e_5_84 = $__.fs.e_5, $__.fs.e_5_87 = $__.fs.e_5, $__.fs.e_5_90 = $__.fs.e_5, $__.fs.e_5_93 = $__.fs.e_5, $__.fs.e_5_96 = $__.fs.e_5, $__.fs.e_5_99 = $__.fs.e_5, $__.fs.e_5_102 = $__.fs.e_5, $__.fs.e_5_105 = $__.fs.e_5, $__.fs.e_5_108 = $__.fs.e_5, $__.fs.e_5), $__.fs.e_5)($__.os.oid36 = {
        1: [
            ($__.fs.J$__v757635546_14_6 = function J$__v757635546_14(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid146).exports = ($__.fs.J$__v757635546_12_583 = function J$__v757635546_12(Promise) {
var vvv_return, vvv_switch, SomePromiseArray, any;
any = function any(promises) {
    var ret = new SomePromiseArray(promises);
    var promise = ret.promise();
    ret.setHowMany(1);
    ret.setUnwrap();
    ret.init();
    return promise;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    any = ($__.fs.any_584 = function any(promises) {
var vvv_return, vvv_switch, ret, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = new SomePromiseArray(promises);
promise = ret.promise();
ret.setHowMany(1);
ret.setUnwrap();
ret.init();
return promise;});
    SomePromiseArray = TAJS_restrictToType(Promise._SomePromiseArray, 'function');
    Promise.any = ($__.fs.J$__v757635546_8_585 = function J$__v757635546_8(promises) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return any(promises);});
    TAJS_restrictToType(Promise.prototype, 'object').any = ($__.fs.J$__v757635546_10_586 = function J$__v757635546_10() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return any(this);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
SomePromiseArray = Promise._SomePromiseArray;
Promise.any = function (promises) {
    return any(promises);
};
Promise.prototype.any = function () {
    return any(this);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise) {
    var SomePromiseArray = Promise._SomePromiseArray;
    function any(promises) {
        var ret = new SomePromiseArray(promises);
        var promise = ret.promise();
        ret.setHowMany(1);
        ret.setUnwrap();
        ret.init();
        return promise;
    }
    Promise.any = function (promises) {
        return any(promises);
    };
    Promise.prototype.any = function () {
        return any(this);
    };
};}, $__.fs.J$__v757635546_14_6),
            $__.os.oid0 = {}
        ],
        2: [
            ($__.fs.J$__v757635546_64_7 = function J$__v757635546_64(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch, firstLineError, schedule, Queue, util, Async, AsyncInvokeLater, AsyncInvoke, AsyncSettlePromises;
Async = function Async() {
    this._customScheduler = false;
    this._isTickUsed = false;
    this._lateQueue = new Queue(16);
    this._normalQueue = new Queue(16);
    this._haveDrainedQueues = false;
    this._trampolineEnabled = true;
    var self = this;
    this.drainQueues = function () {
        self._drainQueues();
    };
    this._schedule = schedule;
};
AsyncInvokeLater = function AsyncInvokeLater(fn, receiver, arg) {
    this._lateQueue.push(fn, receiver, arg);
    this._queueTick();
};
AsyncInvoke = function AsyncInvoke(fn, receiver, arg) {
    this._normalQueue.push(fn, receiver, arg);
    this._queueTick();
};
AsyncSettlePromises = function AsyncSettlePromises(promise) {
    this._normalQueue._pushOne(promise);
    this._queueTick();
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    Async = ($__.fs.Async_94 = function Async() {
var vvv_return, vvv_switch, self;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this._customScheduler = false;
    this._isTickUsed = false;
    this._lateQueue = new (Queue, $__.fs.Queue_104)(16, 0, true, $__.uid);
    this._normalQueue = new (Queue, $__.fs.Queue_104)(16, 1, true, $__.uid);
    this._haveDrainedQueues = false;
    this._trampolineEnabled = true;
    self = this;
    this.drainQueues = ($__.fs.J$__v757635546_16_126 = function J$__v757635546_16() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
self._drainQueues();});
    this._schedule = schedule;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._customScheduler = false;
this._isTickUsed = false;
this._lateQueue = new Queue(16);
this._normalQueue = new Queue(16);
this._haveDrainedQueues = false;
this._trampolineEnabled = true;
self = this;
this.drainQueues = function () {
    self._drainQueues();
};
this._schedule = schedule;});
    AsyncInvokeLater = ($__.fs.AsyncInvokeLater_95 = function AsyncInvokeLater(fn, receiver, arg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], receiver = arguments[1], arg = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._lateQueue.push(fn, receiver, arg);
this._queueTick();});
    AsyncInvoke = ($__.fs.AsyncInvoke_96 = function AsyncInvoke(fn, receiver, arg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], receiver = arguments[1], arg = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._normalQueue.push(fn, receiver, arg);
this._queueTick();});
    AsyncSettlePromises = ($__.fs.AsyncSettlePromises_97 = function AsyncSettlePromises(promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._normalQueue._pushOne(promise);
this._queueTick();});
    try {
        throw new Error();
    } catch (e) {
        firstLineError = e;
    }
    schedule = (_dereq_, $__.fs.J$__v757635546_3_93)('./schedule', 0, true, $__.uid);
    Queue = (_dereq_, $__.fs.J$__v757635546_3_93)('./queue', 1, true, $__.uid);
    util = (_dereq_, $__.fs.J$__v757635546_3_93)('./util', 2, true, $__.uid);
    TAJS_restrictToType(Async.prototype, 'object').setScheduler = ($__.fs.J$__v757635546_19_112 = function J$__v757635546_19(fn) {
var vvv_return, vvv_switch, prev;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
prev = this._schedule;
this._schedule = fn;
this._customScheduler = true;
return prev;});
    TAJS_restrictToType(Async.prototype, 'object').hasCustomScheduler = ($__.fs.J$__v757635546_21_113 = function J$__v757635546_21() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._customScheduler;});
    TAJS_restrictToType(Async.prototype, 'object').enableTrampoline = ($__.fs.J$__v757635546_23_114 = function J$__v757635546_23() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._trampolineEnabled = true;});
    TAJS_restrictToType(Async.prototype, 'object').disableTrampolineIfNecessary = ($__.fs.J$__v757635546_25_115 = function J$__v757635546_25() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (util, $__.os.oid50).hasDevTools, true;
    this._trampolineEnabled = false;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (util.hasDevTools) {
    this._trampolineEnabled = false;
}});
    TAJS_restrictToType(Async.prototype, 'object').haveItemsQueued = ($__.fs.J$__v757635546_27_116 = function J$__v757635546_27() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return (this._isTickUsed, false), (this._haveDrainedQueues, false);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._isTickUsed || this._haveDrainedQueues;});
    TAJS_restrictToType(Async.prototype, 'object').fatalError = ($__.fs.J$__v757635546_29_117 = function J$__v757635546_29(e, isNode) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0], isNode = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (isNode) {
    process.stderr.write('Fatal ' + (e instanceof Error ? e.stack : e) + '\n');
    process.exit(2);
} else {
    this.throwLater(e);
}});
    TAJS_restrictToType(Async.prototype, 'object').throwLater = ($__.fs.J$__v757635546_37_118 = function J$__v757635546_37(fn, arg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], arg = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (arguments.length === 1) {
    arg = fn;
    fn = function () {
        throw arg;
    };
}
if (typeof setTimeout !== 'undefined') {
    setTimeout(function () {
        fn(arg);
    }, 0);
} else
    try {
    this._schedule(function () {
        fn(arg);
    });
} catch (e) {
    throw new Error('No async scheduler available\n\n    See http://goo.gl/MqrFmX\n');
}});
    !((util, $__.os.oid50).hasDevTools, true);
    TAJS_restrictToType(Async.prototype, 'object').invokeLater = ($__.fs.J$__v757635546_46_119 = function J$__v757635546_46(fn, receiver, arg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], receiver = arguments[1], arg = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._trampolineEnabled) {
    AsyncInvokeLater.call(this, fn, receiver, arg);
} else {
    this._schedule(function () {
        setTimeout(function () {
            fn.call(receiver, arg);
        }, 100);
    });
}});
    TAJS_restrictToType(Async.prototype, 'object').invoke = ($__.fs.J$__v757635546_50_120 = function J$__v757635546_50(fn, receiver, arg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], receiver = arguments[1], arg = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._trampolineEnabled) {
    AsyncInvoke.call(this, fn, receiver, arg);
} else {
    this._schedule(function () {
        fn.call(receiver, arg);
    });
}});
    TAJS_restrictToType(Async.prototype, 'object').settlePromises = ($__.fs.J$__v757635546_54_121 = function J$__v757635546_54(promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._trampolineEnabled) {
    AsyncSettlePromises.call(this, promise);
} else {
    this._schedule(function () {
        promise._settlePromises();
    });
}});
    TAJS_restrictToType(Async.prototype, 'object')._drainQueue = ($__.fs.J$__v757635546_56_122 = function J$__v757635546_56(queue) {
var vvv_return, vvv_switch, fn, receiver, arg;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
queue = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
while (queue.length() > 0) {
    fn = queue.shift();
    if (typeof fn !== 'function') {
        fn._settlePromises();
        continue;
    }
    receiver = queue.shift();
    arg = queue.shift();
    fn.call(receiver, arg);
}});
    TAJS_restrictToType(Async.prototype, 'object')._drainQueues = ($__.fs.J$__v757635546_58_123 = function J$__v757635546_58() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._drainQueue(this._normalQueue);
this._reset();
this._haveDrainedQueues = true;
this._drainQueue(this._lateQueue);});
    TAJS_restrictToType(Async.prototype, 'object')._queueTick = ($__.fs.J$__v757635546_60_124 = function J$__v757635546_60() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!this._isTickUsed) {
    this._isTickUsed = true;
    this._schedule(this.drainQueues);
}});
    TAJS_restrictToType(Async.prototype, 'object')._reset = ($__.fs.J$__v757635546_62_125 = function J$__v757635546_62() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._isTickUsed = false;});
    (module, $__.os.oid53).exports = Async;
    TAJS_restrictToType((module, $__.os.oid53).exports, 'function').firstLineError = firstLineError;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    throw new Error();
} catch (e) {
    firstLineError = e;
}
schedule = _dereq_('./schedule');
Queue = _dereq_('./queue');
util = _dereq_('./util');
Async.prototype.setScheduler = function (fn) {
    var prev = this._schedule;
    this._schedule = fn;
    this._customScheduler = true;
    return prev;
};
Async.prototype.hasCustomScheduler = function () {
    return this._customScheduler;
};
Async.prototype.enableTrampoline = function () {
    this._trampolineEnabled = true;
};
Async.prototype.disableTrampolineIfNecessary = function () {
    if (util.hasDevTools) {
        this._trampolineEnabled = false;
    }
};
Async.prototype.haveItemsQueued = function () {
    return this._isTickUsed || this._haveDrainedQueues;
};
Async.prototype.fatalError = function (e, isNode) {
    if (isNode) {
        process.stderr.write('Fatal ' + (e instanceof Error ? e.stack : e) + '\n');
        process.exit(2);
    } else {
        this.throwLater(e);
    }
};
Async.prototype.throwLater = function (fn, arg) {
    if (arguments.length === 1) {
        arg = fn;
        fn = function () {
            throw arg;
        };
    }
    if (typeof setTimeout !== 'undefined') {
        setTimeout(function () {
            fn(arg);
        }, 0);
    } else
        try {
        this._schedule(function () {
            fn(arg);
        });
    } catch (e) {
        throw new Error('No async scheduler available\n\n    See http://goo.gl/MqrFmX\n');
    }
};
if (!util.hasDevTools) {
    Async.prototype.invokeLater = AsyncInvokeLater;
    Async.prototype.invoke = AsyncInvoke;
    Async.prototype.settlePromises = AsyncSettlePromises;
} else {
    Async.prototype.invokeLater = function (fn, receiver, arg) {
        if (this._trampolineEnabled) {
            AsyncInvokeLater.call(this, fn, receiver, arg);
        } else {
            this._schedule(function () {
                setTimeout(function () {
                    fn.call(receiver, arg);
                }, 100);
            });
        }
    };
    Async.prototype.invoke = function (fn, receiver, arg) {
        if (this._trampolineEnabled) {
            AsyncInvoke.call(this, fn, receiver, arg);
        } else {
            this._schedule(function () {
                fn.call(receiver, arg);
            });
        }
    };
    Async.prototype.settlePromises = function (promise) {
        if (this._trampolineEnabled) {
            AsyncSettlePromises.call(this, promise);
        } else {
            this._schedule(function () {
                promise._settlePromises();
            });
        }
    };
}
Async.prototype._drainQueue = function (queue) {
    while (queue.length() > 0) {
        var fn = queue.shift();
        if (typeof fn !== 'function') {
            fn._settlePromises();
            continue;
        }
        var receiver = queue.shift();
        var arg = queue.shift();
        fn.call(receiver, arg);
    }
};
Async.prototype._drainQueues = function () {
    this._drainQueue(this._normalQueue);
    this._reset();
    this._haveDrainedQueues = true;
    this._drainQueue(this._lateQueue);
};
Async.prototype._queueTick = function () {
    if (!this._isTickUsed) {
        this._isTickUsed = true;
        this._schedule(this.drainQueues);
    }
};
Async.prototype._reset = function () {
    this._isTickUsed = false;
};
module.exports = Async;
module.exports.firstLineError = firstLineError;}, $__.fs.J$__v757635546_64_7),
            $__.os.oid1 = {
                './queue': 26,
                './schedule': 29,
                './util': 36
            }
        ],
        3: [
            ($__.fs.J$__v757635546_84_8 = function J$__v757635546_84(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid97).exports = ($__.fs.J$__v757635546_82_350 = function J$__v757635546_82(Promise, INTERNAL, tryConvertToPromise, debug) {
var vvv_return, vvv_switch, calledBind, rejectThis, targetRejected, bindingResolved, bindingRejected;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1], tryConvertToPromise = arguments[2], debug = arguments[3];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    calledBind = false;
    rejectThis = ($__.fs.J$__v757635546_66_351 = function J$__v757635546_66(_, e) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], e = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._reject(e);});
    targetRejected = ($__.fs.J$__v757635546_68_352 = function J$__v757635546_68(e, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
context.promiseRejectionQueued = true;
context.bindingPromise._then(rejectThis, rejectThis, null, this, e);});
    bindingResolved = ($__.fs.J$__v757635546_70_353 = function J$__v757635546_70(thisArg, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
thisArg = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((this._bitField & 50397184) === 0) {
    this._resolveCallback(context.target);
}});
    bindingRejected = ($__.fs.J$__v757635546_72_354 = function J$__v757635546_72(e, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!context.promiseRejectionQueued)
    this._reject(e);});
    TAJS_restrictToType(Promise.prototype, 'object').bind = ($__.fs.J$__v757635546_74_355 = function J$__v757635546_74(thisArg) {
var vvv_return, vvv_switch, maybePromise, ret, target, context;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
thisArg = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!calledBind) {
    calledBind = true;
    Promise.prototype._propagateFrom = debug.propagateFromFunction();
    Promise.prototype._boundValue = debug.boundValueFunction();
}
maybePromise = tryConvertToPromise(thisArg);
ret = new Promise(INTERNAL);
ret._propagateFrom(this, 1);
target = this._target();
ret._setBoundTo(maybePromise);
if (maybePromise instanceof Promise) {
    context = {
        promiseRejectionQueued: false,
        promise: ret,
        target: target,
        bindingPromise: maybePromise
    };
    target._then(INTERNAL, targetRejected, undefined, ret, context);
    maybePromise._then(bindingResolved, bindingRejected, undefined, ret, context);
    ret._setOnCancel(maybePromise);
} else {
    ret._resolveCallback(target);
}
return ret;});
    TAJS_restrictToType(Promise.prototype, 'object')._setBoundTo = ($__.fs.J$__v757635546_76_356 = function J$__v757635546_76(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (obj !== undefined) {
    this._bitField = this._bitField | 2097152;
    this._boundTo = obj;
} else {
    this._bitField = this._bitField & ~2097152;
}});
    TAJS_restrictToType(Promise.prototype, 'object')._isBound = ($__.fs.J$__v757635546_78_357 = function J$__v757635546_78() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 2097152) === 2097152;});
    Promise.bind = ($__.fs.J$__v757635546_80_358 = function J$__v757635546_80(thisArg, value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
thisArg = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return Promise.resolve(value).bind(thisArg);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
calledBind = false;
rejectThis = function (_, e) {
    this._reject(e);
};
targetRejected = function (e, context) {
    context.promiseRejectionQueued = true;
    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);
};
bindingResolved = function (thisArg, context) {
    if ((this._bitField & 50397184) === 0) {
        this._resolveCallback(context.target);
    }
};
bindingRejected = function (e, context) {
    if (!context.promiseRejectionQueued)
        this._reject(e);
};
Promise.prototype.bind = function (thisArg) {
    if (!calledBind) {
        calledBind = true;
        Promise.prototype._propagateFrom = debug.propagateFromFunction();
        Promise.prototype._boundValue = debug.boundValueFunction();
    }
    var maybePromise = tryConvertToPromise(thisArg);
    var ret = new Promise(INTERNAL);
    ret._propagateFrom(this, 1);
    var target = this._target();
    ret._setBoundTo(maybePromise);
    if (maybePromise instanceof Promise) {
        var context = {
            promiseRejectionQueued: false,
            promise: ret,
            target: target,
            bindingPromise: maybePromise
        };
        target._then(INTERNAL, targetRejected, undefined, ret, context);
        maybePromise._then(bindingResolved, bindingRejected, undefined, ret, context);
        ret._setOnCancel(maybePromise);
    } else {
        ret._resolveCallback(target);
    }
    return ret;
};
Promise.prototype._setBoundTo = function (obj) {
    if (obj !== undefined) {
        this._bitField = this._bitField | 2097152;
        this._boundTo = obj;
    } else {
        this._bitField = this._bitField & ~2097152;
    }
};
Promise.prototype._isBound = function () {
    return (this._bitField & 2097152) === 2097152;
};
Promise.bind = function (thisArg, value) {
    return Promise.resolve(value).bind(thisArg);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL, tryConvertToPromise, debug) {
    var calledBind = false;
    var rejectThis = function (_, e) {
        this._reject(e);
    };
    var targetRejected = function (e, context) {
        context.promiseRejectionQueued = true;
        context.bindingPromise._then(rejectThis, rejectThis, null, this, e);
    };
    var bindingResolved = function (thisArg, context) {
        if ((this._bitField & 50397184) === 0) {
            this._resolveCallback(context.target);
        }
    };
    var bindingRejected = function (e, context) {
        if (!context.promiseRejectionQueued)
            this._reject(e);
    };
    Promise.prototype.bind = function (thisArg) {
        if (!calledBind) {
            calledBind = true;
            Promise.prototype._propagateFrom = debug.propagateFromFunction();
            Promise.prototype._boundValue = debug.boundValueFunction();
        }
        var maybePromise = tryConvertToPromise(thisArg);
        var ret = new Promise(INTERNAL);
        ret._propagateFrom(this, 1);
        var target = this._target();
        ret._setBoundTo(maybePromise);
        if (maybePromise instanceof Promise) {
            var context = {
                promiseRejectionQueued: false,
                promise: ret,
                target: target,
                bindingPromise: maybePromise
            };
            target._then(INTERNAL, targetRejected, undefined, ret, context);
            maybePromise._then(bindingResolved, bindingRejected, undefined, ret, context);
            ret._setOnCancel(maybePromise);
        } else {
            ret._resolveCallback(target);
        }
        return ret;
    };
    Promise.prototype._setBoundTo = function (obj) {
        if (obj !== undefined) {
            this._bitField = this._bitField | 2097152;
            this._boundTo = obj;
        } else {
            this._bitField = this._bitField & ~2097152;
        }
    };
    Promise.prototype._isBound = function () {
        return (this._bitField & 2097152) === 2097152;
    };
    Promise.bind = function (thisArg, value) {
        return Promise.resolve(value).bind(thisArg);
    };
};}, $__.fs.J$__v757635546_84_8),
            $__.os.oid2 = {}
        ],
        4: [
            ($__.fs.J$__v757635546_87_9 = function J$__v757635546_87(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch, old, noConflict, bluebird;
noConflict = function noConflict() {
    try {
        if (Promise === bluebird)
            Promise = old;
    } catch (e) {
    }
    return bluebird;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    noConflict = ($__.fs.noConflict_44 = function noConflict() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    if (Promise === bluebird)
        Promise = old;
} catch (e) {
}
return bluebird;});
    typeof Promise !== 'undefined';
    old = Promise;
    bluebird = ((_dereq_, $__.fs.J$__v757635546_3_43)('./promise', 0, true, $__.uid), $__.fs.J$__v757635546_656_46)(0, true, $__.uid);
    bluebird.noConflict = noConflict;
    (module, $__.os.oid39).exports = bluebird;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof Promise !== 'undefined')
    old = Promise;
bluebird = _dereq_('./promise')();
bluebird.noConflict = noConflict;
module.exports = bluebird;}, $__.fs.J$__v757635546_87_9),
            $__.os.oid3 = {
                './promise': 22
            }
        ],
        5: [
            ($__.fs.J$__v757635546_109_10 = function J$__v757635546_109(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch, cr, callerCache, getterCache;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    cr = TAJS_restrictToType(Object.create, 'function');
    cr;
    callerCache = cr(null);
    getterCache = cr(null);
    callerCache[' size'] = getterCache[' size'] = 0;
    (module, $__.os.oid110).exports = ($__.fs.J$__v757635546_107_422 = function J$__v757635546_107(Promise) {
var vvv_return, vvv_switch, util, canEvaluate, isIdentifier, getMethodCaller, getGetter, makeMethodCaller, makeGetter, getCompiled, ensureMethod, caller, namedGetter, indexedGetter;
ensureMethod = function ensureMethod(obj, methodName) {
    var fn;
    if (obj != null)
        fn = obj[methodName];
    if (typeof fn !== 'function') {
        var message = 'Object ' + util.classString(obj) + ' has no method \'' + util.toString(methodName) + '\'';
        throw new Promise.TypeError(message);
    }
    return fn;
};
caller = function caller(obj) {
    var methodName = this.pop();
    var fn = ensureMethod(obj, methodName);
    return fn.apply(obj, this);
};
namedGetter = function namedGetter(obj) {
    return obj[this];
};
indexedGetter = function indexedGetter(obj) {
    var index = +this;
    if (index < 0)
        index = Math.max(0, index + obj.length);
    return obj[index];
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ensureMethod = ($__.fs.ensureMethod_423 = function ensureMethod(obj, methodName) {
var vvv_return, vvv_switch, fn, message;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], methodName = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (obj != null)
    fn = obj[methodName];
if (typeof fn !== 'function') {
    message = 'Object ' + util.classString(obj) + ' has no method \'' + util.toString(methodName) + '\'';
    throw new Promise.TypeError(message);
}
return fn;});
    caller = ($__.fs.caller_424 = function caller(obj) {
var vvv_return, vvv_switch, methodName, fn;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
methodName = this.pop();
fn = ensureMethod(obj, methodName);
return fn.apply(obj, this);});
    namedGetter = ($__.fs.namedGetter_425 = function namedGetter(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return obj[this];});
    indexedGetter = ($__.fs.indexedGetter_426 = function indexedGetter(obj) {
var vvv_return, vvv_switch, index;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
index = +this;
if (index < 0)
    index = Math.max(0, index + obj.length);
return obj[index];});
    util = (_dereq_, $__.fs.J$__v757635546_3_421)('./util', 0, true, $__.uid);
    canEvaluate = ((util, $__.os.oid50).canEvaluate, false);
    isIdentifier = TAJS_restrictToType((util, $__.os.oid50).isIdentifier, 'function');
    !true;
    TAJS_restrictToType(Promise.prototype, 'object').call = ($__.fs.J$__v757635546_101_427 = function J$__v757635546_101(methodName) {
var vvv_return, vvv_switch, args, maybeCaller;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
methodName = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
args = [].slice.call(arguments, 1);
;
if (!true) {
    if (canEvaluate) {
        maybeCaller = getMethodCaller(methodName);
        if (maybeCaller !== null) {
            return this._then(maybeCaller, undefined, undefined, args, undefined);
        }
    }
}
args.push(methodName);
return this._then(caller, undefined, undefined, args, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object').get = ($__.fs.J$__v757635546_105_428 = function J$__v757635546_105(propertyName) {
var vvv_return, vvv_switch, isIndex, getter, maybeGetter;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
propertyName = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
isIndex = typeof propertyName === 'number';
if (!isIndex) {
    if (canEvaluate) {
        maybeGetter = getGetter(propertyName);
        getter = maybeGetter !== null ? maybeGetter : namedGetter;
    } else {
        getter = namedGetter;
    }
} else {
    getter = indexedGetter;
}
return this._then(getter, undefined, undefined, propertyName, undefined);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
canEvaluate = util.canEvaluate;
isIdentifier = util.isIdentifier;
if (!true) {
    makeMethodCaller = function (methodName) {
        return new Function('ensureMethod', '                                    \n        return function(obj) {                                               \n            \'use strict\'                                                     \n            var len = this.length;                                           \n            ensureMethod(obj, \'methodName\');                                 \n            switch(len) {                                                    \n                case 1: return obj.methodName(this[0]);                      \n                case 2: return obj.methodName(this[0], this[1]);             \n                case 3: return obj.methodName(this[0], this[1], this[2]);    \n                case 0: return obj.methodName();                             \n                default:                                                     \n                    return obj.methodName.apply(obj, this);                  \n            }                                                                \n        };                                                                   \n        '.replace(/methodName/g, methodName))(ensureMethod);
    };
    makeGetter = function (propertyName) {
        return new Function('obj', '                                             \n        \'use strict\';                                                        \n        return obj.propertyName;                                             \n        '.replace('propertyName', propertyName));
    };
    getCompiled = function (name, compiler, cache) {
        var ret = cache[name];
        if (typeof ret !== 'function') {
            if (!isIdentifier(name)) {
                return null;
            }
            ret = compiler(name);
            cache[name] = ret;
            cache[' size']++;
            if (cache[' size'] > 512) {
                var keys = Object.keys(cache);
                for (var i = 0; i < 256; ++i)
                    delete cache[keys[i]];
                cache[' size'] = keys.length - 256;
            }
        }
        return ret;
    };
    getMethodCaller = function (name) {
        return getCompiled(name, makeMethodCaller, callerCache);
    };
    getGetter = function (name) {
        return getCompiled(name, makeGetter, getterCache);
    };
}
Promise.prototype.call = function (methodName) {
    var args = [].slice.call(arguments, 1);
    ;
    if (!true) {
        if (canEvaluate) {
            var maybeCaller = getMethodCaller(methodName);
            if (maybeCaller !== null) {
                return this._then(maybeCaller, undefined, undefined, args, undefined);
            }
        }
    }
    args.push(methodName);
    return this._then(caller, undefined, undefined, args, undefined);
};
Promise.prototype.get = function (propertyName) {
    var isIndex = typeof propertyName === 'number';
    var getter;
    if (!isIndex) {
        if (canEvaluate) {
            var maybeGetter = getGetter(propertyName);
            getter = maybeGetter !== null ? maybeGetter : namedGetter;
        } else {
            getter = namedGetter;
        }
    } else {
        getter = indexedGetter;
    }
    return this._then(getter, undefined, undefined, propertyName, undefined);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
cr = Object.create;
if (cr) {
    callerCache = cr(null);
    getterCache = cr(null);
    callerCache[' size'] = getterCache[' size'] = 0;
}
module.exports = function (Promise) {
    var util = _dereq_('./util');
    var canEvaluate = util.canEvaluate;
    var isIdentifier = util.isIdentifier;
    var getMethodCaller;
    var getGetter;
    if (!true) {
        var makeMethodCaller = function (methodName) {
            return new Function('ensureMethod', '                                    \n        return function(obj) {                                               \n            \'use strict\'                                                     \n            var len = this.length;                                           \n            ensureMethod(obj, \'methodName\');                                 \n            switch(len) {                                                    \n                case 1: return obj.methodName(this[0]);                      \n                case 2: return obj.methodName(this[0], this[1]);             \n                case 3: return obj.methodName(this[0], this[1], this[2]);    \n                case 0: return obj.methodName();                             \n                default:                                                     \n                    return obj.methodName.apply(obj, this);                  \n            }                                                                \n        };                                                                   \n        '.replace(/methodName/g, methodName))(ensureMethod);
        };
        var makeGetter = function (propertyName) {
            return new Function('obj', '                                             \n        \'use strict\';                                                        \n        return obj.propertyName;                                             \n        '.replace('propertyName', propertyName));
        };
        var getCompiled = function (name, compiler, cache) {
            var ret = cache[name];
            if (typeof ret !== 'function') {
                if (!isIdentifier(name)) {
                    return null;
                }
                ret = compiler(name);
                cache[name] = ret;
                cache[' size']++;
                if (cache[' size'] > 512) {
                    var keys = Object.keys(cache);
                    for (var i = 0; i < 256; ++i)
                        delete cache[keys[i]];
                    cache[' size'] = keys.length - 256;
                }
            }
            return ret;
        };
        getMethodCaller = function (name) {
            return getCompiled(name, makeMethodCaller, callerCache);
        };
        getGetter = function (name) {
            return getCompiled(name, makeGetter, getterCache);
        };
    }
    function ensureMethod(obj, methodName) {
        var fn;
        if (obj != null)
            fn = obj[methodName];
        if (typeof fn !== 'function') {
            var message = 'Object ' + util.classString(obj) + ' has no method \'' + util.toString(methodName) + '\'';
            throw new Promise.TypeError(message);
        }
        return fn;
    }
    function caller(obj) {
        var methodName = this.pop();
        var fn = ensureMethod(obj, methodName);
        return fn.apply(obj, this);
    }
    Promise.prototype.call = function (methodName) {
        var args = [].slice.call(arguments, 1);
        ;
        if (!true) {
            if (canEvaluate) {
                var maybeCaller = getMethodCaller(methodName);
                if (maybeCaller !== null) {
                    return this._then(maybeCaller, undefined, undefined, args, undefined);
                }
            }
        }
        args.push(methodName);
        return this._then(caller, undefined, undefined, args, undefined);
    };
    function namedGetter(obj) {
        return obj[this];
    }
    function indexedGetter(obj) {
        var index = +this;
        if (index < 0)
            index = Math.max(0, index + obj.length);
        return obj[index];
    }
    Promise.prototype.get = function (propertyName) {
        var isIndex = typeof propertyName === 'number';
        var getter;
        if (!isIndex) {
            if (canEvaluate) {
                var maybeGetter = getGetter(propertyName);
                getter = maybeGetter !== null ? maybeGetter : namedGetter;
            } else {
                getter = namedGetter;
            }
        } else {
            getter = indexedGetter;
        }
        return this._then(getter, undefined, undefined, propertyName, undefined);
    };
};}, $__.fs.J$__v757635546_109_10),
            $__.os.oid4 = {
                './util': 36
            }
        ],
        6: [
            ($__.fs.J$__v757635546_141_11 = function J$__v757635546_141(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid99).exports = ($__.fs.J$__v757635546_139_360 = function J$__v757635546_139(Promise, PromiseArray, apiRejection, debug) {
var vvv_return, vvv_switch, util, tryCatch, errorObj, async;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], PromiseArray = arguments[1], apiRejection = arguments[2], debug = arguments[3];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    util = (_dereq_, $__.fs.J$__v757635546_3_359)('./util', 0, true, $__.uid);
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    async = TAJS_restrictToType(Promise._async, 'object');
    TAJS_restrictToType(Promise.prototype, 'object')['break', 'break'] = TAJS_restrictToType(Promise.prototype, 'object').cancel = ($__.fs.J$__v757635546_111_361 = function J$__v757635546_111() {
var vvv_return, vvv_switch, promise, child, parent;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!debug.cancellation())
    return this._warn('cancellation is disabled');
promise = this;
child = promise;
while (promise._isCancellable()) {
    if (!promise._cancelBy(child)) {
        if (child._isFollowing()) {
            child._followee().cancel();
        } else {
            child._cancelBranched();
        }
        break;
    }
    parent = promise._cancellationParent;
    if (parent == null || !parent._isCancellable()) {
        if (promise._isFollowing()) {
            promise._followee().cancel();
        } else {
            promise._cancelBranched();
        }
        break;
    } else {
        if (promise._isFollowing())
            promise._followee().cancel();
        promise._setWillBeCancelled();
        child = promise;
        promise = parent;
    }
}});
    TAJS_restrictToType(Promise.prototype, 'object')._branchHasCancelled = ($__.fs.J$__v757635546_113_362 = function J$__v757635546_113() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._branchesRemainingToCancel--;});
    TAJS_restrictToType(Promise.prototype, 'object')._enoughBranchesHaveCancelled = ($__.fs.J$__v757635546_115_363 = function J$__v757635546_115() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._branchesRemainingToCancel === undefined || this._branchesRemainingToCancel <= 0;});
    TAJS_restrictToType(Promise.prototype, 'object')._cancelBy = ($__.fs.J$__v757635546_117_364 = function J$__v757635546_117(canceller) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
canceller = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (canceller === this) {
    this._branchesRemainingToCancel = 0;
    this._invokeOnCancel();
    return true;
} else {
    this._branchHasCancelled();
    if (this._enoughBranchesHaveCancelled()) {
        this._invokeOnCancel();
        return true;
    }
}
return false;});
    TAJS_restrictToType(Promise.prototype, 'object')._cancelBranched = ($__.fs.J$__v757635546_119_365 = function J$__v757635546_119() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._enoughBranchesHaveCancelled()) {
    this._cancel();
}});
    TAJS_restrictToType(Promise.prototype, 'object')._cancel = ($__.fs.J$__v757635546_121_366 = function J$__v757635546_121() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!this._isCancellable())
    return;
this._setCancelled();
async.invoke(this._cancelPromises, this, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object')._cancelPromises = ($__.fs.J$__v757635546_123_367 = function J$__v757635546_123() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._length() > 0)
    this._settlePromises();});
    TAJS_restrictToType(Promise.prototype, 'object')._unsetOnCancel = ($__.fs.J$__v757635546_125_368 = function J$__v757635546_125() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._onCancelField = undefined;});
    TAJS_restrictToType(Promise.prototype, 'object')._isCancellable = ($__.fs.J$__v757635546_127_369 = function J$__v757635546_127() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.isPending() && !this._isCancelled();});
    TAJS_restrictToType(Promise.prototype, 'object').isCancellable = ($__.fs.J$__v757635546_129_370 = function J$__v757635546_129() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.isPending() && !this.isCancelled();});
    TAJS_restrictToType(Promise.prototype, 'object')._doInvokeOnCancel = ($__.fs.J$__v757635546_131_371 = function J$__v757635546_131(onCancelCallback, internalOnly) {
var vvv_return, vvv_switch, e;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
onCancelCallback = arguments[0], internalOnly = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (util.isArray(onCancelCallback)) {
    for (var i = 0; i < onCancelCallback.length; ++i) {
        this._doInvokeOnCancel(onCancelCallback[i], internalOnly);
    }
} else if (onCancelCallback !== undefined) {
    if (typeof onCancelCallback === 'function') {
        if (!internalOnly) {
            e = tryCatch(onCancelCallback).call(this._boundValue());
            if (e === errorObj) {
                this._attachExtraTrace(e.e);
                async.throwLater(e.e);
            }
        }
    } else {
        onCancelCallback._resultCancelled(this);
    }
}});
    TAJS_restrictToType(Promise.prototype, 'object')._invokeOnCancel = ($__.fs.J$__v757635546_133_372 = function J$__v757635546_133() {
var vvv_return, vvv_switch, onCancelCallback;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
onCancelCallback = this._onCancel();
this._unsetOnCancel();
async.invoke(this._doInvokeOnCancel, this, onCancelCallback);});
    TAJS_restrictToType(Promise.prototype, 'object')._invokeInternalOnCancel = ($__.fs.J$__v757635546_135_373 = function J$__v757635546_135() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._isCancellable()) {
    this._doInvokeOnCancel(this._onCancel(), true);
    this._unsetOnCancel();
}});
    TAJS_restrictToType(Promise.prototype, 'object')._resultCancelled = ($__.fs.J$__v757635546_137_374 = function J$__v757635546_137() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.cancel();});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
tryCatch = util.tryCatch;
errorObj = util.errorObj;
async = Promise._async;
Promise.prototype['break'] = Promise.prototype.cancel = function () {
    if (!debug.cancellation())
        return this._warn('cancellation is disabled');
    var promise = this;
    var child = promise;
    while (promise._isCancellable()) {
        if (!promise._cancelBy(child)) {
            if (child._isFollowing()) {
                child._followee().cancel();
            } else {
                child._cancelBranched();
            }
            break;
        }
        var parent = promise._cancellationParent;
        if (parent == null || !parent._isCancellable()) {
            if (promise._isFollowing()) {
                promise._followee().cancel();
            } else {
                promise._cancelBranched();
            }
            break;
        } else {
            if (promise._isFollowing())
                promise._followee().cancel();
            promise._setWillBeCancelled();
            child = promise;
            promise = parent;
        }
    }
};
Promise.prototype._branchHasCancelled = function () {
    this._branchesRemainingToCancel--;
};
Promise.prototype._enoughBranchesHaveCancelled = function () {
    return this._branchesRemainingToCancel === undefined || this._branchesRemainingToCancel <= 0;
};
Promise.prototype._cancelBy = function (canceller) {
    if (canceller === this) {
        this._branchesRemainingToCancel = 0;
        this._invokeOnCancel();
        return true;
    } else {
        this._branchHasCancelled();
        if (this._enoughBranchesHaveCancelled()) {
            this._invokeOnCancel();
            return true;
        }
    }
    return false;
};
Promise.prototype._cancelBranched = function () {
    if (this._enoughBranchesHaveCancelled()) {
        this._cancel();
    }
};
Promise.prototype._cancel = function () {
    if (!this._isCancellable())
        return;
    this._setCancelled();
    async.invoke(this._cancelPromises, this, undefined);
};
Promise.prototype._cancelPromises = function () {
    if (this._length() > 0)
        this._settlePromises();
};
Promise.prototype._unsetOnCancel = function () {
    this._onCancelField = undefined;
};
Promise.prototype._isCancellable = function () {
    return this.isPending() && !this._isCancelled();
};
Promise.prototype.isCancellable = function () {
    return this.isPending() && !this.isCancelled();
};
Promise.prototype._doInvokeOnCancel = function (onCancelCallback, internalOnly) {
    if (util.isArray(onCancelCallback)) {
        for (var i = 0; i < onCancelCallback.length; ++i) {
            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);
        }
    } else if (onCancelCallback !== undefined) {
        if (typeof onCancelCallback === 'function') {
            if (!internalOnly) {
                var e = tryCatch(onCancelCallback).call(this._boundValue());
                if (e === errorObj) {
                    this._attachExtraTrace(e.e);
                    async.throwLater(e.e);
                }
            }
        } else {
            onCancelCallback._resultCancelled(this);
        }
    }
};
Promise.prototype._invokeOnCancel = function () {
    var onCancelCallback = this._onCancel();
    this._unsetOnCancel();
    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);
};
Promise.prototype._invokeInternalOnCancel = function () {
    if (this._isCancellable()) {
        this._doInvokeOnCancel(this._onCancel(), true);
        this._unsetOnCancel();
    }
};
Promise.prototype._resultCancelled = function () {
    this.cancel();
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, PromiseArray, apiRejection, debug) {
    var util = _dereq_('./util');
    var tryCatch = util.tryCatch;
    var errorObj = util.errorObj;
    var async = Promise._async;
    Promise.prototype['break'] = Promise.prototype.cancel = function () {
        if (!debug.cancellation())
            return this._warn('cancellation is disabled');
        var promise = this;
        var child = promise;
        while (promise._isCancellable()) {
            if (!promise._cancelBy(child)) {
                if (child._isFollowing()) {
                    child._followee().cancel();
                } else {
                    child._cancelBranched();
                }
                break;
            }
            var parent = promise._cancellationParent;
            if (parent == null || !parent._isCancellable()) {
                if (promise._isFollowing()) {
                    promise._followee().cancel();
                } else {
                    promise._cancelBranched();
                }
                break;
            } else {
                if (promise._isFollowing())
                    promise._followee().cancel();
                promise._setWillBeCancelled();
                child = promise;
                promise = parent;
            }
        }
    };
    Promise.prototype._branchHasCancelled = function () {
        this._branchesRemainingToCancel--;
    };
    Promise.prototype._enoughBranchesHaveCancelled = function () {
        return this._branchesRemainingToCancel === undefined || this._branchesRemainingToCancel <= 0;
    };
    Promise.prototype._cancelBy = function (canceller) {
        if (canceller === this) {
            this._branchesRemainingToCancel = 0;
            this._invokeOnCancel();
            return true;
        } else {
            this._branchHasCancelled();
            if (this._enoughBranchesHaveCancelled()) {
                this._invokeOnCancel();
                return true;
            }
        }
        return false;
    };
    Promise.prototype._cancelBranched = function () {
        if (this._enoughBranchesHaveCancelled()) {
            this._cancel();
        }
    };
    Promise.prototype._cancel = function () {
        if (!this._isCancellable())
            return;
        this._setCancelled();
        async.invoke(this._cancelPromises, this, undefined);
    };
    Promise.prototype._cancelPromises = function () {
        if (this._length() > 0)
            this._settlePromises();
    };
    Promise.prototype._unsetOnCancel = function () {
        this._onCancelField = undefined;
    };
    Promise.prototype._isCancellable = function () {
        return this.isPending() && !this._isCancelled();
    };
    Promise.prototype.isCancellable = function () {
        return this.isPending() && !this.isCancelled();
    };
    Promise.prototype._doInvokeOnCancel = function (onCancelCallback, internalOnly) {
        if (util.isArray(onCancelCallback)) {
            for (var i = 0; i < onCancelCallback.length; ++i) {
                this._doInvokeOnCancel(onCancelCallback[i], internalOnly);
            }
        } else if (onCancelCallback !== undefined) {
            if (typeof onCancelCallback === 'function') {
                if (!internalOnly) {
                    var e = tryCatch(onCancelCallback).call(this._boundValue());
                    if (e === errorObj) {
                        this._attachExtraTrace(e.e);
                        async.throwLater(e.e);
                    }
                }
            } else {
                onCancelCallback._resultCancelled(this);
            }
        }
    };
    Promise.prototype._invokeOnCancel = function () {
        var onCancelCallback = this._onCancel();
        this._unsetOnCancel();
        async.invoke(this._doInvokeOnCancel, this, onCancelCallback);
    };
    Promise.prototype._invokeInternalOnCancel = function () {
        if (this._isCancellable()) {
            this._doInvokeOnCancel(this._onCancel(), true);
            this._unsetOnCancel();
        }
    };
    Promise.prototype._resultCancelled = function () {
        this.cancel();
    };
};}, $__.fs.J$__v757635546_141_11),
            $__.os.oid5 = {
                './util': 36
            }
        ],
        7: [
            ($__.fs.J$__v757635546_148_12 = function J$__v757635546_148(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid90).exports = ($__.fs.J$__v757635546_146_274 = function J$__v757635546_146(NEXT_FILTER) {
var vvv_return, vvv_switch, util, getKeys, tryCatch, errorObj, catchFilter;
catchFilter = function catchFilter(instances, cb, promise) {
    return function (e) {
        var boundTo = promise._boundValue();
        predicateLoop:
            for (var i = 0; i < instances.length; ++i) {
                var item = instances[i];
                if (item === Error || item != null && item.prototype instanceof Error) {
                    if (e instanceof item) {
                        return tryCatch(cb).call(boundTo, e);
                    }
                } else if (typeof item === 'function') {
                    var matchesPredicate = tryCatch(item).call(boundTo, e);
                    if (matchesPredicate === errorObj) {
                        return matchesPredicate;
                    } else if (matchesPredicate) {
                        return tryCatch(cb).call(boundTo, e);
                    }
                } else if (util.isObject(e)) {
                    var keys = getKeys(item);
                    for (var j = 0; j < keys.length; ++j) {
                        var key = keys[j];
                        if (item[key] != e[key]) {
                            continue predicateLoop;
                        }
                    }
                    return tryCatch(cb).call(boundTo, e);
                }
            }
        return NEXT_FILTER;
    };
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
NEXT_FILTER = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    catchFilter = ($__.fs.catchFilter_275 = function catchFilter(instances, cb, promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
instances = arguments[0], cb = arguments[1], promise = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (e) {
    var boundTo = promise._boundValue();
    predicateLoop:
        for (var i = 0; i < instances.length; ++i) {
            var item = instances[i];
            if (item === Error || item != null && item.prototype instanceof Error) {
                if (e instanceof item) {
                    return tryCatch(cb).call(boundTo, e);
                }
            } else if (typeof item === 'function') {
                var matchesPredicate = tryCatch(item).call(boundTo, e);
                if (matchesPredicate === errorObj) {
                    return matchesPredicate;
                } else if (matchesPredicate) {
                    return tryCatch(cb).call(boundTo, e);
                }
            } else if (util.isObject(e)) {
                var keys = getKeys(item);
                for (var j = 0; j < keys.length; ++j) {
                    var key = keys[j];
                    if (item[key] != e[key]) {
                        continue predicateLoop;
                    }
                }
                return tryCatch(cb).call(boundTo, e);
            }
        }
    return NEXT_FILTER;
};});
    util = (_dereq_, $__.fs.J$__v757635546_3_273)('./util', 0, true, $__.uid);
    getKeys = TAJS_restrictToType(((_dereq_, $__.fs.J$__v757635546_3_273)('./es5', 1, true, $__.uid), $__.os.oid47).keys, 'function');
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    return catchFilter;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    catchFilter = ($__.fs.catchFilter_282 = function catchFilter(instances, cb, promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
instances = arguments[0], cb = arguments[1], promise = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (e) {
    var boundTo = promise._boundValue();
    predicateLoop:
        for (var i = 0; i < instances.length; ++i) {
            var item = instances[i];
            if (item === Error || item != null && item.prototype instanceof Error) {
                if (e instanceof item) {
                    return tryCatch(cb).call(boundTo, e);
                }
            } else if (typeof item === 'function') {
                var matchesPredicate = tryCatch(item).call(boundTo, e);
                if (matchesPredicate === errorObj) {
                    return matchesPredicate;
                } else if (matchesPredicate) {
                    return tryCatch(cb).call(boundTo, e);
                }
            } else if (util.isObject(e)) {
                var keys = getKeys(item);
                for (var j = 0; j < keys.length; ++j) {
                    var key = keys[j];
                    if (item[key] != e[key]) {
                        continue predicateLoop;
                    }
                }
                return tryCatch(cb).call(boundTo, e);
            }
        }
    return NEXT_FILTER;
};});
    util = (_dereq_, $__.fs.J$__v757635546_3_273)('./util', 2, true, $__.uid);
    getKeys = TAJS_restrictToType(((_dereq_, $__.fs.J$__v757635546_3_273)('./es5', 3, true, $__.uid), $__.os.oid47).keys, 'function');
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    return catchFilter;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
getKeys = _dereq_('./es5').keys;
tryCatch = util.tryCatch;
errorObj = util.errorObj;
return catchFilter;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (NEXT_FILTER) {
    var util = _dereq_('./util');
    var getKeys = _dereq_('./es5').keys;
    var tryCatch = util.tryCatch;
    var errorObj = util.errorObj;
    function catchFilter(instances, cb, promise) {
        return function (e) {
            var boundTo = promise._boundValue();
            predicateLoop:
                for (var i = 0; i < instances.length; ++i) {
                    var item = instances[i];
                    if (item === Error || item != null && item.prototype instanceof Error) {
                        if (e instanceof item) {
                            return tryCatch(cb).call(boundTo, e);
                        }
                    } else if (typeof item === 'function') {
                        var matchesPredicate = tryCatch(item).call(boundTo, e);
                        if (matchesPredicate === errorObj) {
                            return matchesPredicate;
                        } else if (matchesPredicate) {
                            return tryCatch(cb).call(boundTo, e);
                        }
                    } else if (util.isObject(e)) {
                        var keys = getKeys(item);
                        for (var j = 0; j < keys.length; ++j) {
                            var key = keys[j];
                            if (item[key] != e[key]) {
                                continue predicateLoop;
                            }
                        }
                        return tryCatch(cb).call(boundTo, e);
                    }
                }
            return NEXT_FILTER;
        };
    }
    return catchFilter;
};}, $__.fs.J$__v757635546_148_12),
            $__.os.oid6 = {
                './es5': 13,
                './util': 36
            }
        ],
        8: [
            ($__.fs.J$__v757635546_175_13 = function J$__v757635546_175(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid80).exports = ($__.fs.J$__v757635546_173_168 = function J$__v757635546_173(Promise) {
var vvv_return, vvv_switch, longStackTraces, contextStack, Context, createContext, peekContext;
Context = function Context() {
    this._trace = new Context.CapturedTrace(peekContext());
};
createContext = function createContext() {
    if (longStackTraces)
        return new Context();
};
peekContext = function peekContext() {
    var lastIndex = contextStack.length - 1;
    if (lastIndex >= 0) {
        return contextStack[lastIndex];
    }
    return undefined;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    Context = ($__.fs.Context_169 = function Context() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._trace = new Context.CapturedTrace(peekContext());});
    createContext = ($__.fs.createContext_170 = function createContext() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (longStackTraces)
    return new Context();});
    peekContext = ($__.fs.peekContext_171 = function peekContext() {
var vvv_return, vvv_switch, lastIndex;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 8);
    lastIndex = (contextStack.length, 0) - 1;
    lastIndex >= 0;
    return undefined;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
lastIndex = contextStack.length - 1;
if (lastIndex >= 0) {
    return contextStack[lastIndex];
}
return undefined;});
    longStackTraces = false;
    contextStack = [];
    TAJS_restrictToType(Promise.prototype, 'object')._promiseCreated = ($__.fs.J$__v757635546_150_172 = function J$__v757635546_150() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(Promise.prototype, 'object')._pushContext = ($__.fs.J$__v757635546_152_173 = function J$__v757635546_152() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(Promise.prototype, 'object')._popContext = ($__.fs.J$__v757635546_154_174 = function J$__v757635546_154() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return null;});
    Promise._peekContext = TAJS_restrictToType(Promise.prototype, 'object')._peekContext = ($__.fs.J$__v757635546_156_175 = function J$__v757635546_156() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(Context.prototype, 'object')._pushContext = ($__.fs.J$__v757635546_159_176 = function J$__v757635546_159() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._trace !== undefined) {
    this._trace._promiseCreated = null;
    contextStack.push(this._trace);
}});
    TAJS_restrictToType(Context.prototype, 'object')._popContext = ($__.fs.J$__v757635546_161_177 = function J$__v757635546_161() {
var vvv_return, vvv_switch, trace, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._trace !== undefined) {
    trace = contextStack.pop();
    ret = trace._promiseCreated;
    trace._promiseCreated = null;
    return ret;
}
return null;});
    Context.CapturedTrace = null;
    Context.create = createContext;
    Context.deactivateLongStackTraces = ($__.fs.J$__v757635546_165_178 = function J$__v757635546_165() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    Context.activateLongStackTraces = ($__.fs.J$__v757635546_171_179 = function J$__v757635546_171() {
var vvv_return, vvv_switch, Promise_pushContext, Promise_popContext, Promise_PeekContext, Promise_peekContext, Promise_promiseCreated;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    Promise_pushContext = TAJS_restrictToType(TAJS_restrictToType(Promise.prototype, 'object')._pushContext, 'function');
    Promise_popContext = TAJS_restrictToType(TAJS_restrictToType(Promise.prototype, 'object')._popContext, 'function');
    Promise_PeekContext = TAJS_restrictToType(Promise._peekContext, 'function');
    Promise_peekContext = TAJS_restrictToType(TAJS_restrictToType(Promise.prototype, 'object')._peekContext, 'function');
    Promise_promiseCreated = TAJS_restrictToType(TAJS_restrictToType(Promise.prototype, 'object')._promiseCreated, 'function');
    Context.deactivateLongStackTraces = ($__.fs.J$__v757635546_167_257 = function J$__v757635546_167() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Promise.prototype._pushContext = Promise_pushContext;
Promise.prototype._popContext = Promise_popContext;
Promise._peekContext = Promise_PeekContext;
Promise.prototype._peekContext = Promise_peekContext;
Promise.prototype._promiseCreated = Promise_promiseCreated;
longStackTraces = false;});
    longStackTraces = true;
    TAJS_restrictToType(Promise.prototype, 'object')._pushContext = TAJS_restrictToType(TAJS_restrictToType(Context.prototype, 'object')._pushContext, 'function');
    TAJS_restrictToType(Promise.prototype, 'object')._popContext = TAJS_restrictToType(TAJS_restrictToType(Context.prototype, 'object')._popContext, 'function');
    Promise._peekContext = TAJS_restrictToType(Promise.prototype, 'object')._peekContext = peekContext;
    TAJS_restrictToType(Promise.prototype, 'object')._promiseCreated = ($__.fs.J$__v757635546_169_258 = function J$__v757635546_169() {
var vvv_return, vvv_switch, vvv_tmp0, ctx;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 0, true, $__.uid));
    ctx;
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 1, true, $__.uid));
    ctx;
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 2, true, $__.uid));
    ctx;
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 3, true, $__.uid));
    ctx;
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 4, true, $__.uid));
    ctx;
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 5, true, $__.uid));
    ctx;
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 6, true, $__.uid));
    ctx;
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 7, true, $__.uid));
    ctx;
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    ctx = (vvv_tmp0 = this, '_peekContext', $__.fs.peekContext_171.call(vvv_tmp0, 8, true, $__.uid));
    ctx;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ctx = this._peekContext();
if (ctx && ctx._promiseCreated == null)
    ctx._promiseCreated = this;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Promise_pushContext = Promise.prototype._pushContext;
Promise_popContext = Promise.prototype._popContext;
Promise_PeekContext = Promise._peekContext;
Promise_peekContext = Promise.prototype._peekContext;
Promise_promiseCreated = Promise.prototype._promiseCreated;
Context.deactivateLongStackTraces = function () {
    Promise.prototype._pushContext = Promise_pushContext;
    Promise.prototype._popContext = Promise_popContext;
    Promise._peekContext = Promise_PeekContext;
    Promise.prototype._peekContext = Promise_peekContext;
    Promise.prototype._promiseCreated = Promise_promiseCreated;
    longStackTraces = false;
};
longStackTraces = true;
Promise.prototype._pushContext = Context.prototype._pushContext;
Promise.prototype._popContext = Context.prototype._popContext;
Promise._peekContext = Promise.prototype._peekContext = peekContext;
Promise.prototype._promiseCreated = function () {
    var ctx = this._peekContext();
    if (ctx && ctx._promiseCreated == null)
        ctx._promiseCreated = this;
};});
    return Context;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
longStackTraces = false;
contextStack = [];
Promise.prototype._promiseCreated = function () {
};
Promise.prototype._pushContext = function () {
};
Promise.prototype._popContext = function () {
    return null;
};
Promise._peekContext = Promise.prototype._peekContext = function () {
};
Context.prototype._pushContext = function () {
    if (this._trace !== undefined) {
        this._trace._promiseCreated = null;
        contextStack.push(this._trace);
    }
};
Context.prototype._popContext = function () {
    if (this._trace !== undefined) {
        var trace = contextStack.pop();
        var ret = trace._promiseCreated;
        trace._promiseCreated = null;
        return ret;
    }
    return null;
};
Context.CapturedTrace = null;
Context.create = createContext;
Context.deactivateLongStackTraces = function () {
};
Context.activateLongStackTraces = function () {
    var Promise_pushContext = Promise.prototype._pushContext;
    var Promise_popContext = Promise.prototype._popContext;
    var Promise_PeekContext = Promise._peekContext;
    var Promise_peekContext = Promise.prototype._peekContext;
    var Promise_promiseCreated = Promise.prototype._promiseCreated;
    Context.deactivateLongStackTraces = function () {
        Promise.prototype._pushContext = Promise_pushContext;
        Promise.prototype._popContext = Promise_popContext;
        Promise._peekContext = Promise_PeekContext;
        Promise.prototype._peekContext = Promise_peekContext;
        Promise.prototype._promiseCreated = Promise_promiseCreated;
        longStackTraces = false;
    };
    longStackTraces = true;
    Promise.prototype._pushContext = Context.prototype._pushContext;
    Promise.prototype._popContext = Context.prototype._popContext;
    Promise._peekContext = Promise.prototype._peekContext = peekContext;
    Promise.prototype._promiseCreated = function () {
        var ctx = this._peekContext();
        if (ctx && ctx._promiseCreated == null)
            ctx._promiseCreated = this;
    };
};
return Context;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise) {
    var longStackTraces = false;
    var contextStack = [];
    Promise.prototype._promiseCreated = function () {
    };
    Promise.prototype._pushContext = function () {
    };
    Promise.prototype._popContext = function () {
        return null;
    };
    Promise._peekContext = Promise.prototype._peekContext = function () {
    };
    function Context() {
        this._trace = new Context.CapturedTrace(peekContext());
    }
    Context.prototype._pushContext = function () {
        if (this._trace !== undefined) {
            this._trace._promiseCreated = null;
            contextStack.push(this._trace);
        }
    };
    Context.prototype._popContext = function () {
        if (this._trace !== undefined) {
            var trace = contextStack.pop();
            var ret = trace._promiseCreated;
            trace._promiseCreated = null;
            return ret;
        }
        return null;
    };
    function createContext() {
        if (longStackTraces)
            return new Context();
    }
    function peekContext() {
        var lastIndex = contextStack.length - 1;
        if (lastIndex >= 0) {
            return contextStack[lastIndex];
        }
        return undefined;
    }
    Context.CapturedTrace = null;
    Context.create = createContext;
    Context.deactivateLongStackTraces = function () {
    };
    Context.activateLongStackTraces = function () {
        var Promise_pushContext = Promise.prototype._pushContext;
        var Promise_popContext = Promise.prototype._popContext;
        var Promise_PeekContext = Promise._peekContext;
        var Promise_peekContext = Promise.prototype._peekContext;
        var Promise_promiseCreated = Promise.prototype._promiseCreated;
        Context.deactivateLongStackTraces = function () {
            Promise.prototype._pushContext = Promise_pushContext;
            Promise.prototype._popContext = Promise_popContext;
            Promise._peekContext = Promise_PeekContext;
            Promise.prototype._peekContext = Promise_peekContext;
            Promise.prototype._promiseCreated = Promise_promiseCreated;
            longStackTraces = false;
        };
        longStackTraces = true;
        Promise.prototype._pushContext = Context.prototype._pushContext;
        Promise.prototype._popContext = Context.prototype._popContext;
        Promise._peekContext = Promise.prototype._peekContext = peekContext;
        Promise.prototype._promiseCreated = function () {
            var ctx = this._peekContext();
            if (ctx && ctx._promiseCreated == null)
                ctx._promiseCreated = this;
        };
    };
    return Context;
};}, $__.fs.J$__v757635546_175_13),
            $__.os.oid7 = {}
        ],
        9: [
            ($__.fs.J$__v757635546_329_14 = function J$__v757635546_329(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid82).exports = ($__.fs.J$__v757635546_327_181 = function J$__v757635546_327(Promise, Context) {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2, vvv_tmp3, vvv_tmp4, vvv_tmp5, getDomain, async, Warning, util, canAttachTrace, unhandledRejectionHandled, possiblyUnhandledRejection, bluebirdFramePattern, nodeFramePattern, parseLinePattern, stackFramePattern, formatStack, indentStackFrames, printWarning, debugging, warnings, longStackTraces, wForgottenReturn, disableLongStackTraces, fireDomEvent, fireGlobalEvent, generatePromiseLifecycleEventObject, eventToObjectGenerator, activeFireEvent, defaultFireEvent, cancellationExecute, cancellationAttachCancellationCallback, cancellationOnCancel, cancellationSetOnCancel, cancellationClearCancellationData, cancellationPropagateFrom, bindingPropagateFrom, propagateFromFunction, boundValueFunction, longStackTracesCaptureStackTrace, longStackTracesAttachExtraTrace, checkForgottenReturns, deprecated, warn, reconstructStack, removeDuplicateOrEmptyJumps, removeCommonRoots, cleanStack, stackFramesAsArray, parseStackAndMessage, formatAndLogError, fireRejectionEvent, formatNonError, snip, longStackTracesIsSupported, shouldIgnore, parseLineInfoRegex, parseLineInfo, setBounds, CapturedTrace, captureStackTrace, config;
generatePromiseLifecycleEventObject = function generatePromiseLifecycleEventObject(name, promise) {
    return {
        promise: promise
    };
};
defaultFireEvent = function defaultFireEvent() {
    return false;
};
cancellationExecute = function cancellationExecute(executor, resolve, reject) {
    var promise = this;
    try {
        executor(resolve, reject, function (onCancel) {
            if (typeof onCancel !== 'function') {
                throw new TypeError('onCancel must be a function, got: ' + util.toString(onCancel));
            }
            promise._attachCancellationCallback(onCancel);
        });
    } catch (e) {
        return e;
    }
};
cancellationAttachCancellationCallback = function cancellationAttachCancellationCallback(onCancel) {
    if (!this._isCancellable())
        return this;
    var previousOnCancel = this._onCancel();
    if (previousOnCancel !== undefined) {
        if (util.isArray(previousOnCancel)) {
            previousOnCancel.push(onCancel);
        } else {
            this._setOnCancel([
                previousOnCancel,
                onCancel
            ]);
        }
    } else {
        this._setOnCancel(onCancel);
    }
};
cancellationOnCancel = function cancellationOnCancel() {
    return this._onCancelField;
};
cancellationSetOnCancel = function cancellationSetOnCancel(onCancel) {
    this._onCancelField = onCancel;
};
cancellationClearCancellationData = function cancellationClearCancellationData() {
    this._cancellationParent = undefined;
    this._onCancelField = undefined;
};
cancellationPropagateFrom = function cancellationPropagateFrom(parent, flags) {
    if ((flags & 1) !== 0) {
        this._cancellationParent = parent;
        var branchesRemainingToCancel = parent._branchesRemainingToCancel;
        if (branchesRemainingToCancel === undefined) {
            branchesRemainingToCancel = 0;
        }
        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
    }
    if ((flags & 2) !== 0 && parent._isBound()) {
        this._setBoundTo(parent._boundTo);
    }
};
bindingPropagateFrom = function bindingPropagateFrom(parent, flags) {
    if ((flags & 2) !== 0 && parent._isBound()) {
        this._setBoundTo(parent._boundTo);
    }
};
boundValueFunction = function boundValueFunction() {
    var ret = this._boundTo;
    if (ret !== undefined) {
        if (ret instanceof Promise) {
            if (ret.isFulfilled()) {
                return ret.value();
            } else {
                return undefined;
            }
        }
    }
    return ret;
};
longStackTracesCaptureStackTrace = function longStackTracesCaptureStackTrace() {
    this._trace = new CapturedTrace(this._peekContext());
};
longStackTracesAttachExtraTrace = function longStackTracesAttachExtraTrace(error, ignoreSelf) {
    if (canAttachTrace(error)) {
        var trace = this._trace;
        if (trace !== undefined) {
            if (ignoreSelf)
                trace = trace._parent;
        }
        if (trace !== undefined) {
            trace.attachExtraTrace(error);
        } else if (!error.__stackCleaned__) {
            var parsed = parseStackAndMessage(error);
            util.notEnumerableProp(error, 'stack', parsed.message + '\n' + parsed.stack.join('\n'));
            util.notEnumerableProp(error, '__stackCleaned__', true);
        }
    }
};
checkForgottenReturns = function checkForgottenReturns(returnValue, promiseCreated, name, promise, parent) {
    if (returnValue === undefined && promiseCreated !== null && wForgottenReturn) {
        if (parent !== undefined && parent._returnedNonUndefined())
            return;
        if ((promise._bitField & 65535) === 0)
            return;
        if (name)
            name = name + ' ';
        var handlerLine = '';
        var creatorLine = '';
        if (promiseCreated._trace) {
            var traceLines = promiseCreated._trace.stack.split('\n');
            var stack = cleanStack(traceLines);
            for (var i = stack.length - 1; i >= 0; --i) {
                var line = stack[i];
                if (!nodeFramePattern.test(line)) {
                    var lineMatches = line.match(parseLinePattern);
                    if (lineMatches) {
                        handlerLine = 'at ' + lineMatches[1] + ':' + lineMatches[2] + ':' + lineMatches[3] + ' ';
                    }
                    break;
                }
            }
            if (stack.length > 0) {
                var firstUserLine = stack[0];
                for (var i = 0; i < traceLines.length; ++i) {
                    if (traceLines[i] === firstUserLine) {
                        if (i > 0) {
                            creatorLine = '\n' + traceLines[i - 1];
                        }
                        break;
                    }
                }
            }
        }
        var msg = 'a promise was created in a ' + name + 'handler ' + handlerLine + 'but was not returned from it, ' + 'see http://goo.gl/rRqMUw' + creatorLine;
        promise._warn(msg, true, promiseCreated);
    }
};
deprecated = function deprecated(name, replacement) {
    var message = name + ' is deprecated and will be removed in a future version.';
    if (replacement)
        message += ' Use ' + replacement + ' instead.';
    return warn(message);
};
warn = function warn(message, shouldUseOwnTrace, promise) {
    if (!config.warnings)
        return;
    var warning = new Warning(message);
    var ctx;
    if (shouldUseOwnTrace) {
        promise._attachExtraTrace(warning);
    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {
        ctx.attachExtraTrace(warning);
    } else {
        var parsed = parseStackAndMessage(warning);
        warning.stack = parsed.message + '\n' + parsed.stack.join('\n');
    }
    if (!activeFireEvent('warning', warning)) {
        formatAndLogError(warning, '', true);
    }
};
reconstructStack = function reconstructStack(message, stacks) {
    for (var i = 0; i < stacks.length - 1; ++i) {
        stacks[i].push('From previous event:');
        stacks[i] = stacks[i].join('\n');
    }
    if (i < stacks.length) {
        stacks[i] = stacks[i].join('\n');
    }
    return message + '\n' + stacks.join('\n');
};
removeDuplicateOrEmptyJumps = function removeDuplicateOrEmptyJumps(stacks) {
    for (var i = 0; i < stacks.length; ++i) {
        if (stacks[i].length === 0 || i + 1 < stacks.length && stacks[i][0] === stacks[i + 1][0]) {
            stacks.splice(i, 1);
            i--;
        }
    }
};
removeCommonRoots = function removeCommonRoots(stacks) {
    var current = stacks[0];
    for (var i = 1; i < stacks.length; ++i) {
        var prev = stacks[i];
        var currentLastIndex = current.length - 1;
        var currentLastLine = current[currentLastIndex];
        var commonRootMeetPoint = -1;
        for (var j = prev.length - 1; j >= 0; --j) {
            if (prev[j] === currentLastLine) {
                commonRootMeetPoint = j;
                break;
            }
        }
        for (var j = commonRootMeetPoint; j >= 0; --j) {
            var line = prev[j];
            if (current[currentLastIndex] === line) {
                current.pop();
                currentLastIndex--;
            } else {
                break;
            }
        }
        current = prev;
    }
};
cleanStack = function cleanStack(stack) {
    var ret = [];
    for (var i = 0; i < stack.length; ++i) {
        var line = stack[i];
        var isTraceLine = '    (No stack trace)' === line || stackFramePattern.test(line);
        var isInternalFrame = isTraceLine && shouldIgnore(line);
        if (isTraceLine && !isInternalFrame) {
            if (indentStackFrames && line.charAt(0) !== ' ') {
                line = '    ' + line;
            }
            ret.push(line);
        }
    }
    return ret;
};
stackFramesAsArray = function stackFramesAsArray(error) {
    var stack = error.stack.replace(/\s+$/g, '').split('\n');
    for (var i = 0; i < stack.length; ++i) {
        var line = stack[i];
        if ('    (No stack trace)' === line || stackFramePattern.test(line)) {
            break;
        }
    }
    if (i > 0 && error.name != 'SyntaxError') {
        stack = stack.slice(i);
    }
    return stack;
};
parseStackAndMessage = function parseStackAndMessage(error) {
    var stack = error.stack;
    var message = error.toString();
    stack = typeof stack === 'string' && stack.length > 0 ? stackFramesAsArray(error) : ['    (No stack trace)'];
    return {
        message: message,
        stack: error.name == 'SyntaxError' ? stack : cleanStack(stack)
    };
};
formatAndLogError = function formatAndLogError(error, title, isSoft) {
    if (typeof console !== 'undefined') {
        var message;
        if (util.isObject(error)) {
            var stack = error.stack;
            message = title + formatStack(stack, error);
        } else {
            message = title + String(error);
        }
        if (typeof printWarning === 'function') {
            printWarning(message, isSoft);
        } else if (typeof console.log === 'function' || typeof console.log === 'object') {
            console.log(message);
        }
    }
};
fireRejectionEvent = function fireRejectionEvent(name, localHandler, reason, promise) {
    var localEventFired = false;
    try {
        if (typeof localHandler === 'function') {
            localEventFired = true;
            if (name === 'rejectionHandled') {
                localHandler(promise);
            } else {
                localHandler(reason, promise);
            }
        }
    } catch (e) {
        async.throwLater(e);
    }
    if (name === 'unhandledRejection') {
        if (!activeFireEvent(name, reason, promise) && !localEventFired) {
            formatAndLogError(reason, 'Unhandled rejection ');
        }
    } else {
        activeFireEvent(name, promise);
    }
};
formatNonError = function formatNonError(obj) {
    var str;
    if (typeof obj === 'function') {
        str = '[function ' + (obj.name || 'anonymous') + ']';
    } else {
        str = obj && typeof obj.toString === 'function' ? obj.toString() : util.toString(obj);
        var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
        if (ruselessToString.test(str)) {
            try {
                var newStr = JSON.stringify(obj);
                str = newStr;
            } catch (e) {
            }
        }
        if (str.length === 0) {
            str = '(empty array)';
        }
    }
    return '(<' + snip(str) + '>, no stack trace)';
};
snip = function snip(str) {
    var maxChars = 41;
    if (str.length < maxChars) {
        return str;
    }
    return str.substr(0, maxChars - 3) + '...';
};
longStackTracesIsSupported = function longStackTracesIsSupported() {
    return typeof captureStackTrace === 'function';
};
parseLineInfo = function parseLineInfo(line) {
    var matches = line.match(parseLineInfoRegex);
    if (matches) {
        return {
            fileName: matches[1],
            line: parseInt(matches[2], 10)
        };
    }
};
setBounds = function setBounds(firstLineError, lastLineError) {
    if (!longStackTracesIsSupported())
        return;
    var firstStackLines = firstLineError.stack.split('\n');
    var lastStackLines = lastLineError.stack.split('\n');
    var firstIndex = -1;
    var lastIndex = -1;
    var firstFileName;
    var lastFileName;
    for (var i = 0; i < firstStackLines.length; ++i) {
        var result = parseLineInfo(firstStackLines[i]);
        if (result) {
            firstFileName = result.fileName;
            firstIndex = result.line;
            break;
        }
    }
    for (var i = 0; i < lastStackLines.length; ++i) {
        var result = parseLineInfo(lastStackLines[i]);
        if (result) {
            lastFileName = result.fileName;
            lastIndex = result.line;
            break;
        }
    }
    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName || firstFileName !== lastFileName || firstIndex >= lastIndex) {
        return;
    }
    shouldIgnore = function (line) {
        if (bluebirdFramePattern.test(line))
            return true;
        var info = parseLineInfo(line);
        if (info) {
            if (info.fileName === firstFileName && (firstIndex <= info.line && info.line <= lastIndex)) {
                return true;
            }
        }
        return false;
    };
};
CapturedTrace = function CapturedTrace(parent) {
    this._parent = parent;
    this._promisesCreated = 0;
    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);
    captureStackTrace(this, CapturedTrace);
    if (length > 32)
        this.uncycle();
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], Context = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    generatePromiseLifecycleEventObject = ($__.fs.generatePromiseLifecycleEventObject_182 = function generatePromiseLifecycleEventObject(name, promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], promise = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return {
    promise: promise
};});
    defaultFireEvent = ($__.fs.defaultFireEvent_183 = function defaultFireEvent() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 8);
    return false;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return false;});
    cancellationExecute = ($__.fs.cancellationExecute_184 = function cancellationExecute(executor, resolve, reject) {
var vvv_return, vvv_switch, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
executor = arguments[0], resolve = arguments[1], reject = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this;
try {
    executor(resolve, reject, function (onCancel) {
        if (typeof onCancel !== 'function') {
            throw new TypeError('onCancel must be a function, got: ' + util.toString(onCancel));
        }
        promise._attachCancellationCallback(onCancel);
    });
} catch (e) {
    return e;
}});
    cancellationAttachCancellationCallback = ($__.fs.cancellationAttachCancellationCallback_185 = function cancellationAttachCancellationCallback(onCancel) {
var vvv_return, vvv_switch, previousOnCancel;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
onCancel = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!this._isCancellable())
    return this;
previousOnCancel = this._onCancel();
if (previousOnCancel !== undefined) {
    if (util.isArray(previousOnCancel)) {
        previousOnCancel.push(onCancel);
    } else {
        this._setOnCancel([
            previousOnCancel,
            onCancel
        ]);
    }
} else {
    this._setOnCancel(onCancel);
}});
    cancellationOnCancel = ($__.fs.cancellationOnCancel_186 = function cancellationOnCancel() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._onCancelField;});
    cancellationSetOnCancel = ($__.fs.cancellationSetOnCancel_187 = function cancellationSetOnCancel(onCancel) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
onCancel = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._onCancelField = onCancel;});
    cancellationClearCancellationData = ($__.fs.cancellationClearCancellationData_188 = function cancellationClearCancellationData() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._cancellationParent = undefined;
this._onCancelField = undefined;});
    cancellationPropagateFrom = ($__.fs.cancellationPropagateFrom_189 = function cancellationPropagateFrom(parent, flags) {
var vvv_return, vvv_switch, branchesRemainingToCancel;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
parent = arguments[0], flags = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((flags & 1) !== 0) {
    this._cancellationParent = parent;
    branchesRemainingToCancel = parent._branchesRemainingToCancel;
    if (branchesRemainingToCancel === undefined) {
        branchesRemainingToCancel = 0;
    }
    parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
}
if ((flags & 2) !== 0 && parent._isBound()) {
    this._setBoundTo(parent._boundTo);
}});
    bindingPropagateFrom = ($__.fs.bindingPropagateFrom_190 = function bindingPropagateFrom(parent, flags) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
parent = arguments[0], flags = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((flags & 2) !== 0 && parent._isBound()) {
    this._setBoundTo(parent._boundTo);
}});
    boundValueFunction = ($__.fs.boundValueFunction_191 = function boundValueFunction() {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = this._boundTo;
if (ret !== undefined) {
    if (ret instanceof Promise) {
        if (ret.isFulfilled()) {
            return ret.value();
        } else {
            return undefined;
        }
    }
}
return ret;});
    longStackTracesCaptureStackTrace = ($__.fs.longStackTracesCaptureStackTrace_192 = function longStackTracesCaptureStackTrace() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._trace = new CapturedTrace(this._peekContext());});
    longStackTracesAttachExtraTrace = ($__.fs.longStackTracesAttachExtraTrace_193 = function longStackTracesAttachExtraTrace(error, ignoreSelf) {
var vvv_return, vvv_switch, trace, parsed;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
error = arguments[0], ignoreSelf = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (canAttachTrace(error)) {
    trace = this._trace;
    if (trace !== undefined) {
        if (ignoreSelf)
            trace = trace._parent;
    }
    if (trace !== undefined) {
        trace.attachExtraTrace(error);
    } else if (!error.__stackCleaned__) {
        parsed = parseStackAndMessage(error);
        util.notEnumerableProp(error, 'stack', parsed.message + '\n' + parsed.stack.join('\n'));
        util.notEnumerableProp(error, '__stackCleaned__', true);
    }
}});
    checkForgottenReturns = ($__.fs.checkForgottenReturns_194 = function checkForgottenReturns(returnValue, promiseCreated, name, promise, parent) {
var vvv_return, vvv_switch, handlerLine, creatorLine, traceLines, stack, line, lineMatches, firstUserLine, msg;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
returnValue = arguments[0], promiseCreated = arguments[1], name = arguments[2], promise = arguments[3], parent = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (returnValue === undefined && promiseCreated !== null && wForgottenReturn) {
    if (parent !== undefined && parent._returnedNonUndefined())
        return;
    if ((promise._bitField & 65535) === 0)
        return;
    if (name)
        name = name + ' ';
    handlerLine = '';
    creatorLine = '';
    if (promiseCreated._trace) {
        traceLines = promiseCreated._trace.stack.split('\n');
        stack = cleanStack(traceLines);
        for (var i = stack.length - 1; i >= 0; --i) {
            line = stack[i];
            if (!nodeFramePattern.test(line)) {
                lineMatches = line.match(parseLinePattern);
                if (lineMatches) {
                    handlerLine = 'at ' + lineMatches[1] + ':' + lineMatches[2] + ':' + lineMatches[3] + ' ';
                }
                break;
            }
        }
        if (stack.length > 0) {
            firstUserLine = stack[0];
            for (var i = 0; i < traceLines.length; ++i) {
                if (traceLines[i] === firstUserLine) {
                    if (i > 0) {
                        creatorLine = '\n' + traceLines[i - 1];
                    }
                    break;
                }
            }
        }
    }
    msg = 'a promise was created in a ' + name + 'handler ' + handlerLine + 'but was not returned from it, ' + 'see http://goo.gl/rRqMUw' + creatorLine;
    promise._warn(msg, true, promiseCreated);
}});
    deprecated = ($__.fs.deprecated_195 = function deprecated(name, replacement) {
var vvv_return, vvv_switch, message;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], replacement = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
message = name + ' is deprecated and will be removed in a future version.';
if (replacement)
    message += ' Use ' + replacement + ' instead.';
return warn(message);});
    warn = ($__.fs.warn_196 = function warn(message, shouldUseOwnTrace, promise) {
var vvv_return, vvv_switch, warning, ctx, parsed;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0], shouldUseOwnTrace = arguments[1], promise = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!config.warnings)
    return;
warning = new Warning(message);
if (shouldUseOwnTrace) {
    promise._attachExtraTrace(warning);
} else if (config.longStackTraces && (ctx = Promise._peekContext())) {
    ctx.attachExtraTrace(warning);
} else {
    parsed = parseStackAndMessage(warning);
    warning.stack = parsed.message + '\n' + parsed.stack.join('\n');
}
if (!activeFireEvent('warning', warning)) {
    formatAndLogError(warning, '', true);
}});
    reconstructStack = ($__.fs.reconstructStack_197 = function reconstructStack(message, stacks) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0], stacks = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (var i = 0; i < stacks.length - 1; ++i) {
    stacks[i].push('From previous event:');
    stacks[i] = stacks[i].join('\n');
}
if (i < stacks.length) {
    stacks[i] = stacks[i].join('\n');
}
return message + '\n' + stacks.join('\n');});
    removeDuplicateOrEmptyJumps = ($__.fs.removeDuplicateOrEmptyJumps_198 = function removeDuplicateOrEmptyJumps(stacks) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
stacks = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (var i = 0; i < stacks.length; ++i) {
    if (stacks[i].length === 0 || i + 1 < stacks.length && stacks[i][0] === stacks[i + 1][0]) {
        stacks.splice(i, 1);
        i--;
    }
}});
    removeCommonRoots = ($__.fs.removeCommonRoots_199 = function removeCommonRoots(stacks) {
var vvv_return, vvv_switch, current, prev, currentLastIndex, currentLastLine, commonRootMeetPoint, line;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
stacks = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
current = stacks[0];
for (var i = 1; i < stacks.length; ++i) {
    prev = stacks[i];
    currentLastIndex = current.length - 1;
    currentLastLine = current[currentLastIndex];
    commonRootMeetPoint = -1;
    for (var j = prev.length - 1; j >= 0; --j) {
        if (prev[j] === currentLastLine) {
            commonRootMeetPoint = j;
            break;
        }
    }
    for (var j = commonRootMeetPoint; j >= 0; --j) {
        line = prev[j];
        if (current[currentLastIndex] === line) {
            current.pop();
            currentLastIndex--;
        } else {
            break;
        }
    }
    current = prev;
}});
    cleanStack = ($__.fs.cleanStack_200 = function cleanStack(stack) {
var vvv_return, vvv_switch, ret, line, isTraceLine, isInternalFrame;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
stack = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = [];
for (var i = 0; i < stack.length; ++i) {
    line = stack[i];
    isTraceLine = '    (No stack trace)' === line || stackFramePattern.test(line);
    isInternalFrame = isTraceLine && shouldIgnore(line);
    if (isTraceLine && !isInternalFrame) {
        if (indentStackFrames && line.charAt(0) !== ' ') {
            line = '    ' + line;
        }
        ret.push(line);
    }
}
return ret;});
    stackFramesAsArray = ($__.fs.stackFramesAsArray_201 = function stackFramesAsArray(error) {
var vvv_return, vvv_switch, stack, line;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
error = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
stack = error.stack.replace(/\s+$/g, '').split('\n');
for (var i = 0; i < stack.length; ++i) {
    line = stack[i];
    if ('    (No stack trace)' === line || stackFramePattern.test(line)) {
        break;
    }
}
if (i > 0 && error.name != 'SyntaxError') {
    stack = stack.slice(i);
}
return stack;});
    parseStackAndMessage = ($__.fs.parseStackAndMessage_202 = function parseStackAndMessage(error) {
var vvv_return, vvv_switch, stack, message;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
error = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
stack = error.stack;
message = error.toString();
stack = typeof stack === 'string' && stack.length > 0 ? stackFramesAsArray(error) : ['    (No stack trace)'];
return {
    message: message,
    stack: error.name == 'SyntaxError' ? stack : cleanStack(stack)
};});
    formatAndLogError = ($__.fs.formatAndLogError_203 = function formatAndLogError(error, title, isSoft) {
var vvv_return, vvv_switch, message, stack;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
error = arguments[0], title = arguments[1], isSoft = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof console !== 'undefined') {
    if (util.isObject(error)) {
        stack = error.stack;
        message = title + formatStack(stack, error);
    } else {
        message = title + String(error);
    }
    if (typeof printWarning === 'function') {
        printWarning(message, isSoft);
    } else if (typeof console.log === 'function' || typeof console.log === 'object') {
        console.log(message);
    }
}});
    fireRejectionEvent = ($__.fs.fireRejectionEvent_204 = function fireRejectionEvent(name, localHandler, reason, promise) {
var vvv_return, vvv_switch, localEventFired;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], localHandler = arguments[1], reason = arguments[2], promise = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
localEventFired = false;
try {
    if (typeof localHandler === 'function') {
        localEventFired = true;
        if (name === 'rejectionHandled') {
            localHandler(promise);
        } else {
            localHandler(reason, promise);
        }
    }
} catch (e) {
    async.throwLater(e);
}
if (name === 'unhandledRejection') {
    if (!activeFireEvent(name, reason, promise) && !localEventFired) {
        formatAndLogError(reason, 'Unhandled rejection ');
    }
} else {
    activeFireEvent(name, promise);
}});
    formatNonError = ($__.fs.formatNonError_205 = function formatNonError(obj) {
var vvv_return, vvv_switch, str, ruselessToString, newStr;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof obj === 'function') {
    str = '[function ' + (obj.name || 'anonymous') + ']';
} else {
    str = obj && typeof obj.toString === 'function' ? obj.toString() : util.toString(obj);
    ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
    if (ruselessToString.test(str)) {
        try {
            newStr = JSON.stringify(obj);
            str = newStr;
        } catch (e) {
        }
    }
    if (str.length === 0) {
        str = '(empty array)';
    }
}
return '(<' + snip(str) + '>, no stack trace)';});
    snip = ($__.fs.snip_206 = function snip(str) {
var vvv_return, vvv_switch, maxChars;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
str = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
maxChars = 41;
if (str.length < maxChars) {
    return str;
}
return str.substr(0, maxChars - 3) + '...';});
    longStackTracesIsSupported = ($__.fs.longStackTracesIsSupported_207 = function longStackTracesIsSupported() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 1);
    return typeof captureStackTrace === 'function';
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return typeof captureStackTrace === 'function';});
    parseLineInfo = ($__.fs.parseLineInfo_208 = function parseLineInfo(line) {
var vvv_return, vvv_switch, matches;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
line = arguments[0];
switch (vvv_switch) {
case 0:
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 2);
    matches = line['match'](parseLineInfoRegex);
    matches;
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    matches = function $__lt3(res) {
        res.length = 3;
        if (res.length != 3)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt3, -2);
    }(line['match'](parseLineInfoRegex));
    matches;
    return $__.os.oid150 = {
        'fileName': TAJS_restrictToType(matches[1, 1], 'string'),
        'line': parseInt(TAJS_restrictToType(matches[2, 2], 'string'), 10)
    };
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    matches = function $__lt4(res) {
        res.length = 3;
        if (res.length != 3)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt4, -2);
    }(line['match'](parseLineInfoRegex));
    matches;
    return $__.os.oid151 = {
        'fileName': TAJS_restrictToType(matches[1, 1], 'string'),
        'line': parseInt(TAJS_restrictToType(matches[2, 2], 'string'), 10)
    };
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
matches = line.match(parseLineInfoRegex);
if (matches) {
    return {
        fileName: matches[1],
        line: parseInt(matches[2], 10)
    };
}});
    setBounds = ($__.fs.setBounds_209 = function setBounds(firstLineError, lastLineError) {
var vvv_return, vvv_switch, firstStackLines, lastStackLines, firstIndex, lastIndex, firstFileName, lastFileName, i, result;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
firstLineError = arguments[0], lastLineError = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    !(longStackTracesIsSupported, $__.fs.longStackTracesIsSupported_207)(1, true, $__.uid);
    firstStackLines = function $__lt1(res) {
        res.length = 11;
        if (res.length != 11)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt1, -2);
    }(TAJS_restrictToType(firstLineError.stack, 'string')['split']('\n'));
    lastStackLines = function $__lt2(res) {
        res.length = 11;
        if (res.length != 11)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt2, -2);
    }(TAJS_restrictToType(lastLineError.stack, 'string')['split']('\n'));
    firstIndex = -1;
    lastIndex = -1;
    i = 0;
    i < (firstStackLines.length, 11);
    result = (parseLineInfo, $__.fs.parseLineInfo_208)(TAJS_restrictToType(firstStackLines[i, 0], 'string'), 0, true, $__.uid);
    result;
    i = +i + 1;
    i < (firstStackLines.length, 11);
    result = (parseLineInfo, $__.fs.parseLineInfo_208)(TAJS_restrictToType(firstStackLines[i, 1], 'string'), 1, true, $__.uid);
    result;
    firstFileName = TAJS_restrictToType((result, $__.os.oid150).fileName, 'string');
    firstIndex = ((result, $__.os.oid150).line, 8630);
    i = 0;
    i < (lastStackLines.length, 11);
    result = (parseLineInfo, $__.fs.parseLineInfo_208)(TAJS_restrictToType(lastStackLines[i, 0], 'string'), 2, true, $__.uid);
    result;
    i = +i + 1;
    i < (lastStackLines.length, 11);
    result = (parseLineInfo, $__.fs.parseLineInfo_208)(TAJS_restrictToType(lastStackLines[i, 1], 'string'), 3, true, $__.uid);
    result;
    lastFileName = TAJS_restrictToType((result, $__.os.oid151).fileName, 'string');
    lastIndex = ((result, $__.os.oid151).line, 8630);
    ((((firstIndex < 0, lastIndex < 0), !firstFileName), !lastFileName), firstFileName !== lastFileName), firstIndex >= lastIndex;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!longStackTracesIsSupported())
    return;
firstStackLines = firstLineError.stack.split('\n');
lastStackLines = lastLineError.stack.split('\n');
firstIndex = -1;
lastIndex = -1;
for (var i = 0; i < firstStackLines.length; ++i) {
    result = parseLineInfo(firstStackLines[i]);
    if (result) {
        firstFileName = result.fileName;
        firstIndex = result.line;
        break;
    }
}
for (var i = 0; i < lastStackLines.length; ++i) {
    result = parseLineInfo(lastStackLines[i]);
    if (result) {
        lastFileName = result.fileName;
        lastIndex = result.line;
        break;
    }
}
if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName || firstFileName !== lastFileName || firstIndex >= lastIndex) {
    return;
}
shouldIgnore = function (line) {
    if (bluebirdFramePattern.test(line))
        return true;
    var info = parseLineInfo(line);
    if (info) {
        if (info.fileName === firstFileName && (firstIndex <= info.line && info.line <= lastIndex)) {
            return true;
        }
    }
    return false;
};});
    CapturedTrace = ($__.fs.CapturedTrace_210 = function CapturedTrace(parent) {
var vvv_return, vvv_switch, length;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
parent = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._parent = parent;
this._promisesCreated = 0;
length = this._length = 1 + (parent === undefined ? 0 : parent._length);
captureStackTrace(this, CapturedTrace);
if (length > 32)
    this.uncycle();});
    getDomain = TAJS_restrictToType(Promise._getDomain, 'function');
    async = TAJS_restrictToType(Promise._async, 'object');
    Warning = TAJS_restrictToType(((_dereq_, $__.fs.J$__v757635546_3_180)('./errors', 0, true, $__.uid), $__.os.oid70).Warning, 'function');
    util = (_dereq_, $__.fs.J$__v757635546_3_180)('./util', 1, true, $__.uid);
    canAttachTrace = TAJS_restrictToType((util, $__.os.oid50).canAttachTrace, 'function');
    bluebirdFramePattern = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
    nodeFramePattern = /\((?:timers\.js):\d+:\d+\)/;
    parseLinePattern = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/;
    stackFramePattern = null;
    formatStack = null;
    indentStackFrames = false;
    debugging = !!((vvv_tmp0 = util, 'env', $__.fs.env_77.call(vvv_tmp0, 'BLUEBIRD_DEBUG', 0, true, $__.uid)) != 0, true);
    warnings = !!((vvv_tmp1 = util, 'env', $__.fs.env_77.call(vvv_tmp1, 'BLUEBIRD_WARNINGS', 1, true, $__.uid)) != 0, debugging);
    longStackTraces = !!((vvv_tmp2 = util, 'env', $__.fs.env_77.call(vvv_tmp2, 'BLUEBIRD_LONG_STACK_TRACES', 2, true, $__.uid)) != 0, debugging);
    wForgottenReturn = ((vvv_tmp3 = util, 'env', $__.fs.env_77.call(vvv_tmp3, 'BLUEBIRD_W_FORGOTTEN_RETURN', 3, true, $__.uid)) != 0, warnings);
    TAJS_restrictToType(Promise.prototype, 'object').suppressUnhandledRejections = ($__.fs.J$__v757635546_177_211 = function J$__v757635546_177() {
var vvv_return, vvv_switch, target;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
target = this._target();
target._bitField = target._bitField & ~1048576 | 524288;});
    TAJS_restrictToType(Promise.prototype, 'object')._ensurePossibleRejectionHandled = ($__.fs.J$__v757635546_179_212 = function J$__v757635546_179() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((this._bitField & 524288) !== 0)
    return;
this._setRejectionIsUnhandled();
async.invokeLater(this._notifyUnhandledRejection, this, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object')._notifyUnhandledRejectionIsHandled = ($__.fs.J$__v757635546_181_213 = function J$__v757635546_181() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
fireRejectionEvent('rejectionHandled', unhandledRejectionHandled, undefined, this);});
    TAJS_restrictToType(Promise.prototype, 'object')._setReturnedNonUndefined = ($__.fs.J$__v757635546_183_214 = function J$__v757635546_183() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 268435456;});
    TAJS_restrictToType(Promise.prototype, 'object')._returnedNonUndefined = ($__.fs.J$__v757635546_185_215 = function J$__v757635546_185() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 268435456) !== 0;});
    TAJS_restrictToType(Promise.prototype, 'object')._notifyUnhandledRejection = ($__.fs.J$__v757635546_187_216 = function J$__v757635546_187() {
var vvv_return, vvv_switch, reason;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._isRejectionUnhandled()) {
    reason = this._settledValue();
    this._setUnhandledRejectionIsNotified();
    fireRejectionEvent('unhandledRejection', possiblyUnhandledRejection, reason, this);
}});
    TAJS_restrictToType(Promise.prototype, 'object')._setUnhandledRejectionIsNotified = ($__.fs.J$__v757635546_189_217 = function J$__v757635546_189() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 262144;});
    TAJS_restrictToType(Promise.prototype, 'object')._unsetUnhandledRejectionIsNotified = ($__.fs.J$__v757635546_191_218 = function J$__v757635546_191() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField & ~262144;});
    TAJS_restrictToType(Promise.prototype, 'object')._isUnhandledRejectionNotified = ($__.fs.J$__v757635546_193_219 = function J$__v757635546_193() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 262144) > 0;});
    TAJS_restrictToType(Promise.prototype, 'object')._setRejectionIsUnhandled = ($__.fs.J$__v757635546_195_220 = function J$__v757635546_195() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 1048576;});
    TAJS_restrictToType(Promise.prototype, 'object')._unsetRejectionIsUnhandled = ($__.fs.J$__v757635546_197_221 = function J$__v757635546_197() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField & ~1048576;
if (this._isUnhandledRejectionNotified()) {
    this._unsetUnhandledRejectionIsNotified();
    this._notifyUnhandledRejectionIsHandled();
}});
    TAJS_restrictToType(Promise.prototype, 'object')._isRejectionUnhandled = ($__.fs.J$__v757635546_199_222 = function J$__v757635546_199() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 1048576) > 0;});
    TAJS_restrictToType(Promise.prototype, 'object')._warn = ($__.fs.J$__v757635546_201_223 = function J$__v757635546_201(message, shouldUseOwnTrace, promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0], shouldUseOwnTrace = arguments[1], promise = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return warn(message, shouldUseOwnTrace, promise || this);});
    Promise.onPossiblyUnhandledRejection = ($__.fs.J$__v757635546_203_224 = function J$__v757635546_203(fn) {
var vvv_return, vvv_switch, domain;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
domain = getDomain();
possiblyUnhandledRejection = typeof fn === 'function' ? domain === null ? fn : util.domainBind(domain, fn) : undefined;});
    Promise.onUnhandledRejectionHandled = ($__.fs.J$__v757635546_205_225 = function J$__v757635546_205(fn) {
var vvv_return, vvv_switch, domain;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
domain = getDomain();
unhandledRejectionHandled = typeof fn === 'function' ? domain === null ? fn : util.domainBind(domain, fn) : undefined;});
    disableLongStackTraces = ($__.fs.J$__v757635546_207_226 = function J$__v757635546_207() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    Promise.longStackTraces = ($__.fs.J$__v757635546_211_227 = function J$__v757635546_211() {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2, Promise_captureStackTrace, Promise_attachExtraTrace;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    vvv_tmp0 = async, 'haveItemsQueued', $__.fs.J$__v757635546_27_116.call(vvv_tmp0, 0, true, $__.uid);
    !((config, $__.os.oid85).longStackTraces, false), (longStackTracesIsSupported, $__.fs.longStackTracesIsSupported_207)(0, true, $__.uid);
    Promise_captureStackTrace = TAJS_restrictToType(TAJS_restrictToType(Promise.prototype, 'object')._captureStackTrace, 'function');
    Promise_attachExtraTrace = TAJS_restrictToType(TAJS_restrictToType(Promise.prototype, 'object')._attachExtraTrace, 'function');
    (config, $__.os.oid85).longStackTraces = true;
    disableLongStackTraces = ($__.fs.J$__v757635546_209_256 = function J$__v757635546_209() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (async.haveItemsQueued() && !config.longStackTraces) {
    throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
}
Promise.prototype._captureStackTrace = Promise_captureStackTrace;
Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
Context.deactivateLongStackTraces();
async.enableTrampoline();
config.longStackTraces = false;});
    TAJS_restrictToType(Promise.prototype, 'object')._captureStackTrace = longStackTracesCaptureStackTrace;
    TAJS_restrictToType(Promise.prototype, 'object')._attachExtraTrace = longStackTracesAttachExtraTrace;
    vvv_tmp1 = Context, 'activateLongStackTraces', $__.fs.J$__v757635546_171_179.call(vvv_tmp1, 0, true, $__.uid);
    vvv_tmp2 = async, 'disableTrampolineIfNecessary', $__.fs.J$__v757635546_25_115.call(vvv_tmp2, 0, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (async.haveItemsQueued() && !config.longStackTraces) {
    throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
}
if (!config.longStackTraces && longStackTracesIsSupported()) {
    Promise_captureStackTrace = Promise.prototype._captureStackTrace;
    Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;
    config.longStackTraces = true;
    disableLongStackTraces = function () {
        if (async.haveItemsQueued() && !config.longStackTraces) {
            throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
        }
        Promise.prototype._captureStackTrace = Promise_captureStackTrace;
        Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
        Context.deactivateLongStackTraces();
        async.enableTrampoline();
        config.longStackTraces = false;
    };
    Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
    Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
    Context.activateLongStackTraces();
    async.disableTrampolineIfNecessary();
}});
    Promise.hasLongStackTraces = ($__.fs.J$__v757635546_213_228 = function J$__v757635546_213() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return config.longStackTraces && longStackTracesIsSupported();});
    fireDomEvent = (($__.fs.J$__v757635546_223_229 = function J$__v757635546_223() {
var vvv_return, vvv_switch, event;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    typeof CustomEvent === 'function';
    event = new CustomEvent('CustomEvent');
    TAJS_restrictToType((util, $__.os.oid50).global, 'object')['dispatchEvent'](event);
    return ($__.fs.J$__v757635546_215_230 = function J$__v757635546_215(name, event) {
var vvv_return, vvv_switch, domEvent;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], event = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
domEvent = new CustomEvent(name.toLowerCase(), {
    detail: event,
    cancelable: true
});
return !util.global.dispatchEvent(domEvent);});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    if (typeof CustomEvent === 'function') {
        event = new CustomEvent('CustomEvent');
        util.global.dispatchEvent(event);
        return function (name, event) {
            var domEvent = new CustomEvent(name.toLowerCase(), {
                detail: event,
                cancelable: true
            });
            return !util.global.dispatchEvent(domEvent);
        };
    } else if (typeof Event === 'function') {
        event = new Event('CustomEvent');
        util.global.dispatchEvent(event);
        return function (name, event) {
            var domEvent = new Event(name.toLowerCase(), {
                cancelable: true
            });
            domEvent.detail = event;
            return !util.global.dispatchEvent(domEvent);
        };
    } else {
        event = document.createEvent('CustomEvent');
        event.initCustomEvent('testingtheevent', false, true, {});
        util.global.dispatchEvent(event);
        return function (name, event) {
            var domEvent = document.createEvent('CustomEvent');
            domEvent.initCustomEvent(name.toLowerCase(), false, true, event);
            return !util.global.dispatchEvent(domEvent);
        };
    }
} catch (e) {
}
return function () {
    return false;
};}), $__.fs.J$__v757635546_223_229)(0, true, $__.uid);
    fireGlobalEvent = (($__.fs.J$__v757635546_231_231 = function J$__v757635546_231() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (util, $__.os.oid50).isNode, false;
    !TAJS_restrictToType((util, $__.os.oid50).global, 'object');
    return ($__.fs.J$__v757635546_229_232 = function J$__v757635546_229(name) {
var vvv_return, vvv_switch, methodName, method;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
methodName = 'on' + name.toLowerCase();
method = util.global[methodName];
if (!method)
    return false;
method.apply(util.global, [].slice.call(arguments, 1));
return true;});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (util.isNode) {
    return function () {
        return process.emit.apply(process, arguments);
    };
} else {
    if (!util.global) {
        return function () {
            return false;
        };
    }
    return function (name) {
        var methodName = 'on' + name.toLowerCase();
        var method = util.global[methodName];
        if (!method)
            return false;
        method.apply(util.global, [].slice.call(arguments, 1));
        return true;
    };
}}), $__.fs.J$__v757635546_231_231)(0, true, $__.uid);
    eventToObjectGenerator = $__.os.oid83 = {
        'promiseCreated': generatePromiseLifecycleEventObject,
        'promiseFulfilled': generatePromiseLifecycleEventObject,
        'promiseRejected': generatePromiseLifecycleEventObject,
        'promiseResolved': generatePromiseLifecycleEventObject,
        'promiseCancelled': generatePromiseLifecycleEventObject,
        'promiseChained': ($__.fs.J$__v757635546_234_233 = function J$__v757635546_234(name, promise, child) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], promise = arguments[1], child = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return {
    promise: promise,
    child: child
};}),
        'warning': ($__.fs.J$__v757635546_236_234 = function J$__v757635546_236(name, warning) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], warning = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return {
    warning: warning
};}),
        'unhandledRejection': ($__.fs.J$__v757635546_238_235 = function J$__v757635546_238(name, reason, promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0], reason = arguments[1], promise = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return {
    reason: reason,
    promise: promise
};}),
        'rejectionHandled': generatePromiseLifecycleEventObject
    };
    activeFireEvent = ($__.fs.J$__v757635546_240_236 = function J$__v757635546_240(name) {
var vvv_return, vvv_switch, globalEventFired, domEventFired;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
globalEventFired = false;
try {
    globalEventFired = fireGlobalEvent.apply(null, arguments);
} catch (e) {
    async.throwLater(e);
    globalEventFired = true;
}
domEventFired = false;
try {
    domEventFired = fireDomEvent(name, eventToObjectGenerator[name].apply(null, arguments));
} catch (e) {
    async.throwLater(e);
    domEventFired = true;
}
return domEventFired || globalEventFired;});
    Promise.config = ($__.fs.J$__v757635546_242_237 = function J$__v757635546_242(opts) {
var vvv_return, vvv_switch, warningsOption;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
opts = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
opts = Object(opts);
if ('longStackTraces' in opts) {
    if (opts.longStackTraces) {
        Promise.longStackTraces();
    } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {
        disableLongStackTraces();
    }
}
if ('warnings' in opts) {
    warningsOption = opts.warnings;
    config.warnings = !!warningsOption;
    wForgottenReturn = config.warnings;
    if (util.isObject(warningsOption)) {
        if ('wForgottenReturn' in warningsOption) {
            wForgottenReturn = !!warningsOption.wForgottenReturn;
        }
    }
}
if ('cancellation' in opts && opts.cancellation && !config.cancellation) {
    if (async.haveItemsQueued()) {
        throw new Error('cannot enable cancellation after promises are in use');
    }
    Promise.prototype._clearCancellationData = cancellationClearCancellationData;
    Promise.prototype._propagateFrom = cancellationPropagateFrom;
    Promise.prototype._onCancel = cancellationOnCancel;
    Promise.prototype._setOnCancel = cancellationSetOnCancel;
    Promise.prototype._attachCancellationCallback = cancellationAttachCancellationCallback;
    Promise.prototype._execute = cancellationExecute;
    propagateFromFunction = cancellationPropagateFrom;
    config.cancellation = true;
}
if ('monitoring' in opts) {
    if (opts.monitoring && !config.monitoring) {
        config.monitoring = true;
        Promise.prototype._fireEvent = activeFireEvent;
    } else if (!opts.monitoring && config.monitoring) {
        config.monitoring = false;
        Promise.prototype._fireEvent = defaultFireEvent;
    }
}
return Promise;});
    TAJS_restrictToType(Promise.prototype, 'object')._fireEvent = defaultFireEvent;
    TAJS_restrictToType(Promise.prototype, 'object')._execute = ($__.fs.J$__v757635546_245_238 = function J$__v757635546_245(executor, resolve, reject) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
executor = arguments[0], resolve = arguments[1], reject = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    executor(resolve, reject);
} catch (e) {
    return e;
}});
    TAJS_restrictToType(Promise.prototype, 'object')._onCancel = ($__.fs.J$__v757635546_247_239 = function J$__v757635546_247() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(Promise.prototype, 'object')._setOnCancel = ($__.fs.J$__v757635546_249_240 = function J$__v757635546_249(handler) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
handler = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
;});
    TAJS_restrictToType(Promise.prototype, 'object')._attachCancellationCallback = ($__.fs.J$__v757635546_251_241 = function J$__v757635546_251(onCancel) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
onCancel = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
;});
    TAJS_restrictToType(Promise.prototype, 'object')._captureStackTrace = ($__.fs.J$__v757635546_253_242 = function J$__v757635546_253() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(Promise.prototype, 'object')._attachExtraTrace = ($__.fs.J$__v757635546_255_243 = function J$__v757635546_255() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(Promise.prototype, 'object')._clearCancellationData = ($__.fs.J$__v757635546_257_244 = function J$__v757635546_257() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(Promise.prototype, 'object')._propagateFrom = ($__.fs.J$__v757635546_259_245 = function J$__v757635546_259(parent, flags) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
parent = arguments[0], flags = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
;
;});
    propagateFromFunction = bindingPropagateFrom;
    shouldIgnore = ($__.fs.J$__v757635546_287_246 = function J$__v757635546_287() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return false;});
    parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
    vvv_tmp4 = util, 'inherits', $__.fs.J$__v757635546_1017_83.call(vvv_tmp4, (CapturedTrace, $__.fs.CapturedTrace_210), Error, 6, true, $__.uid);
    Context.CapturedTrace = CapturedTrace;
    TAJS_restrictToType(CapturedTrace.prototype, 'object').uncycle = ($__.fs.J$__v757635546_294_248 = function J$__v757635546_294() {
var vvv_return, vvv_switch, length, nodes, stackToIndex, stack, currentStack, index, cycleEdgeNode, currentChildLength;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
length = this._length;
if (length < 2)
    return;
nodes = [];
stackToIndex = {};
for (var i = 0, node = this; node !== undefined; ++i) {
    nodes.push(node);
    node = node._parent;
}
length = this._length = i;
for (var i = length - 1; i >= 0; --i) {
    stack = nodes[i].stack;
    if (stackToIndex[stack] === undefined) {
        stackToIndex[stack] = i;
    }
}
for (var i = 0; i < length; ++i) {
    currentStack = nodes[i].stack;
    index = stackToIndex[currentStack];
    if (index !== undefined && index !== i) {
        if (index > 0) {
            nodes[index - 1]._parent = undefined;
            nodes[index - 1]._length = 1;
        }
        nodes[i]._parent = undefined;
        nodes[i]._length = 1;
        cycleEdgeNode = i > 0 ? nodes[i - 1] : this;
        if (index < length - 1) {
            cycleEdgeNode._parent = nodes[index + 1];
            cycleEdgeNode._parent.uncycle();
            cycleEdgeNode._length = cycleEdgeNode._parent._length + 1;
        } else {
            cycleEdgeNode._parent = undefined;
            cycleEdgeNode._length = 1;
        }
        currentChildLength = cycleEdgeNode._length + 1;
        for (var j = i - 2; j >= 0; --j) {
            nodes[j]._length = currentChildLength;
            currentChildLength++;
        }
        return;
    }
}});
    TAJS_restrictToType(CapturedTrace.prototype, 'object').attachExtraTrace = ($__.fs.J$__v757635546_296_249 = function J$__v757635546_296(error) {
var vvv_return, vvv_switch, parsed, message, stacks, trace;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
error = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (error.__stackCleaned__)
    return;
this.uncycle();
parsed = parseStackAndMessage(error);
message = parsed.message;
stacks = [parsed.stack];
trace = this;
while (trace !== undefined) {
    stacks.push(cleanStack(trace.stack.split('\n')));
    trace = trace._parent;
}
removeCommonRoots(stacks);
removeDuplicateOrEmptyJumps(stacks);
util.notEnumerableProp(error, 'stack', reconstructStack(message, stacks));
util.notEnumerableProp(error, '__stackCleaned__', true);});
    captureStackTrace = (($__.fs.stackDetection_250 = function stackDetection() {
var vvv_return, vvv_switch, vvv_tmp0, v8stackFramePattern, v8stackFormatter, captureStackTrace, err, hasStackAfterThrow;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    v8stackFramePattern = /^\s*at\s*/;
    v8stackFormatter = ($__.fs.J$__v757635546_298_251 = function J$__v757635546_298(stack, error) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
stack = arguments[0], error = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof stack === 'string')
    return stack;
if (error.name !== undefined && error.message !== undefined) {
    return error.toString();
}
return formatNonError(error);});
    typeof (Error.stackTraceLimit, 10) === 'number', typeof TAJS_restrictToType(Error.captureStackTrace, 'function') === 'function';
    (vvv_tmp0 = Error).stackTraceLimit = (vvv_tmp0.stackTraceLimit, 10) + 6;
    stackFramePattern = v8stackFramePattern;
    formatStack = v8stackFormatter;
    captureStackTrace = TAJS_restrictToType(Error.captureStackTrace, 'function');
    shouldIgnore = ($__.fs.J$__v757635546_300_252 = function J$__v757635546_300(line) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
line = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return bluebirdFramePattern.test(line);});
    return ($__.fs.J$__v757635546_302_253 = function J$__v757635546_302(receiver, ignoreUntil) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
receiver = arguments[0], ignoreUntil = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Error.stackTraceLimit += 6;
captureStackTrace(receiver, ignoreUntil);
Error.stackTraceLimit -= 6;});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
v8stackFramePattern = /^\s*at\s*/;
v8stackFormatter = function (stack, error) {
    if (typeof stack === 'string')
        return stack;
    if (error.name !== undefined && error.message !== undefined) {
        return error.toString();
    }
    return formatNonError(error);
};
if (typeof Error.stackTraceLimit === 'number' && typeof Error.captureStackTrace === 'function') {
    Error.stackTraceLimit += 6;
    stackFramePattern = v8stackFramePattern;
    formatStack = v8stackFormatter;
    captureStackTrace = Error.captureStackTrace;
    shouldIgnore = function (line) {
        return bluebirdFramePattern.test(line);
    };
    return function (receiver, ignoreUntil) {
        Error.stackTraceLimit += 6;
        captureStackTrace(receiver, ignoreUntil);
        Error.stackTraceLimit -= 6;
    };
}
err = new Error();
if (typeof err.stack === 'string' && err.stack.split('\n')[0].indexOf('stackDetection@') >= 0) {
    stackFramePattern = /@/;
    formatStack = v8stackFormatter;
    indentStackFrames = true;
    return function captureStackTrace(o) {
        o.stack = new Error().stack;
    };
}
try {
    throw new Error();
} catch (e) {
    hasStackAfterThrow = 'stack' in e;
}
if (!('stack' in err) && hasStackAfterThrow && typeof Error.stackTraceLimit === 'number') {
    stackFramePattern = v8stackFramePattern;
    formatStack = v8stackFormatter;
    return function captureStackTrace(o) {
        Error.stackTraceLimit += 6;
        try {
            throw new Error();
        } catch (e) {
            o.stack = e.stack;
        }
        Error.stackTraceLimit -= 6;
    };
}
formatStack = function (stack, error) {
    if (typeof stack === 'string')
        return stack;
    if ((typeof error === 'object' || typeof error === 'function') && error.name !== undefined && error.message !== undefined) {
        return error.toString();
    }
    return formatNonError(error);
};
return null;}), $__.fs.stackDetection_250)([], 0, true, $__.uid);
    typeof console !== 'undefined', typeof TAJS_restrictToType(console.warn, 'function') !== 'undefined';
    printWarning = ($__.fs.J$__v757635546_309_254 = function J$__v757635546_309(message) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
console.warn(message);});
    (util, $__.os.oid50).isNode, false;
    !((util, $__.os.oid50).isNode, false), typeof TAJS_restrictToType(new Error().stack, 'string') === 'string';
    printWarning = ($__.fs.J$__v757635546_313_255 = function J$__v757635546_313(message, isSoft) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0], isSoft = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
console.warn('%c' + message, isSoft ? 'color: darkorange' : 'color: red');});
    config = $__.os.oid85 = {
        'warnings': warnings,
        'longStackTraces': false,
        'cancellation': false,
        'monitoring': false
    };
    longStackTraces;
    vvv_tmp5 = Promise, 'longStackTraces', $__.fs.J$__v757635546_211_227.call(vvv_tmp5, 0, true, $__.uid);
    return $__.os.oid86 = {
        'longStackTraces': ($__.fs.J$__v757635546_315_259 = function J$__v757635546_315() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return config.longStackTraces;}),
        'warnings': ($__.fs.J$__v757635546_317_260 = function J$__v757635546_317() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return config.warnings;}),
        'cancellation': ($__.fs.J$__v757635546_319_261 = function J$__v757635546_319() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return config.cancellation;}),
        'monitoring': ($__.fs.J$__v757635546_321_262 = function J$__v757635546_321() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return config.monitoring;}),
        'propagateFromFunction': ($__.fs.J$__v757635546_323_263 = function J$__v757635546_323() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return propagateFromFunction;}),
        'boundValueFunction': ($__.fs.J$__v757635546_325_264 = function J$__v757635546_325() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return boundValueFunction;}),
        'checkForgottenReturns': checkForgottenReturns,
        'setBounds': setBounds,
        'warn': warn,
        'deprecated': deprecated,
        'CapturedTrace': CapturedTrace,
        'fireDomEvent': fireDomEvent,
        'fireGlobalEvent': fireGlobalEvent
    };
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
getDomain = Promise._getDomain;
async = Promise._async;
Warning = _dereq_('./errors').Warning;
util = _dereq_('./util');
canAttachTrace = util.canAttachTrace;
bluebirdFramePattern = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
nodeFramePattern = /\((?:timers\.js):\d+:\d+\)/;
parseLinePattern = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/;
stackFramePattern = null;
formatStack = null;
indentStackFrames = false;
debugging = !!(util.env('BLUEBIRD_DEBUG') != 0 && (true || util.env('BLUEBIRD_DEBUG') || util.env('NODE_ENV') === 'development'));
warnings = !!(util.env('BLUEBIRD_WARNINGS') != 0 && (debugging || util.env('BLUEBIRD_WARNINGS')));
longStackTraces = !!(util.env('BLUEBIRD_LONG_STACK_TRACES') != 0 && (debugging || util.env('BLUEBIRD_LONG_STACK_TRACES')));
wForgottenReturn = util.env('BLUEBIRD_W_FORGOTTEN_RETURN') != 0 && (warnings || !!util.env('BLUEBIRD_W_FORGOTTEN_RETURN'));
Promise.prototype.suppressUnhandledRejections = function () {
    var target = this._target();
    target._bitField = target._bitField & ~1048576 | 524288;
};
Promise.prototype._ensurePossibleRejectionHandled = function () {
    if ((this._bitField & 524288) !== 0)
        return;
    this._setRejectionIsUnhandled();
    async.invokeLater(this._notifyUnhandledRejection, this, undefined);
};
Promise.prototype._notifyUnhandledRejectionIsHandled = function () {
    fireRejectionEvent('rejectionHandled', unhandledRejectionHandled, undefined, this);
};
Promise.prototype._setReturnedNonUndefined = function () {
    this._bitField = this._bitField | 268435456;
};
Promise.prototype._returnedNonUndefined = function () {
    return (this._bitField & 268435456) !== 0;
};
Promise.prototype._notifyUnhandledRejection = function () {
    if (this._isRejectionUnhandled()) {
        var reason = this._settledValue();
        this._setUnhandledRejectionIsNotified();
        fireRejectionEvent('unhandledRejection', possiblyUnhandledRejection, reason, this);
    }
};
Promise.prototype._setUnhandledRejectionIsNotified = function () {
    this._bitField = this._bitField | 262144;
};
Promise.prototype._unsetUnhandledRejectionIsNotified = function () {
    this._bitField = this._bitField & ~262144;
};
Promise.prototype._isUnhandledRejectionNotified = function () {
    return (this._bitField & 262144) > 0;
};
Promise.prototype._setRejectionIsUnhandled = function () {
    this._bitField = this._bitField | 1048576;
};
Promise.prototype._unsetRejectionIsUnhandled = function () {
    this._bitField = this._bitField & ~1048576;
    if (this._isUnhandledRejectionNotified()) {
        this._unsetUnhandledRejectionIsNotified();
        this._notifyUnhandledRejectionIsHandled();
    }
};
Promise.prototype._isRejectionUnhandled = function () {
    return (this._bitField & 1048576) > 0;
};
Promise.prototype._warn = function (message, shouldUseOwnTrace, promise) {
    return warn(message, shouldUseOwnTrace, promise || this);
};
Promise.onPossiblyUnhandledRejection = function (fn) {
    var domain = getDomain();
    possiblyUnhandledRejection = typeof fn === 'function' ? domain === null ? fn : util.domainBind(domain, fn) : undefined;
};
Promise.onUnhandledRejectionHandled = function (fn) {
    var domain = getDomain();
    unhandledRejectionHandled = typeof fn === 'function' ? domain === null ? fn : util.domainBind(domain, fn) : undefined;
};
disableLongStackTraces = function () {
};
Promise.longStackTraces = function () {
    if (async.haveItemsQueued() && !config.longStackTraces) {
        throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
    }
    if (!config.longStackTraces && longStackTracesIsSupported()) {
        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;
        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;
        config.longStackTraces = true;
        disableLongStackTraces = function () {
            if (async.haveItemsQueued() && !config.longStackTraces) {
                throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
            }
            Promise.prototype._captureStackTrace = Promise_captureStackTrace;
            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
            Context.deactivateLongStackTraces();
            async.enableTrampoline();
            config.longStackTraces = false;
        };
        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
        Context.activateLongStackTraces();
        async.disableTrampolineIfNecessary();
    }
};
Promise.hasLongStackTraces = function () {
    return config.longStackTraces && longStackTracesIsSupported();
};
fireDomEvent = function () {
    try {
        if (typeof CustomEvent === 'function') {
            var event = new CustomEvent('CustomEvent');
            util.global.dispatchEvent(event);
            return function (name, event) {
                var domEvent = new CustomEvent(name.toLowerCase(), {
                    detail: event,
                    cancelable: true
                });
                return !util.global.dispatchEvent(domEvent);
            };
        } else if (typeof Event === 'function') {
            var event = new Event('CustomEvent');
            util.global.dispatchEvent(event);
            return function (name, event) {
                var domEvent = new Event(name.toLowerCase(), {
                    cancelable: true
                });
                domEvent.detail = event;
                return !util.global.dispatchEvent(domEvent);
            };
        } else {
            var event = document.createEvent('CustomEvent');
            event.initCustomEvent('testingtheevent', false, true, {});
            util.global.dispatchEvent(event);
            return function (name, event) {
                var domEvent = document.createEvent('CustomEvent');
                domEvent.initCustomEvent(name.toLowerCase(), false, true, event);
                return !util.global.dispatchEvent(domEvent);
            };
        }
    } catch (e) {
    }
    return function () {
        return false;
    };
}();
fireGlobalEvent = function () {
    if (util.isNode) {
        return function () {
            return process.emit.apply(process, arguments);
        };
    } else {
        if (!util.global) {
            return function () {
                return false;
            };
        }
        return function (name) {
            var methodName = 'on' + name.toLowerCase();
            var method = util.global[methodName];
            if (!method)
                return false;
            method.apply(util.global, [].slice.call(arguments, 1));
            return true;
        };
    }
}();
eventToObjectGenerator = {
    promiseCreated: generatePromiseLifecycleEventObject,
    promiseFulfilled: generatePromiseLifecycleEventObject,
    promiseRejected: generatePromiseLifecycleEventObject,
    promiseResolved: generatePromiseLifecycleEventObject,
    promiseCancelled: generatePromiseLifecycleEventObject,
    promiseChained: function (name, promise, child) {
        return {
            promise: promise,
            child: child
        };
    },
    warning: function (name, warning) {
        return {
            warning: warning
        };
    },
    unhandledRejection: function (name, reason, promise) {
        return {
            reason: reason,
            promise: promise
        };
    },
    rejectionHandled: generatePromiseLifecycleEventObject
};
activeFireEvent = function (name) {
    var globalEventFired = false;
    try {
        globalEventFired = fireGlobalEvent.apply(null, arguments);
    } catch (e) {
        async.throwLater(e);
        globalEventFired = true;
    }
    var domEventFired = false;
    try {
        domEventFired = fireDomEvent(name, eventToObjectGenerator[name].apply(null, arguments));
    } catch (e) {
        async.throwLater(e);
        domEventFired = true;
    }
    return domEventFired || globalEventFired;
};
Promise.config = function (opts) {
    opts = Object(opts);
    if ('longStackTraces' in opts) {
        if (opts.longStackTraces) {
            Promise.longStackTraces();
        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {
            disableLongStackTraces();
        }
    }
    if ('warnings' in opts) {
        var warningsOption = opts.warnings;
        config.warnings = !!warningsOption;
        wForgottenReturn = config.warnings;
        if (util.isObject(warningsOption)) {
            if ('wForgottenReturn' in warningsOption) {
                wForgottenReturn = !!warningsOption.wForgottenReturn;
            }
        }
    }
    if ('cancellation' in opts && opts.cancellation && !config.cancellation) {
        if (async.haveItemsQueued()) {
            throw new Error('cannot enable cancellation after promises are in use');
        }
        Promise.prototype._clearCancellationData = cancellationClearCancellationData;
        Promise.prototype._propagateFrom = cancellationPropagateFrom;
        Promise.prototype._onCancel = cancellationOnCancel;
        Promise.prototype._setOnCancel = cancellationSetOnCancel;
        Promise.prototype._attachCancellationCallback = cancellationAttachCancellationCallback;
        Promise.prototype._execute = cancellationExecute;
        propagateFromFunction = cancellationPropagateFrom;
        config.cancellation = true;
    }
    if ('monitoring' in opts) {
        if (opts.monitoring && !config.monitoring) {
            config.monitoring = true;
            Promise.prototype._fireEvent = activeFireEvent;
        } else if (!opts.monitoring && config.monitoring) {
            config.monitoring = false;
            Promise.prototype._fireEvent = defaultFireEvent;
        }
    }
    return Promise;
};
Promise.prototype._fireEvent = defaultFireEvent;
Promise.prototype._execute = function (executor, resolve, reject) {
    try {
        executor(resolve, reject);
    } catch (e) {
        return e;
    }
};
Promise.prototype._onCancel = function () {
};
Promise.prototype._setOnCancel = function (handler) {
    ;
};
Promise.prototype._attachCancellationCallback = function (onCancel) {
    ;
};
Promise.prototype._captureStackTrace = function () {
};
Promise.prototype._attachExtraTrace = function () {
};
Promise.prototype._clearCancellationData = function () {
};
Promise.prototype._propagateFrom = function (parent, flags) {
    ;
    ;
};
propagateFromFunction = bindingPropagateFrom;
shouldIgnore = function () {
    return false;
};
parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
util.inherits(CapturedTrace, Error);
Context.CapturedTrace = CapturedTrace;
CapturedTrace.prototype.uncycle = function () {
    var length = this._length;
    if (length < 2)
        return;
    var nodes = [];
    var stackToIndex = {};
    for (var i = 0, node = this; node !== undefined; ++i) {
        nodes.push(node);
        node = node._parent;
    }
    length = this._length = i;
    for (var i = length - 1; i >= 0; --i) {
        var stack = nodes[i].stack;
        if (stackToIndex[stack] === undefined) {
            stackToIndex[stack] = i;
        }
    }
    for (var i = 0; i < length; ++i) {
        var currentStack = nodes[i].stack;
        var index = stackToIndex[currentStack];
        if (index !== undefined && index !== i) {
            if (index > 0) {
                nodes[index - 1]._parent = undefined;
                nodes[index - 1]._length = 1;
            }
            nodes[i]._parent = undefined;
            nodes[i]._length = 1;
            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;
            if (index < length - 1) {
                cycleEdgeNode._parent = nodes[index + 1];
                cycleEdgeNode._parent.uncycle();
                cycleEdgeNode._length = cycleEdgeNode._parent._length + 1;
            } else {
                cycleEdgeNode._parent = undefined;
                cycleEdgeNode._length = 1;
            }
            var currentChildLength = cycleEdgeNode._length + 1;
            for (var j = i - 2; j >= 0; --j) {
                nodes[j]._length = currentChildLength;
                currentChildLength++;
            }
            return;
        }
    }
};
CapturedTrace.prototype.attachExtraTrace = function (error) {
    if (error.__stackCleaned__)
        return;
    this.uncycle();
    var parsed = parseStackAndMessage(error);
    var message = parsed.message;
    var stacks = [parsed.stack];
    var trace = this;
    while (trace !== undefined) {
        stacks.push(cleanStack(trace.stack.split('\n')));
        trace = trace._parent;
    }
    removeCommonRoots(stacks);
    removeDuplicateOrEmptyJumps(stacks);
    util.notEnumerableProp(error, 'stack', reconstructStack(message, stacks));
    util.notEnumerableProp(error, '__stackCleaned__', true);
};
captureStackTrace = function stackDetection() {
    var v8stackFramePattern = /^\s*at\s*/;
    var v8stackFormatter = function (stack, error) {
        if (typeof stack === 'string')
            return stack;
        if (error.name !== undefined && error.message !== undefined) {
            return error.toString();
        }
        return formatNonError(error);
    };
    if (typeof Error.stackTraceLimit === 'number' && typeof Error.captureStackTrace === 'function') {
        Error.stackTraceLimit += 6;
        stackFramePattern = v8stackFramePattern;
        formatStack = v8stackFormatter;
        var captureStackTrace = Error.captureStackTrace;
        shouldIgnore = function (line) {
            return bluebirdFramePattern.test(line);
        };
        return function (receiver, ignoreUntil) {
            Error.stackTraceLimit += 6;
            captureStackTrace(receiver, ignoreUntil);
            Error.stackTraceLimit -= 6;
        };
    }
    var err = new Error();
    if (typeof err.stack === 'string' && err.stack.split('\n')[0].indexOf('stackDetection@') >= 0) {
        stackFramePattern = /@/;
        formatStack = v8stackFormatter;
        indentStackFrames = true;
        return function captureStackTrace(o) {
            o.stack = new Error().stack;
        };
    }
    var hasStackAfterThrow;
    try {
        throw new Error();
    } catch (e) {
        hasStackAfterThrow = 'stack' in e;
    }
    if (!('stack' in err) && hasStackAfterThrow && typeof Error.stackTraceLimit === 'number') {
        stackFramePattern = v8stackFramePattern;
        formatStack = v8stackFormatter;
        return function captureStackTrace(o) {
            Error.stackTraceLimit += 6;
            try {
                throw new Error();
            } catch (e) {
                o.stack = e.stack;
            }
            Error.stackTraceLimit -= 6;
        };
    }
    formatStack = function (stack, error) {
        if (typeof stack === 'string')
            return stack;
        if ((typeof error === 'object' || typeof error === 'function') && error.name !== undefined && error.message !== undefined) {
            return error.toString();
        }
        return formatNonError(error);
    };
    return null;
}([]);
if (typeof console !== 'undefined' && typeof console.warn !== 'undefined') {
    printWarning = function (message) {
        console.warn(message);
    };
    if (util.isNode && process.stderr.isTTY) {
        printWarning = function (message, isSoft) {
            var color = isSoft ? '\x1B[33m' : '\x1B[31m';
            console.warn(color + message + '\x1B[0m\n');
        };
    } else if (!util.isNode && typeof new Error().stack === 'string') {
        printWarning = function (message, isSoft) {
            console.warn('%c' + message, isSoft ? 'color: darkorange' : 'color: red');
        };
    }
}
config = {
    warnings: warnings,
    longStackTraces: false,
    cancellation: false,
    monitoring: false
};
if (longStackTraces)
    Promise.longStackTraces();
return {
    longStackTraces: function () {
        return config.longStackTraces;
    },
    warnings: function () {
        return config.warnings;
    },
    cancellation: function () {
        return config.cancellation;
    },
    monitoring: function () {
        return config.monitoring;
    },
    propagateFromFunction: function () {
        return propagateFromFunction;
    },
    boundValueFunction: function () {
        return boundValueFunction;
    },
    checkForgottenReturns: checkForgottenReturns,
    setBounds: setBounds,
    warn: warn,
    deprecated: deprecated,
    CapturedTrace: CapturedTrace,
    fireDomEvent: fireDomEvent,
    fireGlobalEvent: fireGlobalEvent
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, Context) {
    var getDomain = Promise._getDomain;
    var async = Promise._async;
    var Warning = _dereq_('./errors').Warning;
    var util = _dereq_('./util');
    var canAttachTrace = util.canAttachTrace;
    var unhandledRejectionHandled;
    var possiblyUnhandledRejection;
    var bluebirdFramePattern = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
    var nodeFramePattern = /\((?:timers\.js):\d+:\d+\)/;
    var parseLinePattern = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/;
    var stackFramePattern = null;
    var formatStack = null;
    var indentStackFrames = false;
    var printWarning;
    var debugging = !!(util.env('BLUEBIRD_DEBUG') != 0 && (true || util.env('BLUEBIRD_DEBUG') || util.env('NODE_ENV') === 'development'));
    var warnings = !!(util.env('BLUEBIRD_WARNINGS') != 0 && (debugging || util.env('BLUEBIRD_WARNINGS')));
    var longStackTraces = !!(util.env('BLUEBIRD_LONG_STACK_TRACES') != 0 && (debugging || util.env('BLUEBIRD_LONG_STACK_TRACES')));
    var wForgottenReturn = util.env('BLUEBIRD_W_FORGOTTEN_RETURN') != 0 && (warnings || !!util.env('BLUEBIRD_W_FORGOTTEN_RETURN'));
    Promise.prototype.suppressUnhandledRejections = function () {
        var target = this._target();
        target._bitField = target._bitField & ~1048576 | 524288;
    };
    Promise.prototype._ensurePossibleRejectionHandled = function () {
        if ((this._bitField & 524288) !== 0)
            return;
        this._setRejectionIsUnhandled();
        async.invokeLater(this._notifyUnhandledRejection, this, undefined);
    };
    Promise.prototype._notifyUnhandledRejectionIsHandled = function () {
        fireRejectionEvent('rejectionHandled', unhandledRejectionHandled, undefined, this);
    };
    Promise.prototype._setReturnedNonUndefined = function () {
        this._bitField = this._bitField | 268435456;
    };
    Promise.prototype._returnedNonUndefined = function () {
        return (this._bitField & 268435456) !== 0;
    };
    Promise.prototype._notifyUnhandledRejection = function () {
        if (this._isRejectionUnhandled()) {
            var reason = this._settledValue();
            this._setUnhandledRejectionIsNotified();
            fireRejectionEvent('unhandledRejection', possiblyUnhandledRejection, reason, this);
        }
    };
    Promise.prototype._setUnhandledRejectionIsNotified = function () {
        this._bitField = this._bitField | 262144;
    };
    Promise.prototype._unsetUnhandledRejectionIsNotified = function () {
        this._bitField = this._bitField & ~262144;
    };
    Promise.prototype._isUnhandledRejectionNotified = function () {
        return (this._bitField & 262144) > 0;
    };
    Promise.prototype._setRejectionIsUnhandled = function () {
        this._bitField = this._bitField | 1048576;
    };
    Promise.prototype._unsetRejectionIsUnhandled = function () {
        this._bitField = this._bitField & ~1048576;
        if (this._isUnhandledRejectionNotified()) {
            this._unsetUnhandledRejectionIsNotified();
            this._notifyUnhandledRejectionIsHandled();
        }
    };
    Promise.prototype._isRejectionUnhandled = function () {
        return (this._bitField & 1048576) > 0;
    };
    Promise.prototype._warn = function (message, shouldUseOwnTrace, promise) {
        return warn(message, shouldUseOwnTrace, promise || this);
    };
    Promise.onPossiblyUnhandledRejection = function (fn) {
        var domain = getDomain();
        possiblyUnhandledRejection = typeof fn === 'function' ? domain === null ? fn : util.domainBind(domain, fn) : undefined;
    };
    Promise.onUnhandledRejectionHandled = function (fn) {
        var domain = getDomain();
        unhandledRejectionHandled = typeof fn === 'function' ? domain === null ? fn : util.domainBind(domain, fn) : undefined;
    };
    var disableLongStackTraces = function () {
    };
    Promise.longStackTraces = function () {
        if (async.haveItemsQueued() && !config.longStackTraces) {
            throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
        }
        if (!config.longStackTraces && longStackTracesIsSupported()) {
            var Promise_captureStackTrace = Promise.prototype._captureStackTrace;
            var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;
            config.longStackTraces = true;
            disableLongStackTraces = function () {
                if (async.haveItemsQueued() && !config.longStackTraces) {
                    throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
                }
                Promise.prototype._captureStackTrace = Promise_captureStackTrace;
                Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
                Context.deactivateLongStackTraces();
                async.enableTrampoline();
                config.longStackTraces = false;
            };
            Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
            Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
            Context.activateLongStackTraces();
            async.disableTrampolineIfNecessary();
        }
    };
    Promise.hasLongStackTraces = function () {
        return config.longStackTraces && longStackTracesIsSupported();
    };
    var fireDomEvent = function () {
        try {
            if (typeof CustomEvent === 'function') {
                var event = new CustomEvent('CustomEvent');
                util.global.dispatchEvent(event);
                return function (name, event) {
                    var domEvent = new CustomEvent(name.toLowerCase(), {
                        detail: event,
                        cancelable: true
                    });
                    return !util.global.dispatchEvent(domEvent);
                };
            } else if (typeof Event === 'function') {
                var event = new Event('CustomEvent');
                util.global.dispatchEvent(event);
                return function (name, event) {
                    var domEvent = new Event(name.toLowerCase(), {
                        cancelable: true
                    });
                    domEvent.detail = event;
                    return !util.global.dispatchEvent(domEvent);
                };
            } else {
                var event = document.createEvent('CustomEvent');
                event.initCustomEvent('testingtheevent', false, true, {});
                util.global.dispatchEvent(event);
                return function (name, event) {
                    var domEvent = document.createEvent('CustomEvent');
                    domEvent.initCustomEvent(name.toLowerCase(), false, true, event);
                    return !util.global.dispatchEvent(domEvent);
                };
            }
        } catch (e) {
        }
        return function () {
            return false;
        };
    }();
    var fireGlobalEvent = function () {
        if (util.isNode) {
            return function () {
                return process.emit.apply(process, arguments);
            };
        } else {
            if (!util.global) {
                return function () {
                    return false;
                };
            }
            return function (name) {
                var methodName = 'on' + name.toLowerCase();
                var method = util.global[methodName];
                if (!method)
                    return false;
                method.apply(util.global, [].slice.call(arguments, 1));
                return true;
            };
        }
    }();
    function generatePromiseLifecycleEventObject(name, promise) {
        return {
            promise: promise
        };
    }
    var eventToObjectGenerator = {
        promiseCreated: generatePromiseLifecycleEventObject,
        promiseFulfilled: generatePromiseLifecycleEventObject,
        promiseRejected: generatePromiseLifecycleEventObject,
        promiseResolved: generatePromiseLifecycleEventObject,
        promiseCancelled: generatePromiseLifecycleEventObject,
        promiseChained: function (name, promise, child) {
            return {
                promise: promise,
                child: child
            };
        },
        warning: function (name, warning) {
            return {
                warning: warning
            };
        },
        unhandledRejection: function (name, reason, promise) {
            return {
                reason: reason,
                promise: promise
            };
        },
        rejectionHandled: generatePromiseLifecycleEventObject
    };
    var activeFireEvent = function (name) {
        var globalEventFired = false;
        try {
            globalEventFired = fireGlobalEvent.apply(null, arguments);
        } catch (e) {
            async.throwLater(e);
            globalEventFired = true;
        }
        var domEventFired = false;
        try {
            domEventFired = fireDomEvent(name, eventToObjectGenerator[name].apply(null, arguments));
        } catch (e) {
            async.throwLater(e);
            domEventFired = true;
        }
        return domEventFired || globalEventFired;
    };
    Promise.config = function (opts) {
        opts = Object(opts);
        if ('longStackTraces' in opts) {
            if (opts.longStackTraces) {
                Promise.longStackTraces();
            } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {
                disableLongStackTraces();
            }
        }
        if ('warnings' in opts) {
            var warningsOption = opts.warnings;
            config.warnings = !!warningsOption;
            wForgottenReturn = config.warnings;
            if (util.isObject(warningsOption)) {
                if ('wForgottenReturn' in warningsOption) {
                    wForgottenReturn = !!warningsOption.wForgottenReturn;
                }
            }
        }
        if ('cancellation' in opts && opts.cancellation && !config.cancellation) {
            if (async.haveItemsQueued()) {
                throw new Error('cannot enable cancellation after promises are in use');
            }
            Promise.prototype._clearCancellationData = cancellationClearCancellationData;
            Promise.prototype._propagateFrom = cancellationPropagateFrom;
            Promise.prototype._onCancel = cancellationOnCancel;
            Promise.prototype._setOnCancel = cancellationSetOnCancel;
            Promise.prototype._attachCancellationCallback = cancellationAttachCancellationCallback;
            Promise.prototype._execute = cancellationExecute;
            propagateFromFunction = cancellationPropagateFrom;
            config.cancellation = true;
        }
        if ('monitoring' in opts) {
            if (opts.monitoring && !config.monitoring) {
                config.monitoring = true;
                Promise.prototype._fireEvent = activeFireEvent;
            } else if (!opts.monitoring && config.monitoring) {
                config.monitoring = false;
                Promise.prototype._fireEvent = defaultFireEvent;
            }
        }
        return Promise;
    };
    function defaultFireEvent() {
        return false;
    }
    Promise.prototype._fireEvent = defaultFireEvent;
    Promise.prototype._execute = function (executor, resolve, reject) {
        try {
            executor(resolve, reject);
        } catch (e) {
            return e;
        }
    };
    Promise.prototype._onCancel = function () {
    };
    Promise.prototype._setOnCancel = function (handler) {
        ;
    };
    Promise.prototype._attachCancellationCallback = function (onCancel) {
        ;
    };
    Promise.prototype._captureStackTrace = function () {
    };
    Promise.prototype._attachExtraTrace = function () {
    };
    Promise.prototype._clearCancellationData = function () {
    };
    Promise.prototype._propagateFrom = function (parent, flags) {
        ;
        ;
    };
    function cancellationExecute(executor, resolve, reject) {
        var promise = this;
        try {
            executor(resolve, reject, function (onCancel) {
                if (typeof onCancel !== 'function') {
                    throw new TypeError('onCancel must be a function, got: ' + util.toString(onCancel));
                }
                promise._attachCancellationCallback(onCancel);
            });
        } catch (e) {
            return e;
        }
    }
    function cancellationAttachCancellationCallback(onCancel) {
        if (!this._isCancellable())
            return this;
        var previousOnCancel = this._onCancel();
        if (previousOnCancel !== undefined) {
            if (util.isArray(previousOnCancel)) {
                previousOnCancel.push(onCancel);
            } else {
                this._setOnCancel([
                    previousOnCancel,
                    onCancel
                ]);
            }
        } else {
            this._setOnCancel(onCancel);
        }
    }
    function cancellationOnCancel() {
        return this._onCancelField;
    }
    function cancellationSetOnCancel(onCancel) {
        this._onCancelField = onCancel;
    }
    function cancellationClearCancellationData() {
        this._cancellationParent = undefined;
        this._onCancelField = undefined;
    }
    function cancellationPropagateFrom(parent, flags) {
        if ((flags & 1) !== 0) {
            this._cancellationParent = parent;
            var branchesRemainingToCancel = parent._branchesRemainingToCancel;
            if (branchesRemainingToCancel === undefined) {
                branchesRemainingToCancel = 0;
            }
            parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
        }
        if ((flags & 2) !== 0 && parent._isBound()) {
            this._setBoundTo(parent._boundTo);
        }
    }
    function bindingPropagateFrom(parent, flags) {
        if ((flags & 2) !== 0 && parent._isBound()) {
            this._setBoundTo(parent._boundTo);
        }
    }
    var propagateFromFunction = bindingPropagateFrom;
    function boundValueFunction() {
        var ret = this._boundTo;
        if (ret !== undefined) {
            if (ret instanceof Promise) {
                if (ret.isFulfilled()) {
                    return ret.value();
                } else {
                    return undefined;
                }
            }
        }
        return ret;
    }
    function longStackTracesCaptureStackTrace() {
        this._trace = new CapturedTrace(this._peekContext());
    }
    function longStackTracesAttachExtraTrace(error, ignoreSelf) {
        if (canAttachTrace(error)) {
            var trace = this._trace;
            if (trace !== undefined) {
                if (ignoreSelf)
                    trace = trace._parent;
            }
            if (trace !== undefined) {
                trace.attachExtraTrace(error);
            } else if (!error.__stackCleaned__) {
                var parsed = parseStackAndMessage(error);
                util.notEnumerableProp(error, 'stack', parsed.message + '\n' + parsed.stack.join('\n'));
                util.notEnumerableProp(error, '__stackCleaned__', true);
            }
        }
    }
    function checkForgottenReturns(returnValue, promiseCreated, name, promise, parent) {
        if (returnValue === undefined && promiseCreated !== null && wForgottenReturn) {
            if (parent !== undefined && parent._returnedNonUndefined())
                return;
            if ((promise._bitField & 65535) === 0)
                return;
            if (name)
                name = name + ' ';
            var handlerLine = '';
            var creatorLine = '';
            if (promiseCreated._trace) {
                var traceLines = promiseCreated._trace.stack.split('\n');
                var stack = cleanStack(traceLines);
                for (var i = stack.length - 1; i >= 0; --i) {
                    var line = stack[i];
                    if (!nodeFramePattern.test(line)) {
                        var lineMatches = line.match(parseLinePattern);
                        if (lineMatches) {
                            handlerLine = 'at ' + lineMatches[1] + ':' + lineMatches[2] + ':' + lineMatches[3] + ' ';
                        }
                        break;
                    }
                }
                if (stack.length > 0) {
                    var firstUserLine = stack[0];
                    for (var i = 0; i < traceLines.length; ++i) {
                        if (traceLines[i] === firstUserLine) {
                            if (i > 0) {
                                creatorLine = '\n' + traceLines[i - 1];
                            }
                            break;
                        }
                    }
                }
            }
            var msg = 'a promise was created in a ' + name + 'handler ' + handlerLine + 'but was not returned from it, ' + 'see http://goo.gl/rRqMUw' + creatorLine;
            promise._warn(msg, true, promiseCreated);
        }
    }
    function deprecated(name, replacement) {
        var message = name + ' is deprecated and will be removed in a future version.';
        if (replacement)
            message += ' Use ' + replacement + ' instead.';
        return warn(message);
    }
    function warn(message, shouldUseOwnTrace, promise) {
        if (!config.warnings)
            return;
        var warning = new Warning(message);
        var ctx;
        if (shouldUseOwnTrace) {
            promise._attachExtraTrace(warning);
        } else if (config.longStackTraces && (ctx = Promise._peekContext())) {
            ctx.attachExtraTrace(warning);
        } else {
            var parsed = parseStackAndMessage(warning);
            warning.stack = parsed.message + '\n' + parsed.stack.join('\n');
        }
        if (!activeFireEvent('warning', warning)) {
            formatAndLogError(warning, '', true);
        }
    }
    function reconstructStack(message, stacks) {
        for (var i = 0; i < stacks.length - 1; ++i) {
            stacks[i].push('From previous event:');
            stacks[i] = stacks[i].join('\n');
        }
        if (i < stacks.length) {
            stacks[i] = stacks[i].join('\n');
        }
        return message + '\n' + stacks.join('\n');
    }
    function removeDuplicateOrEmptyJumps(stacks) {
        for (var i = 0; i < stacks.length; ++i) {
            if (stacks[i].length === 0 || i + 1 < stacks.length && stacks[i][0] === stacks[i + 1][0]) {
                stacks.splice(i, 1);
                i--;
            }
        }
    }
    function removeCommonRoots(stacks) {
        var current = stacks[0];
        for (var i = 1; i < stacks.length; ++i) {
            var prev = stacks[i];
            var currentLastIndex = current.length - 1;
            var currentLastLine = current[currentLastIndex];
            var commonRootMeetPoint = -1;
            for (var j = prev.length - 1; j >= 0; --j) {
                if (prev[j] === currentLastLine) {
                    commonRootMeetPoint = j;
                    break;
                }
            }
            for (var j = commonRootMeetPoint; j >= 0; --j) {
                var line = prev[j];
                if (current[currentLastIndex] === line) {
                    current.pop();
                    currentLastIndex--;
                } else {
                    break;
                }
            }
            current = prev;
        }
    }
    function cleanStack(stack) {
        var ret = [];
        for (var i = 0; i < stack.length; ++i) {
            var line = stack[i];
            var isTraceLine = '    (No stack trace)' === line || stackFramePattern.test(line);
            var isInternalFrame = isTraceLine && shouldIgnore(line);
            if (isTraceLine && !isInternalFrame) {
                if (indentStackFrames && line.charAt(0) !== ' ') {
                    line = '    ' + line;
                }
                ret.push(line);
            }
        }
        return ret;
    }
    function stackFramesAsArray(error) {
        var stack = error.stack.replace(/\s+$/g, '').split('\n');
        for (var i = 0; i < stack.length; ++i) {
            var line = stack[i];
            if ('    (No stack trace)' === line || stackFramePattern.test(line)) {
                break;
            }
        }
        if (i > 0 && error.name != 'SyntaxError') {
            stack = stack.slice(i);
        }
        return stack;
    }
    function parseStackAndMessage(error) {
        var stack = error.stack;
        var message = error.toString();
        stack = typeof stack === 'string' && stack.length > 0 ? stackFramesAsArray(error) : ['    (No stack trace)'];
        return {
            message: message,
            stack: error.name == 'SyntaxError' ? stack : cleanStack(stack)
        };
    }
    function formatAndLogError(error, title, isSoft) {
        if (typeof console !== 'undefined') {
            var message;
            if (util.isObject(error)) {
                var stack = error.stack;
                message = title + formatStack(stack, error);
            } else {
                message = title + String(error);
            }
            if (typeof printWarning === 'function') {
                printWarning(message, isSoft);
            } else if (typeof console.log === 'function' || typeof console.log === 'object') {
                console.log(message);
            }
        }
    }
    function fireRejectionEvent(name, localHandler, reason, promise) {
        var localEventFired = false;
        try {
            if (typeof localHandler === 'function') {
                localEventFired = true;
                if (name === 'rejectionHandled') {
                    localHandler(promise);
                } else {
                    localHandler(reason, promise);
                }
            }
        } catch (e) {
            async.throwLater(e);
        }
        if (name === 'unhandledRejection') {
            if (!activeFireEvent(name, reason, promise) && !localEventFired) {
                formatAndLogError(reason, 'Unhandled rejection ');
            }
        } else {
            activeFireEvent(name, promise);
        }
    }
    function formatNonError(obj) {
        var str;
        if (typeof obj === 'function') {
            str = '[function ' + (obj.name || 'anonymous') + ']';
        } else {
            str = obj && typeof obj.toString === 'function' ? obj.toString() : util.toString(obj);
            var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
            if (ruselessToString.test(str)) {
                try {
                    var newStr = JSON.stringify(obj);
                    str = newStr;
                } catch (e) {
                }
            }
            if (str.length === 0) {
                str = '(empty array)';
            }
        }
        return '(<' + snip(str) + '>, no stack trace)';
    }
    function snip(str) {
        var maxChars = 41;
        if (str.length < maxChars) {
            return str;
        }
        return str.substr(0, maxChars - 3) + '...';
    }
    function longStackTracesIsSupported() {
        return typeof captureStackTrace === 'function';
    }
    var shouldIgnore = function () {
        return false;
    };
    var parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
    function parseLineInfo(line) {
        var matches = line.match(parseLineInfoRegex);
        if (matches) {
            return {
                fileName: matches[1],
                line: parseInt(matches[2], 10)
            };
        }
    }
    function setBounds(firstLineError, lastLineError) {
        if (!longStackTracesIsSupported())
            return;
        var firstStackLines = firstLineError.stack.split('\n');
        var lastStackLines = lastLineError.stack.split('\n');
        var firstIndex = -1;
        var lastIndex = -1;
        var firstFileName;
        var lastFileName;
        for (var i = 0; i < firstStackLines.length; ++i) {
            var result = parseLineInfo(firstStackLines[i]);
            if (result) {
                firstFileName = result.fileName;
                firstIndex = result.line;
                break;
            }
        }
        for (var i = 0; i < lastStackLines.length; ++i) {
            var result = parseLineInfo(lastStackLines[i]);
            if (result) {
                lastFileName = result.fileName;
                lastIndex = result.line;
                break;
            }
        }
        if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName || firstFileName !== lastFileName || firstIndex >= lastIndex) {
            return;
        }
        shouldIgnore = function (line) {
            if (bluebirdFramePattern.test(line))
                return true;
            var info = parseLineInfo(line);
            if (info) {
                if (info.fileName === firstFileName && (firstIndex <= info.line && info.line <= lastIndex)) {
                    return true;
                }
            }
            return false;
        };
    }
    function CapturedTrace(parent) {
        this._parent = parent;
        this._promisesCreated = 0;
        var length = this._length = 1 + (parent === undefined ? 0 : parent._length);
        captureStackTrace(this, CapturedTrace);
        if (length > 32)
            this.uncycle();
    }
    util.inherits(CapturedTrace, Error);
    Context.CapturedTrace = CapturedTrace;
    CapturedTrace.prototype.uncycle = function () {
        var length = this._length;
        if (length < 2)
            return;
        var nodes = [];
        var stackToIndex = {};
        for (var i = 0, node = this; node !== undefined; ++i) {
            nodes.push(node);
            node = node._parent;
        }
        length = this._length = i;
        for (var i = length - 1; i >= 0; --i) {
            var stack = nodes[i].stack;
            if (stackToIndex[stack] === undefined) {
                stackToIndex[stack] = i;
            }
        }
        for (var i = 0; i < length; ++i) {
            var currentStack = nodes[i].stack;
            var index = stackToIndex[currentStack];
            if (index !== undefined && index !== i) {
                if (index > 0) {
                    nodes[index - 1]._parent = undefined;
                    nodes[index - 1]._length = 1;
                }
                nodes[i]._parent = undefined;
                nodes[i]._length = 1;
                var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;
                if (index < length - 1) {
                    cycleEdgeNode._parent = nodes[index + 1];
                    cycleEdgeNode._parent.uncycle();
                    cycleEdgeNode._length = cycleEdgeNode._parent._length + 1;
                } else {
                    cycleEdgeNode._parent = undefined;
                    cycleEdgeNode._length = 1;
                }
                var currentChildLength = cycleEdgeNode._length + 1;
                for (var j = i - 2; j >= 0; --j) {
                    nodes[j]._length = currentChildLength;
                    currentChildLength++;
                }
                return;
            }
        }
    };
    CapturedTrace.prototype.attachExtraTrace = function (error) {
        if (error.__stackCleaned__)
            return;
        this.uncycle();
        var parsed = parseStackAndMessage(error);
        var message = parsed.message;
        var stacks = [parsed.stack];
        var trace = this;
        while (trace !== undefined) {
            stacks.push(cleanStack(trace.stack.split('\n')));
            trace = trace._parent;
        }
        removeCommonRoots(stacks);
        removeDuplicateOrEmptyJumps(stacks);
        util.notEnumerableProp(error, 'stack', reconstructStack(message, stacks));
        util.notEnumerableProp(error, '__stackCleaned__', true);
    };
    var captureStackTrace = function stackDetection() {
        var v8stackFramePattern = /^\s*at\s*/;
        var v8stackFormatter = function (stack, error) {
            if (typeof stack === 'string')
                return stack;
            if (error.name !== undefined && error.message !== undefined) {
                return error.toString();
            }
            return formatNonError(error);
        };
        if (typeof Error.stackTraceLimit === 'number' && typeof Error.captureStackTrace === 'function') {
            Error.stackTraceLimit += 6;
            stackFramePattern = v8stackFramePattern;
            formatStack = v8stackFormatter;
            var captureStackTrace = Error.captureStackTrace;
            shouldIgnore = function (line) {
                return bluebirdFramePattern.test(line);
            };
            return function (receiver, ignoreUntil) {
                Error.stackTraceLimit += 6;
                captureStackTrace(receiver, ignoreUntil);
                Error.stackTraceLimit -= 6;
            };
        }
        var err = new Error();
        if (typeof err.stack === 'string' && err.stack.split('\n')[0].indexOf('stackDetection@') >= 0) {
            stackFramePattern = /@/;
            formatStack = v8stackFormatter;
            indentStackFrames = true;
            return function captureStackTrace(o) {
                o.stack = new Error().stack;
            };
        }
        var hasStackAfterThrow;
        try {
            throw new Error();
        } catch (e) {
            hasStackAfterThrow = 'stack' in e;
        }
        if (!('stack' in err) && hasStackAfterThrow && typeof Error.stackTraceLimit === 'number') {
            stackFramePattern = v8stackFramePattern;
            formatStack = v8stackFormatter;
            return function captureStackTrace(o) {
                Error.stackTraceLimit += 6;
                try {
                    throw new Error();
                } catch (e) {
                    o.stack = e.stack;
                }
                Error.stackTraceLimit -= 6;
            };
        }
        formatStack = function (stack, error) {
            if (typeof stack === 'string')
                return stack;
            if ((typeof error === 'object' || typeof error === 'function') && error.name !== undefined && error.message !== undefined) {
                return error.toString();
            }
            return formatNonError(error);
        };
        return null;
    }([]);
    if (typeof console !== 'undefined' && typeof console.warn !== 'undefined') {
        printWarning = function (message) {
            console.warn(message);
        };
        if (util.isNode && process.stderr.isTTY) {
            printWarning = function (message, isSoft) {
                var color = isSoft ? '\x1B[33m' : '\x1B[31m';
                console.warn(color + message + '\x1B[0m\n');
            };
        } else if (!util.isNode && typeof new Error().stack === 'string') {
            printWarning = function (message, isSoft) {
                console.warn('%c' + message, isSoft ? 'color: darkorange' : 'color: red');
            };
        }
    }
    var config = {
        warnings: warnings,
        longStackTraces: false,
        cancellation: false,
        monitoring: false
    };
    if (longStackTraces)
        Promise.longStackTraces();
    return {
        longStackTraces: function () {
            return config.longStackTraces;
        },
        warnings: function () {
            return config.warnings;
        },
        cancellation: function () {
            return config.cancellation;
        },
        monitoring: function () {
            return config.monitoring;
        },
        propagateFromFunction: function () {
            return propagateFromFunction;
        },
        boundValueFunction: function () {
            return boundValueFunction;
        },
        checkForgottenReturns: checkForgottenReturns,
        setBounds: setBounds,
        warn: warn,
        deprecated: deprecated,
        CapturedTrace: CapturedTrace,
        fireDomEvent: fireDomEvent,
        fireGlobalEvent: fireGlobalEvent
    };
};}, $__.fs.J$__v757635546_329_14),
            $__.os.oid8 = {
                './errors': 12,
                './util': 36
            }
        ],
        10: [
            ($__.fs.J$__v757635546_347_15 = function J$__v757635546_347(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid101).exports = ($__.fs.J$__v757635546_345_376 = function J$__v757635546_345(Promise) {
var vvv_return, vvv_switch, returner, thrower;
returner = function returner() {
    return this.value;
};
thrower = function thrower() {
    throw this.reason;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    returner = ($__.fs.returner_377 = function returner() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.value;});
    thrower = ($__.fs.thrower_378 = function thrower() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
throw this.reason;});
    TAJS_restrictToType(Promise.prototype, 'object')['return', 'return'] = TAJS_restrictToType(Promise.prototype, 'object').thenReturn = ($__.fs.J$__v757635546_333_379 = function J$__v757635546_333(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (value instanceof Promise)
    value.suppressUnhandledRejections();
return this._then(returner, undefined, undefined, {
    value: value
}, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object')['throw', 'throw'] = TAJS_restrictToType(Promise.prototype, 'object').thenThrow = ($__.fs.J$__v757635546_335_380 = function J$__v757635546_335(reason) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._then(thrower, undefined, undefined, {
    reason: reason
}, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object').catchThrow = ($__.fs.J$__v757635546_339_381 = function J$__v757635546_339(reason) {
var vvv_return, vvv_switch, _reason, handler;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (arguments.length <= 1) {
    return this._then(undefined, thrower, undefined, {
        reason: reason
    }, undefined);
} else {
    _reason = arguments[1];
    handler = function () {
        throw _reason;
    };
    return this.caught(reason, handler);
}});
    TAJS_restrictToType(Promise.prototype, 'object').catchReturn = ($__.fs.J$__v757635546_343_382 = function J$__v757635546_343(value) {
var vvv_return, vvv_switch, _value, handler;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (arguments.length <= 1) {
    if (value instanceof Promise)
        value.suppressUnhandledRejections();
    return this._then(undefined, returner, undefined, {
        value: value
    }, undefined);
} else {
    _value = arguments[1];
    if (_value instanceof Promise)
        _value.suppressUnhandledRejections();
    handler = function () {
        return _value;
    };
    return this.caught(value, handler);
}});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Promise.prototype['return'] = Promise.prototype.thenReturn = function (value) {
    if (value instanceof Promise)
        value.suppressUnhandledRejections();
    return this._then(returner, undefined, undefined, {
        value: value
    }, undefined);
};
Promise.prototype['throw'] = Promise.prototype.thenThrow = function (reason) {
    return this._then(thrower, undefined, undefined, {
        reason: reason
    }, undefined);
};
Promise.prototype.catchThrow = function (reason) {
    if (arguments.length <= 1) {
        return this._then(undefined, thrower, undefined, {
            reason: reason
        }, undefined);
    } else {
        var _reason = arguments[1];
        var handler = function () {
            throw _reason;
        };
        return this.caught(reason, handler);
    }
};
Promise.prototype.catchReturn = function (value) {
    if (arguments.length <= 1) {
        if (value instanceof Promise)
            value.suppressUnhandledRejections();
        return this._then(undefined, returner, undefined, {
            value: value
        }, undefined);
    } else {
        var _value = arguments[1];
        if (_value instanceof Promise)
            _value.suppressUnhandledRejections();
        var handler = function () {
            return _value;
        };
        return this.caught(value, handler);
    }
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise) {
    function returner() {
        return this.value;
    }
    function thrower() {
        throw this.reason;
    }
    Promise.prototype['return'] = Promise.prototype.thenReturn = function (value) {
        if (value instanceof Promise)
            value.suppressUnhandledRejections();
        return this._then(returner, undefined, undefined, {
            value: value
        }, undefined);
    };
    Promise.prototype['throw'] = Promise.prototype.thenThrow = function (reason) {
        return this._then(thrower, undefined, undefined, {
            reason: reason
        }, undefined);
    };
    Promise.prototype.catchThrow = function (reason) {
        if (arguments.length <= 1) {
            return this._then(undefined, thrower, undefined, {
                reason: reason
            }, undefined);
        } else {
            var _reason = arguments[1];
            var handler = function () {
                throw _reason;
            };
            return this.caught(reason, handler);
        }
    };
    Promise.prototype.catchReturn = function (value) {
        if (arguments.length <= 1) {
            if (value instanceof Promise)
                value.suppressUnhandledRejections();
            return this._then(undefined, returner, undefined, {
                value: value
            }, undefined);
        } else {
            var _value = arguments[1];
            if (_value instanceof Promise)
                _value.suppressUnhandledRejections();
            var handler = function () {
                return _value;
            };
            return this.caught(value, handler);
        }
    };
};}, $__.fs.J$__v757635546_347_15),
            $__.os.oid9 = {}
        ],
        11: [
            ($__.fs.J$__v757635546_359_16 = function J$__v757635546_359(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid144).exports = ($__.fs.J$__v757635546_357_576 = function J$__v757635546_357(Promise, INTERNAL) {
var vvv_return, vvv_switch, PromiseReduce, PromiseAll, promiseAllThis, PromiseMapSeries;
promiseAllThis = function promiseAllThis() {
    return PromiseAll(this);
};
PromiseMapSeries = function PromiseMapSeries(promises, fn) {
    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    promiseAllThis = ($__.fs.promiseAllThis_577 = function promiseAllThis() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return PromiseAll(this);});
    PromiseMapSeries = ($__.fs.PromiseMapSeries_578 = function PromiseMapSeries(promises, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return PromiseReduce(promises, fn, INTERNAL, INTERNAL);});
    PromiseReduce = TAJS_restrictToType(Promise.reduce, 'function');
    PromiseAll = TAJS_restrictToType(Promise.all, 'function');
    TAJS_restrictToType(Promise.prototype, 'object').each = ($__.fs.J$__v757635546_351_579 = function J$__v757635546_351(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return PromiseReduce(this, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, this, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object').mapSeries = ($__.fs.J$__v757635546_353_580 = function J$__v757635546_353(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return PromiseReduce(this, fn, INTERNAL, INTERNAL);});
    Promise.each = ($__.fs.J$__v757635546_355_581 = function J$__v757635546_355(promises, fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return PromiseReduce(promises, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, promises, undefined);});
    Promise.mapSeries = PromiseMapSeries;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
PromiseReduce = Promise.reduce;
PromiseAll = Promise.all;
Promise.prototype.each = function (fn) {
    return PromiseReduce(this, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, this, undefined);
};
Promise.prototype.mapSeries = function (fn) {
    return PromiseReduce(this, fn, INTERNAL, INTERNAL);
};
Promise.each = function (promises, fn) {
    return PromiseReduce(promises, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, promises, undefined);
};
Promise.mapSeries = PromiseMapSeries;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL) {
    var PromiseReduce = Promise.reduce;
    var PromiseAll = Promise.all;
    function promiseAllThis() {
        return PromiseAll(this);
    }
    function PromiseMapSeries(promises, fn) {
        return PromiseReduce(promises, fn, INTERNAL, INTERNAL);
    }
    Promise.prototype.each = function (fn) {
        return PromiseReduce(this, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, this, undefined);
    };
    Promise.prototype.mapSeries = function (fn) {
        return PromiseReduce(this, fn, INTERNAL, INTERNAL);
    };
    Promise.each = function (promises, fn) {
        return PromiseReduce(promises, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, promises, undefined);
    };
    Promise.mapSeries = PromiseMapSeries;
};}, $__.fs.J$__v757635546_359_16),
            $__.os.oid10 = {}
        ],
        12: [
            ($__.fs.J$__v757635546_366_17 = function J$__v757635546_366(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch, es5, Objectfreeze, util, inherits, notEnumerableProp, subError, _TypeError, _RangeError, Warning, CancellationError, TimeoutError, AggregateError, methods, i, level, OperationalError, errorTypes;
subError = function subError(nameProperty, defaultMessage) {
    function SubError(message) {
        if (!(this instanceof SubError))
            return new SubError(message);
        notEnumerableProp(this, 'message', typeof message === 'string' ? message : defaultMessage);
        notEnumerableProp(this, 'name', nameProperty);
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
        } else {
            Error.call(this);
        }
    }
    inherits(SubError, Error);
    return SubError;
};
OperationalError = function OperationalError(message) {
    if (!(this instanceof OperationalError))
        return new OperationalError(message);
    notEnumerableProp(this, 'name', 'OperationalError');
    notEnumerableProp(this, 'message', message);
    this.cause = message;
    this['isOperational'] = true;
    if (message instanceof Error) {
        notEnumerableProp(this, 'message', message.message);
        notEnumerableProp(this, 'stack', message.stack);
    } else if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
    }
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    subError = ($__.fs.subError_128 = function subError(nameProperty, defaultMessage) {
var vvv_return, vvv_switch, SubError;
SubError = function SubError(message) {
    if (!(this instanceof SubError))
        return new SubError(message);
    notEnumerableProp(this, 'message', typeof message === 'string' ? message : defaultMessage);
    notEnumerableProp(this, 'name', nameProperty);
    if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
    } else {
        Error.call(this);
    }
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
nameProperty = arguments[0], defaultMessage = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    SubError = ($__.fs.SubError_130 = function SubError(message) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!(this instanceof SubError))
    return new SubError(message);
notEnumerableProp(this, 'message', typeof message === 'string' ? message : defaultMessage);
notEnumerableProp(this, 'name', nameProperty);
if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
} else {
    Error.call(this);
}});
    (inherits, $__.fs.J$__v757635546_1017_83)((SubError, $__.fs.SubError_130), Error, 0, true, $__.uid);
    return SubError;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    SubError = ($__.fs.SubError_132 = function SubError(message) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!(this instanceof SubError))
    return new SubError(message);
notEnumerableProp(this, 'message', typeof message === 'string' ? message : defaultMessage);
notEnumerableProp(this, 'name', nameProperty);
if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
} else {
    Error.call(this);
}});
    (inherits, $__.fs.J$__v757635546_1017_83)((SubError, $__.fs.SubError_132), Error, 1, true, $__.uid);
    return SubError;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    SubError = ($__.fs.SubError_134 = function SubError(message) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!(this instanceof SubError))
    return new SubError(message);
notEnumerableProp(this, 'message', typeof message === 'string' ? message : defaultMessage);
notEnumerableProp(this, 'name', nameProperty);
if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
} else {
    Error.call(this);
}});
    (inherits, $__.fs.J$__v757635546_1017_83)((SubError, $__.fs.SubError_134), Error, 2, true, $__.uid);
    return SubError;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    SubError = ($__.fs.SubError_136 = function SubError(message) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!(this instanceof SubError))
    return new SubError(message);
notEnumerableProp(this, 'message', typeof message === 'string' ? message : defaultMessage);
notEnumerableProp(this, 'name', nameProperty);
if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
} else {
    Error.call(this);
}});
    (inherits, $__.fs.J$__v757635546_1017_83)((SubError, $__.fs.SubError_136), Error, 3, true, $__.uid);
    return SubError;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
inherits(SubError, Error);
return SubError;});
    OperationalError = ($__.fs.OperationalError_129 = function OperationalError(message) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
message = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!(this instanceof OperationalError))
    return new OperationalError(message);
notEnumerableProp(this, 'name', 'OperationalError');
notEnumerableProp(this, 'message', message);
this.cause = message;
this['isOperational'] = true;
if (message instanceof Error) {
    notEnumerableProp(this, 'message', message.message);
    notEnumerableProp(this, 'stack', message.stack);
} else if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
}});
    es5 = (_dereq_, $__.fs.J$__v757635546_3_127)('./es5', 0, true, $__.uid);
    Objectfreeze = TAJS_restrictToType((es5, $__.os.oid47).freeze, 'function');
    util = (_dereq_, $__.fs.J$__v757635546_3_127)('./util', 1, true, $__.uid);
    inherits = TAJS_restrictToType((util, $__.os.oid50).inherits, 'function');
    notEnumerableProp = TAJS_restrictToType((util, $__.os.oid50).notEnumerableProp, 'function');
    Warning = (subError, $__.fs.subError_128)('Warning', 'warning', 0, true, $__.uid);
    CancellationError = (subError, $__.fs.subError_128)('CancellationError', 'cancellation error', 1, true, $__.uid);
    TimeoutError = (subError, $__.fs.subError_128)('TimeoutError', 'timeout error', 2, true, $__.uid);
    AggregateError = (subError, $__.fs.subError_128)('AggregateError', 'aggregate error', 3, true, $__.uid);
    _TypeError = TypeError;
    _RangeError = RangeError;
    methods = function $__lt0(res) {
        res.length = 17;
        if (res.length != 17)
            TAJS_dumpValue('Possible loss of precision');
        return res;
        ;
        TAJS_makeContextSensitive($__lt0, -2);
    }(('join pop push shift unshift slice filter forEach some ' + 'every map indexOf lastIndexOf reduce reduceRight sort reverse')['split'](' '));
    i = 0;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 0], 'string'), 'join'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 0], 'string'), 'join'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 0], 'string'), 'join'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 1], 'string'), 'pop'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 1], 'string'), 'pop'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 1], 'string'), 'pop'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 2], 'string'), 'push'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 2], 'string'), 'push'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 2], 'string'), 'push'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 3], 'string'), 'shift'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 3], 'string'), 'shift'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 3], 'string'), 'shift'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 4], 'string'), 'unshift'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 4], 'string'), 'unshift'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 4], 'string'), 'unshift'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 5], 'string'), 'slice'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 5], 'string'), 'slice'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 5], 'string'), 'slice'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 6], 'string'), 'filter'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 6], 'string'), 'filter'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 6], 'string'), 'filter'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 7], 'string'), 'forEach'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 7], 'string'), 'forEach'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 7], 'string'), 'forEach'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 8], 'string'), 'some'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 8], 'string'), 'some'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 8], 'string'), 'some'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 9], 'string'), 'every'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 9], 'string'), 'every'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 9], 'string'), 'every'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 10], 'string'), 'map'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 10], 'string'), 'map'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 10], 'string'), 'map'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 11], 'string'), 'indexOf'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 11], 'string'), 'indexOf'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 11], 'string'), 'indexOf'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 12], 'string'), 'lastIndexOf'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 12], 'string'), 'lastIndexOf'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 12], 'string'), 'lastIndexOf'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 13], 'string'), 'reduce'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 13], 'string'), 'reduce'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 13], 'string'), 'reduce'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 14], 'string'), 'reduceRight'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 14], 'string'), 'reduceRight'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 14], 'string'), 'reduceRight'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 15], 'string'), 'sort'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 15], 'string'), 'sort'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 15], 'string'), 'sort'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    typeof TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 16], 'string'), 'reverse'], 'function') === 'function';
    TAJS_restrictToType(AggregateError.prototype, 'object')[TAJS_restrictToType(methods[i, 16], 'string'), 'reverse'] = TAJS_restrictToType(TAJS_restrictToType(Array.prototype, 'object')[TAJS_restrictToType(methods[i, 16], 'string'), 'reverse'], 'function');
    i = +i + 1;
    i < (methods.length, 17);
    es5['defineProperty'](TAJS_restrictToType(AggregateError.prototype, 'object'), 'length', $__.os.oid66 = {
        'value': 0,
        'configurable': false,
        'writable': true,
        'enumerable': true
    });
    TAJS_restrictToType(AggregateError.prototype, 'object')['isOperational', 'isOperational'] = true;
    level = 0;
    TAJS_restrictToType(AggregateError.prototype, 'object').toString = ($__.fs.J$__v757635546_363_138 = function J$__v757635546_363() {
var vvv_return, vvv_switch, indent, ret, str, lines;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
indent = Array(level * 4 + 1).join(' ');
ret = '\n' + indent + 'AggregateError of:' + '\n';
level++;
indent = Array(level * 4 + 1).join(' ');
for (var i = 0; i < this.length; ++i) {
    str = this[i] === this ? '[Circular AggregateError]' : this[i] + '';
    lines = str.split('\n');
    for (var j = 0; j < lines.length; ++j) {
        lines[j] = indent + lines[j];
    }
    str = lines.join('\n');
    ret += str + '\n';
}
level--;
return ret;});
    (inherits, $__.fs.J$__v757635546_1017_83)((OperationalError, $__.fs.OperationalError_129), Error, 4, true, $__.uid);
    errorTypes = TAJS_restrictToType(Error['__BluebirdErrorTypes__', '__BluebirdErrorTypes__'], 'undefined');
    !errorTypes;
    errorTypes = Objectfreeze($__.os.oid68 = {
        'CancellationError': CancellationError,
        'TimeoutError': TimeoutError,
        'OperationalError': OperationalError,
        'RejectionError': OperationalError,
        'AggregateError': AggregateError
    });
    es5['defineProperty'](Error, '__BluebirdErrorTypes__', $__.os.oid69 = {
        'value': errorTypes,
        'writable': false,
        'enumerable': false,
        'configurable': false
    });
    (module, $__.os.oid61).exports = $__.os.oid70 = {
        'Error': Error,
        'TypeError': _TypeError,
        'RangeError': _RangeError,
        'CancellationError': TAJS_restrictToType((errorTypes, $__.os.oid68).CancellationError, 'function'),
        'OperationalError': TAJS_restrictToType((errorTypes, $__.os.oid68).OperationalError, 'function'),
        'TimeoutError': TAJS_restrictToType((errorTypes, $__.os.oid68).TimeoutError, 'function'),
        'AggregateError': TAJS_restrictToType((errorTypes, $__.os.oid68).AggregateError, 'function'),
        'Warning': Warning
    };
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
es5 = _dereq_('./es5');
Objectfreeze = es5.freeze;
util = _dereq_('./util');
inherits = util.inherits;
notEnumerableProp = util.notEnumerableProp;
Warning = subError('Warning', 'warning');
CancellationError = subError('CancellationError', 'cancellation error');
TimeoutError = subError('TimeoutError', 'timeout error');
AggregateError = subError('AggregateError', 'aggregate error');
try {
    _TypeError = TypeError;
    _RangeError = RangeError;
} catch (e) {
    _TypeError = subError('TypeError', 'type error');
    _RangeError = subError('RangeError', 'range error');
}
methods = ('join pop push shift unshift slice filter forEach some ' + 'every map indexOf lastIndexOf reduce reduceRight sort reverse').split(' ');
for (var i = 0; i < methods.length; ++i) {
    if (typeof Array.prototype[methods[i]] === 'function') {
        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];
    }
}
es5.defineProperty(AggregateError.prototype, 'length', {
    value: 0,
    configurable: false,
    writable: true,
    enumerable: true
});
AggregateError.prototype['isOperational'] = true;
level = 0;
AggregateError.prototype.toString = function () {
    var indent = Array(level * 4 + 1).join(' ');
    var ret = '\n' + indent + 'AggregateError of:' + '\n';
    level++;
    indent = Array(level * 4 + 1).join(' ');
    for (var i = 0; i < this.length; ++i) {
        var str = this[i] === this ? '[Circular AggregateError]' : this[i] + '';
        var lines = str.split('\n');
        for (var j = 0; j < lines.length; ++j) {
            lines[j] = indent + lines[j];
        }
        str = lines.join('\n');
        ret += str + '\n';
    }
    level--;
    return ret;
};
inherits(OperationalError, Error);
errorTypes = Error['__BluebirdErrorTypes__'];
if (!errorTypes) {
    errorTypes = Objectfreeze({
        CancellationError: CancellationError,
        TimeoutError: TimeoutError,
        OperationalError: OperationalError,
        RejectionError: OperationalError,
        AggregateError: AggregateError
    });
    es5.defineProperty(Error, '__BluebirdErrorTypes__', {
        value: errorTypes,
        writable: false,
        enumerable: false,
        configurable: false
    });
}
module.exports = {
    Error: Error,
    TypeError: _TypeError,
    RangeError: _RangeError,
    CancellationError: errorTypes.CancellationError,
    OperationalError: errorTypes.OperationalError,
    TimeoutError: errorTypes.TimeoutError,
    AggregateError: errorTypes.AggregateError,
    Warning: Warning
};}, $__.fs.J$__v757635546_366_17),
            $__.os.oid11 = {
                './es5': 13,
                './util': 36
            }
        ],
        13: [
            ($__.fs.J$__v757635546_386_18 = function J$__v757635546_386(_dereq_, module, exports) {
var vvv_return, vvv_switch, isES5, has, str, proto, ObjectKeys, ObjectGetDescriptor, ObjectDefineProperty, ObjectFreeze, ObjectGetPrototypeOf, ArrayIsArray;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    isES5 = (($__.fs.J$__v757635546_368_81 = function J$__v757635546_368() {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return this === undefined;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this === undefined;}), $__.fs.J$__v757635546_368_81)(0, true, $__.uid);
    isES5;
    (module, $__.os.oid46).exports = $__.os.oid47 = {
        'freeze': TAJS_restrictToType(Object.freeze, 'function'),
        'defineProperty': TAJS_restrictToType(Object.defineProperty, 'function'),
        'getDescriptor': TAJS_restrictToType(Object.getOwnPropertyDescriptor, 'function'),
        'keys': TAJS_restrictToType(Object.keys, 'function'),
        'names': TAJS_restrictToType(Object.getOwnPropertyNames, 'function'),
        'getPrototypeOf': TAJS_restrictToType(Object.getPrototypeOf, 'function'),
        'isArray': TAJS_restrictToType(Array.isArray, 'function'),
        'isES5': isES5,
        'propertyIsWritable': ($__.fs.J$__v757635546_370_82 = function J$__v757635546_370(obj, prop) {
var vvv_return, vvv_switch, descriptor;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], prop = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
descriptor = Object.getOwnPropertyDescriptor(obj, prop);
return !!(!descriptor || descriptor.writable || descriptor.set);})
    };
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
isES5 = function () {
    'use strict';
    return this === undefined;
}();
if (isES5) {
    module.exports = {
        freeze: Object.freeze,
        defineProperty: Object.defineProperty,
        getDescriptor: Object.getOwnPropertyDescriptor,
        keys: Object.keys,
        names: Object.getOwnPropertyNames,
        getPrototypeOf: Object.getPrototypeOf,
        isArray: Array.isArray,
        isES5: isES5,
        propertyIsWritable: function (obj, prop) {
            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
            return !!(!descriptor || descriptor.writable || descriptor.set);
        }
    };
} else {
    has = {}.hasOwnProperty;
    str = {}.toString;
    proto = {}.constructor.prototype;
    ObjectKeys = function (o) {
        var ret = [];
        for (var key in o) {
            if (has.call(o, key)) {
                ret.push(key);
            }
        }
        return ret;
    };
    ObjectGetDescriptor = function (o, key) {
        return {
            value: o[key]
        };
    };
    ObjectDefineProperty = function (o, key, desc) {
        o[key] = desc.value;
        return o;
    };
    ObjectFreeze = function (obj) {
        return obj;
    };
    ObjectGetPrototypeOf = function (obj) {
        try {
            return Object(obj).constructor.prototype;
        } catch (e) {
            return proto;
        }
    };
    ArrayIsArray = function (obj) {
        try {
            return str.call(obj) === '[object Array]';
        } catch (e) {
            return false;
        }
    };
    module.exports = {
        isArray: ArrayIsArray,
        keys: ObjectKeys,
        names: ObjectKeys,
        defineProperty: ObjectDefineProperty,
        getDescriptor: ObjectGetDescriptor,
        freeze: ObjectFreeze,
        getPrototypeOf: ObjectGetPrototypeOf,
        isES5: isES5,
        propertyIsWritable: function () {
            return true;
        }
    };
}}, $__.fs.J$__v757635546_386_18),
            $__.os.oid12 = {}
        ],
        14: [
            ($__.fs.J$__v757635546_394_19 = function J$__v757635546_394(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid142).exports = ($__.fs.J$__v757635546_392_572 = function J$__v757635546_392(Promise, INTERNAL) {
var vvv_return, vvv_switch, PromiseMap;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    PromiseMap = TAJS_restrictToType(Promise.map, 'function');
    TAJS_restrictToType(Promise.prototype, 'object').filter = ($__.fs.J$__v757635546_388_573 = function J$__v757635546_388(fn, options) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], options = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return PromiseMap(this, fn, options, INTERNAL);});
    Promise.filter = ($__.fs.J$__v757635546_390_574 = function J$__v757635546_390(promises, fn, options) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1], options = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return PromiseMap(promises, fn, options, INTERNAL);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
PromiseMap = Promise.map;
Promise.prototype.filter = function (fn, options) {
    return PromiseMap(this, fn, options, INTERNAL);
};
Promise.filter = function (promises, fn, options) {
    return PromiseMap(promises, fn, options, INTERNAL);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL) {
    var PromiseMap = Promise.map;
    Promise.prototype.filter = function (fn, options) {
        return PromiseMap(this, fn, options, INTERNAL);
    };
    Promise.filter = function (promises, fn, options) {
        return PromiseMap(promises, fn, options, INTERNAL);
    };
};}, $__.fs.J$__v757635546_394_19),
            $__.os.oid13 = {}
        ],
        15: [
            ($__.fs.J$__v757635546_416_20 = function J$__v757635546_416(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid88).exports = ($__.fs.J$__v757635546_414_266 = function J$__v757635546_414(Promise, tryConvertToPromise, NEXT_FILTER) {
var vvv_return, vvv_switch, util, CancellationError, errorObj, catchFilter, PassThroughHandlerContext, FinallyHandlerCancelReaction, checkCancel, succeed, fail, finallyHandler;
PassThroughHandlerContext = function PassThroughHandlerContext(promise, type, handler) {
    this.promise = promise;
    this.type = type;
    this.handler = handler;
    this.called = false;
    this.cancelPromise = null;
};
FinallyHandlerCancelReaction = function FinallyHandlerCancelReaction(finallyHandler) {
    this.finallyHandler = finallyHandler;
};
checkCancel = function checkCancel(ctx, reason) {
    if (ctx.cancelPromise != null) {
        if (arguments.length > 1) {
            ctx.cancelPromise._reject(reason);
        } else {
            ctx.cancelPromise._cancel();
        }
        ctx.cancelPromise = null;
        return true;
    }
    return false;
};
succeed = function succeed() {
    return finallyHandler.call(this, this.promise._target()._settledValue());
};
fail = function fail(reason) {
    if (checkCancel(this, reason))
        return;
    errorObj.e = reason;
    return errorObj;
};
finallyHandler = function finallyHandler(reasonOrValue) {
    var promise = this.promise;
    var handler = this.handler;
    if (!this.called) {
        this.called = true;
        var ret = this.isFinallyHandler() ? handler.call(promise._boundValue()) : handler.call(promise._boundValue(), reasonOrValue);
        if (ret === NEXT_FILTER) {
            return ret;
        } else if (ret !== undefined) {
            promise._setReturnedNonUndefined();
            var maybePromise = tryConvertToPromise(ret, promise);
            if (maybePromise instanceof Promise) {
                if (this.cancelPromise != null) {
                    if (maybePromise._isCancelled()) {
                        var reason = new CancellationError('late cancellation observer');
                        promise._attachExtraTrace(reason);
                        errorObj.e = reason;
                        return errorObj;
                    } else if (maybePromise.isPending()) {
                        maybePromise._attachCancellationCallback(new FinallyHandlerCancelReaction(this));
                    }
                }
                return maybePromise._then(succeed, fail, undefined, this, undefined);
            }
        }
    }
    if (promise.isRejected()) {
        checkCancel(this);
        errorObj.e = reasonOrValue;
        return errorObj;
    } else {
        checkCancel(this);
        return reasonOrValue;
    }
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], tryConvertToPromise = arguments[1], NEXT_FILTER = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    PassThroughHandlerContext = ($__.fs.PassThroughHandlerContext_267 = function PassThroughHandlerContext(promise, type, handler) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0], type = arguments[1], handler = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.promise = promise;
this.type = type;
this.handler = handler;
this.called = false;
this.cancelPromise = null;});
    FinallyHandlerCancelReaction = ($__.fs.FinallyHandlerCancelReaction_268 = function FinallyHandlerCancelReaction(finallyHandler) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
finallyHandler = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.finallyHandler = finallyHandler;});
    checkCancel = ($__.fs.checkCancel_269 = function checkCancel(ctx, reason) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ctx = arguments[0], reason = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (ctx.cancelPromise != null) {
    if (arguments.length > 1) {
        ctx.cancelPromise._reject(reason);
    } else {
        ctx.cancelPromise._cancel();
    }
    ctx.cancelPromise = null;
    return true;
}
return false;});
    succeed = ($__.fs.succeed_270 = function succeed() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return finallyHandler.call(this, this.promise._target()._settledValue());});
    fail = ($__.fs.fail_271 = function fail(reason) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (checkCancel(this, reason))
    return;
errorObj.e = reason;
return errorObj;});
    finallyHandler = ($__.fs.finallyHandler_272 = function finallyHandler(reasonOrValue) {
var vvv_return, vvv_switch, promise, handler, ret, maybePromise, reason;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reasonOrValue = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this.promise;
handler = this.handler;
if (!this.called) {
    this.called = true;
    ret = this.isFinallyHandler() ? handler.call(promise._boundValue()) : handler.call(promise._boundValue(), reasonOrValue);
    if (ret === NEXT_FILTER) {
        return ret;
    } else if (ret !== undefined) {
        promise._setReturnedNonUndefined();
        maybePromise = tryConvertToPromise(ret, promise);
        if (maybePromise instanceof Promise) {
            if (this.cancelPromise != null) {
                if (maybePromise._isCancelled()) {
                    reason = new CancellationError('late cancellation observer');
                    promise._attachExtraTrace(reason);
                    errorObj.e = reason;
                    return errorObj;
                } else if (maybePromise.isPending()) {
                    maybePromise._attachCancellationCallback(new FinallyHandlerCancelReaction(this));
                }
            }
            return maybePromise._then(succeed, fail, undefined, this, undefined);
        }
    }
}
if (promise.isRejected()) {
    checkCancel(this);
    errorObj.e = reasonOrValue;
    return errorObj;
} else {
    checkCancel(this);
    return reasonOrValue;
}});
    util = (_dereq_, $__.fs.J$__v757635546_3_265)('./util', 0, true, $__.uid);
    CancellationError = TAJS_restrictToType(Promise.CancellationError, 'function');
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    catchFilter = ((_dereq_, $__.fs.J$__v757635546_3_265)('./catch_filter', 1, true, $__.uid), $__.fs.J$__v757635546_146_274)(NEXT_FILTER, 0, true, $__.uid);
    TAJS_restrictToType(PassThroughHandlerContext.prototype, 'object').isFinallyHandler = ($__.fs.J$__v757635546_397_276 = function J$__v757635546_397() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.type === 0;});
    TAJS_restrictToType(FinallyHandlerCancelReaction.prototype, 'object')._resultCancelled = ($__.fs.J$__v757635546_400_277 = function J$__v757635546_400() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
checkCancel(this.finallyHandler);});
    TAJS_restrictToType(Promise.prototype, 'object')._passThrough = ($__.fs.J$__v757635546_406_278 = function J$__v757635546_406(handler, type, success, fail) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
handler = arguments[0], type = arguments[1], success = arguments[2], fail = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof handler !== 'function')
    return this.then();
return this._then(success, fail, undefined, new PassThroughHandlerContext(this, type, handler), undefined);});
    TAJS_restrictToType(Promise.prototype, 'object').lastly = TAJS_restrictToType(Promise.prototype, 'object')['finally', 'finally'] = ($__.fs.J$__v757635546_408_279 = function J$__v757635546_408(handler) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
handler = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._passThrough(handler, 0, finallyHandler, finallyHandler);});
    TAJS_restrictToType(Promise.prototype, 'object').tap = ($__.fs.J$__v757635546_410_280 = function J$__v757635546_410(handler) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
handler = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._passThrough(handler, 1, finallyHandler);});
    TAJS_restrictToType(Promise.prototype, 'object').tapCatch = ($__.fs.J$__v757635546_412_281 = function J$__v757635546_412(handlerOrPredicate) {
var vvv_return, vvv_switch, len, catchInstances, j, i, item, handler;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
handlerOrPredicate = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = arguments.length;
if (len === 1) {
    return this._passThrough(handlerOrPredicate, 1, undefined, finallyHandler);
} else {
    catchInstances = new Array(len - 1);
    j = 0;
    for (i = 0; i < len - 1; ++i) {
        item = arguments[i];
        if (util.isObject(item)) {
            catchInstances[j++] = item;
        } else {
            return Promise.reject(new TypeError('tapCatch statement predicate: ' + 'expecting an object but got ' + util.classString(item)));
        }
    }
    catchInstances.length = j;
    handler = arguments[i];
    return this._passThrough(catchFilter(catchInstances, handler, this), 1, undefined, finallyHandler);
}});
    return PassThroughHandlerContext;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
CancellationError = Promise.CancellationError;
errorObj = util.errorObj;
catchFilter = _dereq_('./catch_filter')(NEXT_FILTER);
PassThroughHandlerContext.prototype.isFinallyHandler = function () {
    return this.type === 0;
};
FinallyHandlerCancelReaction.prototype._resultCancelled = function () {
    checkCancel(this.finallyHandler);
};
Promise.prototype._passThrough = function (handler, type, success, fail) {
    if (typeof handler !== 'function')
        return this.then();
    return this._then(success, fail, undefined, new PassThroughHandlerContext(this, type, handler), undefined);
};
Promise.prototype.lastly = Promise.prototype['finally'] = function (handler) {
    return this._passThrough(handler, 0, finallyHandler, finallyHandler);
};
Promise.prototype.tap = function (handler) {
    return this._passThrough(handler, 1, finallyHandler);
};
Promise.prototype.tapCatch = function (handlerOrPredicate) {
    var len = arguments.length;
    if (len === 1) {
        return this._passThrough(handlerOrPredicate, 1, undefined, finallyHandler);
    } else {
        var catchInstances = new Array(len - 1), j = 0, i;
        for (i = 0; i < len - 1; ++i) {
            var item = arguments[i];
            if (util.isObject(item)) {
                catchInstances[j++] = item;
            } else {
                return Promise.reject(new TypeError('tapCatch statement predicate: ' + 'expecting an object but got ' + util.classString(item)));
            }
        }
        catchInstances.length = j;
        var handler = arguments[i];
        return this._passThrough(catchFilter(catchInstances, handler, this), 1, undefined, finallyHandler);
    }
};
return PassThroughHandlerContext;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, tryConvertToPromise, NEXT_FILTER) {
    var util = _dereq_('./util');
    var CancellationError = Promise.CancellationError;
    var errorObj = util.errorObj;
    var catchFilter = _dereq_('./catch_filter')(NEXT_FILTER);
    function PassThroughHandlerContext(promise, type, handler) {
        this.promise = promise;
        this.type = type;
        this.handler = handler;
        this.called = false;
        this.cancelPromise = null;
    }
    PassThroughHandlerContext.prototype.isFinallyHandler = function () {
        return this.type === 0;
    };
    function FinallyHandlerCancelReaction(finallyHandler) {
        this.finallyHandler = finallyHandler;
    }
    FinallyHandlerCancelReaction.prototype._resultCancelled = function () {
        checkCancel(this.finallyHandler);
    };
    function checkCancel(ctx, reason) {
        if (ctx.cancelPromise != null) {
            if (arguments.length > 1) {
                ctx.cancelPromise._reject(reason);
            } else {
                ctx.cancelPromise._cancel();
            }
            ctx.cancelPromise = null;
            return true;
        }
        return false;
    }
    function succeed() {
        return finallyHandler.call(this, this.promise._target()._settledValue());
    }
    function fail(reason) {
        if (checkCancel(this, reason))
            return;
        errorObj.e = reason;
        return errorObj;
    }
    function finallyHandler(reasonOrValue) {
        var promise = this.promise;
        var handler = this.handler;
        if (!this.called) {
            this.called = true;
            var ret = this.isFinallyHandler() ? handler.call(promise._boundValue()) : handler.call(promise._boundValue(), reasonOrValue);
            if (ret === NEXT_FILTER) {
                return ret;
            } else if (ret !== undefined) {
                promise._setReturnedNonUndefined();
                var maybePromise = tryConvertToPromise(ret, promise);
                if (maybePromise instanceof Promise) {
                    if (this.cancelPromise != null) {
                        if (maybePromise._isCancelled()) {
                            var reason = new CancellationError('late cancellation observer');
                            promise._attachExtraTrace(reason);
                            errorObj.e = reason;
                            return errorObj;
                        } else if (maybePromise.isPending()) {
                            maybePromise._attachCancellationCallback(new FinallyHandlerCancelReaction(this));
                        }
                    }
                    return maybePromise._then(succeed, fail, undefined, this, undefined);
                }
            }
        }
        if (promise.isRejected()) {
            checkCancel(this);
            errorObj.e = reasonOrValue;
            return errorObj;
        } else {
            checkCancel(this);
            return reasonOrValue;
        }
    }
    Promise.prototype._passThrough = function (handler, type, success, fail) {
        if (typeof handler !== 'function')
            return this.then();
        return this._then(success, fail, undefined, new PassThroughHandlerContext(this, type, handler), undefined);
    };
    Promise.prototype.lastly = Promise.prototype['finally'] = function (handler) {
        return this._passThrough(handler, 0, finallyHandler, finallyHandler);
    };
    Promise.prototype.tap = function (handler) {
        return this._passThrough(handler, 1, finallyHandler);
    };
    Promise.prototype.tapCatch = function (handlerOrPredicate) {
        var len = arguments.length;
        if (len === 1) {
            return this._passThrough(handlerOrPredicate, 1, undefined, finallyHandler);
        } else {
            var catchInstances = new Array(len - 1), j = 0, i;
            for (i = 0; i < len - 1; ++i) {
                var item = arguments[i];
                if (util.isObject(item)) {
                    catchInstances[j++] = item;
                } else {
                    return Promise.reject(new TypeError('tapCatch statement predicate: ' + 'expecting an object but got ' + util.classString(item)));
                }
            }
            catchInstances.length = j;
            var handler = arguments[i];
            return this._passThrough(catchFilter(catchInstances, handler, this), 1, undefined, finallyHandler);
        }
    };
    return PassThroughHandlerContext;
};}, $__.fs.J$__v757635546_416_20),
            $__.os.oid14 = {
                './catch_filter': 7,
                './util': 36
            }
        ],
        16: [
            ($__.fs.J$__v757635546_450_21 = function J$__v757635546_450(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid118).exports = ($__.fs.J$__v757635546_448_464 = function J$__v757635546_448(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug) {
var vvv_return, vvv_switch, vvv_tmp0, errors, TypeError, util, errorObj, tryCatch, yieldHandlers, promiseFromYieldHandler, PromiseSpawn;
promiseFromYieldHandler = function promiseFromYieldHandler(value, yieldHandlers, traceParent) {
    for (var i = 0; i < yieldHandlers.length; ++i) {
        traceParent._pushContext();
        var result = tryCatch(yieldHandlers[i])(value);
        traceParent._popContext();
        if (result === errorObj) {
            traceParent._pushContext();
            var ret = Promise.reject(errorObj.e);
            traceParent._popContext();
            return ret;
        }
        var maybePromise = tryConvertToPromise(result, traceParent);
        if (maybePromise instanceof Promise)
            return maybePromise;
    }
    return null;
};
PromiseSpawn = function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
    if (debug.cancellation()) {
        var internal = new Promise(INTERNAL);
        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);
        this._promise = internal.lastly(function () {
            return _finallyPromise;
        });
        internal._captureStackTrace();
        internal._setOnCancel(this);
    } else {
        var promise = this._promise = new Promise(INTERNAL);
        promise._captureStackTrace();
    }
    this._stack = stack;
    this._generatorFunction = generatorFunction;
    this._receiver = receiver;
    this._generator = undefined;
    this._yieldHandlers = typeof yieldHandler === 'function' ? [yieldHandler].concat(yieldHandlers) : yieldHandlers;
    this._yieldedPromise = null;
    this._cancellationPhase = false;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], apiRejection = arguments[1], INTERNAL = arguments[2], tryConvertToPromise = arguments[3], Proxyable = arguments[4], debug = arguments[5];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    promiseFromYieldHandler = ($__.fs.promiseFromYieldHandler_465 = function promiseFromYieldHandler(value, yieldHandlers, traceParent) {
var vvv_return, vvv_switch, result, ret, maybePromise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], yieldHandlers = arguments[1], traceParent = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (var i = 0; i < yieldHandlers.length; ++i) {
    traceParent._pushContext();
    result = tryCatch(yieldHandlers[i])(value);
    traceParent._popContext();
    if (result === errorObj) {
        traceParent._pushContext();
        ret = Promise.reject(errorObj.e);
        traceParent._popContext();
        return ret;
    }
    maybePromise = tryConvertToPromise(result, traceParent);
    if (maybePromise instanceof Promise)
        return maybePromise;
}
return null;});
    PromiseSpawn = ($__.fs.PromiseSpawn_466 = function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
var vvv_return, vvv_switch, internal, _finallyPromise, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
generatorFunction = arguments[0], receiver = arguments[1], yieldHandler = arguments[2], stack = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (debug.cancellation()) {
    internal = new Promise(INTERNAL);
    _finallyPromise = this._finallyPromise = new Promise(INTERNAL);
    this._promise = internal.lastly(function () {
        return _finallyPromise;
    });
    internal._captureStackTrace();
    internal._setOnCancel(this);
} else {
    promise = this._promise = new Promise(INTERNAL);
    promise._captureStackTrace();
}
this._stack = stack;
this._generatorFunction = generatorFunction;
this._receiver = receiver;
this._generator = undefined;
this._yieldHandlers = typeof yieldHandler === 'function' ? [yieldHandler].concat(yieldHandlers) : yieldHandlers;
this._yieldedPromise = null;
this._cancellationPhase = false;});
    errors = (_dereq_, $__.fs.J$__v757635546_3_463)('./errors', 0, true, $__.uid);
    TypeError = TAJS_restrictToType((errors, $__.os.oid70).TypeError, 'function');
    util = (_dereq_, $__.fs.J$__v757635546_3_463)('./util', 1, true, $__.uid);
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    yieldHandlers = [];
    vvv_tmp0 = util, 'inherits', $__.fs.J$__v757635546_1017_83.call(vvv_tmp0, (PromiseSpawn, $__.fs.PromiseSpawn_466), (Proxyable, $__.fs.Proxyable_47), 9, true, $__.uid);
    TAJS_restrictToType(PromiseSpawn.prototype, 'object')._isResolved = ($__.fs.J$__v757635546_422_468 = function J$__v757635546_422() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._promise === null;});
    TAJS_restrictToType(PromiseSpawn.prototype, 'object')._cleanup = ($__.fs.J$__v757635546_424_469 = function J$__v757635546_424() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._promise = this._generator = null;
if (debug.cancellation() && this._finallyPromise !== null) {
    this._finallyPromise._fulfill();
    this._finallyPromise = null;
}});
    TAJS_restrictToType(PromiseSpawn.prototype, 'object')._promiseCancelled = ($__.fs.J$__v757635546_426_470 = function J$__v757635546_426() {
var vvv_return, vvv_switch, implementsReturn, result, reason;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._isResolved())
    return;
implementsReturn = typeof this._generator['return'] !== 'undefined';
if (!implementsReturn) {
    reason = new Promise.CancellationError('generator .return() sentinel');
    Promise.coroutine.returnSentinel = reason;
    this._promise._attachExtraTrace(reason);
    this._promise._pushContext();
    result = tryCatch(this._generator['throw']).call(this._generator, reason);
    this._promise._popContext();
} else {
    this._promise._pushContext();
    result = tryCatch(this._generator['return']).call(this._generator, undefined);
    this._promise._popContext();
}
this._cancellationPhase = true;
this._yieldedPromise = null;
this._continue(result);});
    TAJS_restrictToType(PromiseSpawn.prototype, 'object')._promiseFulfilled = ($__.fs.J$__v757635546_428_471 = function J$__v757635546_428(value) {
var vvv_return, vvv_switch, result;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._yieldedPromise = null;
this._promise._pushContext();
result = tryCatch(this._generator.next).call(this._generator, value);
this._promise._popContext();
this._continue(result);});
    TAJS_restrictToType(PromiseSpawn.prototype, 'object')._promiseRejected = ($__.fs.J$__v757635546_430_472 = function J$__v757635546_430(reason) {
var vvv_return, vvv_switch, result;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._yieldedPromise = null;
this._promise._attachExtraTrace(reason);
this._promise._pushContext();
result = tryCatch(this._generator['throw']).call(this._generator, reason);
this._promise._popContext();
this._continue(result);});
    TAJS_restrictToType(PromiseSpawn.prototype, 'object')._resultCancelled = ($__.fs.J$__v757635546_432_473 = function J$__v757635546_432() {
var vvv_return, vvv_switch, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._yieldedPromise instanceof Promise) {
    promise = this._yieldedPromise;
    this._yieldedPromise = null;
    promise.cancel();
}});
    TAJS_restrictToType(PromiseSpawn.prototype, 'object').promise = ($__.fs.J$__v757635546_434_474 = function J$__v757635546_434() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._promise;});
    TAJS_restrictToType(PromiseSpawn.prototype, 'object')._run = ($__.fs.J$__v757635546_436_475 = function J$__v757635546_436() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._generator = this._generatorFunction.call(this._receiver);
this._receiver = this._generatorFunction = undefined;
this._promiseFulfilled(undefined);});
    TAJS_restrictToType(PromiseSpawn.prototype, 'object')._continue = ($__.fs.J$__v757635546_438_476 = function J$__v757635546_438(result) {
var vvv_return, vvv_switch, promise, value, maybePromise, bitField;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
result = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this._promise;
if (result === errorObj) {
    this._cleanup();
    if (this._cancellationPhase) {
        return promise.cancel();
    } else {
        return promise._rejectCallback(result.e, false);
    }
}
value = result.value;
if (result.done === true) {
    this._cleanup();
    if (this._cancellationPhase) {
        return promise.cancel();
    } else {
        return promise._resolveCallback(value);
    }
} else {
    maybePromise = tryConvertToPromise(value, this._promise);
    if (!(maybePromise instanceof Promise)) {
        maybePromise = promiseFromYieldHandler(maybePromise, this._yieldHandlers, this._promise);
        if (maybePromise === null) {
            this._promiseRejected(new TypeError('A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n'.replace('%s', String(value)) + 'From coroutine:\n' + this._stack.split('\n').slice(1, -7).join('\n')));
            return;
        }
    }
    maybePromise = maybePromise._target();
    bitField = maybePromise._bitField;
    ;
    if ((bitField & 50397184) === 0) {
        this._yieldedPromise = maybePromise;
        maybePromise._proxy(this, null);
    } else if ((bitField & 33554432) !== 0) {
        Promise._async.invoke(this._promiseFulfilled, this, maybePromise._value());
    } else if ((bitField & 16777216) !== 0) {
        Promise._async.invoke(this._promiseRejected, this, maybePromise._reason());
    } else {
        this._promiseCancelled();
    }
}});
    Promise.coroutine = ($__.fs.J$__v757635546_442_477 = function J$__v757635546_442(generatorFunction, options) {
var vvv_return, vvv_switch, yieldHandler, PromiseSpawn$, stack;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
generatorFunction = arguments[0], options = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof generatorFunction !== 'function') {
    throw new TypeError('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
}
yieldHandler = Object(options).yieldHandler;
PromiseSpawn$ = PromiseSpawn;
stack = new Error().stack;
return function () {
    var generator = generatorFunction.apply(this, arguments);
    var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler, stack);
    var ret = spawn.promise();
    spawn._generator = generator;
    spawn._promiseFulfilled(undefined);
    return ret;
};});
    TAJS_restrictToType(Promise.coroutine, 'function').addYieldHandler = ($__.fs.J$__v757635546_444_478 = function J$__v757635546_444(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn !== 'function') {
    throw new TypeError('expecting a function but got ' + util.classString(fn));
}
yieldHandlers.push(fn);});
    Promise.spawn = ($__.fs.J$__v757635546_446_479 = function J$__v757635546_446(generatorFunction) {
var vvv_return, vvv_switch, spawn, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
generatorFunction = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
debug.deprecated('Promise.spawn()', 'Promise.coroutine()');
if (typeof generatorFunction !== 'function') {
    return apiRejection('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
}
spawn = new PromiseSpawn(generatorFunction, this);
ret = spawn.promise();
spawn._run(Promise.spawn);
return ret;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
errors = _dereq_('./errors');
TypeError = errors.TypeError;
util = _dereq_('./util');
errorObj = util.errorObj;
tryCatch = util.tryCatch;
yieldHandlers = [];
util.inherits(PromiseSpawn, Proxyable);
PromiseSpawn.prototype._isResolved = function () {
    return this._promise === null;
};
PromiseSpawn.prototype._cleanup = function () {
    this._promise = this._generator = null;
    if (debug.cancellation() && this._finallyPromise !== null) {
        this._finallyPromise._fulfill();
        this._finallyPromise = null;
    }
};
PromiseSpawn.prototype._promiseCancelled = function () {
    if (this._isResolved())
        return;
    var implementsReturn = typeof this._generator['return'] !== 'undefined';
    var result;
    if (!implementsReturn) {
        var reason = new Promise.CancellationError('generator .return() sentinel');
        Promise.coroutine.returnSentinel = reason;
        this._promise._attachExtraTrace(reason);
        this._promise._pushContext();
        result = tryCatch(this._generator['throw']).call(this._generator, reason);
        this._promise._popContext();
    } else {
        this._promise._pushContext();
        result = tryCatch(this._generator['return']).call(this._generator, undefined);
        this._promise._popContext();
    }
    this._cancellationPhase = true;
    this._yieldedPromise = null;
    this._continue(result);
};
PromiseSpawn.prototype._promiseFulfilled = function (value) {
    this._yieldedPromise = null;
    this._promise._pushContext();
    var result = tryCatch(this._generator.next).call(this._generator, value);
    this._promise._popContext();
    this._continue(result);
};
PromiseSpawn.prototype._promiseRejected = function (reason) {
    this._yieldedPromise = null;
    this._promise._attachExtraTrace(reason);
    this._promise._pushContext();
    var result = tryCatch(this._generator['throw']).call(this._generator, reason);
    this._promise._popContext();
    this._continue(result);
};
PromiseSpawn.prototype._resultCancelled = function () {
    if (this._yieldedPromise instanceof Promise) {
        var promise = this._yieldedPromise;
        this._yieldedPromise = null;
        promise.cancel();
    }
};
PromiseSpawn.prototype.promise = function () {
    return this._promise;
};
PromiseSpawn.prototype._run = function () {
    this._generator = this._generatorFunction.call(this._receiver);
    this._receiver = this._generatorFunction = undefined;
    this._promiseFulfilled(undefined);
};
PromiseSpawn.prototype._continue = function (result) {
    var promise = this._promise;
    if (result === errorObj) {
        this._cleanup();
        if (this._cancellationPhase) {
            return promise.cancel();
        } else {
            return promise._rejectCallback(result.e, false);
        }
    }
    var value = result.value;
    if (result.done === true) {
        this._cleanup();
        if (this._cancellationPhase) {
            return promise.cancel();
        } else {
            return promise._resolveCallback(value);
        }
    } else {
        var maybePromise = tryConvertToPromise(value, this._promise);
        if (!(maybePromise instanceof Promise)) {
            maybePromise = promiseFromYieldHandler(maybePromise, this._yieldHandlers, this._promise);
            if (maybePromise === null) {
                this._promiseRejected(new TypeError('A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n'.replace('%s', String(value)) + 'From coroutine:\n' + this._stack.split('\n').slice(1, -7).join('\n')));
                return;
            }
        }
        maybePromise = maybePromise._target();
        var bitField = maybePromise._bitField;
        ;
        if ((bitField & 50397184) === 0) {
            this._yieldedPromise = maybePromise;
            maybePromise._proxy(this, null);
        } else if ((bitField & 33554432) !== 0) {
            Promise._async.invoke(this._promiseFulfilled, this, maybePromise._value());
        } else if ((bitField & 16777216) !== 0) {
            Promise._async.invoke(this._promiseRejected, this, maybePromise._reason());
        } else {
            this._promiseCancelled();
        }
    }
};
Promise.coroutine = function (generatorFunction, options) {
    if (typeof generatorFunction !== 'function') {
        throw new TypeError('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
    }
    var yieldHandler = Object(options).yieldHandler;
    var PromiseSpawn$ = PromiseSpawn;
    var stack = new Error().stack;
    return function () {
        var generator = generatorFunction.apply(this, arguments);
        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler, stack);
        var ret = spawn.promise();
        spawn._generator = generator;
        spawn._promiseFulfilled(undefined);
        return ret;
    };
};
Promise.coroutine.addYieldHandler = function (fn) {
    if (typeof fn !== 'function') {
        throw new TypeError('expecting a function but got ' + util.classString(fn));
    }
    yieldHandlers.push(fn);
};
Promise.spawn = function (generatorFunction) {
    debug.deprecated('Promise.spawn()', 'Promise.coroutine()');
    if (typeof generatorFunction !== 'function') {
        return apiRejection('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
    }
    var spawn = new PromiseSpawn(generatorFunction, this);
    var ret = spawn.promise();
    spawn._run(Promise.spawn);
    return ret;
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug) {
    var errors = _dereq_('./errors');
    var TypeError = errors.TypeError;
    var util = _dereq_('./util');
    var errorObj = util.errorObj;
    var tryCatch = util.tryCatch;
    var yieldHandlers = [];
    function promiseFromYieldHandler(value, yieldHandlers, traceParent) {
        for (var i = 0; i < yieldHandlers.length; ++i) {
            traceParent._pushContext();
            var result = tryCatch(yieldHandlers[i])(value);
            traceParent._popContext();
            if (result === errorObj) {
                traceParent._pushContext();
                var ret = Promise.reject(errorObj.e);
                traceParent._popContext();
                return ret;
            }
            var maybePromise = tryConvertToPromise(result, traceParent);
            if (maybePromise instanceof Promise)
                return maybePromise;
        }
        return null;
    }
    function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
        if (debug.cancellation()) {
            var internal = new Promise(INTERNAL);
            var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);
            this._promise = internal.lastly(function () {
                return _finallyPromise;
            });
            internal._captureStackTrace();
            internal._setOnCancel(this);
        } else {
            var promise = this._promise = new Promise(INTERNAL);
            promise._captureStackTrace();
        }
        this._stack = stack;
        this._generatorFunction = generatorFunction;
        this._receiver = receiver;
        this._generator = undefined;
        this._yieldHandlers = typeof yieldHandler === 'function' ? [yieldHandler].concat(yieldHandlers) : yieldHandlers;
        this._yieldedPromise = null;
        this._cancellationPhase = false;
    }
    util.inherits(PromiseSpawn, Proxyable);
    PromiseSpawn.prototype._isResolved = function () {
        return this._promise === null;
    };
    PromiseSpawn.prototype._cleanup = function () {
        this._promise = this._generator = null;
        if (debug.cancellation() && this._finallyPromise !== null) {
            this._finallyPromise._fulfill();
            this._finallyPromise = null;
        }
    };
    PromiseSpawn.prototype._promiseCancelled = function () {
        if (this._isResolved())
            return;
        var implementsReturn = typeof this._generator['return'] !== 'undefined';
        var result;
        if (!implementsReturn) {
            var reason = new Promise.CancellationError('generator .return() sentinel');
            Promise.coroutine.returnSentinel = reason;
            this._promise._attachExtraTrace(reason);
            this._promise._pushContext();
            result = tryCatch(this._generator['throw']).call(this._generator, reason);
            this._promise._popContext();
        } else {
            this._promise._pushContext();
            result = tryCatch(this._generator['return']).call(this._generator, undefined);
            this._promise._popContext();
        }
        this._cancellationPhase = true;
        this._yieldedPromise = null;
        this._continue(result);
    };
    PromiseSpawn.prototype._promiseFulfilled = function (value) {
        this._yieldedPromise = null;
        this._promise._pushContext();
        var result = tryCatch(this._generator.next).call(this._generator, value);
        this._promise._popContext();
        this._continue(result);
    };
    PromiseSpawn.prototype._promiseRejected = function (reason) {
        this._yieldedPromise = null;
        this._promise._attachExtraTrace(reason);
        this._promise._pushContext();
        var result = tryCatch(this._generator['throw']).call(this._generator, reason);
        this._promise._popContext();
        this._continue(result);
    };
    PromiseSpawn.prototype._resultCancelled = function () {
        if (this._yieldedPromise instanceof Promise) {
            var promise = this._yieldedPromise;
            this._yieldedPromise = null;
            promise.cancel();
        }
    };
    PromiseSpawn.prototype.promise = function () {
        return this._promise;
    };
    PromiseSpawn.prototype._run = function () {
        this._generator = this._generatorFunction.call(this._receiver);
        this._receiver = this._generatorFunction = undefined;
        this._promiseFulfilled(undefined);
    };
    PromiseSpawn.prototype._continue = function (result) {
        var promise = this._promise;
        if (result === errorObj) {
            this._cleanup();
            if (this._cancellationPhase) {
                return promise.cancel();
            } else {
                return promise._rejectCallback(result.e, false);
            }
        }
        var value = result.value;
        if (result.done === true) {
            this._cleanup();
            if (this._cancellationPhase) {
                return promise.cancel();
            } else {
                return promise._resolveCallback(value);
            }
        } else {
            var maybePromise = tryConvertToPromise(value, this._promise);
            if (!(maybePromise instanceof Promise)) {
                maybePromise = promiseFromYieldHandler(maybePromise, this._yieldHandlers, this._promise);
                if (maybePromise === null) {
                    this._promiseRejected(new TypeError('A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n'.replace('%s', String(value)) + 'From coroutine:\n' + this._stack.split('\n').slice(1, -7).join('\n')));
                    return;
                }
            }
            maybePromise = maybePromise._target();
            var bitField = maybePromise._bitField;
            ;
            if ((bitField & 50397184) === 0) {
                this._yieldedPromise = maybePromise;
                maybePromise._proxy(this, null);
            } else if ((bitField & 33554432) !== 0) {
                Promise._async.invoke(this._promiseFulfilled, this, maybePromise._value());
            } else if ((bitField & 16777216) !== 0) {
                Promise._async.invoke(this._promiseRejected, this, maybePromise._reason());
            } else {
                this._promiseCancelled();
            }
        }
    };
    Promise.coroutine = function (generatorFunction, options) {
        if (typeof generatorFunction !== 'function') {
            throw new TypeError('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
        }
        var yieldHandler = Object(options).yieldHandler;
        var PromiseSpawn$ = PromiseSpawn;
        var stack = new Error().stack;
        return function () {
            var generator = generatorFunction.apply(this, arguments);
            var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler, stack);
            var ret = spawn.promise();
            spawn._generator = generator;
            spawn._promiseFulfilled(undefined);
            return ret;
        };
    };
    Promise.coroutine.addYieldHandler = function (fn) {
        if (typeof fn !== 'function') {
            throw new TypeError('expecting a function but got ' + util.classString(fn));
        }
        yieldHandlers.push(fn);
    };
    Promise.spawn = function (generatorFunction) {
        debug.deprecated('Promise.spawn()', 'Promise.coroutine()');
        if (typeof generatorFunction !== 'function') {
            return apiRejection('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
        }
        var spawn = new PromiseSpawn(generatorFunction, this);
        var ret = spawn.promise();
        spawn._run(Promise.spawn);
        return ret;
    };
};}, $__.fs.J$__v757635546_450_21),
            $__.os.oid15 = {
                './errors': 12,
                './util': 36
            }
        ],
        17: [
            ($__.fs.J$__v757635546_466_22 = function J$__v757635546_466(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid105).exports = ($__.fs.J$__v757635546_464_406 = function J$__v757635546_464(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain) {
var vvv_return, vvv_switch, util, canEvaluate, tryCatch, errorObj, reject, thenCallback, promiseSetter, generateHolderClass, holderClasses, thenCallbacks, promiseSetters, i;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], PromiseArray = arguments[1], tryConvertToPromise = arguments[2], INTERNAL = arguments[3], async = arguments[4], getDomain = arguments[5];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    util = (_dereq_, $__.fs.J$__v757635546_3_405)('./util', 0, true, $__.uid);
    canEvaluate = ((util, $__.os.oid50).canEvaluate, false);
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    !true;
    Promise.join = ($__.fs.J$__v757635546_462_407 = function J$__v757635546_462() {
var vvv_return, vvv_switch, last, fn, ret, HolderClass, holder, callbacks, maybePromise, bitField, domain, args;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
last = arguments.length - 1;
if (last > 0 && typeof arguments[last] === 'function') {
    fn = arguments[last];
    if (!true) {
        if (last <= 8 && canEvaluate) {
            ret = new Promise(INTERNAL);
            ret._captureStackTrace();
            HolderClass = holderClasses[last - 1];
            holder = new HolderClass(fn);
            callbacks = thenCallbacks;
            for (var i = 0; i < last; ++i) {
                maybePromise = tryConvertToPromise(arguments[i], ret);
                if (maybePromise instanceof Promise) {
                    maybePromise = maybePromise._target();
                    bitField = maybePromise._bitField;
                    ;
                    if ((bitField & 50397184) === 0) {
                        maybePromise._then(callbacks[i], reject, undefined, ret, holder);
                        promiseSetters[i](maybePromise, holder);
                        holder.asyncNeeded = false;
                    } else if ((bitField & 33554432) !== 0) {
                        callbacks[i].call(ret, maybePromise._value(), holder);
                    } else if ((bitField & 16777216) !== 0) {
                        ret._reject(maybePromise._reason());
                    } else {
                        ret._cancel();
                    }
                } else {
                    callbacks[i].call(ret, maybePromise, holder);
                }
            }
            if (!ret._isFateSealed()) {
                if (holder.asyncNeeded) {
                    domain = getDomain();
                    if (domain !== null) {
                        holder.fn = util.domainBind(domain, holder.fn);
                    }
                }
                ret._setAsyncGuaranteed();
                ret._setOnCancel(holder);
            }
            return ret;
        }
    }
}
args = [].slice.call(arguments);
;
if (fn)
    args.pop();
ret = new PromiseArray(args).promise();
return fn !== undefined ? ret.spread(fn) : ret;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
canEvaluate = util.canEvaluate;
tryCatch = util.tryCatch;
errorObj = util.errorObj;
if (!true) {
    if (canEvaluate) {
        thenCallback = function (i) {
            return new Function('value', 'holder', '                             \n            \'use strict\';                                                    \n            holder.pIndex = value;                                           \n            holder.checkFulfillment(this);                                   \n            '.replace(/Index/g, i));
        };
        promiseSetter = function (i) {
            return new Function('promise', 'holder', '                           \n            \'use strict\';                                                    \n            holder.pIndex = promise;                                         \n            '.replace(/Index/g, i));
        };
        generateHolderClass = function (total) {
            var props = new Array(total);
            for (var i = 0; i < props.length; ++i) {
                props[i] = 'this.p' + (i + 1);
            }
            var assignment = props.join(' = ') + ' = null;';
            var cancellationCode = 'var promise;\n' + props.map(function (prop) {
                return '                                                         \n                promise = ' + prop + ';                                      \n                if (promise instanceof Promise) {                            \n                    promise.cancel();                                        \n                }                                                            \n            ';
            }).join('\n');
            var passedArguments = props.join(', ');
            var name = 'Holder$' + total;
            var code = 'return function(tryCatch, errorObj, Promise, async) {    \n            \'use strict\';                                                    \n            function [TheName](fn) {                                         \n                [TheProperties]                                              \n                this.fn = fn;                                                \n                this.asyncNeeded = true;                                     \n                this.now = 0;                                                \n            }                                                                \n                                                                             \n            [TheName].prototype._callFunction = function(promise) {          \n                promise._pushContext();                                      \n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \n                promise._popContext();                                       \n                if (ret === errorObj) {                                      \n                    promise._rejectCallback(ret.e, false);                   \n                } else {                                                     \n                    promise._resolveCallback(ret);                           \n                }                                                            \n            };                                                               \n                                                                             \n            [TheName].prototype.checkFulfillment = function(promise) {       \n                var now = ++this.now;                                        \n                if (now === [TheTotal]) {                                    \n                    if (this.asyncNeeded) {                                  \n                        async.invoke(this._callFunction, this, promise);     \n                    } else {                                                 \n                        this._callFunction(promise);                         \n                    }                                                        \n                                                                             \n                }                                                            \n            };                                                               \n                                                                             \n            [TheName].prototype._resultCancelled = function() {              \n                [CancellationCode]                                           \n            };                                                               \n                                                                             \n            return [TheName];                                                \n        }(tryCatch, errorObj, Promise, async);                               \n        ';
            code = code.replace(/\[TheName\]/g, name).replace(/\[TheTotal\]/g, total).replace(/\[ThePassedArguments\]/g, passedArguments).replace(/\[TheProperties\]/g, assignment).replace(/\[CancellationCode\]/g, cancellationCode);
            return new Function('tryCatch', 'errorObj', 'Promise', 'async', code)(tryCatch, errorObj, Promise, async);
        };
        holderClasses = [];
        thenCallbacks = [];
        promiseSetters = [];
        for (var i = 0; i < 8; ++i) {
            holderClasses.push(generateHolderClass(i + 1));
            thenCallbacks.push(thenCallback(i + 1));
            promiseSetters.push(promiseSetter(i + 1));
        }
        reject = function (reason) {
            this._reject(reason);
        };
    }
}
Promise.join = function () {
    var last = arguments.length - 1;
    var fn;
    if (last > 0 && typeof arguments[last] === 'function') {
        fn = arguments[last];
        if (!true) {
            if (last <= 8 && canEvaluate) {
                var ret = new Promise(INTERNAL);
                ret._captureStackTrace();
                var HolderClass = holderClasses[last - 1];
                var holder = new HolderClass(fn);
                var callbacks = thenCallbacks;
                for (var i = 0; i < last; ++i) {
                    var maybePromise = tryConvertToPromise(arguments[i], ret);
                    if (maybePromise instanceof Promise) {
                        maybePromise = maybePromise._target();
                        var bitField = maybePromise._bitField;
                        ;
                        if ((bitField & 50397184) === 0) {
                            maybePromise._then(callbacks[i], reject, undefined, ret, holder);
                            promiseSetters[i](maybePromise, holder);
                            holder.asyncNeeded = false;
                        } else if ((bitField & 33554432) !== 0) {
                            callbacks[i].call(ret, maybePromise._value(), holder);
                        } else if ((bitField & 16777216) !== 0) {
                            ret._reject(maybePromise._reason());
                        } else {
                            ret._cancel();
                        }
                    } else {
                        callbacks[i].call(ret, maybePromise, holder);
                    }
                }
                if (!ret._isFateSealed()) {
                    if (holder.asyncNeeded) {
                        var domain = getDomain();
                        if (domain !== null) {
                            holder.fn = util.domainBind(domain, holder.fn);
                        }
                    }
                    ret._setAsyncGuaranteed();
                    ret._setOnCancel(holder);
                }
                return ret;
            }
        }
    }
    var args = [].slice.call(arguments);
    ;
    if (fn)
        args.pop();
    var ret = new PromiseArray(args).promise();
    return fn !== undefined ? ret.spread(fn) : ret;
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain) {
    var util = _dereq_('./util');
    var canEvaluate = util.canEvaluate;
    var tryCatch = util.tryCatch;
    var errorObj = util.errorObj;
    var reject;
    if (!true) {
        if (canEvaluate) {
            var thenCallback = function (i) {
                return new Function('value', 'holder', '                             \n            \'use strict\';                                                    \n            holder.pIndex = value;                                           \n            holder.checkFulfillment(this);                                   \n            '.replace(/Index/g, i));
            };
            var promiseSetter = function (i) {
                return new Function('promise', 'holder', '                           \n            \'use strict\';                                                    \n            holder.pIndex = promise;                                         \n            '.replace(/Index/g, i));
            };
            var generateHolderClass = function (total) {
                var props = new Array(total);
                for (var i = 0; i < props.length; ++i) {
                    props[i] = 'this.p' + (i + 1);
                }
                var assignment = props.join(' = ') + ' = null;';
                var cancellationCode = 'var promise;\n' + props.map(function (prop) {
                    return '                                                         \n                promise = ' + prop + ';                                      \n                if (promise instanceof Promise) {                            \n                    promise.cancel();                                        \n                }                                                            \n            ';
                }).join('\n');
                var passedArguments = props.join(', ');
                var name = 'Holder$' + total;
                var code = 'return function(tryCatch, errorObj, Promise, async) {    \n            \'use strict\';                                                    \n            function [TheName](fn) {                                         \n                [TheProperties]                                              \n                this.fn = fn;                                                \n                this.asyncNeeded = true;                                     \n                this.now = 0;                                                \n            }                                                                \n                                                                             \n            [TheName].prototype._callFunction = function(promise) {          \n                promise._pushContext();                                      \n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \n                promise._popContext();                                       \n                if (ret === errorObj) {                                      \n                    promise._rejectCallback(ret.e, false);                   \n                } else {                                                     \n                    promise._resolveCallback(ret);                           \n                }                                                            \n            };                                                               \n                                                                             \n            [TheName].prototype.checkFulfillment = function(promise) {       \n                var now = ++this.now;                                        \n                if (now === [TheTotal]) {                                    \n                    if (this.asyncNeeded) {                                  \n                        async.invoke(this._callFunction, this, promise);     \n                    } else {                                                 \n                        this._callFunction(promise);                         \n                    }                                                        \n                                                                             \n                }                                                            \n            };                                                               \n                                                                             \n            [TheName].prototype._resultCancelled = function() {              \n                [CancellationCode]                                           \n            };                                                               \n                                                                             \n            return [TheName];                                                \n        }(tryCatch, errorObj, Promise, async);                               \n        ';
                code = code.replace(/\[TheName\]/g, name).replace(/\[TheTotal\]/g, total).replace(/\[ThePassedArguments\]/g, passedArguments).replace(/\[TheProperties\]/g, assignment).replace(/\[CancellationCode\]/g, cancellationCode);
                return new Function('tryCatch', 'errorObj', 'Promise', 'async', code)(tryCatch, errorObj, Promise, async);
            };
            var holderClasses = [];
            var thenCallbacks = [];
            var promiseSetters = [];
            for (var i = 0; i < 8; ++i) {
                holderClasses.push(generateHolderClass(i + 1));
                thenCallbacks.push(thenCallback(i + 1));
                promiseSetters.push(promiseSetter(i + 1));
            }
            reject = function (reason) {
                this._reject(reason);
            };
        }
    }
    Promise.join = function () {
        var last = arguments.length - 1;
        var fn;
        if (last > 0 && typeof arguments[last] === 'function') {
            fn = arguments[last];
            if (!true) {
                if (last <= 8 && canEvaluate) {
                    var ret = new Promise(INTERNAL);
                    ret._captureStackTrace();
                    var HolderClass = holderClasses[last - 1];
                    var holder = new HolderClass(fn);
                    var callbacks = thenCallbacks;
                    for (var i = 0; i < last; ++i) {
                        var maybePromise = tryConvertToPromise(arguments[i], ret);
                        if (maybePromise instanceof Promise) {
                            maybePromise = maybePromise._target();
                            var bitField = maybePromise._bitField;
                            ;
                            if ((bitField & 50397184) === 0) {
                                maybePromise._then(callbacks[i], reject, undefined, ret, holder);
                                promiseSetters[i](maybePromise, holder);
                                holder.asyncNeeded = false;
                            } else if ((bitField & 33554432) !== 0) {
                                callbacks[i].call(ret, maybePromise._value(), holder);
                            } else if ((bitField & 16777216) !== 0) {
                                ret._reject(maybePromise._reason());
                            } else {
                                ret._cancel();
                            }
                        } else {
                            callbacks[i].call(ret, maybePromise, holder);
                        }
                    }
                    if (!ret._isFateSealed()) {
                        if (holder.asyncNeeded) {
                            var domain = getDomain();
                            if (domain !== null) {
                                holder.fn = util.domainBind(domain, holder.fn);
                            }
                        }
                        ret._setAsyncGuaranteed();
                        ret._setOnCancel(holder);
                    }
                    return ret;
                }
            }
        }
        var args = [].slice.call(arguments);
        ;
        if (fn)
            args.pop();
        var ret = new PromiseArray(args).promise();
        return fn !== undefined ? ret.spread(fn) : ret;
    };
};}, $__.fs.J$__v757635546_466_22),
            $__.os.oid16 = {
                './util': 36
            }
        ],
        18: [
            ($__.fs.J$__v757635546_488_23 = function J$__v757635546_488(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid107).exports = ($__.fs.J$__v757635546_486_409 = function J$__v757635546_486(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
var vvv_return, vvv_switch, vvv_tmp0, getDomain, util, tryCatch, errorObj, async, MappingPromiseArray, map;
MappingPromiseArray = function MappingPromiseArray(promises, fn, limit, _filter) {
    this.constructor$(promises);
    this._promise._captureStackTrace();
    var domain = getDomain();
    this._callback = domain === null ? fn : util.domainBind(domain, fn);
    this._preservedValues = _filter === INTERNAL ? new Array(this.length()) : null;
    this._limit = limit;
    this._inFlight = 0;
    this._queue = [];
    async.invoke(this._asyncInit, this, undefined);
};
map = function map(promises, fn, options, _filter) {
    if (typeof fn !== 'function') {
        return apiRejection('expecting a function but got ' + util.classString(fn));
    }
    var limit = 0;
    if (options !== undefined) {
        if (typeof options === 'object' && options !== null) {
            if (typeof options.concurrency !== 'number') {
                return Promise.reject(new TypeError('\'concurrency\' must be a number but it is ' + util.classString(options.concurrency)));
            }
            limit = options.concurrency;
        } else {
            return Promise.reject(new TypeError('options argument must be an object but it is ' + util.classString(options)));
        }
    }
    limit = typeof limit === 'number' && isFinite(limit) && limit >= 1 ? limit : 0;
    return new MappingPromiseArray(promises, fn, limit, _filter).promise();
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], PromiseArray = arguments[1], apiRejection = arguments[2], tryConvertToPromise = arguments[3], INTERNAL = arguments[4], debug = arguments[5];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    MappingPromiseArray = ($__.fs.MappingPromiseArray_410 = function MappingPromiseArray(promises, fn, limit, _filter) {
var vvv_return, vvv_switch, domain;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1], limit = arguments[2], _filter = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor$(promises);
this._promise._captureStackTrace();
domain = getDomain();
this._callback = domain === null ? fn : util.domainBind(domain, fn);
this._preservedValues = _filter === INTERNAL ? new Array(this.length()) : null;
this._limit = limit;
this._inFlight = 0;
this._queue = [];
async.invoke(this._asyncInit, this, undefined);});
    map = ($__.fs.map_411 = function map(promises, fn, options, _filter) {
var vvv_return, vvv_switch, limit;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1], options = arguments[2], _filter = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn !== 'function') {
    return apiRejection('expecting a function but got ' + util.classString(fn));
}
limit = 0;
if (options !== undefined) {
    if (typeof options === 'object' && options !== null) {
        if (typeof options.concurrency !== 'number') {
            return Promise.reject(new TypeError('\'concurrency\' must be a number but it is ' + util.classString(options.concurrency)));
        }
        limit = options.concurrency;
    } else {
        return Promise.reject(new TypeError('options argument must be an object but it is ' + util.classString(options)));
    }
}
limit = typeof limit === 'number' && isFinite(limit) && limit >= 1 ? limit : 0;
return new MappingPromiseArray(promises, fn, limit, _filter).promise();});
    getDomain = TAJS_restrictToType(Promise._getDomain, 'function');
    util = (_dereq_, $__.fs.J$__v757635546_3_408)('./util', 0, true, $__.uid);
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    async = TAJS_restrictToType(Promise._async, 'object');
    vvv_tmp0 = util, 'inherits', $__.fs.J$__v757635546_1017_83.call(vvv_tmp0, (MappingPromiseArray, $__.fs.MappingPromiseArray_410), (PromiseArray, $__.fs.PromiseArray_151), 7, true, $__.uid);
    TAJS_restrictToType(MappingPromiseArray.prototype, 'object')._asyncInit = ($__.fs.J$__v757635546_469_413 = function J$__v757635546_469() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._init$(undefined, -2);});
    TAJS_restrictToType(MappingPromiseArray.prototype, 'object')._init = ($__.fs.J$__v757635546_471_414 = function J$__v757635546_471() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(MappingPromiseArray.prototype, 'object')._promiseFulfilled = ($__.fs.J$__v757635546_473_415 = function J$__v757635546_473(value, index) {
var vvv_return, vvv_switch, values, length, preservedValues, limit, promise, callback, receiver, ret, promiseCreated, maybePromise, bitField, totalResolved;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], index = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
values = this._values;
length = this.length();
preservedValues = this._preservedValues;
limit = this._limit;
if (index < 0) {
    index = index * -1 - 1;
    values[index] = value;
    if (limit >= 1) {
        this._inFlight--;
        this._drainQueue();
        if (this._isResolved())
            return true;
    }
} else {
    if (limit >= 1 && this._inFlight >= limit) {
        values[index] = value;
        this._queue.push(index);
        return false;
    }
    if (preservedValues !== null)
        preservedValues[index] = value;
    promise = this._promise;
    callback = this._callback;
    receiver = promise._boundValue();
    promise._pushContext();
    ret = tryCatch(callback).call(receiver, value, index, length);
    promiseCreated = promise._popContext();
    debug.checkForgottenReturns(ret, promiseCreated, preservedValues !== null ? 'Promise.filter' : 'Promise.map', promise);
    if (ret === errorObj) {
        this._reject(ret.e);
        return true;
    }
    maybePromise = tryConvertToPromise(ret, this._promise);
    if (maybePromise instanceof Promise) {
        maybePromise = maybePromise._target();
        bitField = maybePromise._bitField;
        ;
        if ((bitField & 50397184) === 0) {
            if (limit >= 1)
                this._inFlight++;
            values[index] = maybePromise;
            maybePromise._proxy(this, (index + 1) * -1);
            return false;
        } else if ((bitField & 33554432) !== 0) {
            ret = maybePromise._value();
        } else if ((bitField & 16777216) !== 0) {
            this._reject(maybePromise._reason());
            return true;
        } else {
            this._cancel();
            return true;
        }
    }
    values[index] = ret;
}
totalResolved = ++this._totalResolved;
if (totalResolved >= length) {
    if (preservedValues !== null) {
        this._filter(values, preservedValues);
    } else {
        this._resolve(values);
    }
    return true;
}
return false;});
    TAJS_restrictToType(MappingPromiseArray.prototype, 'object')._drainQueue = ($__.fs.J$__v757635546_475_416 = function J$__v757635546_475() {
var vvv_return, vvv_switch, queue, limit, values, index;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
queue = this._queue;
limit = this._limit;
values = this._values;
while (queue.length > 0 && this._inFlight < limit) {
    if (this._isResolved())
        return;
    index = queue.pop();
    this._promiseFulfilled(values[index], index);
}});
    TAJS_restrictToType(MappingPromiseArray.prototype, 'object')._filter = ($__.fs.J$__v757635546_477_417 = function J$__v757635546_477(booleans, values) {
var vvv_return, vvv_switch, len, ret, j;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
booleans = arguments[0], values = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = values.length;
ret = new Array(len);
j = 0;
for (var i = 0; i < len; ++i) {
    if (booleans[i])
        ret[j++] = values[i];
}
ret.length = j;
this._resolve(ret);});
    TAJS_restrictToType(MappingPromiseArray.prototype, 'object').preservedValues = ($__.fs.J$__v757635546_479_418 = function J$__v757635546_479() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._preservedValues;});
    TAJS_restrictToType(Promise.prototype, 'object').map = ($__.fs.J$__v757635546_482_419 = function J$__v757635546_482(fn, options) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], options = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return map(this, fn, options, null);});
    Promise.map = ($__.fs.J$__v757635546_484_420 = function J$__v757635546_484(promises, fn, options, _filter) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1], options = arguments[2], _filter = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return map(promises, fn, options, _filter);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
getDomain = Promise._getDomain;
util = _dereq_('./util');
tryCatch = util.tryCatch;
errorObj = util.errorObj;
async = Promise._async;
util.inherits(MappingPromiseArray, PromiseArray);
MappingPromiseArray.prototype._asyncInit = function () {
    this._init$(undefined, -2);
};
MappingPromiseArray.prototype._init = function () {
};
MappingPromiseArray.prototype._promiseFulfilled = function (value, index) {
    var values = this._values;
    var length = this.length();
    var preservedValues = this._preservedValues;
    var limit = this._limit;
    if (index < 0) {
        index = index * -1 - 1;
        values[index] = value;
        if (limit >= 1) {
            this._inFlight--;
            this._drainQueue();
            if (this._isResolved())
                return true;
        }
    } else {
        if (limit >= 1 && this._inFlight >= limit) {
            values[index] = value;
            this._queue.push(index);
            return false;
        }
        if (preservedValues !== null)
            preservedValues[index] = value;
        var promise = this._promise;
        var callback = this._callback;
        var receiver = promise._boundValue();
        promise._pushContext();
        var ret = tryCatch(callback).call(receiver, value, index, length);
        var promiseCreated = promise._popContext();
        debug.checkForgottenReturns(ret, promiseCreated, preservedValues !== null ? 'Promise.filter' : 'Promise.map', promise);
        if (ret === errorObj) {
            this._reject(ret.e);
            return true;
        }
        var maybePromise = tryConvertToPromise(ret, this._promise);
        if (maybePromise instanceof Promise) {
            maybePromise = maybePromise._target();
            var bitField = maybePromise._bitField;
            ;
            if ((bitField & 50397184) === 0) {
                if (limit >= 1)
                    this._inFlight++;
                values[index] = maybePromise;
                maybePromise._proxy(this, (index + 1) * -1);
                return false;
            } else if ((bitField & 33554432) !== 0) {
                ret = maybePromise._value();
            } else if ((bitField & 16777216) !== 0) {
                this._reject(maybePromise._reason());
                return true;
            } else {
                this._cancel();
                return true;
            }
        }
        values[index] = ret;
    }
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= length) {
        if (preservedValues !== null) {
            this._filter(values, preservedValues);
        } else {
            this._resolve(values);
        }
        return true;
    }
    return false;
};
MappingPromiseArray.prototype._drainQueue = function () {
    var queue = this._queue;
    var limit = this._limit;
    var values = this._values;
    while (queue.length > 0 && this._inFlight < limit) {
        if (this._isResolved())
            return;
        var index = queue.pop();
        this._promiseFulfilled(values[index], index);
    }
};
MappingPromiseArray.prototype._filter = function (booleans, values) {
    var len = values.length;
    var ret = new Array(len);
    var j = 0;
    for (var i = 0; i < len; ++i) {
        if (booleans[i])
            ret[j++] = values[i];
    }
    ret.length = j;
    this._resolve(ret);
};
MappingPromiseArray.prototype.preservedValues = function () {
    return this._preservedValues;
};
Promise.prototype.map = function (fn, options) {
    return map(this, fn, options, null);
};
Promise.map = function (promises, fn, options, _filter) {
    return map(promises, fn, options, _filter);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
    var getDomain = Promise._getDomain;
    var util = _dereq_('./util');
    var tryCatch = util.tryCatch;
    var errorObj = util.errorObj;
    var async = Promise._async;
    function MappingPromiseArray(promises, fn, limit, _filter) {
        this.constructor$(promises);
        this._promise._captureStackTrace();
        var domain = getDomain();
        this._callback = domain === null ? fn : util.domainBind(domain, fn);
        this._preservedValues = _filter === INTERNAL ? new Array(this.length()) : null;
        this._limit = limit;
        this._inFlight = 0;
        this._queue = [];
        async.invoke(this._asyncInit, this, undefined);
    }
    util.inherits(MappingPromiseArray, PromiseArray);
    MappingPromiseArray.prototype._asyncInit = function () {
        this._init$(undefined, -2);
    };
    MappingPromiseArray.prototype._init = function () {
    };
    MappingPromiseArray.prototype._promiseFulfilled = function (value, index) {
        var values = this._values;
        var length = this.length();
        var preservedValues = this._preservedValues;
        var limit = this._limit;
        if (index < 0) {
            index = index * -1 - 1;
            values[index] = value;
            if (limit >= 1) {
                this._inFlight--;
                this._drainQueue();
                if (this._isResolved())
                    return true;
            }
        } else {
            if (limit >= 1 && this._inFlight >= limit) {
                values[index] = value;
                this._queue.push(index);
                return false;
            }
            if (preservedValues !== null)
                preservedValues[index] = value;
            var promise = this._promise;
            var callback = this._callback;
            var receiver = promise._boundValue();
            promise._pushContext();
            var ret = tryCatch(callback).call(receiver, value, index, length);
            var promiseCreated = promise._popContext();
            debug.checkForgottenReturns(ret, promiseCreated, preservedValues !== null ? 'Promise.filter' : 'Promise.map', promise);
            if (ret === errorObj) {
                this._reject(ret.e);
                return true;
            }
            var maybePromise = tryConvertToPromise(ret, this._promise);
            if (maybePromise instanceof Promise) {
                maybePromise = maybePromise._target();
                var bitField = maybePromise._bitField;
                ;
                if ((bitField & 50397184) === 0) {
                    if (limit >= 1)
                        this._inFlight++;
                    values[index] = maybePromise;
                    maybePromise._proxy(this, (index + 1) * -1);
                    return false;
                } else if ((bitField & 33554432) !== 0) {
                    ret = maybePromise._value();
                } else if ((bitField & 16777216) !== 0) {
                    this._reject(maybePromise._reason());
                    return true;
                } else {
                    this._cancel();
                    return true;
                }
            }
            values[index] = ret;
        }
        var totalResolved = ++this._totalResolved;
        if (totalResolved >= length) {
            if (preservedValues !== null) {
                this._filter(values, preservedValues);
            } else {
                this._resolve(values);
            }
            return true;
        }
        return false;
    };
    MappingPromiseArray.prototype._drainQueue = function () {
        var queue = this._queue;
        var limit = this._limit;
        var values = this._values;
        while (queue.length > 0 && this._inFlight < limit) {
            if (this._isResolved())
                return;
            var index = queue.pop();
            this._promiseFulfilled(values[index], index);
        }
    };
    MappingPromiseArray.prototype._filter = function (booleans, values) {
        var len = values.length;
        var ret = new Array(len);
        var j = 0;
        for (var i = 0; i < len; ++i) {
            if (booleans[i])
                ret[j++] = values[i];
        }
        ret.length = j;
        this._resolve(ret);
    };
    MappingPromiseArray.prototype.preservedValues = function () {
        return this._preservedValues;
    };
    function map(promises, fn, options, _filter) {
        if (typeof fn !== 'function') {
            return apiRejection('expecting a function but got ' + util.classString(fn));
        }
        var limit = 0;
        if (options !== undefined) {
            if (typeof options === 'object' && options !== null) {
                if (typeof options.concurrency !== 'number') {
                    return Promise.reject(new TypeError('\'concurrency\' must be a number but it is ' + util.classString(options.concurrency)));
                }
                limit = options.concurrency;
            } else {
                return Promise.reject(new TypeError('options argument must be an object but it is ' + util.classString(options)));
            }
        }
        limit = typeof limit === 'number' && isFinite(limit) && limit >= 1 ? limit : 0;
        return new MappingPromiseArray(promises, fn, limit, _filter).promise();
    }
    Promise.prototype.map = function (fn, options) {
        return map(this, fn, options, null);
    };
    Promise.map = function (promises, fn, options, _filter) {
        return map(promises, fn, options, _filter);
    };
};}, $__.fs.J$__v757635546_488_23),
            $__.os.oid17 = {
                './util': 36
            }
        ],
        19: [
            ($__.fs.J$__v757635546_500_24 = function J$__v757635546_500(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid95).exports = ($__.fs.J$__v757635546_498_345 = function J$__v757635546_498(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {
var vvv_return, vvv_switch, util, tryCatch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1], tryConvertToPromise = arguments[2], apiRejection = arguments[3], debug = arguments[4];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    util = (_dereq_, $__.fs.J$__v757635546_3_344)('./util', 0, true, $__.uid);
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    Promise.method = ($__.fs.J$__v757635546_492_346 = function J$__v757635546_492(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn !== 'function') {
    throw new Promise.TypeError('expecting a function but got ' + util.classString(fn));
}
return function () {
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    ret._pushContext();
    var value = tryCatch(fn).apply(this, arguments);
    var promiseCreated = ret._popContext();
    debug.checkForgottenReturns(value, promiseCreated, 'Promise.method', ret);
    ret._resolveFromSyncValue(value);
    return ret;
};});
    Promise.attempt = Promise['try', 'try'] = ($__.fs.J$__v757635546_494_347 = function J$__v757635546_494(fn) {
var vvv_return, vvv_switch, ret, value, arg, ctx, promiseCreated;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn !== 'function') {
    return apiRejection('expecting a function but got ' + util.classString(fn));
}
ret = new Promise(INTERNAL);
ret._captureStackTrace();
ret._pushContext();
if (arguments.length > 1) {
    debug.deprecated('calling Promise.try with more than 1 argument');
    arg = arguments[1];
    ctx = arguments[2];
    value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg) : tryCatch(fn).call(ctx, arg);
} else {
    value = tryCatch(fn)();
}
promiseCreated = ret._popContext();
debug.checkForgottenReturns(value, promiseCreated, 'Promise.try', ret);
ret._resolveFromSyncValue(value);
return ret;});
    TAJS_restrictToType(Promise.prototype, 'object')._resolveFromSyncValue = ($__.fs.J$__v757635546_496_348 = function J$__v757635546_496(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (value === util.errorObj) {
    this._rejectCallback(value.e, false);
} else {
    this._resolveCallback(value, true);
}});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
tryCatch = util.tryCatch;
Promise.method = function (fn) {
    if (typeof fn !== 'function') {
        throw new Promise.TypeError('expecting a function but got ' + util.classString(fn));
    }
    return function () {
        var ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        ret._pushContext();
        var value = tryCatch(fn).apply(this, arguments);
        var promiseCreated = ret._popContext();
        debug.checkForgottenReturns(value, promiseCreated, 'Promise.method', ret);
        ret._resolveFromSyncValue(value);
        return ret;
    };
};
Promise.attempt = Promise['try'] = function (fn) {
    if (typeof fn !== 'function') {
        return apiRejection('expecting a function but got ' + util.classString(fn));
    }
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    ret._pushContext();
    var value;
    if (arguments.length > 1) {
        debug.deprecated('calling Promise.try with more than 1 argument');
        var arg = arguments[1];
        var ctx = arguments[2];
        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg) : tryCatch(fn).call(ctx, arg);
    } else {
        value = tryCatch(fn)();
    }
    var promiseCreated = ret._popContext();
    debug.checkForgottenReturns(value, promiseCreated, 'Promise.try', ret);
    ret._resolveFromSyncValue(value);
    return ret;
};
Promise.prototype._resolveFromSyncValue = function (value) {
    if (value === util.errorObj) {
        this._rejectCallback(value.e, false);
    } else {
        this._resolveCallback(value, true);
    }
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {
    var util = _dereq_('./util');
    var tryCatch = util.tryCatch;
    Promise.method = function (fn) {
        if (typeof fn !== 'function') {
            throw new Promise.TypeError('expecting a function but got ' + util.classString(fn));
        }
        return function () {
            var ret = new Promise(INTERNAL);
            ret._captureStackTrace();
            ret._pushContext();
            var value = tryCatch(fn).apply(this, arguments);
            var promiseCreated = ret._popContext();
            debug.checkForgottenReturns(value, promiseCreated, 'Promise.method', ret);
            ret._resolveFromSyncValue(value);
            return ret;
        };
    };
    Promise.attempt = Promise['try'] = function (fn) {
        if (typeof fn !== 'function') {
            return apiRejection('expecting a function but got ' + util.classString(fn));
        }
        var ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        ret._pushContext();
        var value;
        if (arguments.length > 1) {
            debug.deprecated('calling Promise.try with more than 1 argument');
            var arg = arguments[1];
            var ctx = arguments[2];
            value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg) : tryCatch(fn).call(ctx, arg);
        } else {
            value = tryCatch(fn)();
        }
        var promiseCreated = ret._popContext();
        debug.checkForgottenReturns(value, promiseCreated, 'Promise.try', ret);
        ret._resolveFromSyncValue(value);
        return ret;
    };
    Promise.prototype._resolveFromSyncValue = function (value) {
        if (value === util.errorObj) {
            this._rejectCallback(value.e, false);
        } else {
            this._resolveCallback(value, true);
        }
    };
};}, $__.fs.J$__v757635546_500_24),
            $__.os.oid18 = {
                './util': 36
            }
        ],
        20: [
            ($__.fs.J$__v757635546_507_25 = function J$__v757635546_507(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch, util, maybeWrapAsError, errors, OperationalError, es5, isUntypedError, rErrorKey, wrapAsOperationalError, nodebackForPromise;
isUntypedError = function isUntypedError(obj) {
    return obj instanceof Error && es5.getPrototypeOf(obj) === Error.prototype;
};
wrapAsOperationalError = function wrapAsOperationalError(obj) {
    var ret;
    if (isUntypedError(obj)) {
        ret = new OperationalError(obj);
        ret.name = obj.name;
        ret.message = obj.message;
        ret.stack = obj.stack;
        var keys = es5.keys(obj);
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!rErrorKey.test(key)) {
                ret[key] = obj[key];
            }
        }
        return ret;
    }
    util.markAsOriginatingFromRejection(obj);
    return obj;
};
nodebackForPromise = function nodebackForPromise(promise, multiArgs) {
    return function (err, value) {
        if (promise === null)
            return;
        if (err) {
            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
            promise._attachExtraTrace(wrapped);
            promise._reject(wrapped);
        } else if (!multiArgs) {
            promise._fulfill(value);
        } else {
            var args = [].slice.call(arguments, 1);
            ;
            promise._fulfill(args);
        }
        promise = null;
    };
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    isUntypedError = ($__.fs.isUntypedError_284 = function isUntypedError(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return obj instanceof Error && es5.getPrototypeOf(obj) === Error.prototype;});
    wrapAsOperationalError = ($__.fs.wrapAsOperationalError_285 = function wrapAsOperationalError(obj) {
var vvv_return, vvv_switch, ret, keys, key;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (isUntypedError(obj)) {
    ret = new OperationalError(obj);
    ret.name = obj.name;
    ret.message = obj.message;
    ret.stack = obj.stack;
    keys = es5.keys(obj);
    for (var i = 0; i < keys.length; ++i) {
        key = keys[i];
        if (!rErrorKey.test(key)) {
            ret[key] = obj[key];
        }
    }
    return ret;
}
util.markAsOriginatingFromRejection(obj);
return obj;});
    nodebackForPromise = ($__.fs.nodebackForPromise_286 = function nodebackForPromise(promise, multiArgs) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0], multiArgs = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function (err, value) {
    if (promise === null)
        return;
    if (err) {
        var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
        promise._attachExtraTrace(wrapped);
        promise._reject(wrapped);
    } else if (!multiArgs) {
        promise._fulfill(value);
    } else {
        var args = [].slice.call(arguments, 1);
        ;
        promise._fulfill(args);
    }
    promise = null;
};});
    util = (_dereq_, $__.fs.J$__v757635546_3_283)('./util', 0, true, $__.uid);
    maybeWrapAsError = TAJS_restrictToType((util, $__.os.oid50).maybeWrapAsError, 'function');
    errors = (_dereq_, $__.fs.J$__v757635546_3_283)('./errors', 1, true, $__.uid);
    OperationalError = TAJS_restrictToType((errors, $__.os.oid70).OperationalError, 'function');
    es5 = (_dereq_, $__.fs.J$__v757635546_3_283)('./es5', 2, true, $__.uid);
    rErrorKey = /^(?:name|message|stack|cause)$/;
    (module, $__.os.oid92).exports = nodebackForPromise;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
maybeWrapAsError = util.maybeWrapAsError;
errors = _dereq_('./errors');
OperationalError = errors.OperationalError;
es5 = _dereq_('./es5');
rErrorKey = /^(?:name|message|stack|cause)$/;
module.exports = nodebackForPromise;}, $__.fs.J$__v757635546_507_25),
            $__.os.oid19 = {
                './errors': 12,
                './es5': 13,
                './util': 36
            }
        ],
        21: [
            ($__.fs.J$__v757635546_516_26 = function J$__v757635546_516(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid121).exports = ($__.fs.J$__v757635546_514_481 = function J$__v757635546_514(Promise) {
var vvv_return, vvv_switch, util, async, tryCatch, errorObj, spreadAdapter, successAdapter, errorAdapter;
spreadAdapter = function spreadAdapter(val, nodeback) {
    var promise = this;
    if (!util.isArray(val))
        return successAdapter.call(promise, val, nodeback);
    var ret = tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
};
successAdapter = function successAdapter(val, nodeback) {
    var promise = this;
    var receiver = promise._boundValue();
    var ret = val === undefined ? tryCatch(nodeback).call(receiver, null) : tryCatch(nodeback).call(receiver, null, val);
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
};
errorAdapter = function errorAdapter(reason, nodeback) {
    var promise = this;
    if (!reason) {
        var newReason = new Error(reason + '');
        newReason.cause = reason;
        reason = newReason;
    }
    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    spreadAdapter = ($__.fs.spreadAdapter_482 = function spreadAdapter(val, nodeback) {
var vvv_return, vvv_switch, promise, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
val = arguments[0], nodeback = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this;
if (!util.isArray(val))
    return successAdapter.call(promise, val, nodeback);
ret = tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));
if (ret === errorObj) {
    async.throwLater(ret.e);
}});
    successAdapter = ($__.fs.successAdapter_483 = function successAdapter(val, nodeback) {
var vvv_return, vvv_switch, promise, receiver, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
val = arguments[0], nodeback = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this;
receiver = promise._boundValue();
ret = val === undefined ? tryCatch(nodeback).call(receiver, null) : tryCatch(nodeback).call(receiver, null, val);
if (ret === errorObj) {
    async.throwLater(ret.e);
}});
    errorAdapter = ($__.fs.errorAdapter_484 = function errorAdapter(reason, nodeback) {
var vvv_return, vvv_switch, promise, newReason, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0], nodeback = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this;
if (!reason) {
    newReason = new Error(reason + '');
    newReason.cause = reason;
    reason = newReason;
}
ret = tryCatch(nodeback).call(promise._boundValue(), reason);
if (ret === errorObj) {
    async.throwLater(ret.e);
}});
    util = (_dereq_, $__.fs.J$__v757635546_3_480)('./util', 0, true, $__.uid);
    async = TAJS_restrictToType(Promise._async, 'object');
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    TAJS_restrictToType(Promise.prototype, 'object').asCallback = TAJS_restrictToType(Promise.prototype, 'object').nodeify = ($__.fs.J$__v757635546_512_485 = function J$__v757635546_512(nodeback, options) {
var vvv_return, vvv_switch, adapter;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
nodeback = arguments[0], options = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof nodeback == 'function') {
    adapter = successAdapter;
    if (options !== undefined && Object(options).spread) {
        adapter = spreadAdapter;
    }
    this._then(adapter, errorAdapter, undefined, this, nodeback);
}
return this;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
async = Promise._async;
tryCatch = util.tryCatch;
errorObj = util.errorObj;
Promise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback, options) {
    if (typeof nodeback == 'function') {
        var adapter = successAdapter;
        if (options !== undefined && Object(options).spread) {
            adapter = spreadAdapter;
        }
        this._then(adapter, errorAdapter, undefined, this, nodeback);
    }
    return this;
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise) {
    var util = _dereq_('./util');
    var async = Promise._async;
    var tryCatch = util.tryCatch;
    var errorObj = util.errorObj;
    function spreadAdapter(val, nodeback) {
        var promise = this;
        if (!util.isArray(val))
            return successAdapter.call(promise, val, nodeback);
        var ret = tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));
        if (ret === errorObj) {
            async.throwLater(ret.e);
        }
    }
    function successAdapter(val, nodeback) {
        var promise = this;
        var receiver = promise._boundValue();
        var ret = val === undefined ? tryCatch(nodeback).call(receiver, null) : tryCatch(nodeback).call(receiver, null, val);
        if (ret === errorObj) {
            async.throwLater(ret.e);
        }
    }
    function errorAdapter(reason, nodeback) {
        var promise = this;
        if (!reason) {
            var newReason = new Error(reason + '');
            newReason.cause = reason;
            reason = newReason;
        }
        var ret = tryCatch(nodeback).call(promise._boundValue(), reason);
        if (ret === errorObj) {
            async.throwLater(ret.e);
        }
    }
    Promise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback, options) {
        if (typeof nodeback == 'function') {
            var adapter = successAdapter;
            if (options !== undefined && Object(options).spread) {
                adapter = spreadAdapter;
            }
            this._then(adapter, errorAdapter, undefined, this, nodeback);
        }
        return this;
    };
};}, $__.fs.J$__v757635546_516_26),
            $__.os.oid20 = {
                './util': 36
            }
        ],
        22: [
            ($__.fs.J$__v757635546_658_27 = function J$__v757635546_658(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid41).exports = ($__.fs.J$__v757635546_656_46 = function J$__v757635546_656() {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2, vvv_tmp3, vvv_tmp4, makeSelfResolutionError, reflectHandler, apiRejection, Proxyable, UNDEFINED_BINDING, util, getDomain, es5, Async, async, errors, TypeError, CancellationError, INTERNAL, APPLY, NEXT_FILTER, tryConvertToPromise, PromiseArray, Context, createContext, debug, CapturedTrace, PassThroughHandlerContext, catchFilter, nodebackForPromise, errorObj, tryCatch, check, Promise, deferResolve, deferReject, fillTypes;
Proxyable = function Proxyable() {
};
check = function check(self, executor) {
    if (self == null || self.constructor !== Promise) {
        throw new TypeError('the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n');
    }
    if (typeof executor !== 'function') {
        throw new TypeError('expecting a function but got ' + util.classString(executor));
    }
};
Promise = function Promise(executor) {
    if (executor !== INTERNAL) {
        check(this, executor);
    }
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    this._resolveFromExecutor(executor);
    this._promiseCreated();
    this._fireEvent('promiseCreated', this);
};
deferResolve = function deferResolve(v) {
    this.promise._resolveCallback(v);
};
deferReject = function deferReject(v) {
    this.promise._rejectCallback(v, false);
};
fillTypes = function fillTypes(value) {
    var p = new Promise(INTERNAL);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    Proxyable = ($__.fs.Proxyable_47 = function Proxyable() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    check = ($__.fs.check_48 = function check(self, executor) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
self = arguments[0], executor = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (self == null || self.constructor !== Promise) {
    throw new TypeError('the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n');
}
if (typeof executor !== 'function') {
    throw new TypeError('expecting a function but got ' + util.classString(executor));
}});
    Promise = ($__.fs.Promise_49 = function Promise(executor) {
var vvv_return, vvv_switch, vvv_tmp0, vvv_tmp1, vvv_tmp2;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
executor = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 0, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 0, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 0, true, $__.uid);
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 1, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 1, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 1, true, $__.uid);
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 2, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 2, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 2, true, $__.uid);
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 3, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 3, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 3, true, $__.uid);
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 4, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 4, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 4, true, $__.uid);
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 5, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 5, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 5, true, $__.uid);
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 6, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 6, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 6, true, $__.uid);
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 7, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 7, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 7, true, $__.uid);
    return;
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    executor !== INTERNAL;
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    vvv_tmp0 = this, '_resolveFromExecutor', $__.fs.J$__v757635546_617_327.call(vvv_tmp0, (executor, $__.fs.J$__v757635546_529_140), 8, true, $__.uid);
    vvv_tmp1 = this, '_promiseCreated', $__.fs.J$__v757635546_169_258.call(vvv_tmp1, 8, true, $__.uid);
    vvv_tmp2 = this, '_fireEvent', $__.fs.defaultFireEvent_183.call(vvv_tmp2, 'promiseCreated', this, 8, true, $__.uid);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (executor !== INTERNAL) {
    check(this, executor);
}
this._bitField = 0;
this._fulfillmentHandler0 = undefined;
this._rejectionHandler0 = undefined;
this._promise0 = undefined;
this._receiver0 = undefined;
this._resolveFromExecutor(executor);
this._promiseCreated();
this._fireEvent('promiseCreated', this);});
    deferResolve = ($__.fs.deferResolve_50 = function deferResolve(v) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
v = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.promise._resolveCallback(v);});
    deferReject = ($__.fs.deferReject_51 = function deferReject(v) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
v = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.promise._rejectCallback(v, false);});
    fillTypes = ($__.fs.fillTypes_52 = function fillTypes(value) {
var vvv_return, vvv_switch, p;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    p = new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 0, true, $__.uid);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
    return;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    p = new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 1, true, $__.uid);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
    return;
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    p = new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 2, true, $__.uid);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
    return;
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    p = new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 3, true, $__.uid);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
    return;
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    p = new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 4, true, $__.uid);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
    return;
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    p = new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 5, true, $__.uid);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
    return;
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    p = new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 6, true, $__.uid);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
    return;
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    p = new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 8, true, $__.uid);
    p._fulfillmentHandler0 = value;
    p._rejectionHandler0 = value;
    p._promise0 = value;
    p._receiver0 = value;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
p = new Promise(INTERNAL);
p._fulfillmentHandler0 = value;
p._rejectionHandler0 = value;
p._promise0 = value;
p._receiver0 = value;});
    makeSelfResolutionError = ($__.fs.J$__v757635546_518_53 = function J$__v757635546_518() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return new TypeError('circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n');});
    reflectHandler = ($__.fs.J$__v757635546_520_54 = function J$__v757635546_520() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return new Promise.PromiseInspection(this._target());});
    apiRejection = ($__.fs.J$__v757635546_522_55 = function J$__v757635546_522(msg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
msg = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return Promise.reject(new TypeError(msg));});
    UNDEFINED_BINDING = $__.os.oid42 = {};
    util = (_dereq_, $__.fs.J$__v757635546_3_45)('./util', 0, true, $__.uid);
    (util, $__.os.oid50).isNode, false;
    getDomain = ($__.fs.J$__v757635546_527_92 = function J$__v757635546_527() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return null;});
    vvv_tmp0 = util, 'notEnumerableProp', $__.fs.notEnumerableProp_64.call(vvv_tmp0, (Promise, $__.fs.Promise_49), '_getDomain', (getDomain, $__.fs.J$__v757635546_527_92), 0, true, $__.uid);
    es5 = (_dereq_, $__.fs.J$__v757635546_3_45)('./es5', 1, true, $__.uid);
    Async = (_dereq_, $__.fs.J$__v757635546_3_45)('./async', 2, true, $__.uid);
    async = new (Async, $__.fs.Async_94)(0, true, $__.uid);
    es5['defineProperty']((Promise, $__.fs.Promise_49), '_async', $__.os.oid59 = {
        'value': async
    });
    errors = (_dereq_, $__.fs.J$__v757635546_3_45)('./errors', 3, true, $__.uid);
    TypeError = Promise.TypeError = TAJS_restrictToType((errors, $__.os.oid70).TypeError, 'function');
    Promise.RangeError = TAJS_restrictToType((errors, $__.os.oid70).RangeError, 'function');
    CancellationError = Promise.CancellationError = TAJS_restrictToType((errors, $__.os.oid70).CancellationError, 'function');
    Promise.TimeoutError = TAJS_restrictToType((errors, $__.os.oid70).TimeoutError, 'function');
    Promise.OperationalError = TAJS_restrictToType((errors, $__.os.oid70).OperationalError, 'function');
    Promise.RejectionError = TAJS_restrictToType((errors, $__.os.oid70).OperationalError, 'function');
    Promise.AggregateError = TAJS_restrictToType((errors, $__.os.oid70).AggregateError, 'function');
    INTERNAL = ($__.fs.J$__v757635546_529_140 = function J$__v757635546_529() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    APPLY = $__.os.oid71 = {};
    NEXT_FILTER = $__.os.oid72 = {};
    tryConvertToPromise = ((_dereq_, $__.fs.J$__v757635546_3_45)('./thenables', 4, true, $__.uid), $__.fs.J$__v757635546_944_142)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), 0, true, $__.uid);
    PromiseArray = ((_dereq_, $__.fs.J$__v757635546_3_45)('./promise_array', 5, true, $__.uid), $__.fs.J$__v757635546_689_149)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (apiRejection, $__.fs.J$__v757635546_522_55), (Proxyable, $__.fs.Proxyable_47), 0, true, $__.uid);
    Context = ((_dereq_, $__.fs.J$__v757635546_3_45)('./context', 6, true, $__.uid), $__.fs.J$__v757635546_173_168)((Promise, $__.fs.Promise_49), 0, true, $__.uid);
    createContext = TAJS_restrictToType(Context.create, 'function');
    debug = ((_dereq_, $__.fs.J$__v757635546_3_45)('./debuggability', 7, true, $__.uid), $__.fs.J$__v757635546_327_181)((Promise, $__.fs.Promise_49), (Context, $__.fs.Context_169), 0, true, $__.uid);
    CapturedTrace = TAJS_restrictToType((debug, $__.os.oid86).CapturedTrace, 'function');
    PassThroughHandlerContext = ((_dereq_, $__.fs.J$__v757635546_3_45)('./finally', 8, true, $__.uid), $__.fs.J$__v757635546_414_266)((Promise, $__.fs.Promise_49), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), NEXT_FILTER, 0, true, $__.uid);
    catchFilter = ((_dereq_, $__.fs.J$__v757635546_3_45)('./catch_filter', 9, true, $__.uid), $__.fs.J$__v757635546_146_274)(NEXT_FILTER, 1, true, $__.uid);
    nodebackForPromise = (_dereq_, $__.fs.J$__v757635546_3_45)('./nodeback', 10, true, $__.uid);
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    TAJS_restrictToType(Promise.prototype, 'object').toString = ($__.fs.J$__v757635546_533_287 = function J$__v757635546_533() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return '[object Promise]';});
    TAJS_restrictToType(Promise.prototype, 'object').caught = TAJS_restrictToType(Promise.prototype, 'object')['catch', 'catch'] = ($__.fs.J$__v757635546_535_288 = function J$__v757635546_535(fn) {
var vvv_return, vvv_switch, len, catchInstances, j, i, item;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = arguments.length;
if (len > 1) {
    catchInstances = new Array(len - 1);
    j = 0;
    for (i = 0; i < len - 1; ++i) {
        item = arguments[i];
        if (util.isObject(item)) {
            catchInstances[j++] = item;
        } else {
            return apiRejection('Catch statement predicate: ' + 'expecting an object but got ' + util.classString(item));
        }
    }
    catchInstances.length = j;
    fn = arguments[i];
    return this.then(undefined, catchFilter(catchInstances, fn, this));
}
return this.then(undefined, fn);});
    TAJS_restrictToType(Promise.prototype, 'object').reflect = ($__.fs.J$__v757635546_537_289 = function J$__v757635546_537() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._then(reflectHandler, reflectHandler, undefined, this, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object').then = ($__.fs.J$__v757635546_539_290 = function J$__v757635546_539(didFulfill, didReject) {
var vvv_return, vvv_switch, msg;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
didFulfill = arguments[0], didReject = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (debug.warnings() && arguments.length > 0 && typeof didFulfill !== 'function' && typeof didReject !== 'function') {
    msg = '.then() only accepts functions but was passed: ' + util.classString(didFulfill);
    if (arguments.length > 1) {
        msg += ', ' + util.classString(didReject);
    }
    this._warn(msg);
}
return this._then(didFulfill, didReject, undefined, undefined, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object').done = ($__.fs.J$__v757635546_541_291 = function J$__v757635546_541(didFulfill, didReject) {
var vvv_return, vvv_switch, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
didFulfill = arguments[0], didReject = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this._then(didFulfill, didReject, undefined, undefined, undefined);
promise._setIsFinal();});
    TAJS_restrictToType(Promise.prototype, 'object').spread = ($__.fs.J$__v757635546_543_292 = function J$__v757635546_543(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn !== 'function') {
    return apiRejection('expecting a function but got ' + util.classString(fn));
}
return this.all()._then(fn, undefined, undefined, APPLY, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object').toJSON = ($__.fs.J$__v757635546_545_293 = function J$__v757635546_545() {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = {
    isFulfilled: false,
    isRejected: false,
    fulfillmentValue: undefined,
    rejectionReason: undefined
};
if (this.isFulfilled()) {
    ret.fulfillmentValue = this.value();
    ret.isFulfilled = true;
} else if (this.isRejected()) {
    ret.rejectionReason = this.reason();
    ret.isRejected = true;
}
return ret;});
    TAJS_restrictToType(Promise.prototype, 'object').all = ($__.fs.J$__v757635546_547_294 = function J$__v757635546_547() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (arguments.length > 0) {
    this._warn('.all() was passed arguments but it does not take any');
}
return new PromiseArray(this).promise();});
    TAJS_restrictToType(Promise.prototype, 'object').error = ($__.fs.J$__v757635546_549_295 = function J$__v757635546_549(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.caught(util.originatesFromRejection, fn);});
    Promise.getNewLibraryCopy = TAJS_restrictToType((module, $__.os.oid41).exports, 'function');
    Promise.is = ($__.fs.J$__v757635546_551_296 = function J$__v757635546_551(val) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
val = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return val instanceof Promise;});
    Promise.fromNode = Promise.fromCallback = ($__.fs.J$__v757635546_553_297 = function J$__v757635546_553(fn) {
var vvv_return, vvv_switch, ret, multiArgs, result;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = new Promise(INTERNAL);
ret._captureStackTrace();
multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : false;
result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));
if (result === errorObj) {
    ret._rejectCallback(result.e, true);
}
if (!ret._isFateSealed())
    ret._setAsyncGuaranteed();
return ret;});
    Promise.all = ($__.fs.J$__v757635546_555_298 = function J$__v757635546_555(promises) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return new PromiseArray(promises).promise();});
    Promise.cast = ($__.fs.J$__v757635546_557_299 = function J$__v757635546_557(obj) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = tryConvertToPromise(obj);
if (!(ret instanceof Promise)) {
    ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    ret._setFulfilled();
    ret._rejectionHandler0 = obj;
}
return ret;});
    Promise.resolve = Promise.fulfilled = TAJS_restrictToType(Promise.cast, 'function');
    Promise.reject = Promise.rejected = ($__.fs.J$__v757635546_559_300 = function J$__v757635546_559(reason) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = new Promise(INTERNAL);
ret._captureStackTrace();
ret._rejectCallback(reason, true);
return ret;});
    Promise.setScheduler = ($__.fs.J$__v757635546_561_301 = function J$__v757635546_561(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn !== 'function') {
    throw new TypeError('expecting a function but got ' + util.classString(fn));
}
return async.setScheduler(fn);});
    TAJS_restrictToType(Promise.prototype, 'object')._then = ($__.fs.J$__v757635546_563_302 = function J$__v757635546_563(didFulfill, didReject, _, receiver, internalData) {
var vvv_return, vvv_switch, haveInternalData, promise, target, bitField, domain, handler, value, settler;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
didFulfill = arguments[0], didReject = arguments[1], _ = arguments[2], receiver = arguments[3], internalData = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
haveInternalData = internalData !== undefined;
promise = haveInternalData ? internalData : new Promise(INTERNAL);
target = this._target();
bitField = target._bitField;
if (!haveInternalData) {
    promise._propagateFrom(this, 3);
    promise._captureStackTrace();
    if (receiver === undefined && (this._bitField & 2097152) !== 0) {
        if (!((bitField & 50397184) === 0)) {
            receiver = this._boundValue();
        } else {
            receiver = target === this ? undefined : this._boundTo;
        }
    }
    this._fireEvent('promiseChained', this, promise);
}
domain = getDomain();
if (!((bitField & 50397184) === 0)) {
    settler = target._settlePromiseCtx;
    if ((bitField & 33554432) !== 0) {
        value = target._rejectionHandler0;
        handler = didFulfill;
    } else if ((bitField & 16777216) !== 0) {
        value = target._fulfillmentHandler0;
        handler = didReject;
        target._unsetRejectionIsUnhandled();
    } else {
        settler = target._settlePromiseLateCancellationObserver;
        value = new CancellationError('late cancellation observer');
        target._attachExtraTrace(value);
        handler = didReject;
    }
    async.invoke(settler, target, {
        handler: domain === null ? handler : typeof handler === 'function' && util.domainBind(domain, handler),
        promise: promise,
        receiver: receiver,
        value: value
    });
} else {
    target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
}
return promise;});
    TAJS_restrictToType(Promise.prototype, 'object')._length = ($__.fs.J$__v757635546_565_303 = function J$__v757635546_565() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._bitField & 65535;});
    TAJS_restrictToType(Promise.prototype, 'object')._isFateSealed = ($__.fs.J$__v757635546_567_304 = function J$__v757635546_567() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 117506048) !== 0;});
    TAJS_restrictToType(Promise.prototype, 'object')._isFollowing = ($__.fs.J$__v757635546_569_305 = function J$__v757635546_569() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 67108864) === 67108864;});
    TAJS_restrictToType(Promise.prototype, 'object')._setLength = ($__.fs.J$__v757635546_571_306 = function J$__v757635546_571(len) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
len = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField & -65536 | len & 65535;});
    TAJS_restrictToType(Promise.prototype, 'object')._setFulfilled = ($__.fs.J$__v757635546_573_307 = function J$__v757635546_573() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 33554432;
this._fireEvent('promiseFulfilled', this);});
    TAJS_restrictToType(Promise.prototype, 'object')._setRejected = ($__.fs.J$__v757635546_575_308 = function J$__v757635546_575() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 16777216;
this._fireEvent('promiseRejected', this);});
    TAJS_restrictToType(Promise.prototype, 'object')._setFollowing = ($__.fs.J$__v757635546_577_309 = function J$__v757635546_577() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 67108864;
this._fireEvent('promiseResolved', this);});
    TAJS_restrictToType(Promise.prototype, 'object')._setIsFinal = ($__.fs.J$__v757635546_579_310 = function J$__v757635546_579() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 4194304;});
    TAJS_restrictToType(Promise.prototype, 'object')._isFinal = ($__.fs.J$__v757635546_581_311 = function J$__v757635546_581() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 4194304) > 0;});
    TAJS_restrictToType(Promise.prototype, 'object')._unsetCancelled = ($__.fs.J$__v757635546_583_312 = function J$__v757635546_583() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField & ~65536;});
    TAJS_restrictToType(Promise.prototype, 'object')._setCancelled = ($__.fs.J$__v757635546_585_313 = function J$__v757635546_585() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 65536;
this._fireEvent('promiseCancelled', this);});
    TAJS_restrictToType(Promise.prototype, 'object')._setWillBeCancelled = ($__.fs.J$__v757635546_587_314 = function J$__v757635546_587() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 8388608;});
    TAJS_restrictToType(Promise.prototype, 'object')._setAsyncGuaranteed = ($__.fs.J$__v757635546_589_315 = function J$__v757635546_589() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (async.hasCustomScheduler())
    return;
this._bitField = this._bitField | 134217728;});
    TAJS_restrictToType(Promise.prototype, 'object')._receiverAt = ($__.fs.J$__v757635546_591_316 = function J$__v757635546_591(index) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
index = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = index === 0 ? this._receiver0 : this[index * 4 - 4 + 3];
if (ret === UNDEFINED_BINDING) {
    return undefined;
} else if (ret === undefined && this._isBound()) {
    return this._boundValue();
}
return ret;});
    TAJS_restrictToType(Promise.prototype, 'object')._promiseAt = ($__.fs.J$__v757635546_593_317 = function J$__v757635546_593(index) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
index = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this[index * 4 - 4 + 2];});
    TAJS_restrictToType(Promise.prototype, 'object')._fulfillmentHandlerAt = ($__.fs.J$__v757635546_595_318 = function J$__v757635546_595(index) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
index = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this[index * 4 - 4 + 0];});
    TAJS_restrictToType(Promise.prototype, 'object')._rejectionHandlerAt = ($__.fs.J$__v757635546_597_319 = function J$__v757635546_597(index) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
index = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this[index * 4 - 4 + 1];});
    TAJS_restrictToType(Promise.prototype, 'object')._boundValue = ($__.fs.J$__v757635546_599_320 = function J$__v757635546_599() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(Promise.prototype, 'object')._migrateCallback0 = ($__.fs.J$__v757635546_601_321 = function J$__v757635546_601(follower) {
var vvv_return, vvv_switch, bitField, fulfill, reject, promise, receiver;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
follower = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
bitField = follower._bitField;
fulfill = follower._fulfillmentHandler0;
reject = follower._rejectionHandler0;
promise = follower._promise0;
receiver = follower._receiverAt(0);
if (receiver === undefined)
    receiver = UNDEFINED_BINDING;
this._addCallbacks(fulfill, reject, promise, receiver, null);});
    TAJS_restrictToType(Promise.prototype, 'object')._migrateCallbackAt = ($__.fs.J$__v757635546_603_322 = function J$__v757635546_603(follower, index) {
var vvv_return, vvv_switch, fulfill, reject, promise, receiver;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
follower = arguments[0], index = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
fulfill = follower._fulfillmentHandlerAt(index);
reject = follower._rejectionHandlerAt(index);
promise = follower._promiseAt(index);
receiver = follower._receiverAt(index);
if (receiver === undefined)
    receiver = UNDEFINED_BINDING;
this._addCallbacks(fulfill, reject, promise, receiver, null);});
    TAJS_restrictToType(Promise.prototype, 'object')._addCallbacks = ($__.fs.J$__v757635546_605_323 = function J$__v757635546_605(fulfill, reject, promise, receiver, domain) {
var vvv_return, vvv_switch, index, base;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fulfill = arguments[0], reject = arguments[1], promise = arguments[2], receiver = arguments[3], domain = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
index = this._length();
if (index >= 65535 - 4) {
    index = 0;
    this._setLength(0);
}
if (index === 0) {
    this._promise0 = promise;
    this._receiver0 = receiver;
    if (typeof fulfill === 'function') {
        this._fulfillmentHandler0 = domain === null ? fulfill : util.domainBind(domain, fulfill);
    }
    if (typeof reject === 'function') {
        this._rejectionHandler0 = domain === null ? reject : util.domainBind(domain, reject);
    }
} else {
    base = index * 4 - 4;
    this[base + 2] = promise;
    this[base + 3] = receiver;
    if (typeof fulfill === 'function') {
        this[base + 0] = domain === null ? fulfill : util.domainBind(domain, fulfill);
    }
    if (typeof reject === 'function') {
        this[base + 1] = domain === null ? reject : util.domainBind(domain, reject);
    }
}
this._setLength(index + 1);
return index;});
    TAJS_restrictToType(Promise.prototype, 'object')._proxy = ($__.fs.J$__v757635546_607_324 = function J$__v757635546_607(proxyable, arg) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
proxyable = arguments[0], arg = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._addCallbacks(undefined, undefined, arg, proxyable, null);});
    TAJS_restrictToType(Promise.prototype, 'object')._resolveCallback = ($__.fs.J$__v757635546_609_325 = function J$__v757635546_609(value, shouldBind) {
var vvv_return, vvv_switch, maybePromise, promise, bitField, len, reason;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], shouldBind = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((this._bitField & 117506048) !== 0)
    return;
if (value === this)
    return this._rejectCallback(makeSelfResolutionError(), false);
maybePromise = tryConvertToPromise(value, this);
if (!(maybePromise instanceof Promise))
    return this._fulfill(value);
if (shouldBind)
    this._propagateFrom(maybePromise, 2);
promise = maybePromise._target();
if (promise === this) {
    this._reject(makeSelfResolutionError());
    return;
}
bitField = promise._bitField;
if ((bitField & 50397184) === 0) {
    len = this._length();
    if (len > 0)
        promise._migrateCallback0(this);
    for (var i = 1; i < len; ++i) {
        promise._migrateCallbackAt(this, i);
    }
    this._setFollowing();
    this._setLength(0);
    this._setFollowee(promise);
} else if ((bitField & 33554432) !== 0) {
    this._fulfill(promise._value());
} else if ((bitField & 16777216) !== 0) {
    this._reject(promise._reason());
} else {
    reason = new CancellationError('late cancellation observer');
    promise._attachExtraTrace(reason);
    this._reject(reason);
}});
    TAJS_restrictToType(Promise.prototype, 'object')._rejectCallback = ($__.fs.J$__v757635546_611_326 = function J$__v757635546_611(reason, synchronous, ignoreNonErrorWarnings) {
var vvv_return, vvv_switch, trace, hasStack, message;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0], synchronous = arguments[1], ignoreNonErrorWarnings = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
trace = util.ensureErrorObject(reason);
hasStack = trace === reason;
if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
    message = 'a promise was rejected with a non-error: ' + util.classString(reason);
    this._warn(message, true);
}
this._attachExtraTrace(trace, synchronous ? hasStack : false);
this._reject(reason);});
    TAJS_restrictToType(Promise.prototype, 'object')._resolveFromExecutor = ($__.fs.J$__v757635546_617_327 = function J$__v757635546_617(executor) {
var vvv_return, vvv_switch, promise, synchronous, r;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
executor = arguments[0];
switch (vvv_switch) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 8);
    executor === INTERNAL;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (executor === INTERNAL)
    return;
promise = this;
this._captureStackTrace();
this._pushContext();
synchronous = true;
r = this._execute(executor, function (value) {
    promise._resolveCallback(value);
}, function (reason) {
    promise._rejectCallback(reason, synchronous);
});
synchronous = false;
this._popContext();
if (r !== undefined) {
    promise._rejectCallback(r, true);
}});
    TAJS_restrictToType(Promise.prototype, 'object')._settlePromiseFromHandler = ($__.fs.J$__v757635546_619_328 = function J$__v757635546_619(handler, receiver, value, promise) {
var vvv_return, vvv_switch, bitField, x, promiseCreated;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
handler = arguments[0], receiver = arguments[1], value = arguments[2], promise = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
bitField = promise._bitField;
if ((bitField & 65536) !== 0)
    return;
promise._pushContext();
if (receiver === APPLY) {
    if (!value || typeof value.length !== 'number') {
        x = errorObj;
        x.e = new TypeError('cannot .spread() a non-array: ' + util.classString(value));
    } else {
        x = tryCatch(handler).apply(this._boundValue(), value);
    }
} else {
    x = tryCatch(handler).call(receiver, value);
}
promiseCreated = promise._popContext();
bitField = promise._bitField;
if ((bitField & 65536) !== 0)
    return;
if (x === NEXT_FILTER) {
    promise._reject(value);
} else if (x === errorObj) {
    promise._rejectCallback(x.e, false);
} else {
    debug.checkForgottenReturns(x, promiseCreated, '', promise, this);
    promise._resolveCallback(x);
}});
    TAJS_restrictToType(Promise.prototype, 'object')._target = ($__.fs.J$__v757635546_621_329 = function J$__v757635546_621() {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = this;
while (ret._isFollowing())
    ret = ret._followee();
return ret;});
    TAJS_restrictToType(Promise.prototype, 'object')._followee = ($__.fs.J$__v757635546_623_330 = function J$__v757635546_623() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._rejectionHandler0;});
    TAJS_restrictToType(Promise.prototype, 'object')._setFollowee = ($__.fs.J$__v757635546_625_331 = function J$__v757635546_625(promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._rejectionHandler0 = promise;});
    TAJS_restrictToType(Promise.prototype, 'object')._settlePromise = ($__.fs.J$__v757635546_627_332 = function J$__v757635546_627(promise, handler, receiver, value) {
var vvv_return, vvv_switch, isPromise, bitField, asyncGuaranteed;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0], handler = arguments[1], receiver = arguments[2], value = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
isPromise = promise instanceof Promise;
bitField = this._bitField;
asyncGuaranteed = (bitField & 134217728) !== 0;
if ((bitField & 65536) !== 0) {
    if (isPromise)
        promise._invokeInternalOnCancel();
    if (receiver instanceof PassThroughHandlerContext && receiver.isFinallyHandler()) {
        receiver.cancelPromise = promise;
        if (tryCatch(handler).call(receiver, value) === errorObj) {
            promise._reject(errorObj.e);
        }
    } else if (handler === reflectHandler) {
        promise._fulfill(reflectHandler.call(receiver));
    } else if (receiver instanceof Proxyable) {
        receiver._promiseCancelled(promise);
    } else if (isPromise || promise instanceof PromiseArray) {
        promise._cancel();
    } else {
        receiver.cancel();
    }
} else if (typeof handler === 'function') {
    if (!isPromise) {
        handler.call(receiver, value, promise);
    } else {
        if (asyncGuaranteed)
            promise._setAsyncGuaranteed();
        this._settlePromiseFromHandler(handler, receiver, value, promise);
    }
} else if (receiver instanceof Proxyable) {
    if (!receiver._isResolved()) {
        if ((bitField & 33554432) !== 0) {
            receiver._promiseFulfilled(value, promise);
        } else {
            receiver._promiseRejected(value, promise);
        }
    }
} else if (isPromise) {
    if (asyncGuaranteed)
        promise._setAsyncGuaranteed();
    if ((bitField & 33554432) !== 0) {
        promise._fulfill(value);
    } else {
        promise._reject(value);
    }
}});
    TAJS_restrictToType(Promise.prototype, 'object')._settlePromiseLateCancellationObserver = ($__.fs.J$__v757635546_629_333 = function J$__v757635546_629(ctx) {
var vvv_return, vvv_switch, handler, promise, receiver, value;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ctx = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
handler = ctx.handler;
promise = ctx.promise;
receiver = ctx.receiver;
value = ctx.value;
if (typeof handler === 'function') {
    if (!(promise instanceof Promise)) {
        handler.call(receiver, value, promise);
    } else {
        this._settlePromiseFromHandler(handler, receiver, value, promise);
    }
} else if (promise instanceof Promise) {
    promise._reject(value);
}});
    TAJS_restrictToType(Promise.prototype, 'object')._settlePromiseCtx = ($__.fs.J$__v757635546_631_334 = function J$__v757635546_631(ctx) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ctx = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);});
    TAJS_restrictToType(Promise.prototype, 'object')._settlePromise0 = ($__.fs.J$__v757635546_633_335 = function J$__v757635546_633(handler, value, bitField) {
var vvv_return, vvv_switch, promise, receiver;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
handler = arguments[0], value = arguments[1], bitField = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this._promise0;
receiver = this._receiverAt(0);
this._promise0 = undefined;
this._receiver0 = undefined;
this._settlePromise(promise, handler, receiver, value);});
    TAJS_restrictToType(Promise.prototype, 'object')._clearCallbackDataAtIndex = ($__.fs.J$__v757635546_635_336 = function J$__v757635546_635(index) {
var vvv_return, vvv_switch, base;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
index = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
base = index * 4 - 4;
this[base + 2] = this[base + 3] = this[base + 0] = this[base + 1] = undefined;});
    TAJS_restrictToType(Promise.prototype, 'object')._fulfill = ($__.fs.J$__v757635546_637_337 = function J$__v757635546_637(value) {
var vvv_return, vvv_switch, bitField, err;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
bitField = this._bitField;
if ((bitField & 117506048) >>> 16)
    return;
if (value === this) {
    err = makeSelfResolutionError();
    this._attachExtraTrace(err);
    return this._reject(err);
}
this._setFulfilled();
this._rejectionHandler0 = value;
if ((bitField & 65535) > 0) {
    if ((bitField & 134217728) !== 0) {
        this._settlePromises();
    } else {
        async.settlePromises(this);
    }
}});
    TAJS_restrictToType(Promise.prototype, 'object')._reject = ($__.fs.J$__v757635546_639_338 = function J$__v757635546_639(reason) {
var vvv_return, vvv_switch, bitField;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
bitField = this._bitField;
if ((bitField & 117506048) >>> 16)
    return;
this._setRejected();
this._fulfillmentHandler0 = reason;
if (this._isFinal()) {
    return async.fatalError(reason, util.isNode);
}
if ((bitField & 65535) > 0) {
    async.settlePromises(this);
} else {
    this._ensurePossibleRejectionHandled();
}});
    TAJS_restrictToType(Promise.prototype, 'object')._fulfillPromises = ($__.fs.J$__v757635546_641_339 = function J$__v757635546_641(len, value) {
var vvv_return, vvv_switch, handler, promise, receiver;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
len = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (var i = 1; i < len; i++) {
    handler = this._fulfillmentHandlerAt(i);
    promise = this._promiseAt(i);
    receiver = this._receiverAt(i);
    this._clearCallbackDataAtIndex(i);
    this._settlePromise(promise, handler, receiver, value);
}});
    TAJS_restrictToType(Promise.prototype, 'object')._rejectPromises = ($__.fs.J$__v757635546_643_340 = function J$__v757635546_643(len, reason) {
var vvv_return, vvv_switch, handler, promise, receiver;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
len = arguments[0], reason = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (var i = 1; i < len; i++) {
    handler = this._rejectionHandlerAt(i);
    promise = this._promiseAt(i);
    receiver = this._receiverAt(i);
    this._clearCallbackDataAtIndex(i);
    this._settlePromise(promise, handler, receiver, reason);
}});
    TAJS_restrictToType(Promise.prototype, 'object')._settlePromises = ($__.fs.J$__v757635546_645_341 = function J$__v757635546_645() {
var vvv_return, vvv_switch, bitField, len, reason, value;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
bitField = this._bitField;
len = bitField & 65535;
if (len > 0) {
    if ((bitField & 16842752) !== 0) {
        reason = this._fulfillmentHandler0;
        this._settlePromise0(this._rejectionHandler0, reason, bitField);
        this._rejectPromises(len, reason);
    } else {
        value = this._rejectionHandler0;
        this._settlePromise0(this._fulfillmentHandler0, value, bitField);
        this._fulfillPromises(len, value);
    }
    this._setLength(0);
}
this._clearCancellationData();});
    TAJS_restrictToType(Promise.prototype, 'object')._settledValue = ($__.fs.J$__v757635546_647_342 = function J$__v757635546_647() {
var vvv_return, vvv_switch, bitField;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
bitField = this._bitField;
if ((bitField & 33554432) !== 0) {
    return this._rejectionHandler0;
} else if ((bitField & 16777216) !== 0) {
    return this._fulfillmentHandler0;
}});
    Promise.defer = Promise.pending = ($__.fs.J$__v757635546_651_343 = function J$__v757635546_651() {
var vvv_return, vvv_switch, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
debug.deprecated('Promise.defer', 'new Promise');
promise = new Promise(INTERNAL);
return {
    promise: promise,
    resolve: deferResolve,
    reject: deferReject
};});
    vvv_tmp1 = util, 'notEnumerableProp', $__.fs.notEnumerableProp_64.call(vvv_tmp1, (Promise, $__.fs.Promise_49), '_makeSelfResolutionError', (makeSelfResolutionError, $__.fs.J$__v757635546_518_53), 1, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./method', 11, true, $__.uid), $__.fs.J$__v757635546_498_345)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (apiRejection, $__.fs.J$__v757635546_522_55), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./bind', 12, true, $__.uid), $__.fs.J$__v757635546_82_350)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./cancel', 13, true, $__.uid), $__.fs.J$__v757635546_139_360)((Promise, $__.fs.Promise_49), (PromiseArray, $__.fs.PromiseArray_151), (apiRejection, $__.fs.J$__v757635546_522_55), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./direct_resolve', 14, true, $__.uid), $__.fs.J$__v757635546_345_376)((Promise, $__.fs.Promise_49), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./synchronous_inspection', 15, true, $__.uid), $__.fs.J$__v757635546_933_384)((Promise, $__.fs.Promise_49), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./join', 16, true, $__.uid), $__.fs.J$__v757635546_464_406)((Promise, $__.fs.Promise_49), (PromiseArray, $__.fs.PromiseArray_151), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (INTERNAL, $__.fs.J$__v757635546_529_140), async, (getDomain, $__.fs.J$__v757635546_527_92), 0, true, $__.uid);
    Promise.Promise = Promise;
    Promise.version = '3.5.0';
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./map.js', 17, true, $__.uid), $__.fs.J$__v757635546_486_409)((Promise, $__.fs.Promise_49), (PromiseArray, $__.fs.PromiseArray_151), (apiRejection, $__.fs.J$__v757635546_522_55), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (INTERNAL, $__.fs.J$__v757635546_529_140), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./call_get.js', 18, true, $__.uid), $__.fs.J$__v757635546_107_422)((Promise, $__.fs.Promise_49), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./using.js', 19, true, $__.uid), $__.fs.J$__v757635546_1010_430)((Promise, $__.fs.Promise_49), (apiRejection, $__.fs.J$__v757635546_522_55), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (createContext, $__.fs.createContext_170), (INTERNAL, $__.fs.J$__v757635546_529_140), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./timers.js', 20, true, $__.uid), $__.fs.J$__v757635546_966_453)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./generators.js', 21, true, $__.uid), $__.fs.J$__v757635546_448_464)((Promise, $__.fs.Promise_49), (apiRejection, $__.fs.J$__v757635546_522_55), (INTERNAL, $__.fs.J$__v757635546_529_140), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (Proxyable, $__.fs.Proxyable_47), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./nodeify.js', 22, true, $__.uid), $__.fs.J$__v757635546_514_481)((Promise, $__.fs.Promise_49), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./promisify.js', 23, true, $__.uid), $__.fs.J$__v757635546_726_487)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./props.js', 24, true, $__.uid), $__.fs.J$__v757635546_750_501)((Promise, $__.fs.Promise_49), (PromiseArray, $__.fs.PromiseArray_151), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (apiRejection, $__.fs.J$__v757635546_522_55), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./race.js', 25, true, $__.uid), $__.fs.J$__v757635546_781_516)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (apiRejection, $__.fs.J$__v757635546_522_55), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./reduce.js', 26, true, $__.uid), $__.fs.J$__v757635546_810_522)((Promise, $__.fs.Promise_49), (PromiseArray, $__.fs.PromiseArray_151), (apiRejection, $__.fs.J$__v757635546_522_55), (tryConvertToPromise, $__.fs.tryConvertToPromise_143), (INTERNAL, $__.fs.J$__v757635546_529_140), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./settle.js', 27, true, $__.uid), $__.fs.J$__v757635546_848_540)((Promise, $__.fs.Promise_49), (PromiseArray, $__.fs.PromiseArray_151), debug, 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./some.js', 28, true, $__.uid), $__.fs.J$__v757635546_890_549)((Promise, $__.fs.Promise_49), (PromiseArray, $__.fs.PromiseArray_151), (apiRejection, $__.fs.J$__v757635546_522_55), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./filter.js', 29, true, $__.uid), $__.fs.J$__v757635546_392_572)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./each.js', 30, true, $__.uid), $__.fs.J$__v757635546_357_576)((Promise, $__.fs.Promise_49), (INTERNAL, $__.fs.J$__v757635546_529_140), 0, true, $__.uid);
    ((_dereq_, $__.fs.J$__v757635546_3_45)('./any.js', 31, true, $__.uid), $__.fs.J$__v757635546_12_583)((Promise, $__.fs.Promise_49), 0, true, $__.uid);
    vvv_tmp2 = util, 'toFastProperties', $__.fs.toFastProperties_67.call(vvv_tmp2, (Promise, $__.fs.Promise_49), 0, true, $__.uid);
    vvv_tmp3 = util, 'toFastProperties', $__.fs.toFastProperties_67.call(vvv_tmp3, TAJS_restrictToType(Promise.prototype, 'object'), 1, true, $__.uid);
    (fillTypes, $__.fs.fillTypes_52)($__.os.oid147 = {
        'a': 1
    }, 0, true, $__.uid);
    (fillTypes, $__.fs.fillTypes_52)($__.os.oid148 = {
        'b': 2
    }, 1, true, $__.uid);
    (fillTypes, $__.fs.fillTypes_52)($__.os.oid149 = {
        'c': 3
    }, 2, true, $__.uid);
    (fillTypes, $__.fs.fillTypes_52)(1, 3, true, $__.uid);
    (fillTypes, $__.fs.fillTypes_52)(($__.fs.J$__v757635546_654_589 = function J$__v757635546_654() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');}), 4, true, $__.uid);
    (fillTypes, $__.fs.fillTypes_52)(undefined, 5, true, $__.uid);
    (fillTypes, $__.fs.fillTypes_52)(false, 6, true, $__.uid);
    (fillTypes, $__.fs.fillTypes_52)(new (Promise, $__.fs.Promise_49)((INTERNAL, $__.fs.J$__v757635546_529_140), 7, true, $__.uid), 7, true, $__.uid);
    vvv_tmp4 = debug, 'setBounds', $__.fs.setBounds_209.call(vvv_tmp4, TAJS_restrictToType(Async.firstLineError, 'object'), TAJS_restrictToType((util, $__.os.oid50).lastLineError, 'object'), 0, true, $__.uid);
    return Promise;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
makeSelfResolutionError = function () {
    return new TypeError('circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n');
};
reflectHandler = function () {
    return new Promise.PromiseInspection(this._target());
};
apiRejection = function (msg) {
    return Promise.reject(new TypeError(msg));
};
UNDEFINED_BINDING = {};
util = _dereq_('./util');
if (util.isNode) {
    getDomain = function () {
        var ret = process.domain;
        if (ret === undefined)
            ret = null;
        return ret;
    };
} else {
    getDomain = function () {
        return null;
    };
}
util.notEnumerableProp(Promise, '_getDomain', getDomain);
es5 = _dereq_('./es5');
Async = _dereq_('./async');
async = new Async();
es5.defineProperty(Promise, '_async', {
    value: async
});
errors = _dereq_('./errors');
TypeError = Promise.TypeError = errors.TypeError;
Promise.RangeError = errors.RangeError;
CancellationError = Promise.CancellationError = errors.CancellationError;
Promise.TimeoutError = errors.TimeoutError;
Promise.OperationalError = errors.OperationalError;
Promise.RejectionError = errors.OperationalError;
Promise.AggregateError = errors.AggregateError;
INTERNAL = function () {
};
APPLY = {};
NEXT_FILTER = {};
tryConvertToPromise = _dereq_('./thenables')(Promise, INTERNAL);
PromiseArray = _dereq_('./promise_array')(Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable);
Context = _dereq_('./context')(Promise);
createContext = Context.create;
debug = _dereq_('./debuggability')(Promise, Context);
CapturedTrace = debug.CapturedTrace;
PassThroughHandlerContext = _dereq_('./finally')(Promise, tryConvertToPromise, NEXT_FILTER);
catchFilter = _dereq_('./catch_filter')(NEXT_FILTER);
nodebackForPromise = _dereq_('./nodeback');
errorObj = util.errorObj;
tryCatch = util.tryCatch;
Promise.prototype.toString = function () {
    return '[object Promise]';
};
Promise.prototype.caught = Promise.prototype['catch'] = function (fn) {
    var len = arguments.length;
    if (len > 1) {
        var catchInstances = new Array(len - 1), j = 0, i;
        for (i = 0; i < len - 1; ++i) {
            var item = arguments[i];
            if (util.isObject(item)) {
                catchInstances[j++] = item;
            } else {
                return apiRejection('Catch statement predicate: ' + 'expecting an object but got ' + util.classString(item));
            }
        }
        catchInstances.length = j;
        fn = arguments[i];
        return this.then(undefined, catchFilter(catchInstances, fn, this));
    }
    return this.then(undefined, fn);
};
Promise.prototype.reflect = function () {
    return this._then(reflectHandler, reflectHandler, undefined, this, undefined);
};
Promise.prototype.then = function (didFulfill, didReject) {
    if (debug.warnings() && arguments.length > 0 && typeof didFulfill !== 'function' && typeof didReject !== 'function') {
        var msg = '.then() only accepts functions but was passed: ' + util.classString(didFulfill);
        if (arguments.length > 1) {
            msg += ', ' + util.classString(didReject);
        }
        this._warn(msg);
    }
    return this._then(didFulfill, didReject, undefined, undefined, undefined);
};
Promise.prototype.done = function (didFulfill, didReject) {
    var promise = this._then(didFulfill, didReject, undefined, undefined, undefined);
    promise._setIsFinal();
};
Promise.prototype.spread = function (fn) {
    if (typeof fn !== 'function') {
        return apiRejection('expecting a function but got ' + util.classString(fn));
    }
    return this.all()._then(fn, undefined, undefined, APPLY, undefined);
};
Promise.prototype.toJSON = function () {
    var ret = {
        isFulfilled: false,
        isRejected: false,
        fulfillmentValue: undefined,
        rejectionReason: undefined
    };
    if (this.isFulfilled()) {
        ret.fulfillmentValue = this.value();
        ret.isFulfilled = true;
    } else if (this.isRejected()) {
        ret.rejectionReason = this.reason();
        ret.isRejected = true;
    }
    return ret;
};
Promise.prototype.all = function () {
    if (arguments.length > 0) {
        this._warn('.all() was passed arguments but it does not take any');
    }
    return new PromiseArray(this).promise();
};
Promise.prototype.error = function (fn) {
    return this.caught(util.originatesFromRejection, fn);
};
Promise.getNewLibraryCopy = module.exports;
Promise.is = function (val) {
    return val instanceof Promise;
};
Promise.fromNode = Promise.fromCallback = function (fn) {
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : false;
    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));
    if (result === errorObj) {
        ret._rejectCallback(result.e, true);
    }
    if (!ret._isFateSealed())
        ret._setAsyncGuaranteed();
    return ret;
};
Promise.all = function (promises) {
    return new PromiseArray(promises).promise();
};
Promise.cast = function (obj) {
    var ret = tryConvertToPromise(obj);
    if (!(ret instanceof Promise)) {
        ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        ret._setFulfilled();
        ret._rejectionHandler0 = obj;
    }
    return ret;
};
Promise.resolve = Promise.fulfilled = Promise.cast;
Promise.reject = Promise.rejected = function (reason) {
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    ret._rejectCallback(reason, true);
    return ret;
};
Promise.setScheduler = function (fn) {
    if (typeof fn !== 'function') {
        throw new TypeError('expecting a function but got ' + util.classString(fn));
    }
    return async.setScheduler(fn);
};
Promise.prototype._then = function (didFulfill, didReject, _, receiver, internalData) {
    var haveInternalData = internalData !== undefined;
    var promise = haveInternalData ? internalData : new Promise(INTERNAL);
    var target = this._target();
    var bitField = target._bitField;
    if (!haveInternalData) {
        promise._propagateFrom(this, 3);
        promise._captureStackTrace();
        if (receiver === undefined && (this._bitField & 2097152) !== 0) {
            if (!((bitField & 50397184) === 0)) {
                receiver = this._boundValue();
            } else {
                receiver = target === this ? undefined : this._boundTo;
            }
        }
        this._fireEvent('promiseChained', this, promise);
    }
    var domain = getDomain();
    if (!((bitField & 50397184) === 0)) {
        var handler, value, settler = target._settlePromiseCtx;
        if ((bitField & 33554432) !== 0) {
            value = target._rejectionHandler0;
            handler = didFulfill;
        } else if ((bitField & 16777216) !== 0) {
            value = target._fulfillmentHandler0;
            handler = didReject;
            target._unsetRejectionIsUnhandled();
        } else {
            settler = target._settlePromiseLateCancellationObserver;
            value = new CancellationError('late cancellation observer');
            target._attachExtraTrace(value);
            handler = didReject;
        }
        async.invoke(settler, target, {
            handler: domain === null ? handler : typeof handler === 'function' && util.domainBind(domain, handler),
            promise: promise,
            receiver: receiver,
            value: value
        });
    } else {
        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
    }
    return promise;
};
Promise.prototype._length = function () {
    return this._bitField & 65535;
};
Promise.prototype._isFateSealed = function () {
    return (this._bitField & 117506048) !== 0;
};
Promise.prototype._isFollowing = function () {
    return (this._bitField & 67108864) === 67108864;
};
Promise.prototype._setLength = function (len) {
    this._bitField = this._bitField & -65536 | len & 65535;
};
Promise.prototype._setFulfilled = function () {
    this._bitField = this._bitField | 33554432;
    this._fireEvent('promiseFulfilled', this);
};
Promise.prototype._setRejected = function () {
    this._bitField = this._bitField | 16777216;
    this._fireEvent('promiseRejected', this);
};
Promise.prototype._setFollowing = function () {
    this._bitField = this._bitField | 67108864;
    this._fireEvent('promiseResolved', this);
};
Promise.prototype._setIsFinal = function () {
    this._bitField = this._bitField | 4194304;
};
Promise.prototype._isFinal = function () {
    return (this._bitField & 4194304) > 0;
};
Promise.prototype._unsetCancelled = function () {
    this._bitField = this._bitField & ~65536;
};
Promise.prototype._setCancelled = function () {
    this._bitField = this._bitField | 65536;
    this._fireEvent('promiseCancelled', this);
};
Promise.prototype._setWillBeCancelled = function () {
    this._bitField = this._bitField | 8388608;
};
Promise.prototype._setAsyncGuaranteed = function () {
    if (async.hasCustomScheduler())
        return;
    this._bitField = this._bitField | 134217728;
};
Promise.prototype._receiverAt = function (index) {
    var ret = index === 0 ? this._receiver0 : this[index * 4 - 4 + 3];
    if (ret === UNDEFINED_BINDING) {
        return undefined;
    } else if (ret === undefined && this._isBound()) {
        return this._boundValue();
    }
    return ret;
};
Promise.prototype._promiseAt = function (index) {
    return this[index * 4 - 4 + 2];
};
Promise.prototype._fulfillmentHandlerAt = function (index) {
    return this[index * 4 - 4 + 0];
};
Promise.prototype._rejectionHandlerAt = function (index) {
    return this[index * 4 - 4 + 1];
};
Promise.prototype._boundValue = function () {
};
Promise.prototype._migrateCallback0 = function (follower) {
    var bitField = follower._bitField;
    var fulfill = follower._fulfillmentHandler0;
    var reject = follower._rejectionHandler0;
    var promise = follower._promise0;
    var receiver = follower._receiverAt(0);
    if (receiver === undefined)
        receiver = UNDEFINED_BINDING;
    this._addCallbacks(fulfill, reject, promise, receiver, null);
};
Promise.prototype._migrateCallbackAt = function (follower, index) {
    var fulfill = follower._fulfillmentHandlerAt(index);
    var reject = follower._rejectionHandlerAt(index);
    var promise = follower._promiseAt(index);
    var receiver = follower._receiverAt(index);
    if (receiver === undefined)
        receiver = UNDEFINED_BINDING;
    this._addCallbacks(fulfill, reject, promise, receiver, null);
};
Promise.prototype._addCallbacks = function (fulfill, reject, promise, receiver, domain) {
    var index = this._length();
    if (index >= 65535 - 4) {
        index = 0;
        this._setLength(0);
    }
    if (index === 0) {
        this._promise0 = promise;
        this._receiver0 = receiver;
        if (typeof fulfill === 'function') {
            this._fulfillmentHandler0 = domain === null ? fulfill : util.domainBind(domain, fulfill);
        }
        if (typeof reject === 'function') {
            this._rejectionHandler0 = domain === null ? reject : util.domainBind(domain, reject);
        }
    } else {
        var base = index * 4 - 4;
        this[base + 2] = promise;
        this[base + 3] = receiver;
        if (typeof fulfill === 'function') {
            this[base + 0] = domain === null ? fulfill : util.domainBind(domain, fulfill);
        }
        if (typeof reject === 'function') {
            this[base + 1] = domain === null ? reject : util.domainBind(domain, reject);
        }
    }
    this._setLength(index + 1);
    return index;
};
Promise.prototype._proxy = function (proxyable, arg) {
    this._addCallbacks(undefined, undefined, arg, proxyable, null);
};
Promise.prototype._resolveCallback = function (value, shouldBind) {
    if ((this._bitField & 117506048) !== 0)
        return;
    if (value === this)
        return this._rejectCallback(makeSelfResolutionError(), false);
    var maybePromise = tryConvertToPromise(value, this);
    if (!(maybePromise instanceof Promise))
        return this._fulfill(value);
    if (shouldBind)
        this._propagateFrom(maybePromise, 2);
    var promise = maybePromise._target();
    if (promise === this) {
        this._reject(makeSelfResolutionError());
        return;
    }
    var bitField = promise._bitField;
    if ((bitField & 50397184) === 0) {
        var len = this._length();
        if (len > 0)
            promise._migrateCallback0(this);
        for (var i = 1; i < len; ++i) {
            promise._migrateCallbackAt(this, i);
        }
        this._setFollowing();
        this._setLength(0);
        this._setFollowee(promise);
    } else if ((bitField & 33554432) !== 0) {
        this._fulfill(promise._value());
    } else if ((bitField & 16777216) !== 0) {
        this._reject(promise._reason());
    } else {
        var reason = new CancellationError('late cancellation observer');
        promise._attachExtraTrace(reason);
        this._reject(reason);
    }
};
Promise.prototype._rejectCallback = function (reason, synchronous, ignoreNonErrorWarnings) {
    var trace = util.ensureErrorObject(reason);
    var hasStack = trace === reason;
    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
        var message = 'a promise was rejected with a non-error: ' + util.classString(reason);
        this._warn(message, true);
    }
    this._attachExtraTrace(trace, synchronous ? hasStack : false);
    this._reject(reason);
};
Promise.prototype._resolveFromExecutor = function (executor) {
    if (executor === INTERNAL)
        return;
    var promise = this;
    this._captureStackTrace();
    this._pushContext();
    var synchronous = true;
    var r = this._execute(executor, function (value) {
        promise._resolveCallback(value);
    }, function (reason) {
        promise._rejectCallback(reason, synchronous);
    });
    synchronous = false;
    this._popContext();
    if (r !== undefined) {
        promise._rejectCallback(r, true);
    }
};
Promise.prototype._settlePromiseFromHandler = function (handler, receiver, value, promise) {
    var bitField = promise._bitField;
    if ((bitField & 65536) !== 0)
        return;
    promise._pushContext();
    var x;
    if (receiver === APPLY) {
        if (!value || typeof value.length !== 'number') {
            x = errorObj;
            x.e = new TypeError('cannot .spread() a non-array: ' + util.classString(value));
        } else {
            x = tryCatch(handler).apply(this._boundValue(), value);
        }
    } else {
        x = tryCatch(handler).call(receiver, value);
    }
    var promiseCreated = promise._popContext();
    bitField = promise._bitField;
    if ((bitField & 65536) !== 0)
        return;
    if (x === NEXT_FILTER) {
        promise._reject(value);
    } else if (x === errorObj) {
        promise._rejectCallback(x.e, false);
    } else {
        debug.checkForgottenReturns(x, promiseCreated, '', promise, this);
        promise._resolveCallback(x);
    }
};
Promise.prototype._target = function () {
    var ret = this;
    while (ret._isFollowing())
        ret = ret._followee();
    return ret;
};
Promise.prototype._followee = function () {
    return this._rejectionHandler0;
};
Promise.prototype._setFollowee = function (promise) {
    this._rejectionHandler0 = promise;
};
Promise.prototype._settlePromise = function (promise, handler, receiver, value) {
    var isPromise = promise instanceof Promise;
    var bitField = this._bitField;
    var asyncGuaranteed = (bitField & 134217728) !== 0;
    if ((bitField & 65536) !== 0) {
        if (isPromise)
            promise._invokeInternalOnCancel();
        if (receiver instanceof PassThroughHandlerContext && receiver.isFinallyHandler()) {
            receiver.cancelPromise = promise;
            if (tryCatch(handler).call(receiver, value) === errorObj) {
                promise._reject(errorObj.e);
            }
        } else if (handler === reflectHandler) {
            promise._fulfill(reflectHandler.call(receiver));
        } else if (receiver instanceof Proxyable) {
            receiver._promiseCancelled(promise);
        } else if (isPromise || promise instanceof PromiseArray) {
            promise._cancel();
        } else {
            receiver.cancel();
        }
    } else if (typeof handler === 'function') {
        if (!isPromise) {
            handler.call(receiver, value, promise);
        } else {
            if (asyncGuaranteed)
                promise._setAsyncGuaranteed();
            this._settlePromiseFromHandler(handler, receiver, value, promise);
        }
    } else if (receiver instanceof Proxyable) {
        if (!receiver._isResolved()) {
            if ((bitField & 33554432) !== 0) {
                receiver._promiseFulfilled(value, promise);
            } else {
                receiver._promiseRejected(value, promise);
            }
        }
    } else if (isPromise) {
        if (asyncGuaranteed)
            promise._setAsyncGuaranteed();
        if ((bitField & 33554432) !== 0) {
            promise._fulfill(value);
        } else {
            promise._reject(value);
        }
    }
};
Promise.prototype._settlePromiseLateCancellationObserver = function (ctx) {
    var handler = ctx.handler;
    var promise = ctx.promise;
    var receiver = ctx.receiver;
    var value = ctx.value;
    if (typeof handler === 'function') {
        if (!(promise instanceof Promise)) {
            handler.call(receiver, value, promise);
        } else {
            this._settlePromiseFromHandler(handler, receiver, value, promise);
        }
    } else if (promise instanceof Promise) {
        promise._reject(value);
    }
};
Promise.prototype._settlePromiseCtx = function (ctx) {
    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);
};
Promise.prototype._settlePromise0 = function (handler, value, bitField) {
    var promise = this._promise0;
    var receiver = this._receiverAt(0);
    this._promise0 = undefined;
    this._receiver0 = undefined;
    this._settlePromise(promise, handler, receiver, value);
};
Promise.prototype._clearCallbackDataAtIndex = function (index) {
    var base = index * 4 - 4;
    this[base + 2] = this[base + 3] = this[base + 0] = this[base + 1] = undefined;
};
Promise.prototype._fulfill = function (value) {
    var bitField = this._bitField;
    if ((bitField & 117506048) >>> 16)
        return;
    if (value === this) {
        var err = makeSelfResolutionError();
        this._attachExtraTrace(err);
        return this._reject(err);
    }
    this._setFulfilled();
    this._rejectionHandler0 = value;
    if ((bitField & 65535) > 0) {
        if ((bitField & 134217728) !== 0) {
            this._settlePromises();
        } else {
            async.settlePromises(this);
        }
    }
};
Promise.prototype._reject = function (reason) {
    var bitField = this._bitField;
    if ((bitField & 117506048) >>> 16)
        return;
    this._setRejected();
    this._fulfillmentHandler0 = reason;
    if (this._isFinal()) {
        return async.fatalError(reason, util.isNode);
    }
    if ((bitField & 65535) > 0) {
        async.settlePromises(this);
    } else {
        this._ensurePossibleRejectionHandled();
    }
};
Promise.prototype._fulfillPromises = function (len, value) {
    for (var i = 1; i < len; i++) {
        var handler = this._fulfillmentHandlerAt(i);
        var promise = this._promiseAt(i);
        var receiver = this._receiverAt(i);
        this._clearCallbackDataAtIndex(i);
        this._settlePromise(promise, handler, receiver, value);
    }
};
Promise.prototype._rejectPromises = function (len, reason) {
    for (var i = 1; i < len; i++) {
        var handler = this._rejectionHandlerAt(i);
        var promise = this._promiseAt(i);
        var receiver = this._receiverAt(i);
        this._clearCallbackDataAtIndex(i);
        this._settlePromise(promise, handler, receiver, reason);
    }
};
Promise.prototype._settlePromises = function () {
    var bitField = this._bitField;
    var len = bitField & 65535;
    if (len > 0) {
        if ((bitField & 16842752) !== 0) {
            var reason = this._fulfillmentHandler0;
            this._settlePromise0(this._rejectionHandler0, reason, bitField);
            this._rejectPromises(len, reason);
        } else {
            var value = this._rejectionHandler0;
            this._settlePromise0(this._fulfillmentHandler0, value, bitField);
            this._fulfillPromises(len, value);
        }
        this._setLength(0);
    }
    this._clearCancellationData();
};
Promise.prototype._settledValue = function () {
    var bitField = this._bitField;
    if ((bitField & 33554432) !== 0) {
        return this._rejectionHandler0;
    } else if ((bitField & 16777216) !== 0) {
        return this._fulfillmentHandler0;
    }
};
Promise.defer = Promise.pending = function () {
    debug.deprecated('Promise.defer', 'new Promise');
    var promise = new Promise(INTERNAL);
    return {
        promise: promise,
        resolve: deferResolve,
        reject: deferReject
    };
};
util.notEnumerableProp(Promise, '_makeSelfResolutionError', makeSelfResolutionError);
_dereq_('./method')(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug);
_dereq_('./bind')(Promise, INTERNAL, tryConvertToPromise, debug);
_dereq_('./cancel')(Promise, PromiseArray, apiRejection, debug);
_dereq_('./direct_resolve')(Promise);
_dereq_('./synchronous_inspection')(Promise);
_dereq_('./join')(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);
Promise.Promise = Promise;
Promise.version = '3.5.0';
_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
_dereq_('./call_get.js')(Promise);
_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);
_dereq_('./timers.js')(Promise, INTERNAL, debug);
_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);
_dereq_('./nodeify.js')(Promise);
_dereq_('./promisify.js')(Promise, INTERNAL);
_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);
_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);
_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
_dereq_('./settle.js')(Promise, PromiseArray, debug);
_dereq_('./some.js')(Promise, PromiseArray, apiRejection);
_dereq_('./filter.js')(Promise, INTERNAL);
_dereq_('./each.js')(Promise, INTERNAL);
_dereq_('./any.js')(Promise);
util.toFastProperties(Promise);
util.toFastProperties(Promise.prototype);
fillTypes({
    a: 1
});
fillTypes({
    b: 2
});
fillTypes({
    c: 3
});
fillTypes(1);
fillTypes(function () {
});
fillTypes(undefined);
fillTypes(false);
fillTypes(new Promise(INTERNAL));
debug.setBounds(Async.firstLineError, util.lastLineError);
return Promise;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function () {
    var makeSelfResolutionError = function () {
        return new TypeError('circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n');
    };
    var reflectHandler = function () {
        return new Promise.PromiseInspection(this._target());
    };
    var apiRejection = function (msg) {
        return Promise.reject(new TypeError(msg));
    };
    function Proxyable() {
    }
    var UNDEFINED_BINDING = {};
    var util = _dereq_('./util');
    var getDomain;
    if (util.isNode) {
        getDomain = function () {
            var ret = process.domain;
            if (ret === undefined)
                ret = null;
            return ret;
        };
    } else {
        getDomain = function () {
            return null;
        };
    }
    util.notEnumerableProp(Promise, '_getDomain', getDomain);
    var es5 = _dereq_('./es5');
    var Async = _dereq_('./async');
    var async = new Async();
    es5.defineProperty(Promise, '_async', {
        value: async
    });
    var errors = _dereq_('./errors');
    var TypeError = Promise.TypeError = errors.TypeError;
    Promise.RangeError = errors.RangeError;
    var CancellationError = Promise.CancellationError = errors.CancellationError;
    Promise.TimeoutError = errors.TimeoutError;
    Promise.OperationalError = errors.OperationalError;
    Promise.RejectionError = errors.OperationalError;
    Promise.AggregateError = errors.AggregateError;
    var INTERNAL = function () {
    };
    var APPLY = {};
    var NEXT_FILTER = {};
    var tryConvertToPromise = _dereq_('./thenables')(Promise, INTERNAL);
    var PromiseArray = _dereq_('./promise_array')(Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable);
    var Context = _dereq_('./context')(Promise);
    var createContext = Context.create;
    var debug = _dereq_('./debuggability')(Promise, Context);
    var CapturedTrace = debug.CapturedTrace;
    var PassThroughHandlerContext = _dereq_('./finally')(Promise, tryConvertToPromise, NEXT_FILTER);
    var catchFilter = _dereq_('./catch_filter')(NEXT_FILTER);
    var nodebackForPromise = _dereq_('./nodeback');
    var errorObj = util.errorObj;
    var tryCatch = util.tryCatch;
    function check(self, executor) {
        if (self == null || self.constructor !== Promise) {
            throw new TypeError('the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n');
        }
        if (typeof executor !== 'function') {
            throw new TypeError('expecting a function but got ' + util.classString(executor));
        }
    }
    function Promise(executor) {
        if (executor !== INTERNAL) {
            check(this, executor);
        }
        this._bitField = 0;
        this._fulfillmentHandler0 = undefined;
        this._rejectionHandler0 = undefined;
        this._promise0 = undefined;
        this._receiver0 = undefined;
        this._resolveFromExecutor(executor);
        this._promiseCreated();
        this._fireEvent('promiseCreated', this);
    }
    Promise.prototype.toString = function () {
        return '[object Promise]';
    };
    Promise.prototype.caught = Promise.prototype['catch'] = function (fn) {
        var len = arguments.length;
        if (len > 1) {
            var catchInstances = new Array(len - 1), j = 0, i;
            for (i = 0; i < len - 1; ++i) {
                var item = arguments[i];
                if (util.isObject(item)) {
                    catchInstances[j++] = item;
                } else {
                    return apiRejection('Catch statement predicate: ' + 'expecting an object but got ' + util.classString(item));
                }
            }
            catchInstances.length = j;
            fn = arguments[i];
            return this.then(undefined, catchFilter(catchInstances, fn, this));
        }
        return this.then(undefined, fn);
    };
    Promise.prototype.reflect = function () {
        return this._then(reflectHandler, reflectHandler, undefined, this, undefined);
    };
    Promise.prototype.then = function (didFulfill, didReject) {
        if (debug.warnings() && arguments.length > 0 && typeof didFulfill !== 'function' && typeof didReject !== 'function') {
            var msg = '.then() only accepts functions but was passed: ' + util.classString(didFulfill);
            if (arguments.length > 1) {
                msg += ', ' + util.classString(didReject);
            }
            this._warn(msg);
        }
        return this._then(didFulfill, didReject, undefined, undefined, undefined);
    };
    Promise.prototype.done = function (didFulfill, didReject) {
        var promise = this._then(didFulfill, didReject, undefined, undefined, undefined);
        promise._setIsFinal();
    };
    Promise.prototype.spread = function (fn) {
        if (typeof fn !== 'function') {
            return apiRejection('expecting a function but got ' + util.classString(fn));
        }
        return this.all()._then(fn, undefined, undefined, APPLY, undefined);
    };
    Promise.prototype.toJSON = function () {
        var ret = {
            isFulfilled: false,
            isRejected: false,
            fulfillmentValue: undefined,
            rejectionReason: undefined
        };
        if (this.isFulfilled()) {
            ret.fulfillmentValue = this.value();
            ret.isFulfilled = true;
        } else if (this.isRejected()) {
            ret.rejectionReason = this.reason();
            ret.isRejected = true;
        }
        return ret;
    };
    Promise.prototype.all = function () {
        if (arguments.length > 0) {
            this._warn('.all() was passed arguments but it does not take any');
        }
        return new PromiseArray(this).promise();
    };
    Promise.prototype.error = function (fn) {
        return this.caught(util.originatesFromRejection, fn);
    };
    Promise.getNewLibraryCopy = module.exports;
    Promise.is = function (val) {
        return val instanceof Promise;
    };
    Promise.fromNode = Promise.fromCallback = function (fn) {
        var ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : false;
        var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));
        if (result === errorObj) {
            ret._rejectCallback(result.e, true);
        }
        if (!ret._isFateSealed())
            ret._setAsyncGuaranteed();
        return ret;
    };
    Promise.all = function (promises) {
        return new PromiseArray(promises).promise();
    };
    Promise.cast = function (obj) {
        var ret = tryConvertToPromise(obj);
        if (!(ret instanceof Promise)) {
            ret = new Promise(INTERNAL);
            ret._captureStackTrace();
            ret._setFulfilled();
            ret._rejectionHandler0 = obj;
        }
        return ret;
    };
    Promise.resolve = Promise.fulfilled = Promise.cast;
    Promise.reject = Promise.rejected = function (reason) {
        var ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        ret._rejectCallback(reason, true);
        return ret;
    };
    Promise.setScheduler = function (fn) {
        if (typeof fn !== 'function') {
            throw new TypeError('expecting a function but got ' + util.classString(fn));
        }
        return async.setScheduler(fn);
    };
    Promise.prototype._then = function (didFulfill, didReject, _, receiver, internalData) {
        var haveInternalData = internalData !== undefined;
        var promise = haveInternalData ? internalData : new Promise(INTERNAL);
        var target = this._target();
        var bitField = target._bitField;
        if (!haveInternalData) {
            promise._propagateFrom(this, 3);
            promise._captureStackTrace();
            if (receiver === undefined && (this._bitField & 2097152) !== 0) {
                if (!((bitField & 50397184) === 0)) {
                    receiver = this._boundValue();
                } else {
                    receiver = target === this ? undefined : this._boundTo;
                }
            }
            this._fireEvent('promiseChained', this, promise);
        }
        var domain = getDomain();
        if (!((bitField & 50397184) === 0)) {
            var handler, value, settler = target._settlePromiseCtx;
            if ((bitField & 33554432) !== 0) {
                value = target._rejectionHandler0;
                handler = didFulfill;
            } else if ((bitField & 16777216) !== 0) {
                value = target._fulfillmentHandler0;
                handler = didReject;
                target._unsetRejectionIsUnhandled();
            } else {
                settler = target._settlePromiseLateCancellationObserver;
                value = new CancellationError('late cancellation observer');
                target._attachExtraTrace(value);
                handler = didReject;
            }
            async.invoke(settler, target, {
                handler: domain === null ? handler : typeof handler === 'function' && util.domainBind(domain, handler),
                promise: promise,
                receiver: receiver,
                value: value
            });
        } else {
            target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
        }
        return promise;
    };
    Promise.prototype._length = function () {
        return this._bitField & 65535;
    };
    Promise.prototype._isFateSealed = function () {
        return (this._bitField & 117506048) !== 0;
    };
    Promise.prototype._isFollowing = function () {
        return (this._bitField & 67108864) === 67108864;
    };
    Promise.prototype._setLength = function (len) {
        this._bitField = this._bitField & -65536 | len & 65535;
    };
    Promise.prototype._setFulfilled = function () {
        this._bitField = this._bitField | 33554432;
        this._fireEvent('promiseFulfilled', this);
    };
    Promise.prototype._setRejected = function () {
        this._bitField = this._bitField | 16777216;
        this._fireEvent('promiseRejected', this);
    };
    Promise.prototype._setFollowing = function () {
        this._bitField = this._bitField | 67108864;
        this._fireEvent('promiseResolved', this);
    };
    Promise.prototype._setIsFinal = function () {
        this._bitField = this._bitField | 4194304;
    };
    Promise.prototype._isFinal = function () {
        return (this._bitField & 4194304) > 0;
    };
    Promise.prototype._unsetCancelled = function () {
        this._bitField = this._bitField & ~65536;
    };
    Promise.prototype._setCancelled = function () {
        this._bitField = this._bitField | 65536;
        this._fireEvent('promiseCancelled', this);
    };
    Promise.prototype._setWillBeCancelled = function () {
        this._bitField = this._bitField | 8388608;
    };
    Promise.prototype._setAsyncGuaranteed = function () {
        if (async.hasCustomScheduler())
            return;
        this._bitField = this._bitField | 134217728;
    };
    Promise.prototype._receiverAt = function (index) {
        var ret = index === 0 ? this._receiver0 : this[index * 4 - 4 + 3];
        if (ret === UNDEFINED_BINDING) {
            return undefined;
        } else if (ret === undefined && this._isBound()) {
            return this._boundValue();
        }
        return ret;
    };
    Promise.prototype._promiseAt = function (index) {
        return this[index * 4 - 4 + 2];
    };
    Promise.prototype._fulfillmentHandlerAt = function (index) {
        return this[index * 4 - 4 + 0];
    };
    Promise.prototype._rejectionHandlerAt = function (index) {
        return this[index * 4 - 4 + 1];
    };
    Promise.prototype._boundValue = function () {
    };
    Promise.prototype._migrateCallback0 = function (follower) {
        var bitField = follower._bitField;
        var fulfill = follower._fulfillmentHandler0;
        var reject = follower._rejectionHandler0;
        var promise = follower._promise0;
        var receiver = follower._receiverAt(0);
        if (receiver === undefined)
            receiver = UNDEFINED_BINDING;
        this._addCallbacks(fulfill, reject, promise, receiver, null);
    };
    Promise.prototype._migrateCallbackAt = function (follower, index) {
        var fulfill = follower._fulfillmentHandlerAt(index);
        var reject = follower._rejectionHandlerAt(index);
        var promise = follower._promiseAt(index);
        var receiver = follower._receiverAt(index);
        if (receiver === undefined)
            receiver = UNDEFINED_BINDING;
        this._addCallbacks(fulfill, reject, promise, receiver, null);
    };
    Promise.prototype._addCallbacks = function (fulfill, reject, promise, receiver, domain) {
        var index = this._length();
        if (index >= 65535 - 4) {
            index = 0;
            this._setLength(0);
        }
        if (index === 0) {
            this._promise0 = promise;
            this._receiver0 = receiver;
            if (typeof fulfill === 'function') {
                this._fulfillmentHandler0 = domain === null ? fulfill : util.domainBind(domain, fulfill);
            }
            if (typeof reject === 'function') {
                this._rejectionHandler0 = domain === null ? reject : util.domainBind(domain, reject);
            }
        } else {
            var base = index * 4 - 4;
            this[base + 2] = promise;
            this[base + 3] = receiver;
            if (typeof fulfill === 'function') {
                this[base + 0] = domain === null ? fulfill : util.domainBind(domain, fulfill);
            }
            if (typeof reject === 'function') {
                this[base + 1] = domain === null ? reject : util.domainBind(domain, reject);
            }
        }
        this._setLength(index + 1);
        return index;
    };
    Promise.prototype._proxy = function (proxyable, arg) {
        this._addCallbacks(undefined, undefined, arg, proxyable, null);
    };
    Promise.prototype._resolveCallback = function (value, shouldBind) {
        if ((this._bitField & 117506048) !== 0)
            return;
        if (value === this)
            return this._rejectCallback(makeSelfResolutionError(), false);
        var maybePromise = tryConvertToPromise(value, this);
        if (!(maybePromise instanceof Promise))
            return this._fulfill(value);
        if (shouldBind)
            this._propagateFrom(maybePromise, 2);
        var promise = maybePromise._target();
        if (promise === this) {
            this._reject(makeSelfResolutionError());
            return;
        }
        var bitField = promise._bitField;
        if ((bitField & 50397184) === 0) {
            var len = this._length();
            if (len > 0)
                promise._migrateCallback0(this);
            for (var i = 1; i < len; ++i) {
                promise._migrateCallbackAt(this, i);
            }
            this._setFollowing();
            this._setLength(0);
            this._setFollowee(promise);
        } else if ((bitField & 33554432) !== 0) {
            this._fulfill(promise._value());
        } else if ((bitField & 16777216) !== 0) {
            this._reject(promise._reason());
        } else {
            var reason = new CancellationError('late cancellation observer');
            promise._attachExtraTrace(reason);
            this._reject(reason);
        }
    };
    Promise.prototype._rejectCallback = function (reason, synchronous, ignoreNonErrorWarnings) {
        var trace = util.ensureErrorObject(reason);
        var hasStack = trace === reason;
        if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
            var message = 'a promise was rejected with a non-error: ' + util.classString(reason);
            this._warn(message, true);
        }
        this._attachExtraTrace(trace, synchronous ? hasStack : false);
        this._reject(reason);
    };
    Promise.prototype._resolveFromExecutor = function (executor) {
        if (executor === INTERNAL)
            return;
        var promise = this;
        this._captureStackTrace();
        this._pushContext();
        var synchronous = true;
        var r = this._execute(executor, function (value) {
            promise._resolveCallback(value);
        }, function (reason) {
            promise._rejectCallback(reason, synchronous);
        });
        synchronous = false;
        this._popContext();
        if (r !== undefined) {
            promise._rejectCallback(r, true);
        }
    };
    Promise.prototype._settlePromiseFromHandler = function (handler, receiver, value, promise) {
        var bitField = promise._bitField;
        if ((bitField & 65536) !== 0)
            return;
        promise._pushContext();
        var x;
        if (receiver === APPLY) {
            if (!value || typeof value.length !== 'number') {
                x = errorObj;
                x.e = new TypeError('cannot .spread() a non-array: ' + util.classString(value));
            } else {
                x = tryCatch(handler).apply(this._boundValue(), value);
            }
        } else {
            x = tryCatch(handler).call(receiver, value);
        }
        var promiseCreated = promise._popContext();
        bitField = promise._bitField;
        if ((bitField & 65536) !== 0)
            return;
        if (x === NEXT_FILTER) {
            promise._reject(value);
        } else if (x === errorObj) {
            promise._rejectCallback(x.e, false);
        } else {
            debug.checkForgottenReturns(x, promiseCreated, '', promise, this);
            promise._resolveCallback(x);
        }
    };
    Promise.prototype._target = function () {
        var ret = this;
        while (ret._isFollowing())
            ret = ret._followee();
        return ret;
    };
    Promise.prototype._followee = function () {
        return this._rejectionHandler0;
    };
    Promise.prototype._setFollowee = function (promise) {
        this._rejectionHandler0 = promise;
    };
    Promise.prototype._settlePromise = function (promise, handler, receiver, value) {
        var isPromise = promise instanceof Promise;
        var bitField = this._bitField;
        var asyncGuaranteed = (bitField & 134217728) !== 0;
        if ((bitField & 65536) !== 0) {
            if (isPromise)
                promise._invokeInternalOnCancel();
            if (receiver instanceof PassThroughHandlerContext && receiver.isFinallyHandler()) {
                receiver.cancelPromise = promise;
                if (tryCatch(handler).call(receiver, value) === errorObj) {
                    promise._reject(errorObj.e);
                }
            } else if (handler === reflectHandler) {
                promise._fulfill(reflectHandler.call(receiver));
            } else if (receiver instanceof Proxyable) {
                receiver._promiseCancelled(promise);
            } else if (isPromise || promise instanceof PromiseArray) {
                promise._cancel();
            } else {
                receiver.cancel();
            }
        } else if (typeof handler === 'function') {
            if (!isPromise) {
                handler.call(receiver, value, promise);
            } else {
                if (asyncGuaranteed)
                    promise._setAsyncGuaranteed();
                this._settlePromiseFromHandler(handler, receiver, value, promise);
            }
        } else if (receiver instanceof Proxyable) {
            if (!receiver._isResolved()) {
                if ((bitField & 33554432) !== 0) {
                    receiver._promiseFulfilled(value, promise);
                } else {
                    receiver._promiseRejected(value, promise);
                }
            }
        } else if (isPromise) {
            if (asyncGuaranteed)
                promise._setAsyncGuaranteed();
            if ((bitField & 33554432) !== 0) {
                promise._fulfill(value);
            } else {
                promise._reject(value);
            }
        }
    };
    Promise.prototype._settlePromiseLateCancellationObserver = function (ctx) {
        var handler = ctx.handler;
        var promise = ctx.promise;
        var receiver = ctx.receiver;
        var value = ctx.value;
        if (typeof handler === 'function') {
            if (!(promise instanceof Promise)) {
                handler.call(receiver, value, promise);
            } else {
                this._settlePromiseFromHandler(handler, receiver, value, promise);
            }
        } else if (promise instanceof Promise) {
            promise._reject(value);
        }
    };
    Promise.prototype._settlePromiseCtx = function (ctx) {
        this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);
    };
    Promise.prototype._settlePromise0 = function (handler, value, bitField) {
        var promise = this._promise0;
        var receiver = this._receiverAt(0);
        this._promise0 = undefined;
        this._receiver0 = undefined;
        this._settlePromise(promise, handler, receiver, value);
    };
    Promise.prototype._clearCallbackDataAtIndex = function (index) {
        var base = index * 4 - 4;
        this[base + 2] = this[base + 3] = this[base + 0] = this[base + 1] = undefined;
    };
    Promise.prototype._fulfill = function (value) {
        var bitField = this._bitField;
        if ((bitField & 117506048) >>> 16)
            return;
        if (value === this) {
            var err = makeSelfResolutionError();
            this._attachExtraTrace(err);
            return this._reject(err);
        }
        this._setFulfilled();
        this._rejectionHandler0 = value;
        if ((bitField & 65535) > 0) {
            if ((bitField & 134217728) !== 0) {
                this._settlePromises();
            } else {
                async.settlePromises(this);
            }
        }
    };
    Promise.prototype._reject = function (reason) {
        var bitField = this._bitField;
        if ((bitField & 117506048) >>> 16)
            return;
        this._setRejected();
        this._fulfillmentHandler0 = reason;
        if (this._isFinal()) {
            return async.fatalError(reason, util.isNode);
        }
        if ((bitField & 65535) > 0) {
            async.settlePromises(this);
        } else {
            this._ensurePossibleRejectionHandled();
        }
    };
    Promise.prototype._fulfillPromises = function (len, value) {
        for (var i = 1; i < len; i++) {
            var handler = this._fulfillmentHandlerAt(i);
            var promise = this._promiseAt(i);
            var receiver = this._receiverAt(i);
            this._clearCallbackDataAtIndex(i);
            this._settlePromise(promise, handler, receiver, value);
        }
    };
    Promise.prototype._rejectPromises = function (len, reason) {
        for (var i = 1; i < len; i++) {
            var handler = this._rejectionHandlerAt(i);
            var promise = this._promiseAt(i);
            var receiver = this._receiverAt(i);
            this._clearCallbackDataAtIndex(i);
            this._settlePromise(promise, handler, receiver, reason);
        }
    };
    Promise.prototype._settlePromises = function () {
        var bitField = this._bitField;
        var len = bitField & 65535;
        if (len > 0) {
            if ((bitField & 16842752) !== 0) {
                var reason = this._fulfillmentHandler0;
                this._settlePromise0(this._rejectionHandler0, reason, bitField);
                this._rejectPromises(len, reason);
            } else {
                var value = this._rejectionHandler0;
                this._settlePromise0(this._fulfillmentHandler0, value, bitField);
                this._fulfillPromises(len, value);
            }
            this._setLength(0);
        }
        this._clearCancellationData();
    };
    Promise.prototype._settledValue = function () {
        var bitField = this._bitField;
        if ((bitField & 33554432) !== 0) {
            return this._rejectionHandler0;
        } else if ((bitField & 16777216) !== 0) {
            return this._fulfillmentHandler0;
        }
    };
    function deferResolve(v) {
        this.promise._resolveCallback(v);
    }
    function deferReject(v) {
        this.promise._rejectCallback(v, false);
    }
    Promise.defer = Promise.pending = function () {
        debug.deprecated('Promise.defer', 'new Promise');
        var promise = new Promise(INTERNAL);
        return {
            promise: promise,
            resolve: deferResolve,
            reject: deferReject
        };
    };
    util.notEnumerableProp(Promise, '_makeSelfResolutionError', makeSelfResolutionError);
    _dereq_('./method')(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug);
    _dereq_('./bind')(Promise, INTERNAL, tryConvertToPromise, debug);
    _dereq_('./cancel')(Promise, PromiseArray, apiRejection, debug);
    _dereq_('./direct_resolve')(Promise);
    _dereq_('./synchronous_inspection')(Promise);
    _dereq_('./join')(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);
    Promise.Promise = Promise;
    Promise.version = '3.5.0';
    _dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
    _dereq_('./call_get.js')(Promise);
    _dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);
    _dereq_('./timers.js')(Promise, INTERNAL, debug);
    _dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);
    _dereq_('./nodeify.js')(Promise);
    _dereq_('./promisify.js')(Promise, INTERNAL);
    _dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);
    _dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);
    _dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
    _dereq_('./settle.js')(Promise, PromiseArray, debug);
    _dereq_('./some.js')(Promise, PromiseArray, apiRejection);
    _dereq_('./filter.js')(Promise, INTERNAL);
    _dereq_('./each.js')(Promise, INTERNAL);
    _dereq_('./any.js')(Promise);
    util.toFastProperties(Promise);
    util.toFastProperties(Promise.prototype);
    function fillTypes(value) {
        var p = new Promise(INTERNAL);
        p._fulfillmentHandler0 = value;
        p._rejectionHandler0 = value;
        p._promise0 = value;
        p._receiver0 = value;
    }
    fillTypes({
        a: 1
    });
    fillTypes({
        b: 2
    });
    fillTypes({
        c: 3
    });
    fillTypes(1);
    fillTypes(function () {
    });
    fillTypes(undefined);
    fillTypes(false);
    fillTypes(new Promise(INTERNAL));
    debug.setBounds(Async.firstLineError, util.lastLineError);
    return Promise;
};}, $__.fs.J$__v757635546_658_27),
            $__.os.oid21 = {
                './any.js': 1,
                './async': 2,
                './bind': 3,
                './call_get.js': 5,
                './cancel': 6,
                './catch_filter': 7,
                './context': 8,
                './debuggability': 9,
                './direct_resolve': 10,
                './each.js': 11,
                './errors': 12,
                './es5': 13,
                './filter.js': 14,
                './finally': 15,
                './generators.js': 16,
                './join': 17,
                './map.js': 18,
                './method': 19,
                './nodeback': 20,
                './nodeify.js': 21,
                './promise_array': 23,
                './promisify.js': 24,
                './props.js': 25,
                './race.js': 27,
                './reduce.js': 28,
                './settle.js': 30,
                './some.js': 31,
                './synchronous_inspection': 32,
                './thenables': 33,
                './timers.js': 34,
                './using.js': 35,
                './util': 36
            }
        ],
        23: [
            ($__.fs.J$__v757635546_691_28 = function J$__v757635546_691(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid77).exports = ($__.fs.J$__v757635546_689_149 = function J$__v757635546_689(Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable) {
var vvv_return, vvv_switch, vvv_tmp0, util, isArray, toResolutionValue, PromiseArray;
toResolutionValue = function toResolutionValue(val) {
    switch (val) {
    case -2:
        return [];
    case -3:
        return {};
    case -6:
        return new Map();
    }
};
PromiseArray = function PromiseArray(values) {
    var promise = this._promise = new Promise(INTERNAL);
    if (values instanceof Promise) {
        promise._propagateFrom(values, 3);
    }
    promise._setOnCancel(this);
    this._values = values;
    this._length = 0;
    this._totalResolved = 0;
    this._init(undefined, -2);
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1], tryConvertToPromise = arguments[2], apiRejection = arguments[3], Proxyable = arguments[4];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    toResolutionValue = ($__.fs.toResolutionValue_150 = function toResolutionValue(val) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
val = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
switch (val) {
case -2:
    return [];
case -3:
    return {};
case -6:
    return new Map();
}});
    PromiseArray = ($__.fs.PromiseArray_151 = function PromiseArray(values) {
var vvv_return, vvv_switch, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
values = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = this._promise = new Promise(INTERNAL);
if (values instanceof Promise) {
    promise._propagateFrom(values, 3);
}
promise._setOnCancel(this);
this._values = values;
this._length = 0;
this._totalResolved = 0;
this._init(undefined, -2);});
    util = (_dereq_, $__.fs.J$__v757635546_3_148)('./util', 0, true, $__.uid);
    isArray = TAJS_restrictToType((util, $__.os.oid50).isArray, 'function');
    vvv_tmp0 = util, 'inherits', $__.fs.J$__v757635546_1017_83.call(vvv_tmp0, (PromiseArray, $__.fs.PromiseArray_151), (Proxyable, $__.fs.Proxyable_47), 5, true, $__.uid);
    TAJS_restrictToType(PromiseArray.prototype, 'object').length = ($__.fs.J$__v757635546_662_153 = function J$__v757635546_662() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._length;});
    TAJS_restrictToType(PromiseArray.prototype, 'object').promise = ($__.fs.J$__v757635546_664_154 = function J$__v757635546_664() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._promise;});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._init = ($__.fs.init_155 = function init(_, resolveValueIfEmpty) {
var vvv_return, vvv_switch, values, bitField, err;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_ = arguments[0], resolveValueIfEmpty = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
values = tryConvertToPromise(this._values, this._promise);
if (values instanceof Promise) {
    values = values._target();
    bitField = values._bitField;
    ;
    this._values = values;
    if ((bitField & 50397184) === 0) {
        this._promise._setAsyncGuaranteed();
        return values._then(init, this._reject, undefined, this, resolveValueIfEmpty);
    } else if ((bitField & 33554432) !== 0) {
        values = values._value();
    } else if ((bitField & 16777216) !== 0) {
        return this._reject(values._reason());
    } else {
        return this._cancel();
    }
}
values = util.asArray(values);
if (values === null) {
    err = apiRejection('expecting an array or an iterable object but got ' + util.classString(values)).reason();
    this._promise._rejectCallback(err, false);
    return;
}
if (values.length === 0) {
    if (resolveValueIfEmpty === -5) {
        this._resolveEmptyArray();
    } else {
        this._resolve(toResolutionValue(resolveValueIfEmpty));
    }
    return;
}
this._iterate(values);});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._iterate = ($__.fs.J$__v757635546_667_156 = function J$__v757635546_667(values) {
var vvv_return, vvv_switch, len, result, isResolved, bitField, maybePromise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
values = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = this.getActualLength(values.length);
this._length = len;
this._values = this.shouldCopyValues() ? new Array(len) : this._values;
result = this._promise;
isResolved = false;
bitField = null;
for (var i = 0; i < len; ++i) {
    maybePromise = tryConvertToPromise(values[i], result);
    if (maybePromise instanceof Promise) {
        maybePromise = maybePromise._target();
        bitField = maybePromise._bitField;
    } else {
        bitField = null;
    }
    if (isResolved) {
        if (bitField !== null) {
            maybePromise.suppressUnhandledRejections();
        }
    } else if (bitField !== null) {
        if ((bitField & 50397184) === 0) {
            maybePromise._proxy(this, i);
            this._values[i] = maybePromise;
        } else if ((bitField & 33554432) !== 0) {
            isResolved = this._promiseFulfilled(maybePromise._value(), i);
        } else if ((bitField & 16777216) !== 0) {
            isResolved = this._promiseRejected(maybePromise._reason(), i);
        } else {
            isResolved = this._promiseCancelled(i);
        }
    } else {
        isResolved = this._promiseFulfilled(maybePromise, i);
    }
}
if (!isResolved)
    result._setAsyncGuaranteed();});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._isResolved = ($__.fs.J$__v757635546_669_157 = function J$__v757635546_669() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._values === null;});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._resolve = ($__.fs.J$__v757635546_671_158 = function J$__v757635546_671(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._values = null;
this._promise._fulfill(value);});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._cancel = ($__.fs.J$__v757635546_673_159 = function J$__v757635546_673() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._isResolved() || !this._promise._isCancellable())
    return;
this._values = null;
this._promise._cancel();});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._reject = ($__.fs.J$__v757635546_675_160 = function J$__v757635546_675(reason) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._values = null;
this._promise._rejectCallback(reason, false);});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._promiseFulfilled = ($__.fs.J$__v757635546_677_161 = function J$__v757635546_677(value, index) {
var vvv_return, vvv_switch, totalResolved;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], index = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._values[index] = value;
totalResolved = ++this._totalResolved;
if (totalResolved >= this._length) {
    this._resolve(this._values);
    return true;
}
return false;});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._promiseCancelled = ($__.fs.J$__v757635546_679_162 = function J$__v757635546_679() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._cancel();
return true;});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._promiseRejected = ($__.fs.J$__v757635546_681_163 = function J$__v757635546_681(reason) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._totalResolved++;
this._reject(reason);
return true;});
    TAJS_restrictToType(PromiseArray.prototype, 'object')._resultCancelled = ($__.fs.J$__v757635546_683_164 = function J$__v757635546_683() {
var vvv_return, vvv_switch, values;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._isResolved())
    return;
values = this._values;
this._cancel();
if (values instanceof Promise) {
    values.cancel();
} else {
    for (var i = 0; i < values.length; ++i) {
        if (values[i] instanceof Promise) {
            values[i].cancel();
        }
    }
}});
    TAJS_restrictToType(PromiseArray.prototype, 'object').shouldCopyValues = ($__.fs.J$__v757635546_685_165 = function J$__v757635546_685() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return true;});
    TAJS_restrictToType(PromiseArray.prototype, 'object').getActualLength = ($__.fs.J$__v757635546_687_166 = function J$__v757635546_687(len) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
len = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return len;});
    return PromiseArray;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
isArray = util.isArray;
util.inherits(PromiseArray, Proxyable);
PromiseArray.prototype.length = function () {
    return this._length;
};
PromiseArray.prototype.promise = function () {
    return this._promise;
};
PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {
    var values = tryConvertToPromise(this._values, this._promise);
    if (values instanceof Promise) {
        values = values._target();
        var bitField = values._bitField;
        ;
        this._values = values;
        if ((bitField & 50397184) === 0) {
            this._promise._setAsyncGuaranteed();
            return values._then(init, this._reject, undefined, this, resolveValueIfEmpty);
        } else if ((bitField & 33554432) !== 0) {
            values = values._value();
        } else if ((bitField & 16777216) !== 0) {
            return this._reject(values._reason());
        } else {
            return this._cancel();
        }
    }
    values = util.asArray(values);
    if (values === null) {
        var err = apiRejection('expecting an array or an iterable object but got ' + util.classString(values)).reason();
        this._promise._rejectCallback(err, false);
        return;
    }
    if (values.length === 0) {
        if (resolveValueIfEmpty === -5) {
            this._resolveEmptyArray();
        } else {
            this._resolve(toResolutionValue(resolveValueIfEmpty));
        }
        return;
    }
    this._iterate(values);
};
PromiseArray.prototype._iterate = function (values) {
    var len = this.getActualLength(values.length);
    this._length = len;
    this._values = this.shouldCopyValues() ? new Array(len) : this._values;
    var result = this._promise;
    var isResolved = false;
    var bitField = null;
    for (var i = 0; i < len; ++i) {
        var maybePromise = tryConvertToPromise(values[i], result);
        if (maybePromise instanceof Promise) {
            maybePromise = maybePromise._target();
            bitField = maybePromise._bitField;
        } else {
            bitField = null;
        }
        if (isResolved) {
            if (bitField !== null) {
                maybePromise.suppressUnhandledRejections();
            }
        } else if (bitField !== null) {
            if ((bitField & 50397184) === 0) {
                maybePromise._proxy(this, i);
                this._values[i] = maybePromise;
            } else if ((bitField & 33554432) !== 0) {
                isResolved = this._promiseFulfilled(maybePromise._value(), i);
            } else if ((bitField & 16777216) !== 0) {
                isResolved = this._promiseRejected(maybePromise._reason(), i);
            } else {
                isResolved = this._promiseCancelled(i);
            }
        } else {
            isResolved = this._promiseFulfilled(maybePromise, i);
        }
    }
    if (!isResolved)
        result._setAsyncGuaranteed();
};
PromiseArray.prototype._isResolved = function () {
    return this._values === null;
};
PromiseArray.prototype._resolve = function (value) {
    this._values = null;
    this._promise._fulfill(value);
};
PromiseArray.prototype._cancel = function () {
    if (this._isResolved() || !this._promise._isCancellable())
        return;
    this._values = null;
    this._promise._cancel();
};
PromiseArray.prototype._reject = function (reason) {
    this._values = null;
    this._promise._rejectCallback(reason, false);
};
PromiseArray.prototype._promiseFulfilled = function (value, index) {
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
        return true;
    }
    return false;
};
PromiseArray.prototype._promiseCancelled = function () {
    this._cancel();
    return true;
};
PromiseArray.prototype._promiseRejected = function (reason) {
    this._totalResolved++;
    this._reject(reason);
    return true;
};
PromiseArray.prototype._resultCancelled = function () {
    if (this._isResolved())
        return;
    var values = this._values;
    this._cancel();
    if (values instanceof Promise) {
        values.cancel();
    } else {
        for (var i = 0; i < values.length; ++i) {
            if (values[i] instanceof Promise) {
                values[i].cancel();
            }
        }
    }
};
PromiseArray.prototype.shouldCopyValues = function () {
    return true;
};
PromiseArray.prototype.getActualLength = function (len) {
    return len;
};
return PromiseArray;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable) {
    var util = _dereq_('./util');
    var isArray = util.isArray;
    function toResolutionValue(val) {
        switch (val) {
        case -2:
            return [];
        case -3:
            return {};
        case -6:
            return new Map();
        }
    }
    function PromiseArray(values) {
        var promise = this._promise = new Promise(INTERNAL);
        if (values instanceof Promise) {
            promise._propagateFrom(values, 3);
        }
        promise._setOnCancel(this);
        this._values = values;
        this._length = 0;
        this._totalResolved = 0;
        this._init(undefined, -2);
    }
    util.inherits(PromiseArray, Proxyable);
    PromiseArray.prototype.length = function () {
        return this._length;
    };
    PromiseArray.prototype.promise = function () {
        return this._promise;
    };
    PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {
        var values = tryConvertToPromise(this._values, this._promise);
        if (values instanceof Promise) {
            values = values._target();
            var bitField = values._bitField;
            ;
            this._values = values;
            if ((bitField & 50397184) === 0) {
                this._promise._setAsyncGuaranteed();
                return values._then(init, this._reject, undefined, this, resolveValueIfEmpty);
            } else if ((bitField & 33554432) !== 0) {
                values = values._value();
            } else if ((bitField & 16777216) !== 0) {
                return this._reject(values._reason());
            } else {
                return this._cancel();
            }
        }
        values = util.asArray(values);
        if (values === null) {
            var err = apiRejection('expecting an array or an iterable object but got ' + util.classString(values)).reason();
            this._promise._rejectCallback(err, false);
            return;
        }
        if (values.length === 0) {
            if (resolveValueIfEmpty === -5) {
                this._resolveEmptyArray();
            } else {
                this._resolve(toResolutionValue(resolveValueIfEmpty));
            }
            return;
        }
        this._iterate(values);
    };
    PromiseArray.prototype._iterate = function (values) {
        var len = this.getActualLength(values.length);
        this._length = len;
        this._values = this.shouldCopyValues() ? new Array(len) : this._values;
        var result = this._promise;
        var isResolved = false;
        var bitField = null;
        for (var i = 0; i < len; ++i) {
            var maybePromise = tryConvertToPromise(values[i], result);
            if (maybePromise instanceof Promise) {
                maybePromise = maybePromise._target();
                bitField = maybePromise._bitField;
            } else {
                bitField = null;
            }
            if (isResolved) {
                if (bitField !== null) {
                    maybePromise.suppressUnhandledRejections();
                }
            } else if (bitField !== null) {
                if ((bitField & 50397184) === 0) {
                    maybePromise._proxy(this, i);
                    this._values[i] = maybePromise;
                } else if ((bitField & 33554432) !== 0) {
                    isResolved = this._promiseFulfilled(maybePromise._value(), i);
                } else if ((bitField & 16777216) !== 0) {
                    isResolved = this._promiseRejected(maybePromise._reason(), i);
                } else {
                    isResolved = this._promiseCancelled(i);
                }
            } else {
                isResolved = this._promiseFulfilled(maybePromise, i);
            }
        }
        if (!isResolved)
            result._setAsyncGuaranteed();
    };
    PromiseArray.prototype._isResolved = function () {
        return this._values === null;
    };
    PromiseArray.prototype._resolve = function (value) {
        this._values = null;
        this._promise._fulfill(value);
    };
    PromiseArray.prototype._cancel = function () {
        if (this._isResolved() || !this._promise._isCancellable())
            return;
        this._values = null;
        this._promise._cancel();
    };
    PromiseArray.prototype._reject = function (reason) {
        this._values = null;
        this._promise._rejectCallback(reason, false);
    };
    PromiseArray.prototype._promiseFulfilled = function (value, index) {
        this._values[index] = value;
        var totalResolved = ++this._totalResolved;
        if (totalResolved >= this._length) {
            this._resolve(this._values);
            return true;
        }
        return false;
    };
    PromiseArray.prototype._promiseCancelled = function () {
        this._cancel();
        return true;
    };
    PromiseArray.prototype._promiseRejected = function (reason) {
        this._totalResolved++;
        this._reject(reason);
        return true;
    };
    PromiseArray.prototype._resultCancelled = function () {
        if (this._isResolved())
            return;
        var values = this._values;
        this._cancel();
        if (values instanceof Promise) {
            values.cancel();
        } else {
            for (var i = 0; i < values.length; ++i) {
                if (values[i] instanceof Promise) {
                    values[i].cancel();
                }
            }
        }
    };
    PromiseArray.prototype.shouldCopyValues = function () {
        return true;
    };
    PromiseArray.prototype.getActualLength = function (len) {
        return len;
    };
    return PromiseArray;
};}, $__.fs.J$__v757635546_691_28),
            $__.os.oid22 = {
                './util': 36
            }
        ],
        24: [
            ($__.fs.J$__v757635546_728_29 = function J$__v757635546_728(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid123).exports = ($__.fs.J$__v757635546_726_487 = function J$__v757635546_726(Promise, INTERNAL) {
var vvv_return, vvv_switch, THIS, util, nodebackForPromise, withAppended, maybeWrapAsError, canEvaluate, TypeError, defaultSuffix, defaultPromisified, noCopyProps, noCopyPropsPattern, defaultFilter, propsFilter, isPromisified, hasPromisified, checkValid, promisifiableMethods, escapeIdentRegex, makeNodePromisifiedEval, switchCaseArgumentOrder, argumentSequence, parameterDeclaration, parameterCount, makeNodePromisifiedClosure, makeNodePromisified, promisifyAll, promisify;
propsFilter = function propsFilter(key) {
    return !noCopyPropsPattern.test(key);
};
isPromisified = function isPromisified(fn) {
    try {
        return fn.__isPromisified__ === true;
    } catch (e) {
        return false;
    }
};
hasPromisified = function hasPromisified(obj, key, suffix) {
    var val = util.getDataPropertyOrDefault(obj, key + suffix, defaultPromisified);
    return val ? isPromisified(val) : false;
};
checkValid = function checkValid(ret, suffix, suffixRegexp) {
    for (var i = 0; i < ret.length; i += 2) {
        var key = ret[i];
        if (suffixRegexp.test(key)) {
            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, '');
            for (var j = 0; j < ret.length; j += 2) {
                if (ret[j] === keyWithoutAsyncSuffix) {
                    throw new TypeError('Cannot promisify an API that has normal methods with \'%s\'-suffix\n\n    See http://goo.gl/MqrFmX\n'.replace('%s', suffix));
                }
            }
        }
    }
};
promisifiableMethods = function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
    var keys = util.inheritedDataKeys(obj);
    var ret = [];
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var value = obj[key];
        var passesDefaultFilter = filter === defaultFilter ? true : defaultFilter(key, value, obj);
        if (typeof value === 'function' && !isPromisified(value) && !hasPromisified(obj, key, suffix) && filter(key, value, obj, passesDefaultFilter)) {
            ret.push(key, value);
        }
    }
    checkValid(ret, suffix, suffixRegexp);
    return ret;
};
makeNodePromisifiedClosure = function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {
    var defaultThis = function () {
        return this;
    }();
    var method = callback;
    if (typeof method === 'string') {
        callback = fn;
    }
    function promisified() {
        var _receiver = receiver;
        if (receiver === THIS)
            _receiver = this;
        var promise = new Promise(INTERNAL);
        promise._captureStackTrace();
        var cb = typeof method === 'string' && this !== defaultThis ? this[method] : callback;
        var fn = nodebackForPromise(promise, multiArgs);
        try {
            cb.apply(_receiver, withAppended(arguments, fn));
        } catch (e) {
            promise._rejectCallback(maybeWrapAsError(e), true, true);
        }
        if (!promise._isFateSealed())
            promise._setAsyncGuaranteed();
        return promise;
    }
    util.notEnumerableProp(promisified, '__isPromisified__', true);
    return promisified;
};
promisifyAll = function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {
    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + '$');
    var methods = promisifiableMethods(obj, suffix, suffixRegexp, filter);
    for (var i = 0, len = methods.length; i < len; i += 2) {
        var key = methods[i];
        var fn = methods[i + 1];
        var promisifiedKey = key + suffix;
        if (promisifier === makeNodePromisified) {
            obj[promisifiedKey] = makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
        } else {
            var promisified = promisifier(fn, function () {
                return makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
            });
            util.notEnumerableProp(promisified, '__isPromisified__', true);
            obj[promisifiedKey] = promisified;
        }
    }
    util.toFastProperties(obj);
    return obj;
};
promisify = function promisify(callback, receiver, multiArgs) {
    return makeNodePromisified(callback, receiver, undefined, callback, null, multiArgs);
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    propsFilter = ($__.fs.propsFilter_488 = function propsFilter(key) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
key = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return !noCopyPropsPattern.test(key);});
    isPromisified = ($__.fs.isPromisified_489 = function isPromisified(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    return fn.__isPromisified__ === true;
} catch (e) {
    return false;
}});
    hasPromisified = ($__.fs.hasPromisified_490 = function hasPromisified(obj, key, suffix) {
var vvv_return, vvv_switch, val;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], key = arguments[1], suffix = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
val = util.getDataPropertyOrDefault(obj, key + suffix, defaultPromisified);
return val ? isPromisified(val) : false;});
    checkValid = ($__.fs.checkValid_491 = function checkValid(ret, suffix, suffixRegexp) {
var vvv_return, vvv_switch, key, keyWithoutAsyncSuffix;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ret = arguments[0], suffix = arguments[1], suffixRegexp = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (var i = 0; i < ret.length; i += 2) {
    key = ret[i];
    if (suffixRegexp.test(key)) {
        keyWithoutAsyncSuffix = key.replace(suffixRegexp, '');
        for (var j = 0; j < ret.length; j += 2) {
            if (ret[j] === keyWithoutAsyncSuffix) {
                throw new TypeError('Cannot promisify an API that has normal methods with \'%s\'-suffix\n\n    See http://goo.gl/MqrFmX\n'.replace('%s', suffix));
            }
        }
    }
}});
    promisifiableMethods = ($__.fs.promisifiableMethods_492 = function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
var vvv_return, vvv_switch, keys, ret, key, value, passesDefaultFilter;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], suffix = arguments[1], suffixRegexp = arguments[2], filter = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
keys = util.inheritedDataKeys(obj);
ret = [];
for (var i = 0; i < keys.length; ++i) {
    key = keys[i];
    value = obj[key];
    passesDefaultFilter = filter === defaultFilter ? true : defaultFilter(key, value, obj);
    if (typeof value === 'function' && !isPromisified(value) && !hasPromisified(obj, key, suffix) && filter(key, value, obj, passesDefaultFilter)) {
        ret.push(key, value);
    }
}
checkValid(ret, suffix, suffixRegexp);
return ret;});
    makeNodePromisifiedClosure = ($__.fs.makeNodePromisifiedClosure_493 = function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {
var vvv_return, vvv_switch, defaultThis, method, promisified;
promisified = function promisified() {
    var _receiver = receiver;
    if (receiver === THIS)
        _receiver = this;
    var promise = new Promise(INTERNAL);
    promise._captureStackTrace();
    var cb = typeof method === 'string' && this !== defaultThis ? this[method] : callback;
    var fn = nodebackForPromise(promise, multiArgs);
    try {
        cb.apply(_receiver, withAppended(arguments, fn));
    } catch (e) {
        promise._rejectCallback(maybeWrapAsError(e), true, true);
    }
    if (!promise._isFateSealed())
        promise._setAsyncGuaranteed();
    return promise;
};
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
callback = arguments[0], receiver = arguments[1], _ = arguments[2], fn = arguments[3], __ = arguments[4], multiArgs = arguments[5];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
defaultThis = function () {
    return this;
}();
method = callback;
if (typeof method === 'string') {
    callback = fn;
}
util.notEnumerableProp(promisified, '__isPromisified__', true);
return promisified;});
    promisifyAll = ($__.fs.promisifyAll_494 = function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {
var vvv_return, vvv_switch, suffixRegexp, methods, key, fn, promisifiedKey, promisified;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], suffix = arguments[1], filter = arguments[2], promisifier = arguments[3], multiArgs = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
suffixRegexp = new RegExp(escapeIdentRegex(suffix) + '$');
methods = promisifiableMethods(obj, suffix, suffixRegexp, filter);
for (var i = 0, len = methods.length; i < len; i += 2) {
    key = methods[i];
    fn = methods[i + 1];
    promisifiedKey = key + suffix;
    if (promisifier === makeNodePromisified) {
        obj[promisifiedKey] = makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
    } else {
        promisified = promisifier(fn, function () {
            return makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
        });
        util.notEnumerableProp(promisified, '__isPromisified__', true);
        obj[promisifiedKey] = promisified;
    }
}
util.toFastProperties(obj);
return obj;});
    promisify = ($__.fs.promisify_495 = function promisify(callback, receiver, multiArgs) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
callback = arguments[0], receiver = arguments[1], multiArgs = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return makeNodePromisified(callback, receiver, undefined, callback, null, multiArgs);});
    THIS = $__.os.oid124 = {};
    util = (_dereq_, $__.fs.J$__v757635546_3_486)('./util', 0, true, $__.uid);
    nodebackForPromise = (_dereq_, $__.fs.J$__v757635546_3_486)('./nodeback', 1, true, $__.uid);
    withAppended = TAJS_restrictToType((util, $__.os.oid50).withAppended, 'function');
    maybeWrapAsError = TAJS_restrictToType((util, $__.os.oid50).maybeWrapAsError, 'function');
    canEvaluate = ((util, $__.os.oid50).canEvaluate, false);
    TypeError = TAJS_restrictToType(((_dereq_, $__.fs.J$__v757635546_3_486)('./errors', 2, true, $__.uid), $__.os.oid70).TypeError, 'function');
    defaultSuffix = 'Async';
    defaultPromisified = $__.os.oid125 = {
        '__isPromisified__': true
    };
    noCopyProps = [
        'arity',
        'length',
        'name',
        'arguments',
        'caller',
        'callee',
        'prototype',
        '__isPromisified__'
    ];
    noCopyPropsPattern = new RegExp('^(?:' + noCopyProps['join']('|') + ')$');
    defaultFilter = ($__.fs.J$__v757635546_693_496 = function J$__v757635546_693(name) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
name = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return util.isIdentifier(name) && name.charAt(0) !== '_' && name !== 'constructor';});
    escapeIdentRegex = ($__.fs.J$__v757635546_700_497 = function J$__v757635546_700(str) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
str = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return str.replace(/([$])/, '\\$');});
    !true;
    makeNodePromisified = (canEvaluate, makeNodePromisifiedClosure);
    Promise.promisify = ($__.fs.J$__v757635546_722_498 = function J$__v757635546_722(fn, options) {
var vvv_return, vvv_switch, receiver, multiArgs, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], options = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn !== 'function') {
    throw new TypeError('expecting a function but got ' + util.classString(fn));
}
if (isPromisified(fn)) {
    return fn;
}
options = Object(options);
receiver = options.context === undefined ? THIS : options.context;
multiArgs = !!options.multiArgs;
ret = promisify(fn, receiver, multiArgs);
util.copyDescriptors(fn, ret, propsFilter);
return ret;});
    Promise.promisifyAll = ($__.fs.J$__v757635546_724_499 = function J$__v757635546_724(target, options) {
var vvv_return, vvv_switch, multiArgs, suffix, filter, promisifier, keys, value;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
target = arguments[0], options = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof target !== 'function' && typeof target !== 'object') {
    throw new TypeError('the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n');
}
options = Object(options);
multiArgs = !!options.multiArgs;
suffix = options.suffix;
if (typeof suffix !== 'string')
    suffix = defaultSuffix;
filter = options.filter;
if (typeof filter !== 'function')
    filter = defaultFilter;
promisifier = options.promisifier;
if (typeof promisifier !== 'function')
    promisifier = makeNodePromisified;
if (!util.isIdentifier(suffix)) {
    throw new RangeError('suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n');
}
keys = util.inheritedDataKeys(target);
for (var i = 0; i < keys.length; ++i) {
    value = target[keys[i]];
    if (keys[i] !== 'constructor' && util.isClass(value)) {
        promisifyAll(value.prototype, suffix, filter, promisifier, multiArgs);
        promisifyAll(value, suffix, filter, promisifier, multiArgs);
    }
}
return promisifyAll(target, suffix, filter, promisifier, multiArgs);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
THIS = {};
util = _dereq_('./util');
nodebackForPromise = _dereq_('./nodeback');
withAppended = util.withAppended;
maybeWrapAsError = util.maybeWrapAsError;
canEvaluate = util.canEvaluate;
TypeError = _dereq_('./errors').TypeError;
defaultSuffix = 'Async';
defaultPromisified = {
    __isPromisified__: true
};
noCopyProps = [
    'arity',
    'length',
    'name',
    'arguments',
    'caller',
    'callee',
    'prototype',
    '__isPromisified__'
];
noCopyPropsPattern = new RegExp('^(?:' + noCopyProps.join('|') + ')$');
defaultFilter = function (name) {
    return util.isIdentifier(name) && name.charAt(0) !== '_' && name !== 'constructor';
};
escapeIdentRegex = function (str) {
    return str.replace(/([$])/, '\\$');
};
if (!true) {
    switchCaseArgumentOrder = function (likelyArgumentCount) {
        var ret = [likelyArgumentCount];
        var min = Math.max(0, likelyArgumentCount - 1 - 3);
        for (var i = likelyArgumentCount - 1; i >= min; --i) {
            ret.push(i);
        }
        for (var i = likelyArgumentCount + 1; i <= 3; ++i) {
            ret.push(i);
        }
        return ret;
    };
    argumentSequence = function (argumentCount) {
        return util.filledRange(argumentCount, '_arg', '');
    };
    parameterDeclaration = function (parameterCount) {
        return util.filledRange(Math.max(parameterCount, 3), '_arg', '');
    };
    parameterCount = function (fn) {
        if (typeof fn.length === 'number') {
            return Math.max(Math.min(fn.length, 1023 + 1), 0);
        }
        return 0;
    };
    makeNodePromisifiedEval = function (callback, receiver, originalName, fn, _, multiArgs) {
        var newParameterCount = Math.max(0, parameterCount(fn) - 1);
        var argumentOrder = switchCaseArgumentOrder(newParameterCount);
        var shouldProxyThis = typeof callback === 'string' || receiver === THIS;
        function generateCallForArgumentCount(count) {
            var args = argumentSequence(count).join(', ');
            var comma = count > 0 ? ', ' : '';
            var ret;
            if (shouldProxyThis) {
                ret = 'ret = callback.call(this, {{args}}, nodeback); break;\n';
            } else {
                ret = receiver === undefined ? 'ret = callback({{args}}, nodeback); break;\n' : 'ret = callback.call(receiver, {{args}}, nodeback); break;\n';
            }
            return ret.replace('{{args}}', args).replace(', ', comma);
        }
        function generateArgumentSwitchCase() {
            var ret = '';
            for (var i = 0; i < argumentOrder.length; ++i) {
                ret += 'case ' + argumentOrder[i] + ':' + generateCallForArgumentCount(argumentOrder[i]);
            }
            ret += '                                                             \n        default:                                                             \n            var args = new Array(len + 1);                                   \n            var i = 0;                                                       \n            for (var i = 0; i < len; ++i) {                                  \n               args[i] = arguments[i];                                       \n            }                                                                \n            args[i] = nodeback;                                              \n            [CodeForCall]                                                    \n            break;                                                           \n        '.replace('[CodeForCall]', shouldProxyThis ? 'ret = callback.apply(this, args);\n' : 'ret = callback.apply(receiver, args);\n');
            return ret;
        }
        var getFunctionCode = typeof callback === 'string' ? 'this != null ? this[\'' + callback + '\'] : fn' : 'fn';
        var body = '\'use strict\';                                                \n        var ret = function (Parameters) {                                    \n            \'use strict\';                                                    \n            var len = arguments.length;                                      \n            var promise = new Promise(INTERNAL);                             \n            promise._captureStackTrace();                                    \n            var nodeback = nodebackForPromise(promise, ' + multiArgs + ');   \n            var ret;                                                         \n            var callback = tryCatch([GetFunctionCode]);                      \n            switch(len) {                                                    \n                [CodeForSwitchCase]                                          \n            }                                                                \n            if (ret === errorObj) {                                          \n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n            }                                                                \n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \n            return promise;                                                  \n        };                                                                   \n        notEnumerableProp(ret, \'__isPromisified__\', true);                   \n        return ret;                                                          \n    '.replace('[CodeForSwitchCase]', generateArgumentSwitchCase()).replace('[GetFunctionCode]', getFunctionCode);
        body = body.replace('Parameters', parameterDeclaration(newParameterCount));
        return new Function('Promise', 'fn', 'receiver', 'withAppended', 'maybeWrapAsError', 'nodebackForPromise', 'tryCatch', 'errorObj', 'notEnumerableProp', 'INTERNAL', body)(Promise, fn, receiver, withAppended, maybeWrapAsError, nodebackForPromise, util.tryCatch, util.errorObj, util.notEnumerableProp, INTERNAL);
    };
}
makeNodePromisified = canEvaluate ? makeNodePromisifiedEval : makeNodePromisifiedClosure;
Promise.promisify = function (fn, options) {
    if (typeof fn !== 'function') {
        throw new TypeError('expecting a function but got ' + util.classString(fn));
    }
    if (isPromisified(fn)) {
        return fn;
    }
    options = Object(options);
    var receiver = options.context === undefined ? THIS : options.context;
    var multiArgs = !!options.multiArgs;
    var ret = promisify(fn, receiver, multiArgs);
    util.copyDescriptors(fn, ret, propsFilter);
    return ret;
};
Promise.promisifyAll = function (target, options) {
    if (typeof target !== 'function' && typeof target !== 'object') {
        throw new TypeError('the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n');
    }
    options = Object(options);
    var multiArgs = !!options.multiArgs;
    var suffix = options.suffix;
    if (typeof suffix !== 'string')
        suffix = defaultSuffix;
    var filter = options.filter;
    if (typeof filter !== 'function')
        filter = defaultFilter;
    var promisifier = options.promisifier;
    if (typeof promisifier !== 'function')
        promisifier = makeNodePromisified;
    if (!util.isIdentifier(suffix)) {
        throw new RangeError('suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n');
    }
    var keys = util.inheritedDataKeys(target);
    for (var i = 0; i < keys.length; ++i) {
        var value = target[keys[i]];
        if (keys[i] !== 'constructor' && util.isClass(value)) {
            promisifyAll(value.prototype, suffix, filter, promisifier, multiArgs);
            promisifyAll(value, suffix, filter, promisifier, multiArgs);
        }
    }
    return promisifyAll(target, suffix, filter, promisifier, multiArgs);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL) {
    var THIS = {};
    var util = _dereq_('./util');
    var nodebackForPromise = _dereq_('./nodeback');
    var withAppended = util.withAppended;
    var maybeWrapAsError = util.maybeWrapAsError;
    var canEvaluate = util.canEvaluate;
    var TypeError = _dereq_('./errors').TypeError;
    var defaultSuffix = 'Async';
    var defaultPromisified = {
        __isPromisified__: true
    };
    var noCopyProps = [
        'arity',
        'length',
        'name',
        'arguments',
        'caller',
        'callee',
        'prototype',
        '__isPromisified__'
    ];
    var noCopyPropsPattern = new RegExp('^(?:' + noCopyProps.join('|') + ')$');
    var defaultFilter = function (name) {
        return util.isIdentifier(name) && name.charAt(0) !== '_' && name !== 'constructor';
    };
    function propsFilter(key) {
        return !noCopyPropsPattern.test(key);
    }
    function isPromisified(fn) {
        try {
            return fn.__isPromisified__ === true;
        } catch (e) {
            return false;
        }
    }
    function hasPromisified(obj, key, suffix) {
        var val = util.getDataPropertyOrDefault(obj, key + suffix, defaultPromisified);
        return val ? isPromisified(val) : false;
    }
    function checkValid(ret, suffix, suffixRegexp) {
        for (var i = 0; i < ret.length; i += 2) {
            var key = ret[i];
            if (suffixRegexp.test(key)) {
                var keyWithoutAsyncSuffix = key.replace(suffixRegexp, '');
                for (var j = 0; j < ret.length; j += 2) {
                    if (ret[j] === keyWithoutAsyncSuffix) {
                        throw new TypeError('Cannot promisify an API that has normal methods with \'%s\'-suffix\n\n    See http://goo.gl/MqrFmX\n'.replace('%s', suffix));
                    }
                }
            }
        }
    }
    function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
        var keys = util.inheritedDataKeys(obj);
        var ret = [];
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var value = obj[key];
            var passesDefaultFilter = filter === defaultFilter ? true : defaultFilter(key, value, obj);
            if (typeof value === 'function' && !isPromisified(value) && !hasPromisified(obj, key, suffix) && filter(key, value, obj, passesDefaultFilter)) {
                ret.push(key, value);
            }
        }
        checkValid(ret, suffix, suffixRegexp);
        return ret;
    }
    var escapeIdentRegex = function (str) {
        return str.replace(/([$])/, '\\$');
    };
    var makeNodePromisifiedEval;
    if (!true) {
        var switchCaseArgumentOrder = function (likelyArgumentCount) {
            var ret = [likelyArgumentCount];
            var min = Math.max(0, likelyArgumentCount - 1 - 3);
            for (var i = likelyArgumentCount - 1; i >= min; --i) {
                ret.push(i);
            }
            for (var i = likelyArgumentCount + 1; i <= 3; ++i) {
                ret.push(i);
            }
            return ret;
        };
        var argumentSequence = function (argumentCount) {
            return util.filledRange(argumentCount, '_arg', '');
        };
        var parameterDeclaration = function (parameterCount) {
            return util.filledRange(Math.max(parameterCount, 3), '_arg', '');
        };
        var parameterCount = function (fn) {
            if (typeof fn.length === 'number') {
                return Math.max(Math.min(fn.length, 1023 + 1), 0);
            }
            return 0;
        };
        makeNodePromisifiedEval = function (callback, receiver, originalName, fn, _, multiArgs) {
            var newParameterCount = Math.max(0, parameterCount(fn) - 1);
            var argumentOrder = switchCaseArgumentOrder(newParameterCount);
            var shouldProxyThis = typeof callback === 'string' || receiver === THIS;
            function generateCallForArgumentCount(count) {
                var args = argumentSequence(count).join(', ');
                var comma = count > 0 ? ', ' : '';
                var ret;
                if (shouldProxyThis) {
                    ret = 'ret = callback.call(this, {{args}}, nodeback); break;\n';
                } else {
                    ret = receiver === undefined ? 'ret = callback({{args}}, nodeback); break;\n' : 'ret = callback.call(receiver, {{args}}, nodeback); break;\n';
                }
                return ret.replace('{{args}}', args).replace(', ', comma);
            }
            function generateArgumentSwitchCase() {
                var ret = '';
                for (var i = 0; i < argumentOrder.length; ++i) {
                    ret += 'case ' + argumentOrder[i] + ':' + generateCallForArgumentCount(argumentOrder[i]);
                }
                ret += '                                                             \n        default:                                                             \n            var args = new Array(len + 1);                                   \n            var i = 0;                                                       \n            for (var i = 0; i < len; ++i) {                                  \n               args[i] = arguments[i];                                       \n            }                                                                \n            args[i] = nodeback;                                              \n            [CodeForCall]                                                    \n            break;                                                           \n        '.replace('[CodeForCall]', shouldProxyThis ? 'ret = callback.apply(this, args);\n' : 'ret = callback.apply(receiver, args);\n');
                return ret;
            }
            var getFunctionCode = typeof callback === 'string' ? 'this != null ? this[\'' + callback + '\'] : fn' : 'fn';
            var body = '\'use strict\';                                                \n        var ret = function (Parameters) {                                    \n            \'use strict\';                                                    \n            var len = arguments.length;                                      \n            var promise = new Promise(INTERNAL);                             \n            promise._captureStackTrace();                                    \n            var nodeback = nodebackForPromise(promise, ' + multiArgs + ');   \n            var ret;                                                         \n            var callback = tryCatch([GetFunctionCode]);                      \n            switch(len) {                                                    \n                [CodeForSwitchCase]                                          \n            }                                                                \n            if (ret === errorObj) {                                          \n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n            }                                                                \n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \n            return promise;                                                  \n        };                                                                   \n        notEnumerableProp(ret, \'__isPromisified__\', true);                   \n        return ret;                                                          \n    '.replace('[CodeForSwitchCase]', generateArgumentSwitchCase()).replace('[GetFunctionCode]', getFunctionCode);
            body = body.replace('Parameters', parameterDeclaration(newParameterCount));
            return new Function('Promise', 'fn', 'receiver', 'withAppended', 'maybeWrapAsError', 'nodebackForPromise', 'tryCatch', 'errorObj', 'notEnumerableProp', 'INTERNAL', body)(Promise, fn, receiver, withAppended, maybeWrapAsError, nodebackForPromise, util.tryCatch, util.errorObj, util.notEnumerableProp, INTERNAL);
        };
    }
    function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {
        var defaultThis = function () {
            return this;
        }();
        var method = callback;
        if (typeof method === 'string') {
            callback = fn;
        }
        function promisified() {
            var _receiver = receiver;
            if (receiver === THIS)
                _receiver = this;
            var promise = new Promise(INTERNAL);
            promise._captureStackTrace();
            var cb = typeof method === 'string' && this !== defaultThis ? this[method] : callback;
            var fn = nodebackForPromise(promise, multiArgs);
            try {
                cb.apply(_receiver, withAppended(arguments, fn));
            } catch (e) {
                promise._rejectCallback(maybeWrapAsError(e), true, true);
            }
            if (!promise._isFateSealed())
                promise._setAsyncGuaranteed();
            return promise;
        }
        util.notEnumerableProp(promisified, '__isPromisified__', true);
        return promisified;
    }
    var makeNodePromisified = canEvaluate ? makeNodePromisifiedEval : makeNodePromisifiedClosure;
    function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {
        var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + '$');
        var methods = promisifiableMethods(obj, suffix, suffixRegexp, filter);
        for (var i = 0, len = methods.length; i < len; i += 2) {
            var key = methods[i];
            var fn = methods[i + 1];
            var promisifiedKey = key + suffix;
            if (promisifier === makeNodePromisified) {
                obj[promisifiedKey] = makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
            } else {
                var promisified = promisifier(fn, function () {
                    return makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
                });
                util.notEnumerableProp(promisified, '__isPromisified__', true);
                obj[promisifiedKey] = promisified;
            }
        }
        util.toFastProperties(obj);
        return obj;
    }
    function promisify(callback, receiver, multiArgs) {
        return makeNodePromisified(callback, receiver, undefined, callback, null, multiArgs);
    }
    Promise.promisify = function (fn, options) {
        if (typeof fn !== 'function') {
            throw new TypeError('expecting a function but got ' + util.classString(fn));
        }
        if (isPromisified(fn)) {
            return fn;
        }
        options = Object(options);
        var receiver = options.context === undefined ? THIS : options.context;
        var multiArgs = !!options.multiArgs;
        var ret = promisify(fn, receiver, multiArgs);
        util.copyDescriptors(fn, ret, propsFilter);
        return ret;
    };
    Promise.promisifyAll = function (target, options) {
        if (typeof target !== 'function' && typeof target !== 'object') {
            throw new TypeError('the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n');
        }
        options = Object(options);
        var multiArgs = !!options.multiArgs;
        var suffix = options.suffix;
        if (typeof suffix !== 'string')
            suffix = defaultSuffix;
        var filter = options.filter;
        if (typeof filter !== 'function')
            filter = defaultFilter;
        var promisifier = options.promisifier;
        if (typeof promisifier !== 'function')
            promisifier = makeNodePromisified;
        if (!util.isIdentifier(suffix)) {
            throw new RangeError('suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n');
        }
        var keys = util.inheritedDataKeys(target);
        for (var i = 0; i < keys.length; ++i) {
            var value = target[keys[i]];
            if (keys[i] !== 'constructor' && util.isClass(value)) {
                promisifyAll(value.prototype, suffix, filter, promisifier, multiArgs);
                promisifyAll(value, suffix, filter, promisifier, multiArgs);
            }
        }
        return promisifyAll(target, suffix, filter, promisifier, multiArgs);
    };
};}, $__.fs.J$__v757635546_728_29),
            $__.os.oid23 = {
                './errors': 12,
                './nodeback': 20,
                './util': 36
            }
        ],
        25: [
            ($__.fs.J$__v757635546_752_30 = function J$__v757635546_752(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid127).exports = ($__.fs.J$__v757635546_750_501 = function J$__v757635546_750(Promise, PromiseArray, tryConvertToPromise, apiRejection) {
var vvv_return, vvv_switch, vvv_tmp0, util, isObject, es5, Es6Map, mapToEntries, entriesToMap, PropertiesPromiseArray, props;
PropertiesPromiseArray = function PropertiesPromiseArray(obj) {
    var isMap = false;
    var entries;
    if (Es6Map !== undefined && obj instanceof Es6Map) {
        entries = mapToEntries(obj);
        isMap = true;
    } else {
        var keys = es5.keys(obj);
        var len = keys.length;
        entries = new Array(len * 2);
        for (var i = 0; i < len; ++i) {
            var key = keys[i];
            entries[i] = obj[key];
            entries[i + len] = key;
        }
    }
    this.constructor$(entries);
    this._isMap = isMap;
    this._init$(undefined, isMap ? -6 : -3);
};
props = function props(promises) {
    var ret;
    var castValue = tryConvertToPromise(promises);
    if (!isObject(castValue)) {
        return apiRejection('cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n');
    } else if (castValue instanceof Promise) {
        ret = castValue._then(Promise.props, undefined, undefined, undefined, undefined);
    } else {
        ret = new PropertiesPromiseArray(castValue).promise();
    }
    if (castValue instanceof Promise) {
        ret._propagateFrom(castValue, 2);
    }
    return ret;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], PromiseArray = arguments[1], tryConvertToPromise = arguments[2], apiRejection = arguments[3];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    PropertiesPromiseArray = ($__.fs.PropertiesPromiseArray_502 = function PropertiesPromiseArray(obj) {
var vvv_return, vvv_switch, isMap, entries, keys, len, key;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
isMap = false;
if (Es6Map !== undefined && obj instanceof Es6Map) {
    entries = mapToEntries(obj);
    isMap = true;
} else {
    keys = es5.keys(obj);
    len = keys.length;
    entries = new Array(len * 2);
    for (var i = 0; i < len; ++i) {
        key = keys[i];
        entries[i] = obj[key];
        entries[i + len] = key;
    }
}
this.constructor$(entries);
this._isMap = isMap;
this._init$(undefined, isMap ? -6 : -3);});
    props = ($__.fs.props_503 = function props(promises) {
var vvv_return, vvv_switch, ret, castValue;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
castValue = tryConvertToPromise(promises);
if (!isObject(castValue)) {
    return apiRejection('cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n');
} else if (castValue instanceof Promise) {
    ret = castValue._then(Promise.props, undefined, undefined, undefined, undefined);
} else {
    ret = new PropertiesPromiseArray(castValue).promise();
}
if (castValue instanceof Promise) {
    ret._propagateFrom(castValue, 2);
}
return ret;});
    util = (_dereq_, $__.fs.J$__v757635546_3_500)('./util', 0, true, $__.uid);
    isObject = TAJS_restrictToType((util, $__.os.oid50).isObject, 'function');
    es5 = (_dereq_, $__.fs.J$__v757635546_3_500)('./es5', 1, true, $__.uid);
    typeof Map === 'function';
    Es6Map = Map;
    mapToEntries = (($__.fs.J$__v757635546_732_504 = function J$__v757635546_732() {
var vvv_return, vvv_switch, index, size, extractEntry;
extractEntry = function extractEntry(value, key) {
    this[index] = value;
    this[index + size] = key;
    index++;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    extractEntry = ($__.fs.extractEntry_505 = function extractEntry(value, key) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], key = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this[index] = value;
this[index + size] = key;
index++;});
    index = 0;
    size = 0;
    return ($__.fs.mapToEntries_506 = function mapToEntries(map) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
map = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
size = map.size;
index = 0;
ret = new Array(map.size * 2);
map.forEach(extractEntry, ret);
return ret;});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
index = 0;
size = 0;
return function mapToEntries(map) {
    size = map.size;
    index = 0;
    var ret = new Array(map.size * 2);
    map.forEach(extractEntry, ret);
    return ret;
};}), $__.fs.J$__v757635546_732_504)(0, true, $__.uid);
    entriesToMap = ($__.fs.J$__v757635546_734_507 = function J$__v757635546_734(entries) {
var vvv_return, vvv_switch, ret, length, key, value;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
entries = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = new Es6Map();
length = entries.length / 2 | 0;
for (var i = 0; i < length; ++i) {
    key = entries[length + i];
    value = entries[i];
    ret.set(key, value);
}
return ret;});
    vvv_tmp0 = util, 'inherits', $__.fs.J$__v757635546_1017_83.call(vvv_tmp0, (PropertiesPromiseArray, $__.fs.PropertiesPromiseArray_502), (PromiseArray, $__.fs.PromiseArray_151), 10, true, $__.uid);
    TAJS_restrictToType(PropertiesPromiseArray.prototype, 'object')._init = ($__.fs.J$__v757635546_737_509 = function J$__v757635546_737() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(PropertiesPromiseArray.prototype, 'object')._promiseFulfilled = ($__.fs.J$__v757635546_739_510 = function J$__v757635546_739(value, index) {
var vvv_return, vvv_switch, totalResolved, val, keyOffset;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], index = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._values[index] = value;
totalResolved = ++this._totalResolved;
if (totalResolved >= this._length) {
    if (this._isMap) {
        val = entriesToMap(this._values);
    } else {
        val = {};
        keyOffset = this.length();
        for (var i = 0, len = this.length(); i < len; ++i) {
            val[this._values[i + keyOffset]] = this._values[i];
        }
    }
    this._resolve(val);
    return true;
}
return false;});
    TAJS_restrictToType(PropertiesPromiseArray.prototype, 'object').shouldCopyValues = ($__.fs.J$__v757635546_741_511 = function J$__v757635546_741() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return false;});
    TAJS_restrictToType(PropertiesPromiseArray.prototype, 'object').getActualLength = ($__.fs.J$__v757635546_743_512 = function J$__v757635546_743(len) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
len = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return len >> 1;});
    TAJS_restrictToType(Promise.prototype, 'object').props = ($__.fs.J$__v757635546_746_513 = function J$__v757635546_746() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return props(this);});
    Promise.props = ($__.fs.J$__v757635546_748_514 = function J$__v757635546_748(promises) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return props(promises);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
isObject = util.isObject;
es5 = _dereq_('./es5');
if (typeof Map === 'function')
    Es6Map = Map;
mapToEntries = function () {
    var index = 0;
    var size = 0;
    function extractEntry(value, key) {
        this[index] = value;
        this[index + size] = key;
        index++;
    }
    return function mapToEntries(map) {
        size = map.size;
        index = 0;
        var ret = new Array(map.size * 2);
        map.forEach(extractEntry, ret);
        return ret;
    };
}();
entriesToMap = function (entries) {
    var ret = new Es6Map();
    var length = entries.length / 2 | 0;
    for (var i = 0; i < length; ++i) {
        var key = entries[length + i];
        var value = entries[i];
        ret.set(key, value);
    }
    return ret;
};
util.inherits(PropertiesPromiseArray, PromiseArray);
PropertiesPromiseArray.prototype._init = function () {
};
PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        var val;
        if (this._isMap) {
            val = entriesToMap(this._values);
        } else {
            val = {};
            var keyOffset = this.length();
            for (var i = 0, len = this.length(); i < len; ++i) {
                val[this._values[i + keyOffset]] = this._values[i];
            }
        }
        this._resolve(val);
        return true;
    }
    return false;
};
PropertiesPromiseArray.prototype.shouldCopyValues = function () {
    return false;
};
PropertiesPromiseArray.prototype.getActualLength = function (len) {
    return len >> 1;
};
Promise.prototype.props = function () {
    return props(this);
};
Promise.props = function (promises) {
    return props(promises);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, PromiseArray, tryConvertToPromise, apiRejection) {
    var util = _dereq_('./util');
    var isObject = util.isObject;
    var es5 = _dereq_('./es5');
    var Es6Map;
    if (typeof Map === 'function')
        Es6Map = Map;
    var mapToEntries = function () {
        var index = 0;
        var size = 0;
        function extractEntry(value, key) {
            this[index] = value;
            this[index + size] = key;
            index++;
        }
        return function mapToEntries(map) {
            size = map.size;
            index = 0;
            var ret = new Array(map.size * 2);
            map.forEach(extractEntry, ret);
            return ret;
        };
    }();
    var entriesToMap = function (entries) {
        var ret = new Es6Map();
        var length = entries.length / 2 | 0;
        for (var i = 0; i < length; ++i) {
            var key = entries[length + i];
            var value = entries[i];
            ret.set(key, value);
        }
        return ret;
    };
    function PropertiesPromiseArray(obj) {
        var isMap = false;
        var entries;
        if (Es6Map !== undefined && obj instanceof Es6Map) {
            entries = mapToEntries(obj);
            isMap = true;
        } else {
            var keys = es5.keys(obj);
            var len = keys.length;
            entries = new Array(len * 2);
            for (var i = 0; i < len; ++i) {
                var key = keys[i];
                entries[i] = obj[key];
                entries[i + len] = key;
            }
        }
        this.constructor$(entries);
        this._isMap = isMap;
        this._init$(undefined, isMap ? -6 : -3);
    }
    util.inherits(PropertiesPromiseArray, PromiseArray);
    PropertiesPromiseArray.prototype._init = function () {
    };
    PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {
        this._values[index] = value;
        var totalResolved = ++this._totalResolved;
        if (totalResolved >= this._length) {
            var val;
            if (this._isMap) {
                val = entriesToMap(this._values);
            } else {
                val = {};
                var keyOffset = this.length();
                for (var i = 0, len = this.length(); i < len; ++i) {
                    val[this._values[i + keyOffset]] = this._values[i];
                }
            }
            this._resolve(val);
            return true;
        }
        return false;
    };
    PropertiesPromiseArray.prototype.shouldCopyValues = function () {
        return false;
    };
    PropertiesPromiseArray.prototype.getActualLength = function (len) {
        return len >> 1;
    };
    function props(promises) {
        var ret;
        var castValue = tryConvertToPromise(promises);
        if (!isObject(castValue)) {
            return apiRejection('cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n');
        } else if (castValue instanceof Promise) {
            ret = castValue._then(Promise.props, undefined, undefined, undefined, undefined);
        } else {
            ret = new PropertiesPromiseArray(castValue).promise();
        }
        if (castValue instanceof Promise) {
            ret._propagateFrom(castValue, 2);
        }
        return ret;
    }
    Promise.prototype.props = function () {
        return props(this);
    };
    Promise.props = function (promises) {
        return props(promises);
    };
};}, $__.fs.J$__v757635546_752_30),
            $__.os.oid24 = {
                './es5': 13,
                './util': 36
            }
        ],
        26: [
            ($__.fs.J$__v757635546_770_31 = function J$__v757635546_770(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch, arrayMove, Queue;
arrayMove = function arrayMove(src, srcIndex, dst, dstIndex, len) {
    for (var j = 0; j < len; ++j) {
        dst[j + dstIndex] = src[j + srcIndex];
        src[j + srcIndex] = void 0;
    }
};
Queue = function Queue(capacity) {
    this._capacity = capacity;
    this._length = 0;
    this._front = 0;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    arrayMove = ($__.fs.arrayMove_103 = function arrayMove(src, srcIndex, dst, dstIndex, len) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
src = arguments[0], srcIndex = arguments[1], dst = arguments[2], dstIndex = arguments[3], len = arguments[4];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (var j = 0; j < len; ++j) {
    dst[j + dstIndex] = src[j + srcIndex];
    src[j + srcIndex] = void 0;
}});
    Queue = ($__.fs.Queue_104 = function Queue(capacity) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
capacity = arguments[0];
switch (vvv_switch) {
case 0:
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 1);
    this._capacity = capacity;
    this._length = 0;
    this._front = 0;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._capacity = capacity;
this._length = 0;
this._front = 0;});
    TAJS_restrictToType(Queue.prototype, 'object')._willBeOverCapacity = ($__.fs.J$__v757635546_756_105 = function J$__v757635546_756(size) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
size = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._capacity < size;});
    TAJS_restrictToType(Queue.prototype, 'object')._pushOne = ($__.fs.J$__v757635546_758_106 = function J$__v757635546_758(arg) {
var vvv_return, vvv_switch, length, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
arg = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
length = this.length();
this._checkCapacity(length + 1);
i = this._front + length & this._capacity - 1;
this[i] = arg;
this._length = length + 1;});
    TAJS_restrictToType(Queue.prototype, 'object').push = ($__.fs.J$__v757635546_760_107 = function J$__v757635546_760(fn, receiver, arg) {
var vvv_return, vvv_switch, length, j, wrapMask;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], receiver = arguments[1], arg = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
length = this.length() + 3;
if (this._willBeOverCapacity(length)) {
    this._pushOne(fn);
    this._pushOne(receiver);
    this._pushOne(arg);
    return;
}
j = this._front + length - 3;
this._checkCapacity(length);
wrapMask = this._capacity - 1;
this[j + 0 & wrapMask] = fn;
this[j + 1 & wrapMask] = receiver;
this[j + 2 & wrapMask] = arg;
this._length = length;});
    TAJS_restrictToType(Queue.prototype, 'object').shift = ($__.fs.J$__v757635546_762_108 = function J$__v757635546_762() {
var vvv_return, vvv_switch, front, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
front = this._front;
ret = this[front];
this[front] = undefined;
this._front = front + 1 & this._capacity - 1;
this._length--;
return ret;});
    TAJS_restrictToType(Queue.prototype, 'object').length = ($__.fs.J$__v757635546_764_109 = function J$__v757635546_764() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._length;});
    TAJS_restrictToType(Queue.prototype, 'object')._checkCapacity = ($__.fs.J$__v757635546_766_110 = function J$__v757635546_766(size) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
size = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._capacity < size) {
    this._resizeTo(this._capacity << 1);
}});
    TAJS_restrictToType(Queue.prototype, 'object')._resizeTo = ($__.fs.J$__v757635546_768_111 = function J$__v757635546_768(capacity) {
var vvv_return, vvv_switch, oldCapacity, front, length, moveItemsCount;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
capacity = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
oldCapacity = this._capacity;
this._capacity = capacity;
front = this._front;
length = this._length;
moveItemsCount = front + length & oldCapacity - 1;
arrayMove(this, 0, this, oldCapacity, moveItemsCount);});
    (module, $__.os.oid58).exports = Queue;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
Queue.prototype._willBeOverCapacity = function (size) {
    return this._capacity < size;
};
Queue.prototype._pushOne = function (arg) {
    var length = this.length();
    this._checkCapacity(length + 1);
    var i = this._front + length & this._capacity - 1;
    this[i] = arg;
    this._length = length + 1;
};
Queue.prototype.push = function (fn, receiver, arg) {
    var length = this.length() + 3;
    if (this._willBeOverCapacity(length)) {
        this._pushOne(fn);
        this._pushOne(receiver);
        this._pushOne(arg);
        return;
    }
    var j = this._front + length - 3;
    this._checkCapacity(length);
    var wrapMask = this._capacity - 1;
    this[j + 0 & wrapMask] = fn;
    this[j + 1 & wrapMask] = receiver;
    this[j + 2 & wrapMask] = arg;
    this._length = length;
};
Queue.prototype.shift = function () {
    var front = this._front, ret = this[front];
    this[front] = undefined;
    this._front = front + 1 & this._capacity - 1;
    this._length--;
    return ret;
};
Queue.prototype.length = function () {
    return this._length;
};
Queue.prototype._checkCapacity = function (size) {
    if (this._capacity < size) {
        this._resizeTo(this._capacity << 1);
    }
};
Queue.prototype._resizeTo = function (capacity) {
    var oldCapacity = this._capacity;
    this._capacity = capacity;
    var front = this._front;
    var length = this._length;
    var moveItemsCount = front + length & oldCapacity - 1;
    arrayMove(this, 0, this, oldCapacity, moveItemsCount);
};
module.exports = Queue;}, $__.fs.J$__v757635546_770_31),
            $__.os.oid25 = {}
        ],
        27: [
            ($__.fs.J$__v757635546_783_32 = function J$__v757635546_783(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid130).exports = ($__.fs.J$__v757635546_781_516 = function J$__v757635546_781(Promise, INTERNAL, tryConvertToPromise, apiRejection) {
var vvv_return, vvv_switch, util, raceLater, race;
race = function race(promises, parent) {
    var maybePromise = tryConvertToPromise(promises);
    if (maybePromise instanceof Promise) {
        return raceLater(maybePromise);
    } else {
        promises = util.asArray(promises);
        if (promises === null)
            return apiRejection('expecting an array or an iterable object but got ' + util.classString(promises));
    }
    var ret = new Promise(INTERNAL);
    if (parent !== undefined) {
        ret._propagateFrom(parent, 3);
    }
    var fulfill = ret._fulfill;
    var reject = ret._reject;
    for (var i = 0, len = promises.length; i < len; ++i) {
        var val = promises[i];
        if (val === undefined && !(i in promises)) {
            continue;
        }
        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
    }
    return ret;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1], tryConvertToPromise = arguments[2], apiRejection = arguments[3];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    race = ($__.fs.race_517 = function race(promises, parent) {
var vvv_return, vvv_switch, maybePromise, ret, fulfill, reject, val;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], parent = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
maybePromise = tryConvertToPromise(promises);
if (maybePromise instanceof Promise) {
    return raceLater(maybePromise);
} else {
    promises = util.asArray(promises);
    if (promises === null)
        return apiRejection('expecting an array or an iterable object but got ' + util.classString(promises));
}
ret = new Promise(INTERNAL);
if (parent !== undefined) {
    ret._propagateFrom(parent, 3);
}
fulfill = ret._fulfill;
reject = ret._reject;
for (var i = 0, len = promises.length; i < len; ++i) {
    val = promises[i];
    if (val === undefined && !(i in promises)) {
        continue;
    }
    Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
}
return ret;});
    util = (_dereq_, $__.fs.J$__v757635546_3_515)('./util', 0, true, $__.uid);
    raceLater = ($__.fs.J$__v757635546_774_518 = function J$__v757635546_774(promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return promise.then(function (array) {
    return race(array, promise);
});});
    Promise.race = ($__.fs.J$__v757635546_777_519 = function J$__v757635546_777(promises) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return race(promises, undefined);});
    TAJS_restrictToType(Promise.prototype, 'object').race = ($__.fs.J$__v757635546_779_520 = function J$__v757635546_779() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return race(this, undefined);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
raceLater = function (promise) {
    return promise.then(function (array) {
        return race(array, promise);
    });
};
Promise.race = function (promises) {
    return race(promises, undefined);
};
Promise.prototype.race = function () {
    return race(this, undefined);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection) {
    var util = _dereq_('./util');
    var raceLater = function (promise) {
        return promise.then(function (array) {
            return race(array, promise);
        });
    };
    function race(promises, parent) {
        var maybePromise = tryConvertToPromise(promises);
        if (maybePromise instanceof Promise) {
            return raceLater(maybePromise);
        } else {
            promises = util.asArray(promises);
            if (promises === null)
                return apiRejection('expecting an array or an iterable object but got ' + util.classString(promises));
        }
        var ret = new Promise(INTERNAL);
        if (parent !== undefined) {
            ret._propagateFrom(parent, 3);
        }
        var fulfill = ret._fulfill;
        var reject = ret._reject;
        for (var i = 0, len = promises.length; i < len; ++i) {
            var val = promises[i];
            if (val === undefined && !(i in promises)) {
                continue;
            }
            Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
        }
        return ret;
    }
    Promise.race = function (promises) {
        return race(promises, undefined);
    };
    Promise.prototype.race = function () {
        return race(this, undefined);
    };
};}, $__.fs.J$__v757635546_783_32),
            $__.os.oid26 = {
                './util': 36
            }
        ],
        28: [
            ($__.fs.J$__v757635546_812_33 = function J$__v757635546_812(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid132).exports = ($__.fs.J$__v757635546_810_522 = function J$__v757635546_810(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
var vvv_return, vvv_switch, vvv_tmp0, getDomain, util, tryCatch, ReductionPromiseArray, completed, reduce, gotAccum, gotValue;
ReductionPromiseArray = function ReductionPromiseArray(promises, fn, initialValue, _each) {
    this.constructor$(promises);
    var domain = getDomain();
    this._fn = domain === null ? fn : util.domainBind(domain, fn);
    if (initialValue !== undefined) {
        initialValue = Promise.resolve(initialValue);
        initialValue._attachCancellationCallback(this);
    }
    this._initialValue = initialValue;
    this._currentCancellable = null;
    if (_each === INTERNAL) {
        this._eachValues = Array(this._length);
    } else if (_each === 0) {
        this._eachValues = null;
    } else {
        this._eachValues = undefined;
    }
    this._promise._captureStackTrace();
    this._init$(undefined, -5);
};
completed = function completed(valueOrReason, array) {
    if (this.isFulfilled()) {
        array._resolve(valueOrReason);
    } else {
        array._reject(valueOrReason);
    }
};
reduce = function reduce(promises, fn, initialValue, _each) {
    if (typeof fn !== 'function') {
        return apiRejection('expecting a function but got ' + util.classString(fn));
    }
    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);
    return array.promise();
};
gotAccum = function gotAccum(accum) {
    this.accum = accum;
    this.array._gotAccum(accum);
    var value = tryConvertToPromise(this.value, this.array._promise);
    if (value instanceof Promise) {
        this.array._currentCancellable = value;
        return value._then(gotValue, undefined, undefined, this, undefined);
    } else {
        return gotValue.call(this, value);
    }
};
gotValue = function gotValue(value) {
    var array = this.array;
    var promise = array._promise;
    var fn = tryCatch(array._fn);
    promise._pushContext();
    var ret;
    if (array._eachValues !== undefined) {
        ret = fn.call(promise._boundValue(), value, this.index, this.length);
    } else {
        ret = fn.call(promise._boundValue(), this.accum, value, this.index, this.length);
    }
    if (ret instanceof Promise) {
        array._currentCancellable = ret;
    }
    var promiseCreated = promise._popContext();
    debug.checkForgottenReturns(ret, promiseCreated, array._eachValues !== undefined ? 'Promise.each' : 'Promise.reduce', promise);
    return ret;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], PromiseArray = arguments[1], apiRejection = arguments[2], tryConvertToPromise = arguments[3], INTERNAL = arguments[4], debug = arguments[5];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    ReductionPromiseArray = ($__.fs.ReductionPromiseArray_523 = function ReductionPromiseArray(promises, fn, initialValue, _each) {
var vvv_return, vvv_switch, domain;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1], initialValue = arguments[2], _each = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor$(promises);
domain = getDomain();
this._fn = domain === null ? fn : util.domainBind(domain, fn);
if (initialValue !== undefined) {
    initialValue = Promise.resolve(initialValue);
    initialValue._attachCancellationCallback(this);
}
this._initialValue = initialValue;
this._currentCancellable = null;
if (_each === INTERNAL) {
    this._eachValues = Array(this._length);
} else if (_each === 0) {
    this._eachValues = null;
} else {
    this._eachValues = undefined;
}
this._promise._captureStackTrace();
this._init$(undefined, -5);});
    completed = ($__.fs.completed_524 = function completed(valueOrReason, array) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
valueOrReason = arguments[0], array = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.isFulfilled()) {
    array._resolve(valueOrReason);
} else {
    array._reject(valueOrReason);
}});
    reduce = ($__.fs.reduce_525 = function reduce(promises, fn, initialValue, _each) {
var vvv_return, vvv_switch, array;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1], initialValue = arguments[2], _each = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn !== 'function') {
    return apiRejection('expecting a function but got ' + util.classString(fn));
}
array = new ReductionPromiseArray(promises, fn, initialValue, _each);
return array.promise();});
    gotAccum = ($__.fs.gotAccum_526 = function gotAccum(accum) {
var vvv_return, vvv_switch, value;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
accum = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.accum = accum;
this.array._gotAccum(accum);
value = tryConvertToPromise(this.value, this.array._promise);
if (value instanceof Promise) {
    this.array._currentCancellable = value;
    return value._then(gotValue, undefined, undefined, this, undefined);
} else {
    return gotValue.call(this, value);
}});
    gotValue = ($__.fs.gotValue_527 = function gotValue(value) {
var vvv_return, vvv_switch, array, promise, fn, ret, promiseCreated;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
array = this.array;
promise = array._promise;
fn = tryCatch(array._fn);
promise._pushContext();
if (array._eachValues !== undefined) {
    ret = fn.call(promise._boundValue(), value, this.index, this.length);
} else {
    ret = fn.call(promise._boundValue(), this.accum, value, this.index, this.length);
}
if (ret instanceof Promise) {
    array._currentCancellable = ret;
}
promiseCreated = promise._popContext();
debug.checkForgottenReturns(ret, promiseCreated, array._eachValues !== undefined ? 'Promise.each' : 'Promise.reduce', promise);
return ret;});
    getDomain = TAJS_restrictToType(Promise._getDomain, 'function');
    util = (_dereq_, $__.fs.J$__v757635546_3_521)('./util', 0, true, $__.uid);
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    vvv_tmp0 = util, 'inherits', $__.fs.J$__v757635546_1017_83.call(vvv_tmp0, (ReductionPromiseArray, $__.fs.ReductionPromiseArray_523), (PromiseArray, $__.fs.PromiseArray_151), 11, true, $__.uid);
    TAJS_restrictToType(ReductionPromiseArray.prototype, 'object')._gotAccum = ($__.fs.J$__v757635546_786_529 = function J$__v757635546_786(accum) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
accum = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._eachValues !== undefined && this._eachValues !== null && accum !== INTERNAL) {
    this._eachValues.push(accum);
}});
    TAJS_restrictToType(ReductionPromiseArray.prototype, 'object')._eachComplete = ($__.fs.J$__v757635546_788_530 = function J$__v757635546_788(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._eachValues !== null) {
    this._eachValues.push(value);
}
return this._eachValues;});
    TAJS_restrictToType(ReductionPromiseArray.prototype, 'object')._init = ($__.fs.J$__v757635546_790_531 = function J$__v757635546_790() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    TAJS_restrictToType(ReductionPromiseArray.prototype, 'object')._resolveEmptyArray = ($__.fs.J$__v757635546_792_532 = function J$__v757635546_792() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._resolve(this._eachValues !== undefined ? this._eachValues : this._initialValue);});
    TAJS_restrictToType(ReductionPromiseArray.prototype, 'object').shouldCopyValues = ($__.fs.J$__v757635546_794_533 = function J$__v757635546_794() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return false;});
    TAJS_restrictToType(ReductionPromiseArray.prototype, 'object')._resolve = ($__.fs.J$__v757635546_796_534 = function J$__v757635546_796(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._promise._resolveCallback(value);
this._values = null;});
    TAJS_restrictToType(ReductionPromiseArray.prototype, 'object')._resultCancelled = ($__.fs.J$__v757635546_798_535 = function J$__v757635546_798(sender) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
sender = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (sender === this._initialValue)
    return this._cancel();
if (this._isResolved())
    return;
this._resultCancelled$();
if (this._currentCancellable instanceof Promise) {
    this._currentCancellable.cancel();
}
if (this._initialValue instanceof Promise) {
    this._initialValue.cancel();
}});
    TAJS_restrictToType(ReductionPromiseArray.prototype, 'object')._iterate = ($__.fs.J$__v757635546_800_536 = function J$__v757635546_800(values) {
var vvv_return, vvv_switch, value, i, length, ctx;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
values = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._values = values;
length = values.length;
if (this._initialValue !== undefined) {
    value = this._initialValue;
    i = 0;
} else {
    value = Promise.resolve(values[0]);
    i = 1;
}
this._currentCancellable = value;
if (!value.isRejected()) {
    for (; i < length; ++i) {
        ctx = {
            accum: null,
            value: values[i],
            index: i,
            length: length,
            array: this
        };
        value = value._then(gotAccum, undefined, undefined, ctx, undefined);
    }
}
if (this._eachValues !== undefined) {
    value = value._then(this._eachComplete, undefined, undefined, this, undefined);
}
value._then(completed, completed, undefined, value, this);});
    TAJS_restrictToType(Promise.prototype, 'object').reduce = ($__.fs.J$__v757635546_802_537 = function J$__v757635546_802(fn, initialValue) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], initialValue = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return reduce(this, fn, initialValue, null);});
    Promise.reduce = ($__.fs.J$__v757635546_804_538 = function J$__v757635546_804(promises, fn, initialValue, _each) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], fn = arguments[1], initialValue = arguments[2], _each = arguments[3];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return reduce(promises, fn, initialValue, _each);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
getDomain = Promise._getDomain;
util = _dereq_('./util');
tryCatch = util.tryCatch;
util.inherits(ReductionPromiseArray, PromiseArray);
ReductionPromiseArray.prototype._gotAccum = function (accum) {
    if (this._eachValues !== undefined && this._eachValues !== null && accum !== INTERNAL) {
        this._eachValues.push(accum);
    }
};
ReductionPromiseArray.prototype._eachComplete = function (value) {
    if (this._eachValues !== null) {
        this._eachValues.push(value);
    }
    return this._eachValues;
};
ReductionPromiseArray.prototype._init = function () {
};
ReductionPromiseArray.prototype._resolveEmptyArray = function () {
    this._resolve(this._eachValues !== undefined ? this._eachValues : this._initialValue);
};
ReductionPromiseArray.prototype.shouldCopyValues = function () {
    return false;
};
ReductionPromiseArray.prototype._resolve = function (value) {
    this._promise._resolveCallback(value);
    this._values = null;
};
ReductionPromiseArray.prototype._resultCancelled = function (sender) {
    if (sender === this._initialValue)
        return this._cancel();
    if (this._isResolved())
        return;
    this._resultCancelled$();
    if (this._currentCancellable instanceof Promise) {
        this._currentCancellable.cancel();
    }
    if (this._initialValue instanceof Promise) {
        this._initialValue.cancel();
    }
};
ReductionPromiseArray.prototype._iterate = function (values) {
    this._values = values;
    var value;
    var i;
    var length = values.length;
    if (this._initialValue !== undefined) {
        value = this._initialValue;
        i = 0;
    } else {
        value = Promise.resolve(values[0]);
        i = 1;
    }
    this._currentCancellable = value;
    if (!value.isRejected()) {
        for (; i < length; ++i) {
            var ctx = {
                accum: null,
                value: values[i],
                index: i,
                length: length,
                array: this
            };
            value = value._then(gotAccum, undefined, undefined, ctx, undefined);
        }
    }
    if (this._eachValues !== undefined) {
        value = value._then(this._eachComplete, undefined, undefined, this, undefined);
    }
    value._then(completed, completed, undefined, value, this);
};
Promise.prototype.reduce = function (fn, initialValue) {
    return reduce(this, fn, initialValue, null);
};
Promise.reduce = function (promises, fn, initialValue, _each) {
    return reduce(promises, fn, initialValue, _each);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
    var getDomain = Promise._getDomain;
    var util = _dereq_('./util');
    var tryCatch = util.tryCatch;
    function ReductionPromiseArray(promises, fn, initialValue, _each) {
        this.constructor$(promises);
        var domain = getDomain();
        this._fn = domain === null ? fn : util.domainBind(domain, fn);
        if (initialValue !== undefined) {
            initialValue = Promise.resolve(initialValue);
            initialValue._attachCancellationCallback(this);
        }
        this._initialValue = initialValue;
        this._currentCancellable = null;
        if (_each === INTERNAL) {
            this._eachValues = Array(this._length);
        } else if (_each === 0) {
            this._eachValues = null;
        } else {
            this._eachValues = undefined;
        }
        this._promise._captureStackTrace();
        this._init$(undefined, -5);
    }
    util.inherits(ReductionPromiseArray, PromiseArray);
    ReductionPromiseArray.prototype._gotAccum = function (accum) {
        if (this._eachValues !== undefined && this._eachValues !== null && accum !== INTERNAL) {
            this._eachValues.push(accum);
        }
    };
    ReductionPromiseArray.prototype._eachComplete = function (value) {
        if (this._eachValues !== null) {
            this._eachValues.push(value);
        }
        return this._eachValues;
    };
    ReductionPromiseArray.prototype._init = function () {
    };
    ReductionPromiseArray.prototype._resolveEmptyArray = function () {
        this._resolve(this._eachValues !== undefined ? this._eachValues : this._initialValue);
    };
    ReductionPromiseArray.prototype.shouldCopyValues = function () {
        return false;
    };
    ReductionPromiseArray.prototype._resolve = function (value) {
        this._promise._resolveCallback(value);
        this._values = null;
    };
    ReductionPromiseArray.prototype._resultCancelled = function (sender) {
        if (sender === this._initialValue)
            return this._cancel();
        if (this._isResolved())
            return;
        this._resultCancelled$();
        if (this._currentCancellable instanceof Promise) {
            this._currentCancellable.cancel();
        }
        if (this._initialValue instanceof Promise) {
            this._initialValue.cancel();
        }
    };
    ReductionPromiseArray.prototype._iterate = function (values) {
        this._values = values;
        var value;
        var i;
        var length = values.length;
        if (this._initialValue !== undefined) {
            value = this._initialValue;
            i = 0;
        } else {
            value = Promise.resolve(values[0]);
            i = 1;
        }
        this._currentCancellable = value;
        if (!value.isRejected()) {
            for (; i < length; ++i) {
                var ctx = {
                    accum: null,
                    value: values[i],
                    index: i,
                    length: length,
                    array: this
                };
                value = value._then(gotAccum, undefined, undefined, ctx, undefined);
            }
        }
        if (this._eachValues !== undefined) {
            value = value._then(this._eachComplete, undefined, undefined, this, undefined);
        }
        value._then(completed, completed, undefined, value, this);
    };
    Promise.prototype.reduce = function (fn, initialValue) {
        return reduce(this, fn, initialValue, null);
    };
    Promise.reduce = function (promises, fn, initialValue, _each) {
        return reduce(promises, fn, initialValue, _each);
    };
    function completed(valueOrReason, array) {
        if (this.isFulfilled()) {
            array._resolve(valueOrReason);
        } else {
            array._reject(valueOrReason);
        }
    }
    function reduce(promises, fn, initialValue, _each) {
        if (typeof fn !== 'function') {
            return apiRejection('expecting a function but got ' + util.classString(fn));
        }
        var array = new ReductionPromiseArray(promises, fn, initialValue, _each);
        return array.promise();
    }
    function gotAccum(accum) {
        this.accum = accum;
        this.array._gotAccum(accum);
        var value = tryConvertToPromise(this.value, this.array._promise);
        if (value instanceof Promise) {
            this.array._currentCancellable = value;
            return value._then(gotValue, undefined, undefined, this, undefined);
        } else {
            return gotValue.call(this, value);
        }
    }
    function gotValue(value) {
        var array = this.array;
        var promise = array._promise;
        var fn = tryCatch(array._fn);
        promise._pushContext();
        var ret;
        if (array._eachValues !== undefined) {
            ret = fn.call(promise._boundValue(), value, this.index, this.length);
        } else {
            ret = fn.call(promise._boundValue(), this.accum, value, this.index, this.length);
        }
        if (ret instanceof Promise) {
            array._currentCancellable = ret;
        }
        var promiseCreated = promise._popContext();
        debug.checkForgottenReturns(ret, promiseCreated, array._eachValues !== undefined ? 'Promise.each' : 'Promise.reduce', promise);
        return ret;
    }
};}, $__.fs.J$__v757635546_812_33),
            $__.os.oid27 = {
                './util': 36
            }
        ],
        29: [
            ($__.fs.J$__v757635546_835_34 = function J$__v757635546_835(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch, vvv_tmp0, util, schedule, noAsyncScheduler, NativePromise, GlobalSetImmediate, ProcessNextTick, nativePromise;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    util = (_dereq_, $__.fs.J$__v757635546_3_98)('./util', 0, true, $__.uid);
    noAsyncScheduler = ($__.fs.J$__v757635546_814_99 = function J$__v757635546_814() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
throw new Error('No async scheduler available\n\n    See http://goo.gl/MqrFmX\n');});
    NativePromise = (vvv_tmp0 = util, 'getNativePromise', $__.fs.getNativePromise_78.call(vvv_tmp0, 0, true, $__.uid));
    (util, $__.os.oid50).isNode, false;
    typeof NativePromise === 'function', typeof TAJS_restrictToType(NativePromise.resolve, 'function') === 'function';
    nativePromise = NativePromise['resolve']();
    schedule = ($__.fs.J$__v757635546_820_101 = function J$__v757635546_820(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
nativePromise.then(fn);});
    (module, $__.os.oid55).exports = schedule;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
noAsyncScheduler = function () {
    throw new Error('No async scheduler available\n\n    See http://goo.gl/MqrFmX\n');
};
NativePromise = util.getNativePromise();
if (util.isNode && typeof MutationObserver === 'undefined') {
    GlobalSetImmediate = global.setImmediate;
    ProcessNextTick = process.nextTick;
    schedule = util.isRecentNode ? function (fn) {
        GlobalSetImmediate.call(global, fn);
    } : function (fn) {
        ProcessNextTick.call(process, fn);
    };
} else if (typeof NativePromise === 'function' && typeof NativePromise.resolve === 'function') {
    nativePromise = NativePromise.resolve();
    schedule = function (fn) {
        nativePromise.then(fn);
    };
} else if (typeof MutationObserver !== 'undefined' && !(typeof window !== 'undefined' && window.navigator && (window.navigator.standalone || window.cordova))) {
    schedule = function () {
        var div = document.createElement('div');
        var opts = {
            attributes: true
        };
        var toggleScheduled = false;
        var div2 = document.createElement('div');
        var o2 = new MutationObserver(function () {
            div.classList.toggle('foo');
            toggleScheduled = false;
        });
        o2.observe(div2, opts);
        var scheduleToggle = function () {
            if (toggleScheduled)
                return;
            toggleScheduled = true;
            div2.classList.toggle('foo');
        };
        return function schedule(fn) {
            var o = new MutationObserver(function () {
                o.disconnect();
                fn();
            });
            o.observe(div, opts);
            scheduleToggle();
        };
    }();
} else if (typeof setImmediate !== 'undefined') {
    schedule = function (fn) {
        setImmediate(fn);
    };
} else if (typeof setTimeout !== 'undefined') {
    schedule = function (fn) {
        setTimeout(fn, 0);
    };
} else {
    schedule = noAsyncScheduler;
}
module.exports = schedule;}, $__.fs.J$__v757635546_835_34),
            $__.os.oid28 = {
                './util': 36
            }
        ],
        30: [
            ($__.fs.J$__v757635546_850_35 = function J$__v757635546_850(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid135).exports = ($__.fs.J$__v757635546_848_540 = function J$__v757635546_848(Promise, PromiseArray, debug) {
var vvv_return, vvv_switch, vvv_tmp0, PromiseInspection, util, SettledPromiseArray;
SettledPromiseArray = function SettledPromiseArray(values) {
    this.constructor$(values);
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], PromiseArray = arguments[1], debug = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    SettledPromiseArray = ($__.fs.SettledPromiseArray_541 = function SettledPromiseArray(values) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
values = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor$(values);});
    PromiseInspection = TAJS_restrictToType(Promise.PromiseInspection, 'function');
    util = (_dereq_, $__.fs.J$__v757635546_3_539)('./util', 0, true, $__.uid);
    vvv_tmp0 = util, 'inherits', $__.fs.J$__v757635546_1017_83.call(vvv_tmp0, (SettledPromiseArray, $__.fs.SettledPromiseArray_541), (PromiseArray, $__.fs.PromiseArray_151), 12, true, $__.uid);
    TAJS_restrictToType(SettledPromiseArray.prototype, 'object')._promiseResolved = ($__.fs.J$__v757635546_838_543 = function J$__v757635546_838(index, inspection) {
var vvv_return, vvv_switch, totalResolved;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
index = arguments[0], inspection = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._values[index] = inspection;
totalResolved = ++this._totalResolved;
if (totalResolved >= this._length) {
    this._resolve(this._values);
    return true;
}
return false;});
    TAJS_restrictToType(SettledPromiseArray.prototype, 'object')._promiseFulfilled = ($__.fs.J$__v757635546_840_544 = function J$__v757635546_840(value, index) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0], index = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = new PromiseInspection();
ret._bitField = 33554432;
ret._settledValueField = value;
return this._promiseResolved(index, ret);});
    TAJS_restrictToType(SettledPromiseArray.prototype, 'object')._promiseRejected = ($__.fs.J$__v757635546_842_545 = function J$__v757635546_842(reason, index) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0], index = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = new PromiseInspection();
ret._bitField = 16777216;
ret._settledValueField = reason;
return this._promiseResolved(index, ret);});
    Promise.settle = ($__.fs.J$__v757635546_844_546 = function J$__v757635546_844(promises) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
debug.deprecated('.settle()', '.reflect()');
return new SettledPromiseArray(promises).promise();});
    TAJS_restrictToType(Promise.prototype, 'object').settle = ($__.fs.J$__v757635546_846_547 = function J$__v757635546_846() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return Promise.settle(this);});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
PromiseInspection = Promise.PromiseInspection;
util = _dereq_('./util');
util.inherits(SettledPromiseArray, PromiseArray);
SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {
    this._values[index] = inspection;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
        return true;
    }
    return false;
};
SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {
    var ret = new PromiseInspection();
    ret._bitField = 33554432;
    ret._settledValueField = value;
    return this._promiseResolved(index, ret);
};
SettledPromiseArray.prototype._promiseRejected = function (reason, index) {
    var ret = new PromiseInspection();
    ret._bitField = 16777216;
    ret._settledValueField = reason;
    return this._promiseResolved(index, ret);
};
Promise.settle = function (promises) {
    debug.deprecated('.settle()', '.reflect()');
    return new SettledPromiseArray(promises).promise();
};
Promise.prototype.settle = function () {
    return Promise.settle(this);
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, PromiseArray, debug) {
    var PromiseInspection = Promise.PromiseInspection;
    var util = _dereq_('./util');
    function SettledPromiseArray(values) {
        this.constructor$(values);
    }
    util.inherits(SettledPromiseArray, PromiseArray);
    SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {
        this._values[index] = inspection;
        var totalResolved = ++this._totalResolved;
        if (totalResolved >= this._length) {
            this._resolve(this._values);
            return true;
        }
        return false;
    };
    SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {
        var ret = new PromiseInspection();
        ret._bitField = 33554432;
        ret._settledValueField = value;
        return this._promiseResolved(index, ret);
    };
    SettledPromiseArray.prototype._promiseRejected = function (reason, index) {
        var ret = new PromiseInspection();
        ret._bitField = 16777216;
        ret._settledValueField = reason;
        return this._promiseResolved(index, ret);
    };
    Promise.settle = function (promises) {
        debug.deprecated('.settle()', '.reflect()');
        return new SettledPromiseArray(promises).promise();
    };
    Promise.prototype.settle = function () {
        return Promise.settle(this);
    };
};}, $__.fs.J$__v757635546_850_35),
            $__.os.oid29 = {
                './util': 36
            }
        ],
        31: [
            ($__.fs.J$__v757635546_892_36 = function J$__v757635546_892(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid138).exports = ($__.fs.J$__v757635546_890_549 = function J$__v757635546_890(Promise, PromiseArray, apiRejection) {
var vvv_return, vvv_switch, vvv_tmp0, util, RangeError, AggregateError, isArray, CANCELLATION, SomePromiseArray, some;
SomePromiseArray = function SomePromiseArray(values) {
    this.constructor$(values);
    this._howMany = 0;
    this._unwrap = false;
    this._initialized = false;
};
some = function some(promises, howMany) {
    if ((howMany | 0) !== howMany || howMany < 0) {
        return apiRejection('expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n');
    }
    var ret = new SomePromiseArray(promises);
    var promise = ret.promise();
    ret.setHowMany(howMany);
    ret.init();
    return promise;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], PromiseArray = arguments[1], apiRejection = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    SomePromiseArray = ($__.fs.SomePromiseArray_550 = function SomePromiseArray(values) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
values = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor$(values);
this._howMany = 0;
this._unwrap = false;
this._initialized = false;});
    some = ($__.fs.some_551 = function some(promises, howMany) {
var vvv_return, vvv_switch, ret, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], howMany = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if ((howMany | 0) !== howMany || howMany < 0) {
    return apiRejection('expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n');
}
ret = new SomePromiseArray(promises);
promise = ret.promise();
ret.setHowMany(howMany);
ret.init();
return promise;});
    util = (_dereq_, $__.fs.J$__v757635546_3_548)('./util', 0, true, $__.uid);
    RangeError = TAJS_restrictToType(((_dereq_, $__.fs.J$__v757635546_3_548)('./errors', 1, true, $__.uid), $__.os.oid70).RangeError, 'function');
    AggregateError = TAJS_restrictToType(((_dereq_, $__.fs.J$__v757635546_3_548)('./errors', 2, true, $__.uid), $__.os.oid70).AggregateError, 'function');
    isArray = TAJS_restrictToType((util, $__.os.oid50).isArray, 'function');
    CANCELLATION = $__.os.oid139 = {};
    vvv_tmp0 = util, 'inherits', $__.fs.J$__v757635546_1017_83.call(vvv_tmp0, (SomePromiseArray, $__.fs.SomePromiseArray_550), (PromiseArray, $__.fs.PromiseArray_151), 13, true, $__.uid);
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._init = ($__.fs.J$__v757635546_853_553 = function J$__v757635546_853() {
var vvv_return, vvv_switch, isArrayResolved;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!this._initialized) {
    return;
}
if (this._howMany === 0) {
    this._resolve([]);
    return;
}
this._init$(undefined, -5);
isArrayResolved = isArray(this._values);
if (!this._isResolved() && isArrayResolved && this._howMany > this._canPossiblyFulfill()) {
    this._reject(this._getRangeError(this.length()));
}});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object').init = ($__.fs.J$__v757635546_855_554 = function J$__v757635546_855() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._initialized = true;
this._init();});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object').setUnwrap = ($__.fs.J$__v757635546_857_555 = function J$__v757635546_857() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._unwrap = true;});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object').howMany = ($__.fs.J$__v757635546_859_556 = function J$__v757635546_859() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._howMany;});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object').setHowMany = ($__.fs.J$__v757635546_861_557 = function J$__v757635546_861(count) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
count = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._howMany = count;});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._promiseFulfilled = ($__.fs.J$__v757635546_863_558 = function J$__v757635546_863(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._addFulfilled(value);
if (this._fulfilled() === this.howMany()) {
    this._values.length = this.howMany();
    if (this.howMany() === 1 && this._unwrap) {
        this._resolve(this._values[0]);
    } else {
        this._resolve(this._values);
    }
    return true;
}
return false;});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._promiseRejected = ($__.fs.J$__v757635546_865_559 = function J$__v757635546_865(reason) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._addRejected(reason);
return this._checkOutcome();});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._promiseCancelled = ($__.fs.J$__v757635546_867_560 = function J$__v757635546_867() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this._values instanceof Promise || this._values == null) {
    return this._cancel();
}
this._addRejected(CANCELLATION);
return this._checkOutcome();});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._checkOutcome = ($__.fs.J$__v757635546_869_561 = function J$__v757635546_869() {
var vvv_return, vvv_switch, e;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.howMany() > this._canPossiblyFulfill()) {
    e = new AggregateError();
    for (var i = this.length(); i < this._values.length; ++i) {
        if (this._values[i] !== CANCELLATION) {
            e.push(this._values[i]);
        }
    }
    if (e.length > 0) {
        this._reject(e);
    } else {
        this._cancel();
    }
    return true;
}
return false;});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._fulfilled = ($__.fs.J$__v757635546_871_562 = function J$__v757635546_871() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._totalResolved;});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._rejected = ($__.fs.J$__v757635546_873_563 = function J$__v757635546_873() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._values.length - this.length();});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._addRejected = ($__.fs.J$__v757635546_875_564 = function J$__v757635546_875(reason) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._values.push(reason);});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._addFulfilled = ($__.fs.J$__v757635546_877_565 = function J$__v757635546_877(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._values[this._totalResolved++] = value;});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._canPossiblyFulfill = ($__.fs.J$__v757635546_879_566 = function J$__v757635546_879() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this.length() - this._rejected();});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._getRangeError = ($__.fs.J$__v757635546_881_567 = function J$__v757635546_881(count) {
var vvv_return, vvv_switch, message;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
count = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
message = 'Input array must contain at least ' + this._howMany + ' items but contains only ' + count + ' items';
return new RangeError(message);});
    TAJS_restrictToType(SomePromiseArray.prototype, 'object')._resolveEmptyArray = ($__.fs.J$__v757635546_883_568 = function J$__v757635546_883() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._reject(this._getRangeError(0));});
    Promise.some = ($__.fs.J$__v757635546_886_569 = function J$__v757635546_886(promises, howMany) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promises = arguments[0], howMany = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return some(promises, howMany);});
    TAJS_restrictToType(Promise.prototype, 'object').some = ($__.fs.J$__v757635546_888_570 = function J$__v757635546_888(howMany) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
howMany = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return some(this, howMany);});
    Promise._SomePromiseArray = SomePromiseArray;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
RangeError = _dereq_('./errors').RangeError;
AggregateError = _dereq_('./errors').AggregateError;
isArray = util.isArray;
CANCELLATION = {};
util.inherits(SomePromiseArray, PromiseArray);
SomePromiseArray.prototype._init = function () {
    if (!this._initialized) {
        return;
    }
    if (this._howMany === 0) {
        this._resolve([]);
        return;
    }
    this._init$(undefined, -5);
    var isArrayResolved = isArray(this._values);
    if (!this._isResolved() && isArrayResolved && this._howMany > this._canPossiblyFulfill()) {
        this._reject(this._getRangeError(this.length()));
    }
};
SomePromiseArray.prototype.init = function () {
    this._initialized = true;
    this._init();
};
SomePromiseArray.prototype.setUnwrap = function () {
    this._unwrap = true;
};
SomePromiseArray.prototype.howMany = function () {
    return this._howMany;
};
SomePromiseArray.prototype.setHowMany = function (count) {
    this._howMany = count;
};
SomePromiseArray.prototype._promiseFulfilled = function (value) {
    this._addFulfilled(value);
    if (this._fulfilled() === this.howMany()) {
        this._values.length = this.howMany();
        if (this.howMany() === 1 && this._unwrap) {
            this._resolve(this._values[0]);
        } else {
            this._resolve(this._values);
        }
        return true;
    }
    return false;
};
SomePromiseArray.prototype._promiseRejected = function (reason) {
    this._addRejected(reason);
    return this._checkOutcome();
};
SomePromiseArray.prototype._promiseCancelled = function () {
    if (this._values instanceof Promise || this._values == null) {
        return this._cancel();
    }
    this._addRejected(CANCELLATION);
    return this._checkOutcome();
};
SomePromiseArray.prototype._checkOutcome = function () {
    if (this.howMany() > this._canPossiblyFulfill()) {
        var e = new AggregateError();
        for (var i = this.length(); i < this._values.length; ++i) {
            if (this._values[i] !== CANCELLATION) {
                e.push(this._values[i]);
            }
        }
        if (e.length > 0) {
            this._reject(e);
        } else {
            this._cancel();
        }
        return true;
    }
    return false;
};
SomePromiseArray.prototype._fulfilled = function () {
    return this._totalResolved;
};
SomePromiseArray.prototype._rejected = function () {
    return this._values.length - this.length();
};
SomePromiseArray.prototype._addRejected = function (reason) {
    this._values.push(reason);
};
SomePromiseArray.prototype._addFulfilled = function (value) {
    this._values[this._totalResolved++] = value;
};
SomePromiseArray.prototype._canPossiblyFulfill = function () {
    return this.length() - this._rejected();
};
SomePromiseArray.prototype._getRangeError = function (count) {
    var message = 'Input array must contain at least ' + this._howMany + ' items but contains only ' + count + ' items';
    return new RangeError(message);
};
SomePromiseArray.prototype._resolveEmptyArray = function () {
    this._reject(this._getRangeError(0));
};
Promise.some = function (promises, howMany) {
    return some(promises, howMany);
};
Promise.prototype.some = function (howMany) {
    return some(this, howMany);
};
Promise._SomePromiseArray = SomePromiseArray;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, PromiseArray, apiRejection) {
    var util = _dereq_('./util');
    var RangeError = _dereq_('./errors').RangeError;
    var AggregateError = _dereq_('./errors').AggregateError;
    var isArray = util.isArray;
    var CANCELLATION = {};
    function SomePromiseArray(values) {
        this.constructor$(values);
        this._howMany = 0;
        this._unwrap = false;
        this._initialized = false;
    }
    util.inherits(SomePromiseArray, PromiseArray);
    SomePromiseArray.prototype._init = function () {
        if (!this._initialized) {
            return;
        }
        if (this._howMany === 0) {
            this._resolve([]);
            return;
        }
        this._init$(undefined, -5);
        var isArrayResolved = isArray(this._values);
        if (!this._isResolved() && isArrayResolved && this._howMany > this._canPossiblyFulfill()) {
            this._reject(this._getRangeError(this.length()));
        }
    };
    SomePromiseArray.prototype.init = function () {
        this._initialized = true;
        this._init();
    };
    SomePromiseArray.prototype.setUnwrap = function () {
        this._unwrap = true;
    };
    SomePromiseArray.prototype.howMany = function () {
        return this._howMany;
    };
    SomePromiseArray.prototype.setHowMany = function (count) {
        this._howMany = count;
    };
    SomePromiseArray.prototype._promiseFulfilled = function (value) {
        this._addFulfilled(value);
        if (this._fulfilled() === this.howMany()) {
            this._values.length = this.howMany();
            if (this.howMany() === 1 && this._unwrap) {
                this._resolve(this._values[0]);
            } else {
                this._resolve(this._values);
            }
            return true;
        }
        return false;
    };
    SomePromiseArray.prototype._promiseRejected = function (reason) {
        this._addRejected(reason);
        return this._checkOutcome();
    };
    SomePromiseArray.prototype._promiseCancelled = function () {
        if (this._values instanceof Promise || this._values == null) {
            return this._cancel();
        }
        this._addRejected(CANCELLATION);
        return this._checkOutcome();
    };
    SomePromiseArray.prototype._checkOutcome = function () {
        if (this.howMany() > this._canPossiblyFulfill()) {
            var e = new AggregateError();
            for (var i = this.length(); i < this._values.length; ++i) {
                if (this._values[i] !== CANCELLATION) {
                    e.push(this._values[i]);
                }
            }
            if (e.length > 0) {
                this._reject(e);
            } else {
                this._cancel();
            }
            return true;
        }
        return false;
    };
    SomePromiseArray.prototype._fulfilled = function () {
        return this._totalResolved;
    };
    SomePromiseArray.prototype._rejected = function () {
        return this._values.length - this.length();
    };
    SomePromiseArray.prototype._addRejected = function (reason) {
        this._values.push(reason);
    };
    SomePromiseArray.prototype._addFulfilled = function (value) {
        this._values[this._totalResolved++] = value;
    };
    SomePromiseArray.prototype._canPossiblyFulfill = function () {
        return this.length() - this._rejected();
    };
    SomePromiseArray.prototype._getRangeError = function (count) {
        var message = 'Input array must contain at least ' + this._howMany + ' items but contains only ' + count + ' items';
        return new RangeError(message);
    };
    SomePromiseArray.prototype._resolveEmptyArray = function () {
        this._reject(this._getRangeError(0));
    };
    function some(promises, howMany) {
        if ((howMany | 0) !== howMany || howMany < 0) {
            return apiRejection('expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n');
        }
        var ret = new SomePromiseArray(promises);
        var promise = ret.promise();
        ret.setHowMany(howMany);
        ret.init();
        return promise;
    }
    Promise.some = function (promises, howMany) {
        return some(promises, howMany);
    };
    Promise.prototype.some = function (howMany) {
        return some(this, howMany);
    };
    Promise._SomePromiseArray = SomePromiseArray;
};}, $__.fs.J$__v757635546_892_36),
            $__.os.oid30 = {
                './errors': 12,
                './util': 36
            }
        ],
        32: [
            ($__.fs.J$__v757635546_935_37 = function J$__v757635546_935(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid103).exports = ($__.fs.J$__v757635546_933_384 = function J$__v757635546_933(Promise) {
var vvv_return, vvv_switch, PromiseInspection, value, reason, isFulfilled, isRejected, isPending, isResolved;
PromiseInspection = function PromiseInspection(promise) {
    if (promise !== undefined) {
        promise = promise._target();
        this._bitField = promise._bitField;
        this._settledValueField = promise._isFateSealed() ? promise._settledValue() : undefined;
    } else {
        this._bitField = 0;
        this._settledValueField = undefined;
    }
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    PromiseInspection = ($__.fs.PromiseInspection_385 = function PromiseInspection(promise) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (promise !== undefined) {
    promise = promise._target();
    this._bitField = promise._bitField;
    this._settledValueField = promise._isFateSealed() ? promise._settledValue() : undefined;
} else {
    this._bitField = 0;
    this._settledValueField = undefined;
}});
    TAJS_restrictToType(PromiseInspection.prototype, 'object')._settledValue = ($__.fs.J$__v757635546_895_386 = function J$__v757635546_895() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._settledValueField;});
    value = TAJS_restrictToType(PromiseInspection.prototype, 'object').value = ($__.fs.J$__v757635546_897_387 = function J$__v757635546_897() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!this.isFulfilled()) {
    throw new TypeError('cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n');
}
return this._settledValue();});
    reason = TAJS_restrictToType(PromiseInspection.prototype, 'object').error = TAJS_restrictToType(PromiseInspection.prototype, 'object').reason = ($__.fs.J$__v757635546_899_388 = function J$__v757635546_899() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!this.isRejected()) {
    throw new TypeError('cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n');
}
return this._settledValue();});
    isFulfilled = TAJS_restrictToType(PromiseInspection.prototype, 'object').isFulfilled = ($__.fs.J$__v757635546_901_389 = function J$__v757635546_901() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 33554432) !== 0;});
    isRejected = TAJS_restrictToType(PromiseInspection.prototype, 'object').isRejected = ($__.fs.J$__v757635546_903_390 = function J$__v757635546_903() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 16777216) !== 0;});
    isPending = TAJS_restrictToType(PromiseInspection.prototype, 'object').isPending = ($__.fs.J$__v757635546_905_391 = function J$__v757635546_905() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 50397184) === 0;});
    isResolved = TAJS_restrictToType(PromiseInspection.prototype, 'object').isResolved = ($__.fs.J$__v757635546_907_392 = function J$__v757635546_907() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 50331648) !== 0;});
    TAJS_restrictToType(PromiseInspection.prototype, 'object').isCancelled = ($__.fs.J$__v757635546_909_393 = function J$__v757635546_909() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 8454144) !== 0;});
    TAJS_restrictToType(Promise.prototype, 'object').__isCancelled = ($__.fs.J$__v757635546_911_394 = function J$__v757635546_911() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 65536) === 65536;});
    TAJS_restrictToType(Promise.prototype, 'object')._isCancelled = ($__.fs.J$__v757635546_913_395 = function J$__v757635546_913() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._target().__isCancelled();});
    TAJS_restrictToType(Promise.prototype, 'object').isCancelled = ($__.fs.J$__v757635546_915_396 = function J$__v757635546_915() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._target()._bitField & 8454144) !== 0;});
    TAJS_restrictToType(Promise.prototype, 'object').isPending = ($__.fs.J$__v757635546_917_397 = function J$__v757635546_917() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return isPending.call(this._target());});
    TAJS_restrictToType(Promise.prototype, 'object').isRejected = ($__.fs.J$__v757635546_919_398 = function J$__v757635546_919() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return isRejected.call(this._target());});
    TAJS_restrictToType(Promise.prototype, 'object').isFulfilled = ($__.fs.J$__v757635546_921_399 = function J$__v757635546_921() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return isFulfilled.call(this._target());});
    TAJS_restrictToType(Promise.prototype, 'object').isResolved = ($__.fs.J$__v757635546_923_400 = function J$__v757635546_923() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return isResolved.call(this._target());});
    TAJS_restrictToType(Promise.prototype, 'object').value = ($__.fs.J$__v757635546_925_401 = function J$__v757635546_925() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return value.call(this._target());});
    TAJS_restrictToType(Promise.prototype, 'object').reason = ($__.fs.J$__v757635546_927_402 = function J$__v757635546_927() {
var vvv_return, vvv_switch, target;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
target = this._target();
target._unsetRejectionIsUnhandled();
return reason.call(target);});
    TAJS_restrictToType(Promise.prototype, 'object')._value = ($__.fs.J$__v757635546_929_403 = function J$__v757635546_929() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._settledValue();});
    TAJS_restrictToType(Promise.prototype, 'object')._reason = ($__.fs.J$__v757635546_931_404 = function J$__v757635546_931() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._unsetRejectionIsUnhandled();
return this._settledValue();});
    Promise.PromiseInspection = PromiseInspection;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
PromiseInspection.prototype._settledValue = function () {
    return this._settledValueField;
};
value = PromiseInspection.prototype.value = function () {
    if (!this.isFulfilled()) {
        throw new TypeError('cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n');
    }
    return this._settledValue();
};
reason = PromiseInspection.prototype.error = PromiseInspection.prototype.reason = function () {
    if (!this.isRejected()) {
        throw new TypeError('cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n');
    }
    return this._settledValue();
};
isFulfilled = PromiseInspection.prototype.isFulfilled = function () {
    return (this._bitField & 33554432) !== 0;
};
isRejected = PromiseInspection.prototype.isRejected = function () {
    return (this._bitField & 16777216) !== 0;
};
isPending = PromiseInspection.prototype.isPending = function () {
    return (this._bitField & 50397184) === 0;
};
isResolved = PromiseInspection.prototype.isResolved = function () {
    return (this._bitField & 50331648) !== 0;
};
PromiseInspection.prototype.isCancelled = function () {
    return (this._bitField & 8454144) !== 0;
};
Promise.prototype.__isCancelled = function () {
    return (this._bitField & 65536) === 65536;
};
Promise.prototype._isCancelled = function () {
    return this._target().__isCancelled();
};
Promise.prototype.isCancelled = function () {
    return (this._target()._bitField & 8454144) !== 0;
};
Promise.prototype.isPending = function () {
    return isPending.call(this._target());
};
Promise.prototype.isRejected = function () {
    return isRejected.call(this._target());
};
Promise.prototype.isFulfilled = function () {
    return isFulfilled.call(this._target());
};
Promise.prototype.isResolved = function () {
    return isResolved.call(this._target());
};
Promise.prototype.value = function () {
    return value.call(this._target());
};
Promise.prototype.reason = function () {
    var target = this._target();
    target._unsetRejectionIsUnhandled();
    return reason.call(target);
};
Promise.prototype._value = function () {
    return this._settledValue();
};
Promise.prototype._reason = function () {
    this._unsetRejectionIsUnhandled();
    return this._settledValue();
};
Promise.PromiseInspection = PromiseInspection;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise) {
    function PromiseInspection(promise) {
        if (promise !== undefined) {
            promise = promise._target();
            this._bitField = promise._bitField;
            this._settledValueField = promise._isFateSealed() ? promise._settledValue() : undefined;
        } else {
            this._bitField = 0;
            this._settledValueField = undefined;
        }
    }
    PromiseInspection.prototype._settledValue = function () {
        return this._settledValueField;
    };
    var value = PromiseInspection.prototype.value = function () {
        if (!this.isFulfilled()) {
            throw new TypeError('cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n');
        }
        return this._settledValue();
    };
    var reason = PromiseInspection.prototype.error = PromiseInspection.prototype.reason = function () {
        if (!this.isRejected()) {
            throw new TypeError('cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n');
        }
        return this._settledValue();
    };
    var isFulfilled = PromiseInspection.prototype.isFulfilled = function () {
        return (this._bitField & 33554432) !== 0;
    };
    var isRejected = PromiseInspection.prototype.isRejected = function () {
        return (this._bitField & 16777216) !== 0;
    };
    var isPending = PromiseInspection.prototype.isPending = function () {
        return (this._bitField & 50397184) === 0;
    };
    var isResolved = PromiseInspection.prototype.isResolved = function () {
        return (this._bitField & 50331648) !== 0;
    };
    PromiseInspection.prototype.isCancelled = function () {
        return (this._bitField & 8454144) !== 0;
    };
    Promise.prototype.__isCancelled = function () {
        return (this._bitField & 65536) === 65536;
    };
    Promise.prototype._isCancelled = function () {
        return this._target().__isCancelled();
    };
    Promise.prototype.isCancelled = function () {
        return (this._target()._bitField & 8454144) !== 0;
    };
    Promise.prototype.isPending = function () {
        return isPending.call(this._target());
    };
    Promise.prototype.isRejected = function () {
        return isRejected.call(this._target());
    };
    Promise.prototype.isFulfilled = function () {
        return isFulfilled.call(this._target());
    };
    Promise.prototype.isResolved = function () {
        return isResolved.call(this._target());
    };
    Promise.prototype.value = function () {
        return value.call(this._target());
    };
    Promise.prototype.reason = function () {
        var target = this._target();
        target._unsetRejectionIsUnhandled();
        return reason.call(target);
    };
    Promise.prototype._value = function () {
        return this._settledValue();
    };
    Promise.prototype._reason = function () {
        this._unsetRejectionIsUnhandled();
        return this._settledValue();
    };
    Promise.PromiseInspection = PromiseInspection;
};}, $__.fs.J$__v757635546_935_37),
            $__.os.oid31 = {}
        ],
        33: [
            ($__.fs.J$__v757635546_946_38 = function J$__v757635546_946(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid74).exports = ($__.fs.J$__v757635546_944_142 = function J$__v757635546_944(Promise, INTERNAL) {
var vvv_return, vvv_switch, util, errorObj, isObject, tryConvertToPromise, doGetThen, getThen, hasProp, isAnyBluebirdPromise, doThenable;
tryConvertToPromise = function tryConvertToPromise(obj, context) {
    if (isObject(obj)) {
        if (obj instanceof Promise)
            return obj;
        var then = getThen(obj);
        if (then === errorObj) {
            if (context)
                context._pushContext();
            var ret = Promise.reject(then.e);
            if (context)
                context._popContext();
            return ret;
        } else if (typeof then === 'function') {
            if (isAnyBluebirdPromise(obj)) {
                var ret = new Promise(INTERNAL);
                obj._then(ret._fulfill, ret._reject, undefined, ret, null);
                return ret;
            }
            return doThenable(obj, then, context);
        }
    }
    return obj;
};
doGetThen = function doGetThen(obj) {
    return obj.then;
};
getThen = function getThen(obj) {
    try {
        return doGetThen(obj);
    } catch (e) {
        errorObj.e = e;
        return errorObj;
    }
};
isAnyBluebirdPromise = function isAnyBluebirdPromise(obj) {
    try {
        return hasProp.call(obj, '_promise0');
    } catch (e) {
        return false;
    }
};
doThenable = function doThenable(x, then, context) {
    var promise = new Promise(INTERNAL);
    var ret = promise;
    if (context)
        context._pushContext();
    promise._captureStackTrace();
    if (context)
        context._popContext();
    var synchronous = true;
    var result = util.tryCatch(then).call(x, resolve, reject);
    synchronous = false;
    if (promise && result === errorObj) {
        promise._rejectCallback(result.e, true, true);
        promise = null;
    }
    function resolve(value) {
        if (!promise)
            return;
        promise._resolveCallback(value);
        promise = null;
    }
    function reject(reason) {
        if (!promise)
            return;
        promise._rejectCallback(reason, synchronous, true);
        promise = null;
    }
    return ret;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    tryConvertToPromise = ($__.fs.tryConvertToPromise_143 = function tryConvertToPromise(obj, context) {
var vvv_return, vvv_switch, then, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], context = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (isObject(obj)) {
    if (obj instanceof Promise)
        return obj;
    then = getThen(obj);
    if (then === errorObj) {
        if (context)
            context._pushContext();
        ret = Promise.reject(then.e);
        if (context)
            context._popContext();
        return ret;
    } else if (typeof then === 'function') {
        if (isAnyBluebirdPromise(obj)) {
            ret = new Promise(INTERNAL);
            obj._then(ret._fulfill, ret._reject, undefined, ret, null);
            return ret;
        }
        return doThenable(obj, then, context);
    }
}
return obj;});
    doGetThen = ($__.fs.doGetThen_144 = function doGetThen(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return obj.then;});
    getThen = ($__.fs.getThen_145 = function getThen(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    return doGetThen(obj);
} catch (e) {
    errorObj.e = e;
    return errorObj;
}});
    isAnyBluebirdPromise = ($__.fs.isAnyBluebirdPromise_146 = function isAnyBluebirdPromise(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    return hasProp.call(obj, '_promise0');
} catch (e) {
    return false;
}});
    doThenable = ($__.fs.doThenable_147 = function doThenable(x, then, context) {
var vvv_return, vvv_switch, promise, ret, synchronous, result, resolve, reject;
resolve = function resolve(value) {
    if (!promise)
        return;
    promise._resolveCallback(value);
    promise = null;
};
reject = function reject(reason) {
    if (!promise)
        return;
    promise._rejectCallback(reason, synchronous, true);
    promise = null;
};
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
x = arguments[0], then = arguments[1], context = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
promise = new Promise(INTERNAL);
ret = promise;
if (context)
    context._pushContext();
promise._captureStackTrace();
if (context)
    context._popContext();
synchronous = true;
result = util.tryCatch(then).call(x, resolve, reject);
synchronous = false;
if (promise && result === errorObj) {
    promise._rejectCallback(result.e, true, true);
    promise = null;
}
return ret;});
    util = (_dereq_, $__.fs.J$__v757635546_3_141)('./util', 0, true, $__.uid);
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    isObject = TAJS_restrictToType((util, $__.os.oid50).isObject, 'function');
    hasProp = TAJS_restrictToType(($__.os.oid75 = {}, $__.os.oid75).hasOwnProperty, 'function');
    return tryConvertToPromise;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
errorObj = util.errorObj;
isObject = util.isObject;
hasProp = {}.hasOwnProperty;
return tryConvertToPromise;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL) {
    var util = _dereq_('./util');
    var errorObj = util.errorObj;
    var isObject = util.isObject;
    function tryConvertToPromise(obj, context) {
        if (isObject(obj)) {
            if (obj instanceof Promise)
                return obj;
            var then = getThen(obj);
            if (then === errorObj) {
                if (context)
                    context._pushContext();
                var ret = Promise.reject(then.e);
                if (context)
                    context._popContext();
                return ret;
            } else if (typeof then === 'function') {
                if (isAnyBluebirdPromise(obj)) {
                    var ret = new Promise(INTERNAL);
                    obj._then(ret._fulfill, ret._reject, undefined, ret, null);
                    return ret;
                }
                return doThenable(obj, then, context);
            }
        }
        return obj;
    }
    function doGetThen(obj) {
        return obj.then;
    }
    function getThen(obj) {
        try {
            return doGetThen(obj);
        } catch (e) {
            errorObj.e = e;
            return errorObj;
        }
    }
    var hasProp = {}.hasOwnProperty;
    function isAnyBluebirdPromise(obj) {
        try {
            return hasProp.call(obj, '_promise0');
        } catch (e) {
            return false;
        }
    }
    function doThenable(x, then, context) {
        var promise = new Promise(INTERNAL);
        var ret = promise;
        if (context)
            context._pushContext();
        promise._captureStackTrace();
        if (context)
            context._popContext();
        var synchronous = true;
        var result = util.tryCatch(then).call(x, resolve, reject);
        synchronous = false;
        if (promise && result === errorObj) {
            promise._rejectCallback(result.e, true, true);
            promise = null;
        }
        function resolve(value) {
            if (!promise)
                return;
            promise._resolveCallback(value);
            promise = null;
        }
        function reject(reason) {
            if (!promise)
                return;
            promise._rejectCallback(reason, synchronous, true);
            promise = null;
        }
        return ret;
    }
    return tryConvertToPromise;
};}, $__.fs.J$__v757635546_946_38),
            $__.os.oid32 = {
                './util': 36
            }
        ],
        34: [
            ($__.fs.J$__v757635546_968_39 = function J$__v757635546_968(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid116).exports = ($__.fs.J$__v757635546_966_453 = function J$__v757635546_966(Promise, INTERNAL, debug) {
var vvv_return, vvv_switch, util, TimeoutError, HandleWrapper, afterValue, delay, afterTimeout, successClear, failureClear;
HandleWrapper = function HandleWrapper(handle) {
    this.handle = handle;
};
successClear = function successClear(value) {
    clearTimeout(this.handle);
    return value;
};
failureClear = function failureClear(reason) {
    clearTimeout(this.handle);
    throw reason;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], INTERNAL = arguments[1], debug = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    HandleWrapper = ($__.fs.HandleWrapper_454 = function HandleWrapper(handle) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
handle = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.handle = handle;});
    successClear = ($__.fs.successClear_455 = function successClear(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
clearTimeout(this.handle);
return value;});
    failureClear = ($__.fs.failureClear_456 = function failureClear(reason) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
reason = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
clearTimeout(this.handle);
throw reason;});
    util = (_dereq_, $__.fs.J$__v757635546_3_452)('./util', 0, true, $__.uid);
    TimeoutError = TAJS_restrictToType(Promise.TimeoutError, 'function');
    TAJS_restrictToType(HandleWrapper.prototype, 'object')._resultCancelled = ($__.fs.J$__v757635546_949_457 = function J$__v757635546_949() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
clearTimeout(this.handle);});
    afterValue = ($__.fs.J$__v757635546_951_458 = function J$__v757635546_951(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return delay(+this).thenReturn(value);});
    delay = Promise.delay = ($__.fs.J$__v757635546_955_459 = function J$__v757635546_955(ms, value) {
var vvv_return, vvv_switch, ret, handle;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ms = arguments[0], value = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (value !== undefined) {
    ret = Promise.resolve(value)._then(afterValue, null, null, ms, undefined);
    if (debug.cancellation() && value instanceof Promise) {
        ret._setOnCancel(value);
    }
} else {
    ret = new Promise(INTERNAL);
    handle = setTimeout(function () {
        ret._fulfill();
    }, +ms);
    if (debug.cancellation()) {
        ret._setOnCancel(new HandleWrapper(handle));
    }
    ret._captureStackTrace();
}
ret._setAsyncGuaranteed();
return ret;});
    TAJS_restrictToType(Promise.prototype, 'object').delay = ($__.fs.J$__v757635546_957_460 = function J$__v757635546_957(ms) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ms = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return delay(ms, this);});
    afterTimeout = ($__.fs.J$__v757635546_959_461 = function J$__v757635546_959(promise, message, parent) {
var vvv_return, vvv_switch, err;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
promise = arguments[0], message = arguments[1], parent = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof message !== 'string') {
    if (message instanceof Error) {
        err = message;
    } else {
        err = new TimeoutError('operation timed out');
    }
} else {
    err = new TimeoutError(message);
}
util.markAsOriginatingFromRejection(err);
promise._attachExtraTrace(err);
promise._reject(err);
if (parent != null) {
    parent.cancel();
}});
    TAJS_restrictToType(Promise.prototype, 'object').timeout = ($__.fs.J$__v757635546_964_462 = function J$__v757635546_964(ms, message) {
var vvv_return, vvv_switch, ret, parent, handleWrapper;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
ms = arguments[0], message = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ms = +ms;
handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
    if (ret.isPending()) {
        afterTimeout(ret, message, parent);
    }
}, ms));
if (debug.cancellation()) {
    parent = this.then();
    ret = parent._then(successClear, failureClear, undefined, handleWrapper, undefined);
    ret._setOnCancel(handleWrapper);
} else {
    ret = this._then(successClear, failureClear, undefined, handleWrapper, undefined);
}
return ret;});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
TimeoutError = Promise.TimeoutError;
HandleWrapper.prototype._resultCancelled = function () {
    clearTimeout(this.handle);
};
afterValue = function (value) {
    return delay(+this).thenReturn(value);
};
delay = Promise.delay = function (ms, value) {
    var ret;
    var handle;
    if (value !== undefined) {
        ret = Promise.resolve(value)._then(afterValue, null, null, ms, undefined);
        if (debug.cancellation() && value instanceof Promise) {
            ret._setOnCancel(value);
        }
    } else {
        ret = new Promise(INTERNAL);
        handle = setTimeout(function () {
            ret._fulfill();
        }, +ms);
        if (debug.cancellation()) {
            ret._setOnCancel(new HandleWrapper(handle));
        }
        ret._captureStackTrace();
    }
    ret._setAsyncGuaranteed();
    return ret;
};
Promise.prototype.delay = function (ms) {
    return delay(ms, this);
};
afterTimeout = function (promise, message, parent) {
    var err;
    if (typeof message !== 'string') {
        if (message instanceof Error) {
            err = message;
        } else {
            err = new TimeoutError('operation timed out');
        }
    } else {
        err = new TimeoutError(message);
    }
    util.markAsOriginatingFromRejection(err);
    promise._attachExtraTrace(err);
    promise._reject(err);
    if (parent != null) {
        parent.cancel();
    }
};
Promise.prototype.timeout = function (ms, message) {
    ms = +ms;
    var ret, parent;
    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
        if (ret.isPending()) {
            afterTimeout(ret, message, parent);
        }
    }, ms));
    if (debug.cancellation()) {
        parent = this.then();
        ret = parent._then(successClear, failureClear, undefined, handleWrapper, undefined);
        ret._setOnCancel(handleWrapper);
    } else {
        ret = this._then(successClear, failureClear, undefined, handleWrapper, undefined);
    }
    return ret;
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, INTERNAL, debug) {
    var util = _dereq_('./util');
    var TimeoutError = Promise.TimeoutError;
    function HandleWrapper(handle) {
        this.handle = handle;
    }
    HandleWrapper.prototype._resultCancelled = function () {
        clearTimeout(this.handle);
    };
    var afterValue = function (value) {
        return delay(+this).thenReturn(value);
    };
    var delay = Promise.delay = function (ms, value) {
        var ret;
        var handle;
        if (value !== undefined) {
            ret = Promise.resolve(value)._then(afterValue, null, null, ms, undefined);
            if (debug.cancellation() && value instanceof Promise) {
                ret._setOnCancel(value);
            }
        } else {
            ret = new Promise(INTERNAL);
            handle = setTimeout(function () {
                ret._fulfill();
            }, +ms);
            if (debug.cancellation()) {
                ret._setOnCancel(new HandleWrapper(handle));
            }
            ret._captureStackTrace();
        }
        ret._setAsyncGuaranteed();
        return ret;
    };
    Promise.prototype.delay = function (ms) {
        return delay(ms, this);
    };
    var afterTimeout = function (promise, message, parent) {
        var err;
        if (typeof message !== 'string') {
            if (message instanceof Error) {
                err = message;
            } else {
                err = new TimeoutError('operation timed out');
            }
        } else {
            err = new TimeoutError(message);
        }
        util.markAsOriginatingFromRejection(err);
        promise._attachExtraTrace(err);
        promise._reject(err);
        if (parent != null) {
            parent.cancel();
        }
    };
    function successClear(value) {
        clearTimeout(this.handle);
        return value;
    }
    function failureClear(reason) {
        clearTimeout(this.handle);
        throw reason;
    }
    Promise.prototype.timeout = function (ms, message) {
        ms = +ms;
        var ret, parent;
        var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
            if (ret.isPending()) {
                afterTimeout(ret, message, parent);
            }
        }, ms));
        if (debug.cancellation()) {
            parent = this.then();
            ret = parent._then(successClear, failureClear, undefined, handleWrapper, undefined);
            ret._setOnCancel(handleWrapper);
        } else {
            ret = this._then(successClear, failureClear, undefined, handleWrapper, undefined);
        }
        return ret;
    };
};}, $__.fs.J$__v757635546_968_39),
            $__.os.oid33 = {
                './util': 36
            }
        ],
        35: [
            ($__.fs.J$__v757635546_1012_40 = function J$__v757635546_1012(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (module, $__.os.oid112).exports = ($__.fs.J$__v757635546_1010_430 = function J$__v757635546_1010(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug) {
var vvv_return, vvv_switch, util, TypeError, inherits, errorObj, tryCatch, NULL, thrower, castPreservingDisposable, dispose, Disposer, FunctionDisposer, maybeUnwrapDisposer, ResourceList;
thrower = function thrower(e) {
    setTimeout(function () {
        throw e;
    }, 0);
};
castPreservingDisposable = function castPreservingDisposable(thenable) {
    var maybePromise = tryConvertToPromise(thenable);
    if (maybePromise !== thenable && typeof thenable._isDisposable === 'function' && typeof thenable._getDisposer === 'function' && thenable._isDisposable()) {
        maybePromise._setDisposable(thenable._getDisposer());
    }
    return maybePromise;
};
dispose = function dispose(resources, inspection) {
    var i = 0;
    var len = resources.length;
    var ret = new Promise(INTERNAL);
    function iterator() {
        if (i >= len)
            return ret._fulfill();
        var maybePromise = castPreservingDisposable(resources[i++]);
        if (maybePromise instanceof Promise && maybePromise._isDisposable()) {
            try {
                maybePromise = tryConvertToPromise(maybePromise._getDisposer().tryDispose(inspection), resources.promise);
            } catch (e) {
                return thrower(e);
            }
            if (maybePromise instanceof Promise) {
                return maybePromise._then(iterator, thrower, null, null, null);
            }
        }
        iterator();
    }
    iterator();
    return ret;
};
Disposer = function Disposer(data, promise, context) {
    this._data = data;
    this._promise = promise;
    this._context = context;
};
FunctionDisposer = function FunctionDisposer(fn, promise, context) {
    this.constructor$(fn, promise, context);
};
maybeUnwrapDisposer = function maybeUnwrapDisposer(value) {
    if (Disposer.isDisposer(value)) {
        this.resources[this.index]._setDisposable(value);
        return value.promise();
    }
    return value;
};
ResourceList = function ResourceList(length) {
    this.length = length;
    this.promise = null;
    this[length - 1] = null;
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Promise = arguments[0], apiRejection = arguments[1], tryConvertToPromise = arguments[2], createContext = arguments[3], INTERNAL = arguments[4], debug = arguments[5];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    thrower = ($__.fs.thrower_431 = function thrower(e) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
setTimeout(function () {
    throw e;
}, 0);});
    castPreservingDisposable = ($__.fs.castPreservingDisposable_432 = function castPreservingDisposable(thenable) {
var vvv_return, vvv_switch, maybePromise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
thenable = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
maybePromise = tryConvertToPromise(thenable);
if (maybePromise !== thenable && typeof thenable._isDisposable === 'function' && typeof thenable._getDisposer === 'function' && thenable._isDisposable()) {
    maybePromise._setDisposable(thenable._getDisposer());
}
return maybePromise;});
    dispose = ($__.fs.dispose_433 = function dispose(resources, inspection) {
var vvv_return, vvv_switch, i, len, ret, iterator;
iterator = function iterator() {
    if (i >= len)
        return ret._fulfill();
    var maybePromise = castPreservingDisposable(resources[i++]);
    if (maybePromise instanceof Promise && maybePromise._isDisposable()) {
        try {
            maybePromise = tryConvertToPromise(maybePromise._getDisposer().tryDispose(inspection), resources.promise);
        } catch (e) {
            return thrower(e);
        }
        if (maybePromise instanceof Promise) {
            return maybePromise._then(iterator, thrower, null, null, null);
        }
    }
    iterator();
};
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
resources = arguments[0], inspection = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
i = 0;
len = resources.length;
ret = new Promise(INTERNAL);
iterator();
return ret;});
    Disposer = ($__.fs.Disposer_434 = function Disposer(data, promise, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
data = arguments[0], promise = arguments[1], context = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._data = data;
this._promise = promise;
this._context = context;});
    FunctionDisposer = ($__.fs.FunctionDisposer_435 = function FunctionDisposer(fn, promise, context) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0], promise = arguments[1], context = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor$(fn, promise, context);});
    maybeUnwrapDisposer = ($__.fs.maybeUnwrapDisposer_436 = function maybeUnwrapDisposer(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (Disposer.isDisposer(value)) {
    this.resources[this.index]._setDisposable(value);
    return value.promise();
}
return value;});
    ResourceList = ($__.fs.ResourceList_437 = function ResourceList(length) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
length = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.length = length;
this.promise = null;
this[length - 1] = null;});
    util = (_dereq_, $__.fs.J$__v757635546_3_429)('./util', 0, true, $__.uid);
    TypeError = TAJS_restrictToType(((_dereq_, $__.fs.J$__v757635546_3_429)('./errors', 1, true, $__.uid), $__.os.oid70).TypeError, 'function');
    inherits = TAJS_restrictToType(((_dereq_, $__.fs.J$__v757635546_3_429)('./util', 2, true, $__.uid), $__.os.oid50).inherits, 'function');
    errorObj = ((util, $__.os.oid50).errorObj, $__.os.oid49);
    tryCatch = TAJS_restrictToType((util, $__.os.oid50).tryCatch, 'function');
    NULL = $__.os.oid113 = {};
    TAJS_restrictToType(Disposer.prototype, 'object').data = ($__.fs.J$__v757635546_977_438 = function J$__v757635546_977() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._data;});
    TAJS_restrictToType(Disposer.prototype, 'object').promise = ($__.fs.J$__v757635546_979_439 = function J$__v757635546_979() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._promise;});
    TAJS_restrictToType(Disposer.prototype, 'object').resource = ($__.fs.J$__v757635546_981_440 = function J$__v757635546_981() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (this.promise().isFulfilled()) {
    return this.promise().value();
}
return NULL;});
    TAJS_restrictToType(Disposer.prototype, 'object').tryDispose = ($__.fs.J$__v757635546_983_441 = function J$__v757635546_983(inspection) {
var vvv_return, vvv_switch, resource, context, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
inspection = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
resource = this.resource();
context = this._context;
if (context !== undefined)
    context._pushContext();
ret = resource !== NULL ? this.doDispose(resource, inspection) : null;
if (context !== undefined)
    context._popContext();
this._promise._unsetDisposable();
this._data = null;
return ret;});
    Disposer.isDisposer = ($__.fs.J$__v757635546_985_442 = function J$__v757635546_985(d) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
d = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return d != null && typeof d.resource === 'function' && typeof d.tryDispose === 'function';});
    (inherits, $__.fs.J$__v757635546_1017_83)((FunctionDisposer, $__.fs.FunctionDisposer_435), (Disposer, $__.fs.Disposer_434), 8, true, $__.uid);
    TAJS_restrictToType(FunctionDisposer.prototype, 'object').doDispose = ($__.fs.J$__v757635546_988_444 = function J$__v757635546_988(resource, inspection) {
var vvv_return, vvv_switch, fn;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
resource = arguments[0], inspection = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
fn = this.data();
return fn.call(resource, resource, inspection);});
    TAJS_restrictToType(ResourceList.prototype, 'object')._resultCancelled = ($__.fs.J$__v757635546_992_445 = function J$__v757635546_992() {
var vvv_return, vvv_switch, len, item;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = this.length;
for (var i = 0; i < len; ++i) {
    item = this[i];
    if (item instanceof Promise) {
        item.cancel();
    }
}});
    Promise.using = ($__.fs.J$__v757635546_998_446 = function J$__v757635546_998() {
var vvv_return, vvv_switch, len, fn, input, spreadArgs, resources, resource, disposer, maybePromise, reflectedResources, resultPromise, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = arguments.length;
if (len < 2)
    return apiRejection('you must pass at least 2 arguments to Promise.using');
fn = arguments[len - 1];
if (typeof fn !== 'function') {
    return apiRejection('expecting a function but got ' + util.classString(fn));
}
spreadArgs = true;
if (len === 2 && Array.isArray(arguments[0])) {
    input = arguments[0];
    len = input.length;
    spreadArgs = false;
} else {
    input = arguments;
    len--;
}
resources = new ResourceList(len);
for (var i = 0; i < len; ++i) {
    resource = input[i];
    if (Disposer.isDisposer(resource)) {
        disposer = resource;
        resource = resource.promise();
        resource._setDisposable(disposer);
    } else {
        maybePromise = tryConvertToPromise(resource);
        if (maybePromise instanceof Promise) {
            resource = maybePromise._then(maybeUnwrapDisposer, null, null, {
                resources: resources,
                index: i
            }, undefined);
        }
    }
    resources[i] = resource;
}
reflectedResources = new Array(resources.length);
for (var i = 0; i < reflectedResources.length; ++i) {
    reflectedResources[i] = Promise.resolve(resources[i]).reflect();
}
resultPromise = Promise.all(reflectedResources).then(function (inspections) {
    for (var i = 0; i < inspections.length; ++i) {
        var inspection = inspections[i];
        if (inspection.isRejected()) {
            errorObj.e = inspection.error();
            return errorObj;
        } else if (!inspection.isFulfilled()) {
            resultPromise.cancel();
            return;
        }
        inspections[i] = inspection.value();
    }
    promise._pushContext();
    fn = tryCatch(fn);
    var ret = spreadArgs ? fn.apply(undefined, inspections) : fn(inspections);
    var promiseCreated = promise._popContext();
    debug.checkForgottenReturns(ret, promiseCreated, 'Promise.using', promise);
    return ret;
});
promise = resultPromise.lastly(function () {
    var inspection = new Promise.PromiseInspection(resultPromise);
    return dispose(resources, inspection);
});
resources.promise = promise;
promise._setOnCancel(resources);
return promise;});
    TAJS_restrictToType(Promise.prototype, 'object')._setDisposable = ($__.fs.J$__v757635546_1000_447 = function J$__v757635546_1000(disposer) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
disposer = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField | 131072;
this._disposer = disposer;});
    TAJS_restrictToType(Promise.prototype, 'object')._isDisposable = ($__.fs.J$__v757635546_1002_448 = function J$__v757635546_1002() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return (this._bitField & 131072) > 0;});
    TAJS_restrictToType(Promise.prototype, 'object')._getDisposer = ($__.fs.J$__v757635546_1004_449 = function J$__v757635546_1004() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return this._disposer;});
    TAJS_restrictToType(Promise.prototype, 'object')._unsetDisposable = ($__.fs.J$__v757635546_1006_450 = function J$__v757635546_1006() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this._bitField = this._bitField & ~131072;
this._disposer = undefined;});
    TAJS_restrictToType(Promise.prototype, 'object').disposer = ($__.fs.J$__v757635546_1008_451 = function J$__v757635546_1008(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof fn === 'function') {
    return new FunctionDisposer(fn, this, createContext());
}
throw new TypeError();});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
util = _dereq_('./util');
TypeError = _dereq_('./errors').TypeError;
inherits = _dereq_('./util').inherits;
errorObj = util.errorObj;
tryCatch = util.tryCatch;
NULL = {};
Disposer.prototype.data = function () {
    return this._data;
};
Disposer.prototype.promise = function () {
    return this._promise;
};
Disposer.prototype.resource = function () {
    if (this.promise().isFulfilled()) {
        return this.promise().value();
    }
    return NULL;
};
Disposer.prototype.tryDispose = function (inspection) {
    var resource = this.resource();
    var context = this._context;
    if (context !== undefined)
        context._pushContext();
    var ret = resource !== NULL ? this.doDispose(resource, inspection) : null;
    if (context !== undefined)
        context._popContext();
    this._promise._unsetDisposable();
    this._data = null;
    return ret;
};
Disposer.isDisposer = function (d) {
    return d != null && typeof d.resource === 'function' && typeof d.tryDispose === 'function';
};
inherits(FunctionDisposer, Disposer);
FunctionDisposer.prototype.doDispose = function (resource, inspection) {
    var fn = this.data();
    return fn.call(resource, resource, inspection);
};
ResourceList.prototype._resultCancelled = function () {
    var len = this.length;
    for (var i = 0; i < len; ++i) {
        var item = this[i];
        if (item instanceof Promise) {
            item.cancel();
        }
    }
};
Promise.using = function () {
    var len = arguments.length;
    if (len < 2)
        return apiRejection('you must pass at least 2 arguments to Promise.using');
    var fn = arguments[len - 1];
    if (typeof fn !== 'function') {
        return apiRejection('expecting a function but got ' + util.classString(fn));
    }
    var input;
    var spreadArgs = true;
    if (len === 2 && Array.isArray(arguments[0])) {
        input = arguments[0];
        len = input.length;
        spreadArgs = false;
    } else {
        input = arguments;
        len--;
    }
    var resources = new ResourceList(len);
    for (var i = 0; i < len; ++i) {
        var resource = input[i];
        if (Disposer.isDisposer(resource)) {
            var disposer = resource;
            resource = resource.promise();
            resource._setDisposable(disposer);
        } else {
            var maybePromise = tryConvertToPromise(resource);
            if (maybePromise instanceof Promise) {
                resource = maybePromise._then(maybeUnwrapDisposer, null, null, {
                    resources: resources,
                    index: i
                }, undefined);
            }
        }
        resources[i] = resource;
    }
    var reflectedResources = new Array(resources.length);
    for (var i = 0; i < reflectedResources.length; ++i) {
        reflectedResources[i] = Promise.resolve(resources[i]).reflect();
    }
    var resultPromise = Promise.all(reflectedResources).then(function (inspections) {
        for (var i = 0; i < inspections.length; ++i) {
            var inspection = inspections[i];
            if (inspection.isRejected()) {
                errorObj.e = inspection.error();
                return errorObj;
            } else if (!inspection.isFulfilled()) {
                resultPromise.cancel();
                return;
            }
            inspections[i] = inspection.value();
        }
        promise._pushContext();
        fn = tryCatch(fn);
        var ret = spreadArgs ? fn.apply(undefined, inspections) : fn(inspections);
        var promiseCreated = promise._popContext();
        debug.checkForgottenReturns(ret, promiseCreated, 'Promise.using', promise);
        return ret;
    });
    var promise = resultPromise.lastly(function () {
        var inspection = new Promise.PromiseInspection(resultPromise);
        return dispose(resources, inspection);
    });
    resources.promise = promise;
    promise._setOnCancel(resources);
    return promise;
};
Promise.prototype._setDisposable = function (disposer) {
    this._bitField = this._bitField | 131072;
    this._disposer = disposer;
};
Promise.prototype._isDisposable = function () {
    return (this._bitField & 131072) > 0;
};
Promise.prototype._getDisposer = function () {
    return this._disposer;
};
Promise.prototype._unsetDisposable = function () {
    this._bitField = this._bitField & ~131072;
    this._disposer = undefined;
};
Promise.prototype.disposer = function (fn) {
    if (typeof fn === 'function') {
        return new FunctionDisposer(fn, this, createContext());
    }
    throw new TypeError();
};});
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
module.exports = function (Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug) {
    var util = _dereq_('./util');
    var TypeError = _dereq_('./errors').TypeError;
    var inherits = _dereq_('./util').inherits;
    var errorObj = util.errorObj;
    var tryCatch = util.tryCatch;
    var NULL = {};
    function thrower(e) {
        setTimeout(function () {
            throw e;
        }, 0);
    }
    function castPreservingDisposable(thenable) {
        var maybePromise = tryConvertToPromise(thenable);
        if (maybePromise !== thenable && typeof thenable._isDisposable === 'function' && typeof thenable._getDisposer === 'function' && thenable._isDisposable()) {
            maybePromise._setDisposable(thenable._getDisposer());
        }
        return maybePromise;
    }
    function dispose(resources, inspection) {
        var i = 0;
        var len = resources.length;
        var ret = new Promise(INTERNAL);
        function iterator() {
            if (i >= len)
                return ret._fulfill();
            var maybePromise = castPreservingDisposable(resources[i++]);
            if (maybePromise instanceof Promise && maybePromise._isDisposable()) {
                try {
                    maybePromise = tryConvertToPromise(maybePromise._getDisposer().tryDispose(inspection), resources.promise);
                } catch (e) {
                    return thrower(e);
                }
                if (maybePromise instanceof Promise) {
                    return maybePromise._then(iterator, thrower, null, null, null);
                }
            }
            iterator();
        }
        iterator();
        return ret;
    }
    function Disposer(data, promise, context) {
        this._data = data;
        this._promise = promise;
        this._context = context;
    }
    Disposer.prototype.data = function () {
        return this._data;
    };
    Disposer.prototype.promise = function () {
        return this._promise;
    };
    Disposer.prototype.resource = function () {
        if (this.promise().isFulfilled()) {
            return this.promise().value();
        }
        return NULL;
    };
    Disposer.prototype.tryDispose = function (inspection) {
        var resource = this.resource();
        var context = this._context;
        if (context !== undefined)
            context._pushContext();
        var ret = resource !== NULL ? this.doDispose(resource, inspection) : null;
        if (context !== undefined)
            context._popContext();
        this._promise._unsetDisposable();
        this._data = null;
        return ret;
    };
    Disposer.isDisposer = function (d) {
        return d != null && typeof d.resource === 'function' && typeof d.tryDispose === 'function';
    };
    function FunctionDisposer(fn, promise, context) {
        this.constructor$(fn, promise, context);
    }
    inherits(FunctionDisposer, Disposer);
    FunctionDisposer.prototype.doDispose = function (resource, inspection) {
        var fn = this.data();
        return fn.call(resource, resource, inspection);
    };
    function maybeUnwrapDisposer(value) {
        if (Disposer.isDisposer(value)) {
            this.resources[this.index]._setDisposable(value);
            return value.promise();
        }
        return value;
    }
    function ResourceList(length) {
        this.length = length;
        this.promise = null;
        this[length - 1] = null;
    }
    ResourceList.prototype._resultCancelled = function () {
        var len = this.length;
        for (var i = 0; i < len; ++i) {
            var item = this[i];
            if (item instanceof Promise) {
                item.cancel();
            }
        }
    };
    Promise.using = function () {
        var len = arguments.length;
        if (len < 2)
            return apiRejection('you must pass at least 2 arguments to Promise.using');
        var fn = arguments[len - 1];
        if (typeof fn !== 'function') {
            return apiRejection('expecting a function but got ' + util.classString(fn));
        }
        var input;
        var spreadArgs = true;
        if (len === 2 && Array.isArray(arguments[0])) {
            input = arguments[0];
            len = input.length;
            spreadArgs = false;
        } else {
            input = arguments;
            len--;
        }
        var resources = new ResourceList(len);
        for (var i = 0; i < len; ++i) {
            var resource = input[i];
            if (Disposer.isDisposer(resource)) {
                var disposer = resource;
                resource = resource.promise();
                resource._setDisposable(disposer);
            } else {
                var maybePromise = tryConvertToPromise(resource);
                if (maybePromise instanceof Promise) {
                    resource = maybePromise._then(maybeUnwrapDisposer, null, null, {
                        resources: resources,
                        index: i
                    }, undefined);
                }
            }
            resources[i] = resource;
        }
        var reflectedResources = new Array(resources.length);
        for (var i = 0; i < reflectedResources.length; ++i) {
            reflectedResources[i] = Promise.resolve(resources[i]).reflect();
        }
        var resultPromise = Promise.all(reflectedResources).then(function (inspections) {
            for (var i = 0; i < inspections.length; ++i) {
                var inspection = inspections[i];
                if (inspection.isRejected()) {
                    errorObj.e = inspection.error();
                    return errorObj;
                } else if (!inspection.isFulfilled()) {
                    resultPromise.cancel();
                    return;
                }
                inspections[i] = inspection.value();
            }
            promise._pushContext();
            fn = tryCatch(fn);
            var ret = spreadArgs ? fn.apply(undefined, inspections) : fn(inspections);
            var promiseCreated = promise._popContext();
            debug.checkForgottenReturns(ret, promiseCreated, 'Promise.using', promise);
            return ret;
        });
        var promise = resultPromise.lastly(function () {
            var inspection = new Promise.PromiseInspection(resultPromise);
            return dispose(resources, inspection);
        });
        resources.promise = promise;
        promise._setOnCancel(resources);
        return promise;
    };
    Promise.prototype._setDisposable = function (disposer) {
        this._bitField = this._bitField | 131072;
        this._disposer = disposer;
    };
    Promise.prototype._isDisposable = function () {
        return (this._bitField & 131072) > 0;
    };
    Promise.prototype._getDisposer = function () {
        return this._disposer;
    };
    Promise.prototype._unsetDisposable = function () {
        this._bitField = this._bitField & ~131072;
        this._disposer = undefined;
    };
    Promise.prototype.disposer = function (fn) {
        if (typeof fn === 'function') {
            return new FunctionDisposer(fn, this, createContext());
        }
        throw new TypeError();
    };
};}, $__.fs.J$__v757635546_1012_40),
            $__.os.oid34 = {
                './errors': 12,
                './util': 36
            }
        ],
        36: [
            ($__.fs.J$__v757635546_1067_41 = function J$__v757635546_1067(_dereq_, module, exports) {
'use strict';
var vvv_return, vvv_switch, es5, canEvaluate, errorObj, tryCatchTarget, globalObject, tryCatcher, tryCatch, inherits, isPrimitive, isObject, maybeWrapAsError, withAppended, getDataPropertyOrDefault, notEnumerableProp, thrower, inheritedDataKeys, thisAssignmentPattern, isClass, toFastProperties, rident, isIdentifier, filledRange, safeToString, isError, markAsOriginatingFromRejection, originatesFromRejection, canAttachTrace, ensureErrorObject, classString, copyDescriptors, asArray, ArrayFrom, isNode, hasEnvVariables, env, getNativePromise, domainBind, ret;
tryCatcher = function tryCatcher() {
    try {
        var target = tryCatchTarget;
        tryCatchTarget = null;
        return target.apply(this, arguments);
    } catch (e) {
        errorObj.e = e;
        return errorObj;
    }
};
tryCatch = function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
};
isPrimitive = function isPrimitive(val) {
    return val == null || val === true || val === false || typeof val === 'string' || typeof val === 'number';
};
isObject = function isObject(value) {
    return typeof value === 'function' || typeof value === 'object' && value !== null;
};
maybeWrapAsError = function maybeWrapAsError(maybeError) {
    if (!isPrimitive(maybeError))
        return maybeError;
    return new Error(safeToString(maybeError));
};
withAppended = function withAppended(target, appendee) {
    var len = target.length;
    var ret = new Array(len + 1);
    var i;
    for (i = 0; i < len; ++i) {
        ret[i] = target[i];
    }
    ret[i] = appendee;
    return ret;
};
getDataPropertyOrDefault = function getDataPropertyOrDefault(obj, key, defaultValue) {
    if (es5.isES5) {
        var desc = Object.getOwnPropertyDescriptor(obj, key);
        if (desc != null) {
            return desc.get == null && desc.set == null ? desc.value : defaultValue;
        }
    } else {
        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;
    }
};
notEnumerableProp = function notEnumerableProp(obj, name, value) {
    if (isPrimitive(obj))
        return obj;
    var descriptor = {
        value: value,
        configurable: true,
        enumerable: false,
        writable: true
    };
    es5.defineProperty(obj, name, descriptor);
    return obj;
};
thrower = function thrower(r) {
    throw r;
};
isClass = function isClass(fn) {
    try {
        if (typeof fn === 'function') {
            var keys = es5.names(fn.prototype);
            var hasMethods = es5.isES5 && keys.length > 1;
            var hasMethodsOtherThanConstructor = keys.length > 0 && !(keys.length === 1 && keys[0] === 'constructor');
            var hasThisAssignmentAndStaticMethods = thisAssignmentPattern.test(fn + '') && es5.names(fn).length > 0;
            if (hasMethods || hasMethodsOtherThanConstructor || hasThisAssignmentAndStaticMethods) {
                return true;
            }
        }
        return false;
    } catch (e) {
        return false;
    }
};
toFastProperties = function toFastProperties(obj) {
    function FakeConstructor() {
    }
    FakeConstructor.prototype = obj;
    var l = 8;
    while (l--)
        new FakeConstructor();
    return obj;
    eval(obj);
};
isIdentifier = function isIdentifier(str) {
    return rident.test(str);
};
filledRange = function filledRange(count, prefix, suffix) {
    var ret = new Array(count);
    for (var i = 0; i < count; ++i) {
        ret[i] = prefix + i + suffix;
    }
    return ret;
};
safeToString = function safeToString(obj) {
    try {
        return obj + '';
    } catch (e) {
        return '[no string representation]';
    }
};
isError = function isError(obj) {
    return obj !== null && typeof obj === 'object' && typeof obj.message === 'string' && typeof obj.name === 'string';
};
markAsOriginatingFromRejection = function markAsOriginatingFromRejection(e) {
    try {
        notEnumerableProp(e, 'isOperational', true);
    } catch (ignore) {
    }
};
originatesFromRejection = function originatesFromRejection(e) {
    if (e == null)
        return false;
    return e instanceof Error['__BluebirdErrorTypes__'].OperationalError || e['isOperational'] === true;
};
canAttachTrace = function canAttachTrace(obj) {
    return isError(obj) && es5.propertyIsWritable(obj, 'stack');
};
classString = function classString(obj) {
    return {}.toString.call(obj);
};
copyDescriptors = function copyDescriptors(from, to, filter) {
    var keys = es5.names(from);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        if (filter(key)) {
            try {
                es5.defineProperty(to, key, es5.getDescriptor(from, key));
            } catch (ignore) {
            }
        }
    }
};
env = function env(key) {
    return hasEnvVariables ? process.env[key] : undefined;
};
getNativePromise = function getNativePromise() {
    if (typeof Promise === 'function') {
        try {
            var promise = new Promise(function () {
            });
            if ({}.toString.call(promise) === '[object Promise]') {
                return Promise;
            }
        } catch (e) {
        }
    }
};
domainBind = function domainBind(self, cb) {
    return self.bind(cb);
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
_dereq_ = arguments[0], module = arguments[1], exports = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    tryCatcher = ($__.fs.tryCatcher_57 = function tryCatcher() {
var vvv_return, vvv_switch, target;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    target = tryCatchTarget;
    tryCatchTarget = null;
    return target.apply(this, arguments);
} catch (e) {
    errorObj.e = e;
    return errorObj;
}});
    tryCatch = ($__.fs.tryCatch_58 = function tryCatch(fn) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
tryCatchTarget = fn;
return tryCatcher;});
    isPrimitive = ($__.fs.isPrimitive_59 = function isPrimitive(val) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
val = arguments[0];
switch (vvv_switch) {
case 0:
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 1);
    return (((val == null, val === true), val === false), typeof val === 'string'), typeof val === 'number';
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return val == null || val === true || val === false || typeof val === 'string' || typeof val === 'number';});
    isObject = ($__.fs.isObject_60 = function isObject(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return typeof value === 'function' || typeof value === 'object' && value !== null;});
    maybeWrapAsError = ($__.fs.maybeWrapAsError_61 = function maybeWrapAsError(maybeError) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
maybeError = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!isPrimitive(maybeError))
    return maybeError;
return new Error(safeToString(maybeError));});
    withAppended = ($__.fs.withAppended_62 = function withAppended(target, appendee) {
var vvv_return, vvv_switch, len, ret, i;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
target = arguments[0], appendee = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
len = target.length;
ret = new Array(len + 1);
for (i = 0; i < len; ++i) {
    ret[i] = target[i];
}
ret[i] = appendee;
return ret;});
    getDataPropertyOrDefault = ($__.fs.getDataPropertyOrDefault_63 = function getDataPropertyOrDefault(obj, key, defaultValue) {
var vvv_return, vvv_switch, desc;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], key = arguments[1], defaultValue = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (es5.isES5) {
    desc = Object.getOwnPropertyDescriptor(obj, key);
    if (desc != null) {
        return desc.get == null && desc.set == null ? desc.value : defaultValue;
    }
} else {
    return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;
}});
    notEnumerableProp = ($__.fs.notEnumerableProp_64 = function notEnumerableProp(obj, name, value) {
var vvv_return, vvv_switch, descriptor;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0], name = arguments[1], value = arguments[2];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    (isPrimitive, $__.fs.isPrimitive_59)((obj, $__.fs.Promise_49), 0, true, $__.uid);
    descriptor = $__.os.oid51 = {
        'value': value,
        'configurable': true,
        'enumerable': false,
        'writable': true
    };
    es5['defineProperty']((obj, $__.fs.Promise_49), name, descriptor);
    return obj;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    (isPrimitive, $__.fs.isPrimitive_59)((obj, $__.fs.Promise_49), 1, true, $__.uid);
    descriptor = $__.os.oid93 = {
        'value': value,
        'configurable': true,
        'enumerable': false,
        'writable': true
    };
    es5['defineProperty']((obj, $__.fs.Promise_49), name, descriptor);
    return obj;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (isPrimitive(obj))
    return obj;
descriptor = {
    value: value,
    configurable: true,
    enumerable: false,
    writable: true
};
es5.defineProperty(obj, name, descriptor);
return obj;});
    thrower = ($__.fs.thrower_65 = function thrower(r) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
r = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
throw r;});
    isClass = ($__.fs.isClass_66 = function isClass(fn) {
var vvv_return, vvv_switch, keys, hasMethods, hasMethodsOtherThanConstructor, hasThisAssignmentAndStaticMethods;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
fn = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    if (typeof fn === 'function') {
        keys = es5.names(fn.prototype);
        hasMethods = es5.isES5 && keys.length > 1;
        hasMethodsOtherThanConstructor = keys.length > 0 && !(keys.length === 1 && keys[0] === 'constructor');
        hasThisAssignmentAndStaticMethods = thisAssignmentPattern.test(fn + '') && es5.names(fn).length > 0;
        if (hasMethods || hasMethodsOtherThanConstructor || hasThisAssignmentAndStaticMethods) {
            return true;
        }
    }
    return false;
} catch (e) {
    return false;
}});
    toFastProperties = ($__.fs.toFastProperties_67 = function toFastProperties(obj) {
var vvv_return, vvv_switch, FakeConstructor, l;
FakeConstructor = function FakeConstructor() {
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    FakeConstructor = ($__.fs.FakeConstructor_587 = function FakeConstructor() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 7);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    FakeConstructor.prototype = obj;
    l = 8;
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_587)(0, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_587)(1, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_587)(2, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_587)(3, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_587)(4, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_587)(5, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_587)(6, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_587)(7, true, $__.uid);
    (l = +l - 1) + 1;
    return obj;
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    FakeConstructor = ($__.fs.FakeConstructor_588 = function FakeConstructor() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 7);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');});
    FakeConstructor.prototype = obj;
    l = 8;
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_588)(0, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_588)(1, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_588)(2, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_588)(3, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_588)(4, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_588)(5, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_588)(6, true, $__.uid);
    (l = +l - 1) + 1;
    new (FakeConstructor, $__.fs.FakeConstructor_588)(7, true, $__.uid);
    (l = +l - 1) + 1;
    return obj;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
FakeConstructor.prototype = obj;
l = 8;
while (l--)
    new FakeConstructor();
return obj;
eval(obj);});
    isIdentifier = ($__.fs.isIdentifier_68 = function isIdentifier(str) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
str = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return rident.test(str);});
    filledRange = ($__.fs.filledRange_69 = function filledRange(count, prefix, suffix) {
var vvv_return, vvv_switch, ret;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
count = arguments[0], prefix = arguments[1], suffix = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = new Array(count);
for (var i = 0; i < count; ++i) {
    ret[i] = prefix + i + suffix;
}
return ret;});
    safeToString = ($__.fs.safeToString_70 = function safeToString(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    return obj + '';
} catch (e) {
    return '[no string representation]';
}});
    isError = ($__.fs.isError_71 = function isError(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return obj !== null && typeof obj === 'object' && typeof obj.message === 'string' && typeof obj.name === 'string';});
    markAsOriginatingFromRejection = ($__.fs.markAsOriginatingFromRejection_72 = function markAsOriginatingFromRejection(e) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
try {
    notEnumerableProp(e, 'isOperational', true);
} catch (ignore) {
}});
    originatesFromRejection = ($__.fs.originatesFromRejection_73 = function originatesFromRejection(e) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
e = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (e == null)
    return false;
return e instanceof Error['__BluebirdErrorTypes__'].OperationalError || e['isOperational'] === true;});
    canAttachTrace = ($__.fs.canAttachTrace_74 = function canAttachTrace(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return isError(obj) && es5.propertyIsWritable(obj, 'stack');});
    classString = ($__.fs.classString_75 = function classString(obj) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return {}.toString.call(obj);});
    copyDescriptors = ($__.fs.copyDescriptors_76 = function copyDescriptors(from, to, filter) {
var vvv_return, vvv_switch, keys, key;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
from = arguments[0], to = arguments[1], filter = arguments[2];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
keys = es5.names(from);
for (var i = 0; i < keys.length; ++i) {
    key = keys[i];
    if (filter(key)) {
        try {
            es5.defineProperty(to, key, es5.getDescriptor(from, key));
        } catch (ignore) {
        }
    }
}});
    env = ($__.fs.env_77 = function env(key) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
key = arguments[0];
switch (vvv_switch) {
case 0:
case 1:
case 2:
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(0 <= vvv_switch && vvv_switch <= 3);
    return hasEnvVariables, undefined;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return hasEnvVariables ? process.env[key] : undefined;});
    getNativePromise = ($__.fs.getNativePromise_78 = function getNativePromise() {
var vvv_return, vvv_switch, promise;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    typeof Promise === 'function';
    promise = new Promise((($__.fs.J$__v757635546_1061_100 = function J$__v757635546_1061() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');}, $__.fs.J$__v757635546_1061_100_18 = ((function $_mk($_f, ids, isOneShotEscapingFunction) {
    TAJS_makeContextSensitive($_mk, 1);
    TAJS_makeContextSensitive($_mk, 2);
    var nxt = 0;
    function J$__v757635546_1061() {
        arguments[arguments.length] = ids[nxt];
        arguments[arguments.length + 1] = isOneShotEscapingFunction;
        arguments[arguments.length + 2] = $__.uid;
        arguments.length += 3;
        if (!isOneShotEscapingFunction) {
            ++nxt;
        }
        return $_f.apply(this, arguments);
    };
    TAJS_makeContextSensitive(J$__v757635546_1061, -2);
    return J$__v757635546_1061;
})($__.fs.J$__v757635546_1061_100, [0], false)), $__.fs.J$__v757635546_1061_100), $__.fs.J$__v757635546_1061_100_18));
    TAJS_restrictToType(($__.os.oid56 = {}, $__.os.oid56).toString, 'function')['call'](promise) === '[object Promise]';
    return Promise;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (typeof Promise === 'function') {
    try {
        promise = new Promise(function () {
        });
        if ({}.toString.call(promise) === '[object Promise]') {
            return Promise;
        }
    } catch (e) {
    }
}});
    domainBind = ($__.fs.domainBind_79 = function domainBind(self, cb) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
self = arguments[0], cb = arguments[1];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return self.bind(cb);});
    es5 = (_dereq_, $__.fs.J$__v757635546_3_56)('./es5', 0, true, $__.uid);
    canEvaluate = typeof navigator == 'undefined';
    errorObj = $__.os.oid49 = {
        'e': $__.os.oid48 = {}
    };
    globalObject = (typeof self !== 'undefined', self);
    inherits = ($__.fs.J$__v757635546_1017_83 = function J$__v757635546_1017(Child, Parent) {
var vvv_return, vvv_switch, hasProp, T;
T = function T() {
    this.constructor = Child;
    this.constructor$ = Parent;
    for (var propertyName in Parent.prototype) {
        if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
            this[propertyName + '$'] = Parent.prototype[propertyName];
        }
    }
};
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
Child = arguments[0], Parent = arguments[1];
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    T = ($__.fs.T_131 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid62 = {}, $__.os.oid62).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_131)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 1:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 1);
    T = ($__.fs.T_133 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid63 = {}, $__.os.oid63).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_133)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 2:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 2);
    T = ($__.fs.T_135 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid64 = {}, $__.os.oid64).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_135)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 3:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 3);
    T = ($__.fs.T_137 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid65 = {}, $__.os.oid65).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_137)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 4:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 4);
    T = ($__.fs.T_139 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid67 = {}, $__.os.oid67).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_139)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 5:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 5);
    T = ($__.fs.T_152 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid78 = {}, $__.os.oid78).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_152)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 6:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 6);
    T = ($__.fs.T_247 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid84 = {}, $__.os.oid84).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_247)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 7:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 7);
    T = ($__.fs.T_412 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    'constructor' in vvv_tmp0;
    propertyName = 'constructor';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', 'constructor$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'constructor'], 'function');
    'constructor$' in vvv_tmp0;
    propertyName = 'constructor$';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 12) - 1) !== '$';
    'length' in vvv_tmp0;
    propertyName = 'length';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 6) - 1) !== '$';
    this[propertyName + '$', 'length$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'length'], 'function');
    'promise' in vvv_tmp0;
    propertyName = 'promise';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', 'promise$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'promise'], 'function');
    '_init' in vvv_tmp0;
    propertyName = '_init';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 5) - 1) !== '$';
    this[propertyName + '$', '_init$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_init'], 'function');
    '_iterate' in vvv_tmp0;
    propertyName = '_iterate';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_iterate$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_iterate'], 'function');
    '_isResolved' in vvv_tmp0;
    propertyName = '_isResolved';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', '_isResolved$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_isResolved'], 'function');
    '_resolve' in vvv_tmp0;
    propertyName = '_resolve';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_resolve$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resolve'], 'function');
    '_cancel' in vvv_tmp0;
    propertyName = '_cancel';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_cancel$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_cancel'], 'function');
    '_reject' in vvv_tmp0;
    propertyName = '_reject';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_reject$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_reject'], 'function');
    '_promiseFulfilled' in vvv_tmp0;
    propertyName = '_promiseFulfilled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseFulfilled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseFulfilled'], 'function');
    '_promiseCancelled' in vvv_tmp0;
    propertyName = '_promiseCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseCancelled'], 'function');
    '_promiseRejected' in vvv_tmp0;
    propertyName = '_promiseRejected';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_promiseRejected$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseRejected'], 'function');
    '_resultCancelled' in vvv_tmp0;
    propertyName = '_resultCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_resultCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resultCancelled'], 'function');
    'shouldCopyValues' in vvv_tmp0;
    propertyName = 'shouldCopyValues';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', 'shouldCopyValues$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'shouldCopyValues'], 'function');
    'getActualLength' in vvv_tmp0;
    propertyName = 'getActualLength';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 15) - 1) !== '$';
    this[propertyName + '$', 'getActualLength$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'getActualLength'], 'function');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid108 = {}, $__.os.oid108).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_412)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 8:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 8);
    T = ($__.fs.T_443 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    'data' in vvv_tmp0;
    propertyName = 'data';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 4) - 1) !== '$';
    this[propertyName + '$', 'data$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'data'], 'function');
    'promise' in vvv_tmp0;
    propertyName = 'promise';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', 'promise$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'promise'], 'function');
    'resource' in vvv_tmp0;
    propertyName = 'resource';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', 'resource$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'resource'], 'function');
    'tryDispose' in vvv_tmp0;
    propertyName = 'tryDispose';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 10) - 1) !== '$';
    this[propertyName + '$', 'tryDispose$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'tryDispose'], 'function');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid114 = {}, $__.os.oid114).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_443)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 9:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 9);
    T = ($__.fs.T_467 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid119 = {}, $__.os.oid119).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_467)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 10:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 10);
    T = ($__.fs.T_508 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    'constructor' in vvv_tmp0;
    propertyName = 'constructor';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', 'constructor$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'constructor'], 'function');
    'constructor$' in vvv_tmp0;
    propertyName = 'constructor$';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 12) - 1) !== '$';
    'length' in vvv_tmp0;
    propertyName = 'length';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 6) - 1) !== '$';
    this[propertyName + '$', 'length$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'length'], 'function');
    'promise' in vvv_tmp0;
    propertyName = 'promise';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', 'promise$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'promise'], 'function');
    '_init' in vvv_tmp0;
    propertyName = '_init';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 5) - 1) !== '$';
    this[propertyName + '$', '_init$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_init'], 'function');
    '_iterate' in vvv_tmp0;
    propertyName = '_iterate';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_iterate$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_iterate'], 'function');
    '_isResolved' in vvv_tmp0;
    propertyName = '_isResolved';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', '_isResolved$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_isResolved'], 'function');
    '_resolve' in vvv_tmp0;
    propertyName = '_resolve';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_resolve$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resolve'], 'function');
    '_cancel' in vvv_tmp0;
    propertyName = '_cancel';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_cancel$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_cancel'], 'function');
    '_reject' in vvv_tmp0;
    propertyName = '_reject';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_reject$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_reject'], 'function');
    '_promiseFulfilled' in vvv_tmp0;
    propertyName = '_promiseFulfilled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseFulfilled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseFulfilled'], 'function');
    '_promiseCancelled' in vvv_tmp0;
    propertyName = '_promiseCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseCancelled'], 'function');
    '_promiseRejected' in vvv_tmp0;
    propertyName = '_promiseRejected';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_promiseRejected$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseRejected'], 'function');
    '_resultCancelled' in vvv_tmp0;
    propertyName = '_resultCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_resultCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resultCancelled'], 'function');
    'shouldCopyValues' in vvv_tmp0;
    propertyName = 'shouldCopyValues';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', 'shouldCopyValues$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'shouldCopyValues'], 'function');
    'getActualLength' in vvv_tmp0;
    propertyName = 'getActualLength';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 15) - 1) !== '$';
    this[propertyName + '$', 'getActualLength$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'getActualLength'], 'function');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid128 = {}, $__.os.oid128).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_508)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 11:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 11);
    T = ($__.fs.T_528 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    'constructor' in vvv_tmp0;
    propertyName = 'constructor';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', 'constructor$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'constructor'], 'function');
    'constructor$' in vvv_tmp0;
    propertyName = 'constructor$';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 12) - 1) !== '$';
    'length' in vvv_tmp0;
    propertyName = 'length';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 6) - 1) !== '$';
    this[propertyName + '$', 'length$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'length'], 'function');
    'promise' in vvv_tmp0;
    propertyName = 'promise';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', 'promise$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'promise'], 'function');
    '_init' in vvv_tmp0;
    propertyName = '_init';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 5) - 1) !== '$';
    this[propertyName + '$', '_init$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_init'], 'function');
    '_iterate' in vvv_tmp0;
    propertyName = '_iterate';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_iterate$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_iterate'], 'function');
    '_isResolved' in vvv_tmp0;
    propertyName = '_isResolved';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', '_isResolved$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_isResolved'], 'function');
    '_resolve' in vvv_tmp0;
    propertyName = '_resolve';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_resolve$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resolve'], 'function');
    '_cancel' in vvv_tmp0;
    propertyName = '_cancel';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_cancel$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_cancel'], 'function');
    '_reject' in vvv_tmp0;
    propertyName = '_reject';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_reject$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_reject'], 'function');
    '_promiseFulfilled' in vvv_tmp0;
    propertyName = '_promiseFulfilled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseFulfilled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseFulfilled'], 'function');
    '_promiseCancelled' in vvv_tmp0;
    propertyName = '_promiseCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseCancelled'], 'function');
    '_promiseRejected' in vvv_tmp0;
    propertyName = '_promiseRejected';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_promiseRejected$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseRejected'], 'function');
    '_resultCancelled' in vvv_tmp0;
    propertyName = '_resultCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_resultCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resultCancelled'], 'function');
    'shouldCopyValues' in vvv_tmp0;
    propertyName = 'shouldCopyValues';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', 'shouldCopyValues$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'shouldCopyValues'], 'function');
    'getActualLength' in vvv_tmp0;
    propertyName = 'getActualLength';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 15) - 1) !== '$';
    this[propertyName + '$', 'getActualLength$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'getActualLength'], 'function');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid133 = {}, $__.os.oid133).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_528)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 12:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 12);
    T = ($__.fs.T_542 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    'constructor' in vvv_tmp0;
    propertyName = 'constructor';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', 'constructor$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'constructor'], 'function');
    'constructor$' in vvv_tmp0;
    propertyName = 'constructor$';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 12) - 1) !== '$';
    'length' in vvv_tmp0;
    propertyName = 'length';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 6) - 1) !== '$';
    this[propertyName + '$', 'length$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'length'], 'function');
    'promise' in vvv_tmp0;
    propertyName = 'promise';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', 'promise$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'promise'], 'function');
    '_init' in vvv_tmp0;
    propertyName = '_init';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 5) - 1) !== '$';
    this[propertyName + '$', '_init$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_init'], 'function');
    '_iterate' in vvv_tmp0;
    propertyName = '_iterate';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_iterate$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_iterate'], 'function');
    '_isResolved' in vvv_tmp0;
    propertyName = '_isResolved';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', '_isResolved$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_isResolved'], 'function');
    '_resolve' in vvv_tmp0;
    propertyName = '_resolve';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_resolve$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resolve'], 'function');
    '_cancel' in vvv_tmp0;
    propertyName = '_cancel';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_cancel$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_cancel'], 'function');
    '_reject' in vvv_tmp0;
    propertyName = '_reject';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_reject$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_reject'], 'function');
    '_promiseFulfilled' in vvv_tmp0;
    propertyName = '_promiseFulfilled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseFulfilled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseFulfilled'], 'function');
    '_promiseCancelled' in vvv_tmp0;
    propertyName = '_promiseCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseCancelled'], 'function');
    '_promiseRejected' in vvv_tmp0;
    propertyName = '_promiseRejected';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_promiseRejected$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseRejected'], 'function');
    '_resultCancelled' in vvv_tmp0;
    propertyName = '_resultCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_resultCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resultCancelled'], 'function');
    'shouldCopyValues' in vvv_tmp0;
    propertyName = 'shouldCopyValues';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', 'shouldCopyValues$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'shouldCopyValues'], 'function');
    'getActualLength' in vvv_tmp0;
    propertyName = 'getActualLength';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 15) - 1) !== '$';
    this[propertyName + '$', 'getActualLength$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'getActualLength'], 'function');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid136 = {}, $__.os.oid136).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_542)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
case 13:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 13);
    T = ($__.fs.T_552 = function T() {
var vvv_return, vvv_switch, vvv_tmp0, propertyName;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    this.constructor = Child;
    this.constructor$ = Parent;
    vvv_tmp0 = TAJS_restrictToType(Parent.prototype, 'object');
    'constructor' in vvv_tmp0;
    propertyName = 'constructor';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', 'constructor$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'constructor'], 'function');
    'constructor$' in vvv_tmp0;
    propertyName = 'constructor$';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 12) - 1) !== '$';
    'length' in vvv_tmp0;
    propertyName = 'length';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 6) - 1) !== '$';
    this[propertyName + '$', 'length$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'length'], 'function');
    'promise' in vvv_tmp0;
    propertyName = 'promise';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', 'promise$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'promise'], 'function');
    '_init' in vvv_tmp0;
    propertyName = '_init';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 5) - 1) !== '$';
    this[propertyName + '$', '_init$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_init'], 'function');
    '_iterate' in vvv_tmp0;
    propertyName = '_iterate';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_iterate$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_iterate'], 'function');
    '_isResolved' in vvv_tmp0;
    propertyName = '_isResolved';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 11) - 1) !== '$';
    this[propertyName + '$', '_isResolved$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_isResolved'], 'function');
    '_resolve' in vvv_tmp0;
    propertyName = '_resolve';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 8) - 1) !== '$';
    this[propertyName + '$', '_resolve$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resolve'], 'function');
    '_cancel' in vvv_tmp0;
    propertyName = '_cancel';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_cancel$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_cancel'], 'function');
    '_reject' in vvv_tmp0;
    propertyName = '_reject';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 7) - 1) !== '$';
    this[propertyName + '$', '_reject$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_reject'], 'function');
    '_promiseFulfilled' in vvv_tmp0;
    propertyName = '_promiseFulfilled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseFulfilled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseFulfilled'], 'function');
    '_promiseCancelled' in vvv_tmp0;
    propertyName = '_promiseCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 17) - 1) !== '$';
    this[propertyName + '$', '_promiseCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseCancelled'], 'function');
    '_promiseRejected' in vvv_tmp0;
    propertyName = '_promiseRejected';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_promiseRejected$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_promiseRejected'], 'function');
    '_resultCancelled' in vvv_tmp0;
    propertyName = '_resultCancelled';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', '_resultCancelled$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, '_resultCancelled'], 'function');
    'shouldCopyValues' in vvv_tmp0;
    propertyName = 'shouldCopyValues';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 16) - 1) !== '$';
    this[propertyName + '$', 'shouldCopyValues$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'shouldCopyValues'], 'function');
    'getActualLength' in vvv_tmp0;
    propertyName = 'getActualLength';
    hasProp['call'](TAJS_restrictToType(Parent.prototype, 'object'), propertyName), propertyName['charAt']((propertyName.length, 15) - 1) !== '$';
    this[propertyName + '$', 'getActualLength$'] = TAJS_restrictToType(TAJS_restrictToType(Parent.prototype, 'object')[propertyName, 'getActualLength'], 'function');
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
this.constructor = Child;
this.constructor$ = Parent;
for (var propertyName in Parent.prototype) {
    if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
        this[propertyName + '$'] = Parent.prototype[propertyName];
    }
}});
    hasProp = TAJS_restrictToType(($__.os.oid140 = {}, $__.os.oid140).hasOwnProperty, 'function');
    T.prototype = TAJS_restrictToType(Parent.prototype, 'object');
    Child.prototype = new (T, $__.fs.T_552)(0, true, $__.uid);
    return TAJS_restrictToType(Child.prototype, 'object');
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
hasProp = {}.hasOwnProperty;
T.prototype = Parent.prototype;
Child.prototype = new T();
return Child.prototype;});
    inheritedDataKeys = (($__.fs.J$__v757635546_1032_84 = function J$__v757635546_1032() {
var vvv_return, vvv_switch, excludedPrototypes, isExcludedProto, getKeys, hasProp;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    excludedPrototypes = [
        TAJS_restrictToType(Array.prototype, 'object'),
        TAJS_restrictToType(Object.prototype, 'object'),
        TAJS_restrictToType(Function.prototype, 'function')
    ];
    isExcludedProto = ($__.fs.J$__v757635546_1026_85 = function J$__v757635546_1026(val) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
val = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
for (var i = 0; i < excludedPrototypes.length; ++i) {
    if (excludedPrototypes[i] === val) {
        return true;
    }
}
return false;});
    (es5, $__.os.oid47).isES5, true;
    getKeys = TAJS_restrictToType(Object.getOwnPropertyNames, 'function');
    return ($__.fs.J$__v757635546_1028_86 = function J$__v757635546_1028(obj) {
var vvv_return, vvv_switch, ret, visitedKeys, keys, key, desc;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
obj = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
ret = [];
visitedKeys = Object.create(null);
while (obj != null && !isExcludedProto(obj)) {
    try {
        keys = getKeys(obj);
    } catch (e) {
        return ret;
    }
    for (var i = 0; i < keys.length; ++i) {
        key = keys[i];
        if (visitedKeys[key])
            continue;
        visitedKeys[key] = true;
        desc = Object.getOwnPropertyDescriptor(obj, key);
        if (desc != null && desc.get == null && desc.set == null) {
            ret.push(key);
        }
    }
    obj = es5.getPrototypeOf(obj);
}
return ret;});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
excludedPrototypes = [
    Array.prototype,
    Object.prototype,
    Function.prototype
];
isExcludedProto = function (val) {
    for (var i = 0; i < excludedPrototypes.length; ++i) {
        if (excludedPrototypes[i] === val) {
            return true;
        }
    }
    return false;
};
if (es5.isES5) {
    getKeys = Object.getOwnPropertyNames;
    return function (obj) {
        var ret = [];
        var visitedKeys = Object.create(null);
        while (obj != null && !isExcludedProto(obj)) {
            var keys;
            try {
                keys = getKeys(obj);
            } catch (e) {
                return ret;
            }
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                if (visitedKeys[key])
                    continue;
                visitedKeys[key] = true;
                var desc = Object.getOwnPropertyDescriptor(obj, key);
                if (desc != null && desc.get == null && desc.set == null) {
                    ret.push(key);
                }
            }
            obj = es5.getPrototypeOf(obj);
        }
        return ret;
    };
} else {
    hasProp = {}.hasOwnProperty;
    return function (obj) {
        if (isExcludedProto(obj))
            return [];
        var ret = [];
        enumeration:
            for (var key in obj) {
                if (hasProp.call(obj, key)) {
                    ret.push(key);
                } else {
                    for (var i = 0; i < excludedPrototypes.length; ++i) {
                        if (hasProp.call(excludedPrototypes[i], key)) {
                            continue enumeration;
                        }
                    }
                    ret.push(key);
                }
            }
        return ret;
    };
}}), $__.fs.J$__v757635546_1032_84)(0, true, $__.uid);
    thisAssignmentPattern = /this\s*\.\s*\S+\s*=/;
    rident = /^[a-z$_][a-z$_0-9]*$/i;
    ensureErrorObject = (($__.fs.J$__v757635546_1048_87 = function J$__v757635546_1048() {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    TAJS_invariant(typeof arguments[arguments.length - 1] === 'symbol');
    TAJS_invariant($__.refs.pop.call(arguments) === $__.uid);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
switch (vvv_switch) {
case 0:
    TAJS_invariant(typeof vvv_switch === 'number');
    TAJS_invariant(vvv_switch === 0);
    !('stack' in new Error());
    return ($__.fs.J$__v757635546_1046_88 = function J$__v757635546_1046(value) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
value = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (canAttachTrace(value))
    return value;
return new Error(safeToString(value));});
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (!('stack' in new Error())) {
    return function (value) {
        if (canAttachTrace(value))
            return value;
        try {
            throw new Error(safeToString(value));
        } catch (err) {
            return err;
        }
    };
} else {
    return function (value) {
        if (canAttachTrace(value))
            return value;
        return new Error(safeToString(value));
    };
}}), $__.fs.J$__v757635546_1048_87)(0, true, $__.uid);
    asArray = ($__.fs.J$__v757635546_1052_89 = function J$__v757635546_1052(v) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
v = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (es5.isArray(v)) {
    return v;
}
return null;});
    typeof Symbol !== 'undefined', TAJS_restrictToType(Symbol.iterator, 'symbol');
    ArrayFrom = (typeof TAJS_restrictToType(Array.from, 'function') === 'function', ($__.fs.J$__v757635546_1054_90 = function J$__v757635546_1054(v) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
v = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return Array.from(v);}));
    asArray = ($__.fs.J$__v757635546_1058_91 = function J$__v757635546_1058(v) {
var vvv_return, vvv_switch;
if (arguments[arguments.length - 1] === $__.uid) {
    $__.refs.pop.call(arguments);
    vvv_return = $__.refs.pop.call(arguments);
    vvv_switch = $__.refs.pop.call(arguments);
}
v = arguments[0];
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
if (es5.isArray(v)) {
    return v;
} else if (v != null && typeof v[Symbol.iterator] === 'function') {
    return ArrayFrom(v);
}
return null;});
    isNode = typeof process !== 'undefined';
    hasEnvVariables = typeof process !== 'undefined';
    ret = $__.os.oid50 = {
        'isClass': isClass,
        'isIdentifier': isIdentifier,
        'inheritedDataKeys': inheritedDataKeys,
        'getDataPropertyOrDefault': getDataPropertyOrDefault,
        'thrower': thrower,
        'isArray': TAJS_restrictToType((es5, $__.os.oid47).isArray, 'function'),
        'asArray': asArray,
        'notEnumerableProp': notEnumerableProp,
        'isPrimitive': isPrimitive,
        'isObject': isObject,
        'isError': isError,
        'canEvaluate': canEvaluate,
        'errorObj': errorObj,
        'tryCatch': tryCatch,
        'inherits': inherits,
        'withAppended': withAppended,
        'maybeWrapAsError': maybeWrapAsError,
        'toFastProperties': toFastProperties,
        'filledRange': filledRange,
        'toString': safeToString,
        'canAttachTrace': canAttachTrace,
        'ensureErrorObject': ensureErrorObject,
        'originatesFromRejection': originatesFromRejection,
        'markAsOriginatingFromRejection': markAsOriginatingFromRejection,
        'classString': classString,
        'copyDescriptors': copyDescriptors,
        'hasDevTools': ((typeof chrome !== 'undefined', chrome), typeof TAJS_restrictToType(chrome.loadTimes, 'function') === 'function'),
        'isNode': isNode,
        'hasEnvVariables': hasEnvVariables,
        'env': env,
        'global': globalObject,
        'getNativePromise': getNativePromise,
        'domainBind': domainBind
    };
    (ret, $__.os.oid50).isRecentNode = ((ret, $__.os.oid50).isNode, false);
    (ret, $__.os.oid50).isNode, false;
    try {
        throw new Error();
    } catch (e) {
        (ret, $__.os.oid50).lastLineError = e;
    }
    (module, $__.os.oid44).exports = ret;
    return;
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
es5 = _dereq_('./es5');
canEvaluate = typeof navigator == 'undefined';
errorObj = {
    e: {}
};
globalObject = typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this !== undefined ? this : null;
inherits = function (Child, Parent) {
    var hasProp = {}.hasOwnProperty;
    function T() {
        this.constructor = Child;
        this.constructor$ = Parent;
        for (var propertyName in Parent.prototype) {
            if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
                this[propertyName + '$'] = Parent.prototype[propertyName];
            }
        }
    }
    T.prototype = Parent.prototype;
    Child.prototype = new T();
    return Child.prototype;
};
inheritedDataKeys = function () {
    var excludedPrototypes = [
        Array.prototype,
        Object.prototype,
        Function.prototype
    ];
    var isExcludedProto = function (val) {
        for (var i = 0; i < excludedPrototypes.length; ++i) {
            if (excludedPrototypes[i] === val) {
                return true;
            }
        }
        return false;
    };
    if (es5.isES5) {
        var getKeys = Object.getOwnPropertyNames;
        return function (obj) {
            var ret = [];
            var visitedKeys = Object.create(null);
            while (obj != null && !isExcludedProto(obj)) {
                var keys;
                try {
                    keys = getKeys(obj);
                } catch (e) {
                    return ret;
                }
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (visitedKeys[key])
                        continue;
                    visitedKeys[key] = true;
                    var desc = Object.getOwnPropertyDescriptor(obj, key);
                    if (desc != null && desc.get == null && desc.set == null) {
                        ret.push(key);
                    }
                }
                obj = es5.getPrototypeOf(obj);
            }
            return ret;
        };
    } else {
        var hasProp = {}.hasOwnProperty;
        return function (obj) {
            if (isExcludedProto(obj))
                return [];
            var ret = [];
            enumeration:
                for (var key in obj) {
                    if (hasProp.call(obj, key)) {
                        ret.push(key);
                    } else {
                        for (var i = 0; i < excludedPrototypes.length; ++i) {
                            if (hasProp.call(excludedPrototypes[i], key)) {
                                continue enumeration;
                            }
                        }
                        ret.push(key);
                    }
                }
            return ret;
        };
    }
}();
thisAssignmentPattern = /this\s*\.\s*\S+\s*=/;
rident = /^[a-z$_][a-z$_0-9]*$/i;
ensureErrorObject = function () {
    if (!('stack' in new Error())) {
        return function (value) {
            if (canAttachTrace(value))
                return value;
            try {
                throw new Error(safeToString(value));
            } catch (err) {
                return err;
            }
        };
    } else {
        return function (value) {
            if (canAttachTrace(value))
                return value;
            return new Error(safeToString(value));
        };
    }
}();
asArray = function (v) {
    if (es5.isArray(v)) {
        return v;
    }
    return null;
};
if (typeof Symbol !== 'undefined' && Symbol.iterator) {
    ArrayFrom = typeof Array.from === 'function' ? function (v) {
        return Array.from(v);
    } : function (v) {
        var ret = [];
        var it = v[Symbol.iterator]();
        var itResult;
        while (!(itResult = it.next()).done) {
            ret.push(itResult.value);
        }
        return ret;
    };
    asArray = function (v) {
        if (es5.isArray(v)) {
            return v;
        } else if (v != null && typeof v[Symbol.iterator] === 'function') {
            return ArrayFrom(v);
        }
        return null;
    };
}
isNode = typeof process !== 'undefined' && classString(process).toLowerCase() === '[object process]';
hasEnvVariables = typeof process !== 'undefined' && typeof process.env !== 'undefined';
ret = {
    isClass: isClass,
    isIdentifier: isIdentifier,
    inheritedDataKeys: inheritedDataKeys,
    getDataPropertyOrDefault: getDataPropertyOrDefault,
    thrower: thrower,
    isArray: es5.isArray,
    asArray: asArray,
    notEnumerableProp: notEnumerableProp,
    isPrimitive: isPrimitive,
    isObject: isObject,
    isError: isError,
    canEvaluate: canEvaluate,
    errorObj: errorObj,
    tryCatch: tryCatch,
    inherits: inherits,
    withAppended: withAppended,
    maybeWrapAsError: maybeWrapAsError,
    toFastProperties: toFastProperties,
    filledRange: filledRange,
    toString: safeToString,
    canAttachTrace: canAttachTrace,
    ensureErrorObject: ensureErrorObject,
    originatesFromRejection: originatesFromRejection,
    markAsOriginatingFromRejection: markAsOriginatingFromRejection,
    classString: classString,
    copyDescriptors: copyDescriptors,
    hasDevTools: typeof chrome !== 'undefined' && chrome && typeof chrome.loadTimes === 'function',
    isNode: isNode,
    hasEnvVariables: hasEnvVariables,
    env: env,
    global: globalObject,
    getNativePromise: getNativePromise,
    domainBind: domainBind
};
ret.isRecentNode = ret.isNode && function () {
    var version = process.versions.node.split('.').map(Number);
    return version[0] === 0 && version[1] > 10 || version[0] > 0;
}();
if (ret.isNode)
    ret.toFastProperties(process);
try {
    throw new Error();
} catch (e) {
    ret.lastLineError = e;
}
module.exports = ret;}, $__.fs.J$__v757635546_1067_41),
            $__.os.oid35 = {
                './es5': 13
            }
        ]
    }, $__.os.oid37 = {}, [4], 0, true, $__.uid), $__.fs.s_42)(4, 77, true, $__.uid);
}
if (vvv_return)
    return;
TAJS_dumpValue('Not ' + 'reachable');
return function e(t, n, r) {
    function s(o, u) {
        if (!n[o]) {
            if (!t[o]) {
                var a = typeof _dereq_ == 'function' && _dereq_;
                if (!u && a)
                    return a(o, !0);
                if (i)
                    return i(o, !0);
                var f = new Error('Cannot find module \'' + o + '\'');
                throw f.code = 'MODULE_NOT_FOUND', f;
            }
            var l = n[o] = {
                exports: {}
            };
            t[o][0].call(l.exports, function (e) {
                var n = t[o][1][e];
                return s(n ? n : e);
            }, l, l.exports, e, t, n, r);
        }
        return n[o].exports;
    }
    var i = typeof _dereq_ == 'function' && _dereq_;
    for (var o = 0; o < r.length; o++)
        s(r[o]);
    return s;
}({
    1: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise) {
                var SomePromiseArray = Promise._SomePromiseArray;
                function any(promises) {
                    var ret = new SomePromiseArray(promises);
                    var promise = ret.promise();
                    ret.setHowMany(1);
                    ret.setUnwrap();
                    ret.init();
                    return promise;
                }
                Promise.any = function (promises) {
                    return any(promises);
                };
                Promise.prototype.any = function () {
                    return any(this);
                };
            };
        },
        {}
    ],
    2: [
        function (_dereq_, module, exports) {
            'use strict';
            var firstLineError;
            try {
                throw new Error();
            } catch (e) {
                firstLineError = e;
            }
            var schedule = _dereq_('./schedule');
            var Queue = _dereq_('./queue');
            var util = _dereq_('./util');
            function Async() {
                this._customScheduler = false;
                this._isTickUsed = false;
                this._lateQueue = new Queue(16);
                this._normalQueue = new Queue(16);
                this._haveDrainedQueues = false;
                this._trampolineEnabled = true;
                var self = this;
                this.drainQueues = function () {
                    self._drainQueues();
                };
                this._schedule = schedule;
            }
            Async.prototype.setScheduler = function (fn) {
                var prev = this._schedule;
                this._schedule = fn;
                this._customScheduler = true;
                return prev;
            };
            Async.prototype.hasCustomScheduler = function () {
                return this._customScheduler;
            };
            Async.prototype.enableTrampoline = function () {
                this._trampolineEnabled = true;
            };
            Async.prototype.disableTrampolineIfNecessary = function () {
                if (util.hasDevTools) {
                    this._trampolineEnabled = false;
                }
            };
            Async.prototype.haveItemsQueued = function () {
                return this._isTickUsed || this._haveDrainedQueues;
            };
            Async.prototype.fatalError = function (e, isNode) {
                if (isNode) {
                    process.stderr.write('Fatal ' + (e instanceof Error ? e.stack : e) + '\n');
                    process.exit(2);
                } else {
                    this.throwLater(e);
                }
            };
            Async.prototype.throwLater = function (fn, arg) {
                if (arguments.length === 1) {
                    arg = fn;
                    fn = function () {
                        throw arg;
                    };
                }
                if (typeof setTimeout !== 'undefined') {
                    setTimeout(function () {
                        fn(arg);
                    }, 0);
                } else
                    try {
                    this._schedule(function () {
                        fn(arg);
                    });
                } catch (e) {
                    throw new Error('No async scheduler available\n\n    See http://goo.gl/MqrFmX\n');
                }
            };
            function AsyncInvokeLater(fn, receiver, arg) {
                this._lateQueue.push(fn, receiver, arg);
                this._queueTick();
            }
            function AsyncInvoke(fn, receiver, arg) {
                this._normalQueue.push(fn, receiver, arg);
                this._queueTick();
            }
            function AsyncSettlePromises(promise) {
                this._normalQueue._pushOne(promise);
                this._queueTick();
            }
            if (!util.hasDevTools) {
                Async.prototype.invokeLater = AsyncInvokeLater;
                Async.prototype.invoke = AsyncInvoke;
                Async.prototype.settlePromises = AsyncSettlePromises;
            } else {
                Async.prototype.invokeLater = function (fn, receiver, arg) {
                    if (this._trampolineEnabled) {
                        AsyncInvokeLater.call(this, fn, receiver, arg);
                    } else {
                        this._schedule(function () {
                            setTimeout(function () {
                                fn.call(receiver, arg);
                            }, 100);
                        });
                    }
                };
                Async.prototype.invoke = function (fn, receiver, arg) {
                    if (this._trampolineEnabled) {
                        AsyncInvoke.call(this, fn, receiver, arg);
                    } else {
                        this._schedule(function () {
                            fn.call(receiver, arg);
                        });
                    }
                };
                Async.prototype.settlePromises = function (promise) {
                    if (this._trampolineEnabled) {
                        AsyncSettlePromises.call(this, promise);
                    } else {
                        this._schedule(function () {
                            promise._settlePromises();
                        });
                    }
                };
            }
            Async.prototype._drainQueue = function (queue) {
                while (queue.length() > 0) {
                    var fn = queue.shift();
                    if (typeof fn !== 'function') {
                        fn._settlePromises();
                        continue;
                    }
                    var receiver = queue.shift();
                    var arg = queue.shift();
                    fn.call(receiver, arg);
                }
            };
            Async.prototype._drainQueues = function () {
                this._drainQueue(this._normalQueue);
                this._reset();
                this._haveDrainedQueues = true;
                this._drainQueue(this._lateQueue);
            };
            Async.prototype._queueTick = function () {
                if (!this._isTickUsed) {
                    this._isTickUsed = true;
                    this._schedule(this.drainQueues);
                }
            };
            Async.prototype._reset = function () {
                this._isTickUsed = false;
            };
            module.exports = Async;
            module.exports.firstLineError = firstLineError;
        },
        {
            './queue': 26,
            './schedule': 29,
            './util': 36
        }
    ],
    3: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL, tryConvertToPromise, debug) {
                var calledBind = false;
                var rejectThis = function (_, e) {
                    this._reject(e);
                };
                var targetRejected = function (e, context) {
                    context.promiseRejectionQueued = true;
                    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);
                };
                var bindingResolved = function (thisArg, context) {
                    if ((this._bitField & 50397184) === 0) {
                        this._resolveCallback(context.target);
                    }
                };
                var bindingRejected = function (e, context) {
                    if (!context.promiseRejectionQueued)
                        this._reject(e);
                };
                Promise.prototype.bind = function (thisArg) {
                    if (!calledBind) {
                        calledBind = true;
                        Promise.prototype._propagateFrom = debug.propagateFromFunction();
                        Promise.prototype._boundValue = debug.boundValueFunction();
                    }
                    var maybePromise = tryConvertToPromise(thisArg);
                    var ret = new Promise(INTERNAL);
                    ret._propagateFrom(this, 1);
                    var target = this._target();
                    ret._setBoundTo(maybePromise);
                    if (maybePromise instanceof Promise) {
                        var context = {
                            promiseRejectionQueued: false,
                            promise: ret,
                            target: target,
                            bindingPromise: maybePromise
                        };
                        target._then(INTERNAL, targetRejected, undefined, ret, context);
                        maybePromise._then(bindingResolved, bindingRejected, undefined, ret, context);
                        ret._setOnCancel(maybePromise);
                    } else {
                        ret._resolveCallback(target);
                    }
                    return ret;
                };
                Promise.prototype._setBoundTo = function (obj) {
                    if (obj !== undefined) {
                        this._bitField = this._bitField | 2097152;
                        this._boundTo = obj;
                    } else {
                        this._bitField = this._bitField & ~2097152;
                    }
                };
                Promise.prototype._isBound = function () {
                    return (this._bitField & 2097152) === 2097152;
                };
                Promise.bind = function (thisArg, value) {
                    return Promise.resolve(value).bind(thisArg);
                };
            };
        },
        {}
    ],
    4: [
        function (_dereq_, module, exports) {
            'use strict';
            var old;
            if (typeof Promise !== 'undefined')
                old = Promise;
            function noConflict() {
                try {
                    if (Promise === bluebird)
                        Promise = old;
                } catch (e) {
                }
                return bluebird;
            }
            var bluebird = _dereq_('./promise')();
            bluebird.noConflict = noConflict;
            module.exports = bluebird;
        },
        {
            './promise': 22
        }
    ],
    5: [
        function (_dereq_, module, exports) {
            'use strict';
            var cr = Object.create;
            if (cr) {
                var callerCache = cr(null);
                var getterCache = cr(null);
                callerCache[' size'] = getterCache[' size'] = 0;
            }
            module.exports = function (Promise) {
                var util = _dereq_('./util');
                var canEvaluate = util.canEvaluate;
                var isIdentifier = util.isIdentifier;
                var getMethodCaller;
                var getGetter;
                if (!true) {
                    var makeMethodCaller = function (methodName) {
                        return new Function('ensureMethod', '                                    \n        return function(obj) {                                               \n            \'use strict\'                                                     \n            var len = this.length;                                           \n            ensureMethod(obj, \'methodName\');                                 \n            switch(len) {                                                    \n                case 1: return obj.methodName(this[0]);                      \n                case 2: return obj.methodName(this[0], this[1]);             \n                case 3: return obj.methodName(this[0], this[1], this[2]);    \n                case 0: return obj.methodName();                             \n                default:                                                     \n                    return obj.methodName.apply(obj, this);                  \n            }                                                                \n        };                                                                   \n        '.replace(/methodName/g, methodName))(ensureMethod);
                    };
                    var makeGetter = function (propertyName) {
                        return new Function('obj', '                                             \n        \'use strict\';                                                        \n        return obj.propertyName;                                             \n        '.replace('propertyName', propertyName));
                    };
                    var getCompiled = function (name, compiler, cache) {
                        var ret = cache[name];
                        if (typeof ret !== 'function') {
                            if (!isIdentifier(name)) {
                                return null;
                            }
                            ret = compiler(name);
                            cache[name] = ret;
                            cache[' size']++;
                            if (cache[' size'] > 512) {
                                var keys = Object.keys(cache);
                                for (var i = 0; i < 256; ++i)
                                    delete cache[keys[i]];
                                cache[' size'] = keys.length - 256;
                            }
                        }
                        return ret;
                    };
                    getMethodCaller = function (name) {
                        return getCompiled(name, makeMethodCaller, callerCache);
                    };
                    getGetter = function (name) {
                        return getCompiled(name, makeGetter, getterCache);
                    };
                }
                function ensureMethod(obj, methodName) {
                    var fn;
                    if (obj != null)
                        fn = obj[methodName];
                    if (typeof fn !== 'function') {
                        var message = 'Object ' + util.classString(obj) + ' has no method \'' + util.toString(methodName) + '\'';
                        throw new Promise.TypeError(message);
                    }
                    return fn;
                }
                function caller(obj) {
                    var methodName = this.pop();
                    var fn = ensureMethod(obj, methodName);
                    return fn.apply(obj, this);
                }
                Promise.prototype.call = function (methodName) {
                    var args = [].slice.call(arguments, 1);
                    ;
                    if (!true) {
                        if (canEvaluate) {
                            var maybeCaller = getMethodCaller(methodName);
                            if (maybeCaller !== null) {
                                return this._then(maybeCaller, undefined, undefined, args, undefined);
                            }
                        }
                    }
                    args.push(methodName);
                    return this._then(caller, undefined, undefined, args, undefined);
                };
                function namedGetter(obj) {
                    return obj[this];
                }
                function indexedGetter(obj) {
                    var index = +this;
                    if (index < 0)
                        index = Math.max(0, index + obj.length);
                    return obj[index];
                }
                Promise.prototype.get = function (propertyName) {
                    var isIndex = typeof propertyName === 'number';
                    var getter;
                    if (!isIndex) {
                        if (canEvaluate) {
                            var maybeGetter = getGetter(propertyName);
                            getter = maybeGetter !== null ? maybeGetter : namedGetter;
                        } else {
                            getter = namedGetter;
                        }
                    } else {
                        getter = indexedGetter;
                    }
                    return this._then(getter, undefined, undefined, propertyName, undefined);
                };
            };
        },
        {
            './util': 36
        }
    ],
    6: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, PromiseArray, apiRejection, debug) {
                var util = _dereq_('./util');
                var tryCatch = util.tryCatch;
                var errorObj = util.errorObj;
                var async = Promise._async;
                Promise.prototype['break'] = Promise.prototype.cancel = function () {
                    if (!debug.cancellation())
                        return this._warn('cancellation is disabled');
                    var promise = this;
                    var child = promise;
                    while (promise._isCancellable()) {
                        if (!promise._cancelBy(child)) {
                            if (child._isFollowing()) {
                                child._followee().cancel();
                            } else {
                                child._cancelBranched();
                            }
                            break;
                        }
                        var parent = promise._cancellationParent;
                        if (parent == null || !parent._isCancellable()) {
                            if (promise._isFollowing()) {
                                promise._followee().cancel();
                            } else {
                                promise._cancelBranched();
                            }
                            break;
                        } else {
                            if (promise._isFollowing())
                                promise._followee().cancel();
                            promise._setWillBeCancelled();
                            child = promise;
                            promise = parent;
                        }
                    }
                };
                Promise.prototype._branchHasCancelled = function () {
                    this._branchesRemainingToCancel--;
                };
                Promise.prototype._enoughBranchesHaveCancelled = function () {
                    return this._branchesRemainingToCancel === undefined || this._branchesRemainingToCancel <= 0;
                };
                Promise.prototype._cancelBy = function (canceller) {
                    if (canceller === this) {
                        this._branchesRemainingToCancel = 0;
                        this._invokeOnCancel();
                        return true;
                    } else {
                        this._branchHasCancelled();
                        if (this._enoughBranchesHaveCancelled()) {
                            this._invokeOnCancel();
                            return true;
                        }
                    }
                    return false;
                };
                Promise.prototype._cancelBranched = function () {
                    if (this._enoughBranchesHaveCancelled()) {
                        this._cancel();
                    }
                };
                Promise.prototype._cancel = function () {
                    if (!this._isCancellable())
                        return;
                    this._setCancelled();
                    async.invoke(this._cancelPromises, this, undefined);
                };
                Promise.prototype._cancelPromises = function () {
                    if (this._length() > 0)
                        this._settlePromises();
                };
                Promise.prototype._unsetOnCancel = function () {
                    this._onCancelField = undefined;
                };
                Promise.prototype._isCancellable = function () {
                    return this.isPending() && !this._isCancelled();
                };
                Promise.prototype.isCancellable = function () {
                    return this.isPending() && !this.isCancelled();
                };
                Promise.prototype._doInvokeOnCancel = function (onCancelCallback, internalOnly) {
                    if (util.isArray(onCancelCallback)) {
                        for (var i = 0; i < onCancelCallback.length; ++i) {
                            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);
                        }
                    } else if (onCancelCallback !== undefined) {
                        if (typeof onCancelCallback === 'function') {
                            if (!internalOnly) {
                                var e = tryCatch(onCancelCallback).call(this._boundValue());
                                if (e === errorObj) {
                                    this._attachExtraTrace(e.e);
                                    async.throwLater(e.e);
                                }
                            }
                        } else {
                            onCancelCallback._resultCancelled(this);
                        }
                    }
                };
                Promise.prototype._invokeOnCancel = function () {
                    var onCancelCallback = this._onCancel();
                    this._unsetOnCancel();
                    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);
                };
                Promise.prototype._invokeInternalOnCancel = function () {
                    if (this._isCancellable()) {
                        this._doInvokeOnCancel(this._onCancel(), true);
                        this._unsetOnCancel();
                    }
                };
                Promise.prototype._resultCancelled = function () {
                    this.cancel();
                };
            };
        },
        {
            './util': 36
        }
    ],
    7: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (NEXT_FILTER) {
                var util = _dereq_('./util');
                var getKeys = _dereq_('./es5').keys;
                var tryCatch = util.tryCatch;
                var errorObj = util.errorObj;
                function catchFilter(instances, cb, promise) {
                    return function (e) {
                        var boundTo = promise._boundValue();
                        predicateLoop:
                            for (var i = 0; i < instances.length; ++i) {
                                var item = instances[i];
                                if (item === Error || item != null && item.prototype instanceof Error) {
                                    if (e instanceof item) {
                                        return tryCatch(cb).call(boundTo, e);
                                    }
                                } else if (typeof item === 'function') {
                                    var matchesPredicate = tryCatch(item).call(boundTo, e);
                                    if (matchesPredicate === errorObj) {
                                        return matchesPredicate;
                                    } else if (matchesPredicate) {
                                        return tryCatch(cb).call(boundTo, e);
                                    }
                                } else if (util.isObject(e)) {
                                    var keys = getKeys(item);
                                    for (var j = 0; j < keys.length; ++j) {
                                        var key = keys[j];
                                        if (item[key] != e[key]) {
                                            continue predicateLoop;
                                        }
                                    }
                                    return tryCatch(cb).call(boundTo, e);
                                }
                            }
                        return NEXT_FILTER;
                    };
                }
                return catchFilter;
            };
        },
        {
            './es5': 13,
            './util': 36
        }
    ],
    8: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise) {
                var longStackTraces = false;
                var contextStack = [];
                Promise.prototype._promiseCreated = function () {
                };
                Promise.prototype._pushContext = function () {
                };
                Promise.prototype._popContext = function () {
                    return null;
                };
                Promise._peekContext = Promise.prototype._peekContext = function () {
                };
                function Context() {
                    this._trace = new Context.CapturedTrace(peekContext());
                }
                Context.prototype._pushContext = function () {
                    if (this._trace !== undefined) {
                        this._trace._promiseCreated = null;
                        contextStack.push(this._trace);
                    }
                };
                Context.prototype._popContext = function () {
                    if (this._trace !== undefined) {
                        var trace = contextStack.pop();
                        var ret = trace._promiseCreated;
                        trace._promiseCreated = null;
                        return ret;
                    }
                    return null;
                };
                function createContext() {
                    if (longStackTraces)
                        return new Context();
                }
                function peekContext() {
                    var lastIndex = contextStack.length - 1;
                    if (lastIndex >= 0) {
                        return contextStack[lastIndex];
                    }
                    return undefined;
                }
                Context.CapturedTrace = null;
                Context.create = createContext;
                Context.deactivateLongStackTraces = function () {
                };
                Context.activateLongStackTraces = function () {
                    var Promise_pushContext = Promise.prototype._pushContext;
                    var Promise_popContext = Promise.prototype._popContext;
                    var Promise_PeekContext = Promise._peekContext;
                    var Promise_peekContext = Promise.prototype._peekContext;
                    var Promise_promiseCreated = Promise.prototype._promiseCreated;
                    Context.deactivateLongStackTraces = function () {
                        Promise.prototype._pushContext = Promise_pushContext;
                        Promise.prototype._popContext = Promise_popContext;
                        Promise._peekContext = Promise_PeekContext;
                        Promise.prototype._peekContext = Promise_peekContext;
                        Promise.prototype._promiseCreated = Promise_promiseCreated;
                        longStackTraces = false;
                    };
                    longStackTraces = true;
                    Promise.prototype._pushContext = Context.prototype._pushContext;
                    Promise.prototype._popContext = Context.prototype._popContext;
                    Promise._peekContext = Promise.prototype._peekContext = peekContext;
                    Promise.prototype._promiseCreated = function () {
                        var ctx = this._peekContext();
                        if (ctx && ctx._promiseCreated == null)
                            ctx._promiseCreated = this;
                    };
                };
                return Context;
            };
        },
        {}
    ],
    9: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, Context) {
                var getDomain = Promise._getDomain;
                var async = Promise._async;
                var Warning = _dereq_('./errors').Warning;
                var util = _dereq_('./util');
                var canAttachTrace = util.canAttachTrace;
                var unhandledRejectionHandled;
                var possiblyUnhandledRejection;
                var bluebirdFramePattern = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
                var nodeFramePattern = /\((?:timers\.js):\d+:\d+\)/;
                var parseLinePattern = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/;
                var stackFramePattern = null;
                var formatStack = null;
                var indentStackFrames = false;
                var printWarning;
                var debugging = !!(util.env('BLUEBIRD_DEBUG') != 0 && (true || util.env('BLUEBIRD_DEBUG') || util.env('NODE_ENV') === 'development'));
                var warnings = !!(util.env('BLUEBIRD_WARNINGS') != 0 && (debugging || util.env('BLUEBIRD_WARNINGS')));
                var longStackTraces = !!(util.env('BLUEBIRD_LONG_STACK_TRACES') != 0 && (debugging || util.env('BLUEBIRD_LONG_STACK_TRACES')));
                var wForgottenReturn = util.env('BLUEBIRD_W_FORGOTTEN_RETURN') != 0 && (warnings || !!util.env('BLUEBIRD_W_FORGOTTEN_RETURN'));
                Promise.prototype.suppressUnhandledRejections = function () {
                    var target = this._target();
                    target._bitField = target._bitField & ~1048576 | 524288;
                };
                Promise.prototype._ensurePossibleRejectionHandled = function () {
                    if ((this._bitField & 524288) !== 0)
                        return;
                    this._setRejectionIsUnhandled();
                    async.invokeLater(this._notifyUnhandledRejection, this, undefined);
                };
                Promise.prototype._notifyUnhandledRejectionIsHandled = function () {
                    fireRejectionEvent('rejectionHandled', unhandledRejectionHandled, undefined, this);
                };
                Promise.prototype._setReturnedNonUndefined = function () {
                    this._bitField = this._bitField | 268435456;
                };
                Promise.prototype._returnedNonUndefined = function () {
                    return (this._bitField & 268435456) !== 0;
                };
                Promise.prototype._notifyUnhandledRejection = function () {
                    if (this._isRejectionUnhandled()) {
                        var reason = this._settledValue();
                        this._setUnhandledRejectionIsNotified();
                        fireRejectionEvent('unhandledRejection', possiblyUnhandledRejection, reason, this);
                    }
                };
                Promise.prototype._setUnhandledRejectionIsNotified = function () {
                    this._bitField = this._bitField | 262144;
                };
                Promise.prototype._unsetUnhandledRejectionIsNotified = function () {
                    this._bitField = this._bitField & ~262144;
                };
                Promise.prototype._isUnhandledRejectionNotified = function () {
                    return (this._bitField & 262144) > 0;
                };
                Promise.prototype._setRejectionIsUnhandled = function () {
                    this._bitField = this._bitField | 1048576;
                };
                Promise.prototype._unsetRejectionIsUnhandled = function () {
                    this._bitField = this._bitField & ~1048576;
                    if (this._isUnhandledRejectionNotified()) {
                        this._unsetUnhandledRejectionIsNotified();
                        this._notifyUnhandledRejectionIsHandled();
                    }
                };
                Promise.prototype._isRejectionUnhandled = function () {
                    return (this._bitField & 1048576) > 0;
                };
                Promise.prototype._warn = function (message, shouldUseOwnTrace, promise) {
                    return warn(message, shouldUseOwnTrace, promise || this);
                };
                Promise.onPossiblyUnhandledRejection = function (fn) {
                    var domain = getDomain();
                    possiblyUnhandledRejection = typeof fn === 'function' ? domain === null ? fn : util.domainBind(domain, fn) : undefined;
                };
                Promise.onUnhandledRejectionHandled = function (fn) {
                    var domain = getDomain();
                    unhandledRejectionHandled = typeof fn === 'function' ? domain === null ? fn : util.domainBind(domain, fn) : undefined;
                };
                var disableLongStackTraces = function () {
                };
                Promise.longStackTraces = function () {
                    if (async.haveItemsQueued() && !config.longStackTraces) {
                        throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    if (!config.longStackTraces && longStackTracesIsSupported()) {
                        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;
                        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;
                        config.longStackTraces = true;
                        disableLongStackTraces = function () {
                            if (async.haveItemsQueued() && !config.longStackTraces) {
                                throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
                            }
                            Promise.prototype._captureStackTrace = Promise_captureStackTrace;
                            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
                            Context.deactivateLongStackTraces();
                            async.enableTrampoline();
                            config.longStackTraces = false;
                        };
                        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
                        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
                        Context.activateLongStackTraces();
                        async.disableTrampolineIfNecessary();
                    }
                };
                Promise.hasLongStackTraces = function () {
                    return config.longStackTraces && longStackTracesIsSupported();
                };
                var fireDomEvent = function () {
                    try {
                        if (typeof CustomEvent === 'function') {
                            var event = new CustomEvent('CustomEvent');
                            util.global.dispatchEvent(event);
                            return function (name, event) {
                                var domEvent = new CustomEvent(name.toLowerCase(), {
                                    detail: event,
                                    cancelable: true
                                });
                                return !util.global.dispatchEvent(domEvent);
                            };
                        } else if (typeof Event === 'function') {
                            var event = new Event('CustomEvent');
                            util.global.dispatchEvent(event);
                            return function (name, event) {
                                var domEvent = new Event(name.toLowerCase(), {
                                    cancelable: true
                                });
                                domEvent.detail = event;
                                return !util.global.dispatchEvent(domEvent);
                            };
                        } else {
                            var event = document.createEvent('CustomEvent');
                            event.initCustomEvent('testingtheevent', false, true, {});
                            util.global.dispatchEvent(event);
                            return function (name, event) {
                                var domEvent = document.createEvent('CustomEvent');
                                domEvent.initCustomEvent(name.toLowerCase(), false, true, event);
                                return !util.global.dispatchEvent(domEvent);
                            };
                        }
                    } catch (e) {
                    }
                    return function () {
                        return false;
                    };
                }();
                var fireGlobalEvent = function () {
                    if (util.isNode) {
                        return function () {
                            return process.emit.apply(process, arguments);
                        };
                    } else {
                        if (!util.global) {
                            return function () {
                                return false;
                            };
                        }
                        return function (name) {
                            var methodName = 'on' + name.toLowerCase();
                            var method = util.global[methodName];
                            if (!method)
                                return false;
                            method.apply(util.global, [].slice.call(arguments, 1));
                            return true;
                        };
                    }
                }();
                function generatePromiseLifecycleEventObject(name, promise) {
                    return {
                        promise: promise
                    };
                }
                var eventToObjectGenerator = {
                    promiseCreated: generatePromiseLifecycleEventObject,
                    promiseFulfilled: generatePromiseLifecycleEventObject,
                    promiseRejected: generatePromiseLifecycleEventObject,
                    promiseResolved: generatePromiseLifecycleEventObject,
                    promiseCancelled: generatePromiseLifecycleEventObject,
                    promiseChained: function (name, promise, child) {
                        return {
                            promise: promise,
                            child: child
                        };
                    },
                    warning: function (name, warning) {
                        return {
                            warning: warning
                        };
                    },
                    unhandledRejection: function (name, reason, promise) {
                        return {
                            reason: reason,
                            promise: promise
                        };
                    },
                    rejectionHandled: generatePromiseLifecycleEventObject
                };
                var activeFireEvent = function (name) {
                    var globalEventFired = false;
                    try {
                        globalEventFired = fireGlobalEvent.apply(null, arguments);
                    } catch (e) {
                        async.throwLater(e);
                        globalEventFired = true;
                    }
                    var domEventFired = false;
                    try {
                        domEventFired = fireDomEvent(name, eventToObjectGenerator[name].apply(null, arguments));
                    } catch (e) {
                        async.throwLater(e);
                        domEventFired = true;
                    }
                    return domEventFired || globalEventFired;
                };
                Promise.config = function (opts) {
                    opts = Object(opts);
                    if ('longStackTraces' in opts) {
                        if (opts.longStackTraces) {
                            Promise.longStackTraces();
                        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {
                            disableLongStackTraces();
                        }
                    }
                    if ('warnings' in opts) {
                        var warningsOption = opts.warnings;
                        config.warnings = !!warningsOption;
                        wForgottenReturn = config.warnings;
                        if (util.isObject(warningsOption)) {
                            if ('wForgottenReturn' in warningsOption) {
                                wForgottenReturn = !!warningsOption.wForgottenReturn;
                            }
                        }
                    }
                    if ('cancellation' in opts && opts.cancellation && !config.cancellation) {
                        if (async.haveItemsQueued()) {
                            throw new Error('cannot enable cancellation after promises are in use');
                        }
                        Promise.prototype._clearCancellationData = cancellationClearCancellationData;
                        Promise.prototype._propagateFrom = cancellationPropagateFrom;
                        Promise.prototype._onCancel = cancellationOnCancel;
                        Promise.prototype._setOnCancel = cancellationSetOnCancel;
                        Promise.prototype._attachCancellationCallback = cancellationAttachCancellationCallback;
                        Promise.prototype._execute = cancellationExecute;
                        propagateFromFunction = cancellationPropagateFrom;
                        config.cancellation = true;
                    }
                    if ('monitoring' in opts) {
                        if (opts.monitoring && !config.monitoring) {
                            config.monitoring = true;
                            Promise.prototype._fireEvent = activeFireEvent;
                        } else if (!opts.monitoring && config.monitoring) {
                            config.monitoring = false;
                            Promise.prototype._fireEvent = defaultFireEvent;
                        }
                    }
                    return Promise;
                };
                function defaultFireEvent() {
                    return false;
                }
                Promise.prototype._fireEvent = defaultFireEvent;
                Promise.prototype._execute = function (executor, resolve, reject) {
                    try {
                        executor(resolve, reject);
                    } catch (e) {
                        return e;
                    }
                };
                Promise.prototype._onCancel = function () {
                };
                Promise.prototype._setOnCancel = function (handler) {
                    ;
                };
                Promise.prototype._attachCancellationCallback = function (onCancel) {
                    ;
                };
                Promise.prototype._captureStackTrace = function () {
                };
                Promise.prototype._attachExtraTrace = function () {
                };
                Promise.prototype._clearCancellationData = function () {
                };
                Promise.prototype._propagateFrom = function (parent, flags) {
                    ;
                    ;
                };
                function cancellationExecute(executor, resolve, reject) {
                    var promise = this;
                    try {
                        executor(resolve, reject, function (onCancel) {
                            if (typeof onCancel !== 'function') {
                                throw new TypeError('onCancel must be a function, got: ' + util.toString(onCancel));
                            }
                            promise._attachCancellationCallback(onCancel);
                        });
                    } catch (e) {
                        return e;
                    }
                }
                function cancellationAttachCancellationCallback(onCancel) {
                    if (!this._isCancellable())
                        return this;
                    var previousOnCancel = this._onCancel();
                    if (previousOnCancel !== undefined) {
                        if (util.isArray(previousOnCancel)) {
                            previousOnCancel.push(onCancel);
                        } else {
                            this._setOnCancel([
                                previousOnCancel,
                                onCancel
                            ]);
                        }
                    } else {
                        this._setOnCancel(onCancel);
                    }
                }
                function cancellationOnCancel() {
                    return this._onCancelField;
                }
                function cancellationSetOnCancel(onCancel) {
                    this._onCancelField = onCancel;
                }
                function cancellationClearCancellationData() {
                    this._cancellationParent = undefined;
                    this._onCancelField = undefined;
                }
                function cancellationPropagateFrom(parent, flags) {
                    if ((flags & 1) !== 0) {
                        this._cancellationParent = parent;
                        var branchesRemainingToCancel = parent._branchesRemainingToCancel;
                        if (branchesRemainingToCancel === undefined) {
                            branchesRemainingToCancel = 0;
                        }
                        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
                    }
                    if ((flags & 2) !== 0 && parent._isBound()) {
                        this._setBoundTo(parent._boundTo);
                    }
                }
                function bindingPropagateFrom(parent, flags) {
                    if ((flags & 2) !== 0 && parent._isBound()) {
                        this._setBoundTo(parent._boundTo);
                    }
                }
                var propagateFromFunction = bindingPropagateFrom;
                function boundValueFunction() {
                    var ret = this._boundTo;
                    if (ret !== undefined) {
                        if (ret instanceof Promise) {
                            if (ret.isFulfilled()) {
                                return ret.value();
                            } else {
                                return undefined;
                            }
                        }
                    }
                    return ret;
                }
                function longStackTracesCaptureStackTrace() {
                    this._trace = new CapturedTrace(this._peekContext());
                }
                function longStackTracesAttachExtraTrace(error, ignoreSelf) {
                    if (canAttachTrace(error)) {
                        var trace = this._trace;
                        if (trace !== undefined) {
                            if (ignoreSelf)
                                trace = trace._parent;
                        }
                        if (trace !== undefined) {
                            trace.attachExtraTrace(error);
                        } else if (!error.__stackCleaned__) {
                            var parsed = parseStackAndMessage(error);
                            util.notEnumerableProp(error, 'stack', parsed.message + '\n' + parsed.stack.join('\n'));
                            util.notEnumerableProp(error, '__stackCleaned__', true);
                        }
                    }
                }
                function checkForgottenReturns(returnValue, promiseCreated, name, promise, parent) {
                    if (returnValue === undefined && promiseCreated !== null && wForgottenReturn) {
                        if (parent !== undefined && parent._returnedNonUndefined())
                            return;
                        if ((promise._bitField & 65535) === 0)
                            return;
                        if (name)
                            name = name + ' ';
                        var handlerLine = '';
                        var creatorLine = '';
                        if (promiseCreated._trace) {
                            var traceLines = promiseCreated._trace.stack.split('\n');
                            var stack = cleanStack(traceLines);
                            for (var i = stack.length - 1; i >= 0; --i) {
                                var line = stack[i];
                                if (!nodeFramePattern.test(line)) {
                                    var lineMatches = line.match(parseLinePattern);
                                    if (lineMatches) {
                                        handlerLine = 'at ' + lineMatches[1] + ':' + lineMatches[2] + ':' + lineMatches[3] + ' ';
                                    }
                                    break;
                                }
                            }
                            if (stack.length > 0) {
                                var firstUserLine = stack[0];
                                for (var i = 0; i < traceLines.length; ++i) {
                                    if (traceLines[i] === firstUserLine) {
                                        if (i > 0) {
                                            creatorLine = '\n' + traceLines[i - 1];
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        var msg = 'a promise was created in a ' + name + 'handler ' + handlerLine + 'but was not returned from it, ' + 'see http://goo.gl/rRqMUw' + creatorLine;
                        promise._warn(msg, true, promiseCreated);
                    }
                }
                function deprecated(name, replacement) {
                    var message = name + ' is deprecated and will be removed in a future version.';
                    if (replacement)
                        message += ' Use ' + replacement + ' instead.';
                    return warn(message);
                }
                function warn(message, shouldUseOwnTrace, promise) {
                    if (!config.warnings)
                        return;
                    var warning = new Warning(message);
                    var ctx;
                    if (shouldUseOwnTrace) {
                        promise._attachExtraTrace(warning);
                    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {
                        ctx.attachExtraTrace(warning);
                    } else {
                        var parsed = parseStackAndMessage(warning);
                        warning.stack = parsed.message + '\n' + parsed.stack.join('\n');
                    }
                    if (!activeFireEvent('warning', warning)) {
                        formatAndLogError(warning, '', true);
                    }
                }
                function reconstructStack(message, stacks) {
                    for (var i = 0; i < stacks.length - 1; ++i) {
                        stacks[i].push('From previous event:');
                        stacks[i] = stacks[i].join('\n');
                    }
                    if (i < stacks.length) {
                        stacks[i] = stacks[i].join('\n');
                    }
                    return message + '\n' + stacks.join('\n');
                }
                function removeDuplicateOrEmptyJumps(stacks) {
                    for (var i = 0; i < stacks.length; ++i) {
                        if (stacks[i].length === 0 || i + 1 < stacks.length && stacks[i][0] === stacks[i + 1][0]) {
                            stacks.splice(i, 1);
                            i--;
                        }
                    }
                }
                function removeCommonRoots(stacks) {
                    var current = stacks[0];
                    for (var i = 1; i < stacks.length; ++i) {
                        var prev = stacks[i];
                        var currentLastIndex = current.length - 1;
                        var currentLastLine = current[currentLastIndex];
                        var commonRootMeetPoint = -1;
                        for (var j = prev.length - 1; j >= 0; --j) {
                            if (prev[j] === currentLastLine) {
                                commonRootMeetPoint = j;
                                break;
                            }
                        }
                        for (var j = commonRootMeetPoint; j >= 0; --j) {
                            var line = prev[j];
                            if (current[currentLastIndex] === line) {
                                current.pop();
                                currentLastIndex--;
                            } else {
                                break;
                            }
                        }
                        current = prev;
                    }
                }
                function cleanStack(stack) {
                    var ret = [];
                    for (var i = 0; i < stack.length; ++i) {
                        var line = stack[i];
                        var isTraceLine = '    (No stack trace)' === line || stackFramePattern.test(line);
                        var isInternalFrame = isTraceLine && shouldIgnore(line);
                        if (isTraceLine && !isInternalFrame) {
                            if (indentStackFrames && line.charAt(0) !== ' ') {
                                line = '    ' + line;
                            }
                            ret.push(line);
                        }
                    }
                    return ret;
                }
                function stackFramesAsArray(error) {
                    var stack = error.stack.replace(/\s+$/g, '').split('\n');
                    for (var i = 0; i < stack.length; ++i) {
                        var line = stack[i];
                        if ('    (No stack trace)' === line || stackFramePattern.test(line)) {
                            break;
                        }
                    }
                    if (i > 0 && error.name != 'SyntaxError') {
                        stack = stack.slice(i);
                    }
                    return stack;
                }
                function parseStackAndMessage(error) {
                    var stack = error.stack;
                    var message = error.toString();
                    stack = typeof stack === 'string' && stack.length > 0 ? stackFramesAsArray(error) : ['    (No stack trace)'];
                    return {
                        message: message,
                        stack: error.name == 'SyntaxError' ? stack : cleanStack(stack)
                    };
                }
                function formatAndLogError(error, title, isSoft) {
                    if (typeof console !== 'undefined') {
                        var message;
                        if (util.isObject(error)) {
                            var stack = error.stack;
                            message = title + formatStack(stack, error);
                        } else {
                            message = title + String(error);
                        }
                        if (typeof printWarning === 'function') {
                            printWarning(message, isSoft);
                        } else if (typeof console.log === 'function' || typeof console.log === 'object') {
                            console.log(message);
                        }
                    }
                }
                function fireRejectionEvent(name, localHandler, reason, promise) {
                    var localEventFired = false;
                    try {
                        if (typeof localHandler === 'function') {
                            localEventFired = true;
                            if (name === 'rejectionHandled') {
                                localHandler(promise);
                            } else {
                                localHandler(reason, promise);
                            }
                        }
                    } catch (e) {
                        async.throwLater(e);
                    }
                    if (name === 'unhandledRejection') {
                        if (!activeFireEvent(name, reason, promise) && !localEventFired) {
                            formatAndLogError(reason, 'Unhandled rejection ');
                        }
                    } else {
                        activeFireEvent(name, promise);
                    }
                }
                function formatNonError(obj) {
                    var str;
                    if (typeof obj === 'function') {
                        str = '[function ' + (obj.name || 'anonymous') + ']';
                    } else {
                        str = obj && typeof obj.toString === 'function' ? obj.toString() : util.toString(obj);
                        var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
                        if (ruselessToString.test(str)) {
                            try {
                                var newStr = JSON.stringify(obj);
                                str = newStr;
                            } catch (e) {
                            }
                        }
                        if (str.length === 0) {
                            str = '(empty array)';
                        }
                    }
                    return '(<' + snip(str) + '>, no stack trace)';
                }
                function snip(str) {
                    var maxChars = 41;
                    if (str.length < maxChars) {
                        return str;
                    }
                    return str.substr(0, maxChars - 3) + '...';
                }
                function longStackTracesIsSupported() {
                    return typeof captureStackTrace === 'function';
                }
                var shouldIgnore = function () {
                    return false;
                };
                var parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
                function parseLineInfo(line) {
                    var matches = line.match(parseLineInfoRegex);
                    if (matches) {
                        return {
                            fileName: matches[1],
                            line: parseInt(matches[2], 10)
                        };
                    }
                }
                function setBounds(firstLineError, lastLineError) {
                    if (!longStackTracesIsSupported())
                        return;
                    var firstStackLines = firstLineError.stack.split('\n');
                    var lastStackLines = lastLineError.stack.split('\n');
                    var firstIndex = -1;
                    var lastIndex = -1;
                    var firstFileName;
                    var lastFileName;
                    for (var i = 0; i < firstStackLines.length; ++i) {
                        var result = parseLineInfo(firstStackLines[i]);
                        if (result) {
                            firstFileName = result.fileName;
                            firstIndex = result.line;
                            break;
                        }
                    }
                    for (var i = 0; i < lastStackLines.length; ++i) {
                        var result = parseLineInfo(lastStackLines[i]);
                        if (result) {
                            lastFileName = result.fileName;
                            lastIndex = result.line;
                            break;
                        }
                    }
                    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName || firstFileName !== lastFileName || firstIndex >= lastIndex) {
                        return;
                    }
                    shouldIgnore = function (line) {
                        if (bluebirdFramePattern.test(line))
                            return true;
                        var info = parseLineInfo(line);
                        if (info) {
                            if (info.fileName === firstFileName && (firstIndex <= info.line && info.line <= lastIndex)) {
                                return true;
                            }
                        }
                        return false;
                    };
                }
                function CapturedTrace(parent) {
                    this._parent = parent;
                    this._promisesCreated = 0;
                    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);
                    captureStackTrace(this, CapturedTrace);
                    if (length > 32)
                        this.uncycle();
                }
                util.inherits(CapturedTrace, Error);
                Context.CapturedTrace = CapturedTrace;
                CapturedTrace.prototype.uncycle = function () {
                    var length = this._length;
                    if (length < 2)
                        return;
                    var nodes = [];
                    var stackToIndex = {};
                    for (var i = 0, node = this; node !== undefined; ++i) {
                        nodes.push(node);
                        node = node._parent;
                    }
                    length = this._length = i;
                    for (var i = length - 1; i >= 0; --i) {
                        var stack = nodes[i].stack;
                        if (stackToIndex[stack] === undefined) {
                            stackToIndex[stack] = i;
                        }
                    }
                    for (var i = 0; i < length; ++i) {
                        var currentStack = nodes[i].stack;
                        var index = stackToIndex[currentStack];
                        if (index !== undefined && index !== i) {
                            if (index > 0) {
                                nodes[index - 1]._parent = undefined;
                                nodes[index - 1]._length = 1;
                            }
                            nodes[i]._parent = undefined;
                            nodes[i]._length = 1;
                            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;
                            if (index < length - 1) {
                                cycleEdgeNode._parent = nodes[index + 1];
                                cycleEdgeNode._parent.uncycle();
                                cycleEdgeNode._length = cycleEdgeNode._parent._length + 1;
                            } else {
                                cycleEdgeNode._parent = undefined;
                                cycleEdgeNode._length = 1;
                            }
                            var currentChildLength = cycleEdgeNode._length + 1;
                            for (var j = i - 2; j >= 0; --j) {
                                nodes[j]._length = currentChildLength;
                                currentChildLength++;
                            }
                            return;
                        }
                    }
                };
                CapturedTrace.prototype.attachExtraTrace = function (error) {
                    if (error.__stackCleaned__)
                        return;
                    this.uncycle();
                    var parsed = parseStackAndMessage(error);
                    var message = parsed.message;
                    var stacks = [parsed.stack];
                    var trace = this;
                    while (trace !== undefined) {
                        stacks.push(cleanStack(trace.stack.split('\n')));
                        trace = trace._parent;
                    }
                    removeCommonRoots(stacks);
                    removeDuplicateOrEmptyJumps(stacks);
                    util.notEnumerableProp(error, 'stack', reconstructStack(message, stacks));
                    util.notEnumerableProp(error, '__stackCleaned__', true);
                };
                var captureStackTrace = function stackDetection() {
                    var v8stackFramePattern = /^\s*at\s*/;
                    var v8stackFormatter = function (stack, error) {
                        if (typeof stack === 'string')
                            return stack;
                        if (error.name !== undefined && error.message !== undefined) {
                            return error.toString();
                        }
                        return formatNonError(error);
                    };
                    if (typeof Error.stackTraceLimit === 'number' && typeof Error.captureStackTrace === 'function') {
                        Error.stackTraceLimit += 6;
                        stackFramePattern = v8stackFramePattern;
                        formatStack = v8stackFormatter;
                        var captureStackTrace = Error.captureStackTrace;
                        shouldIgnore = function (line) {
                            return bluebirdFramePattern.test(line);
                        };
                        return function (receiver, ignoreUntil) {
                            Error.stackTraceLimit += 6;
                            captureStackTrace(receiver, ignoreUntil);
                            Error.stackTraceLimit -= 6;
                        };
                    }
                    var err = new Error();
                    if (typeof err.stack === 'string' && err.stack.split('\n')[0].indexOf('stackDetection@') >= 0) {
                        stackFramePattern = /@/;
                        formatStack = v8stackFormatter;
                        indentStackFrames = true;
                        return function captureStackTrace(o) {
                            o.stack = new Error().stack;
                        };
                    }
                    var hasStackAfterThrow;
                    try {
                        throw new Error();
                    } catch (e) {
                        hasStackAfterThrow = 'stack' in e;
                    }
                    if (!('stack' in err) && hasStackAfterThrow && typeof Error.stackTraceLimit === 'number') {
                        stackFramePattern = v8stackFramePattern;
                        formatStack = v8stackFormatter;
                        return function captureStackTrace(o) {
                            Error.stackTraceLimit += 6;
                            try {
                                throw new Error();
                            } catch (e) {
                                o.stack = e.stack;
                            }
                            Error.stackTraceLimit -= 6;
                        };
                    }
                    formatStack = function (stack, error) {
                        if (typeof stack === 'string')
                            return stack;
                        if ((typeof error === 'object' || typeof error === 'function') && error.name !== undefined && error.message !== undefined) {
                            return error.toString();
                        }
                        return formatNonError(error);
                    };
                    return null;
                }([]);
                if (typeof console !== 'undefined' && typeof console.warn !== 'undefined') {
                    printWarning = function (message) {
                        console.warn(message);
                    };
                    if (util.isNode && process.stderr.isTTY) {
                        printWarning = function (message, isSoft) {
                            var color = isSoft ? '\x1B[33m' : '\x1B[31m';
                            console.warn(color + message + '\x1B[0m\n');
                        };
                    } else if (!util.isNode && typeof new Error().stack === 'string') {
                        printWarning = function (message, isSoft) {
                            console.warn('%c' + message, isSoft ? 'color: darkorange' : 'color: red');
                        };
                    }
                }
                var config = {
                    warnings: warnings,
                    longStackTraces: false,
                    cancellation: false,
                    monitoring: false
                };
                if (longStackTraces)
                    Promise.longStackTraces();
                return {
                    longStackTraces: function () {
                        return config.longStackTraces;
                    },
                    warnings: function () {
                        return config.warnings;
                    },
                    cancellation: function () {
                        return config.cancellation;
                    },
                    monitoring: function () {
                        return config.monitoring;
                    },
                    propagateFromFunction: function () {
                        return propagateFromFunction;
                    },
                    boundValueFunction: function () {
                        return boundValueFunction;
                    },
                    checkForgottenReturns: checkForgottenReturns,
                    setBounds: setBounds,
                    warn: warn,
                    deprecated: deprecated,
                    CapturedTrace: CapturedTrace,
                    fireDomEvent: fireDomEvent,
                    fireGlobalEvent: fireGlobalEvent
                };
            };
        },
        {
            './errors': 12,
            './util': 36
        }
    ],
    10: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise) {
                function returner() {
                    return this.value;
                }
                function thrower() {
                    throw this.reason;
                }
                Promise.prototype['return'] = Promise.prototype.thenReturn = function (value) {
                    if (value instanceof Promise)
                        value.suppressUnhandledRejections();
                    return this._then(returner, undefined, undefined, {
                        value: value
                    }, undefined);
                };
                Promise.prototype['throw'] = Promise.prototype.thenThrow = function (reason) {
                    return this._then(thrower, undefined, undefined, {
                        reason: reason
                    }, undefined);
                };
                Promise.prototype.catchThrow = function (reason) {
                    if (arguments.length <= 1) {
                        return this._then(undefined, thrower, undefined, {
                            reason: reason
                        }, undefined);
                    } else {
                        var _reason = arguments[1];
                        var handler = function () {
                            throw _reason;
                        };
                        return this.caught(reason, handler);
                    }
                };
                Promise.prototype.catchReturn = function (value) {
                    if (arguments.length <= 1) {
                        if (value instanceof Promise)
                            value.suppressUnhandledRejections();
                        return this._then(undefined, returner, undefined, {
                            value: value
                        }, undefined);
                    } else {
                        var _value = arguments[1];
                        if (_value instanceof Promise)
                            _value.suppressUnhandledRejections();
                        var handler = function () {
                            return _value;
                        };
                        return this.caught(value, handler);
                    }
                };
            };
        },
        {}
    ],
    11: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL) {
                var PromiseReduce = Promise.reduce;
                var PromiseAll = Promise.all;
                function promiseAllThis() {
                    return PromiseAll(this);
                }
                function PromiseMapSeries(promises, fn) {
                    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);
                }
                Promise.prototype.each = function (fn) {
                    return PromiseReduce(this, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, this, undefined);
                };
                Promise.prototype.mapSeries = function (fn) {
                    return PromiseReduce(this, fn, INTERNAL, INTERNAL);
                };
                Promise.each = function (promises, fn) {
                    return PromiseReduce(promises, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, promises, undefined);
                };
                Promise.mapSeries = PromiseMapSeries;
            };
        },
        {}
    ],
    12: [
        function (_dereq_, module, exports) {
            'use strict';
            var es5 = _dereq_('./es5');
            var Objectfreeze = es5.freeze;
            var util = _dereq_('./util');
            var inherits = util.inherits;
            var notEnumerableProp = util.notEnumerableProp;
            function subError(nameProperty, defaultMessage) {
                function SubError(message) {
                    if (!(this instanceof SubError))
                        return new SubError(message);
                    notEnumerableProp(this, 'message', typeof message === 'string' ? message : defaultMessage);
                    notEnumerableProp(this, 'name', nameProperty);
                    if (Error.captureStackTrace) {
                        Error.captureStackTrace(this, this.constructor);
                    } else {
                        Error.call(this);
                    }
                }
                inherits(SubError, Error);
                return SubError;
            }
            var _TypeError, _RangeError;
            var Warning = subError('Warning', 'warning');
            var CancellationError = subError('CancellationError', 'cancellation error');
            var TimeoutError = subError('TimeoutError', 'timeout error');
            var AggregateError = subError('AggregateError', 'aggregate error');
            try {
                _TypeError = TypeError;
                _RangeError = RangeError;
            } catch (e) {
                _TypeError = subError('TypeError', 'type error');
                _RangeError = subError('RangeError', 'range error');
            }
            var methods = ('join pop push shift unshift slice filter forEach some ' + 'every map indexOf lastIndexOf reduce reduceRight sort reverse').split(' ');
            for (var i = 0; i < methods.length; ++i) {
                if (typeof Array.prototype[methods[i]] === 'function') {
                    AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];
                }
            }
            es5.defineProperty(AggregateError.prototype, 'length', {
                value: 0,
                configurable: false,
                writable: true,
                enumerable: true
            });
            AggregateError.prototype['isOperational'] = true;
            var level = 0;
            AggregateError.prototype.toString = function () {
                var indent = Array(level * 4 + 1).join(' ');
                var ret = '\n' + indent + 'AggregateError of:' + '\n';
                level++;
                indent = Array(level * 4 + 1).join(' ');
                for (var i = 0; i < this.length; ++i) {
                    var str = this[i] === this ? '[Circular AggregateError]' : this[i] + '';
                    var lines = str.split('\n');
                    for (var j = 0; j < lines.length; ++j) {
                        lines[j] = indent + lines[j];
                    }
                    str = lines.join('\n');
                    ret += str + '\n';
                }
                level--;
                return ret;
            };
            function OperationalError(message) {
                if (!(this instanceof OperationalError))
                    return new OperationalError(message);
                notEnumerableProp(this, 'name', 'OperationalError');
                notEnumerableProp(this, 'message', message);
                this.cause = message;
                this['isOperational'] = true;
                if (message instanceof Error) {
                    notEnumerableProp(this, 'message', message.message);
                    notEnumerableProp(this, 'stack', message.stack);
                } else if (Error.captureStackTrace) {
                    Error.captureStackTrace(this, this.constructor);
                }
            }
            inherits(OperationalError, Error);
            var errorTypes = Error['__BluebirdErrorTypes__'];
            if (!errorTypes) {
                errorTypes = Objectfreeze({
                    CancellationError: CancellationError,
                    TimeoutError: TimeoutError,
                    OperationalError: OperationalError,
                    RejectionError: OperationalError,
                    AggregateError: AggregateError
                });
                es5.defineProperty(Error, '__BluebirdErrorTypes__', {
                    value: errorTypes,
                    writable: false,
                    enumerable: false,
                    configurable: false
                });
            }
            module.exports = {
                Error: Error,
                TypeError: _TypeError,
                RangeError: _RangeError,
                CancellationError: errorTypes.CancellationError,
                OperationalError: errorTypes.OperationalError,
                TimeoutError: errorTypes.TimeoutError,
                AggregateError: errorTypes.AggregateError,
                Warning: Warning
            };
        },
        {
            './es5': 13,
            './util': 36
        }
    ],
    13: [
        function (_dereq_, module, exports) {
            var isES5 = function () {
                'use strict';
                return this === undefined;
            }();
            if (isES5) {
                module.exports = {
                    freeze: Object.freeze,
                    defineProperty: Object.defineProperty,
                    getDescriptor: Object.getOwnPropertyDescriptor,
                    keys: Object.keys,
                    names: Object.getOwnPropertyNames,
                    getPrototypeOf: Object.getPrototypeOf,
                    isArray: Array.isArray,
                    isES5: isES5,
                    propertyIsWritable: function (obj, prop) {
                        var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
                        return !!(!descriptor || descriptor.writable || descriptor.set);
                    }
                };
            } else {
                var has = {}.hasOwnProperty;
                var str = {}.toString;
                var proto = {}.constructor.prototype;
                var ObjectKeys = function (o) {
                    var ret = [];
                    for (var key in o) {
                        if (has.call(o, key)) {
                            ret.push(key);
                        }
                    }
                    return ret;
                };
                var ObjectGetDescriptor = function (o, key) {
                    return {
                        value: o[key]
                    };
                };
                var ObjectDefineProperty = function (o, key, desc) {
                    o[key] = desc.value;
                    return o;
                };
                var ObjectFreeze = function (obj) {
                    return obj;
                };
                var ObjectGetPrototypeOf = function (obj) {
                    try {
                        return Object(obj).constructor.prototype;
                    } catch (e) {
                        return proto;
                    }
                };
                var ArrayIsArray = function (obj) {
                    try {
                        return str.call(obj) === '[object Array]';
                    } catch (e) {
                        return false;
                    }
                };
                module.exports = {
                    isArray: ArrayIsArray,
                    keys: ObjectKeys,
                    names: ObjectKeys,
                    defineProperty: ObjectDefineProperty,
                    getDescriptor: ObjectGetDescriptor,
                    freeze: ObjectFreeze,
                    getPrototypeOf: ObjectGetPrototypeOf,
                    isES5: isES5,
                    propertyIsWritable: function () {
                        return true;
                    }
                };
            }
        },
        {}
    ],
    14: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL) {
                var PromiseMap = Promise.map;
                Promise.prototype.filter = function (fn, options) {
                    return PromiseMap(this, fn, options, INTERNAL);
                };
                Promise.filter = function (promises, fn, options) {
                    return PromiseMap(promises, fn, options, INTERNAL);
                };
            };
        },
        {}
    ],
    15: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, tryConvertToPromise, NEXT_FILTER) {
                var util = _dereq_('./util');
                var CancellationError = Promise.CancellationError;
                var errorObj = util.errorObj;
                var catchFilter = _dereq_('./catch_filter')(NEXT_FILTER);
                function PassThroughHandlerContext(promise, type, handler) {
                    this.promise = promise;
                    this.type = type;
                    this.handler = handler;
                    this.called = false;
                    this.cancelPromise = null;
                }
                PassThroughHandlerContext.prototype.isFinallyHandler = function () {
                    return this.type === 0;
                };
                function FinallyHandlerCancelReaction(finallyHandler) {
                    this.finallyHandler = finallyHandler;
                }
                FinallyHandlerCancelReaction.prototype._resultCancelled = function () {
                    checkCancel(this.finallyHandler);
                };
                function checkCancel(ctx, reason) {
                    if (ctx.cancelPromise != null) {
                        if (arguments.length > 1) {
                            ctx.cancelPromise._reject(reason);
                        } else {
                            ctx.cancelPromise._cancel();
                        }
                        ctx.cancelPromise = null;
                        return true;
                    }
                    return false;
                }
                function succeed() {
                    return finallyHandler.call(this, this.promise._target()._settledValue());
                }
                function fail(reason) {
                    if (checkCancel(this, reason))
                        return;
                    errorObj.e = reason;
                    return errorObj;
                }
                function finallyHandler(reasonOrValue) {
                    var promise = this.promise;
                    var handler = this.handler;
                    if (!this.called) {
                        this.called = true;
                        var ret = this.isFinallyHandler() ? handler.call(promise._boundValue()) : handler.call(promise._boundValue(), reasonOrValue);
                        if (ret === NEXT_FILTER) {
                            return ret;
                        } else if (ret !== undefined) {
                            promise._setReturnedNonUndefined();
                            var maybePromise = tryConvertToPromise(ret, promise);
                            if (maybePromise instanceof Promise) {
                                if (this.cancelPromise != null) {
                                    if (maybePromise._isCancelled()) {
                                        var reason = new CancellationError('late cancellation observer');
                                        promise._attachExtraTrace(reason);
                                        errorObj.e = reason;
                                        return errorObj;
                                    } else if (maybePromise.isPending()) {
                                        maybePromise._attachCancellationCallback(new FinallyHandlerCancelReaction(this));
                                    }
                                }
                                return maybePromise._then(succeed, fail, undefined, this, undefined);
                            }
                        }
                    }
                    if (promise.isRejected()) {
                        checkCancel(this);
                        errorObj.e = reasonOrValue;
                        return errorObj;
                    } else {
                        checkCancel(this);
                        return reasonOrValue;
                    }
                }
                Promise.prototype._passThrough = function (handler, type, success, fail) {
                    if (typeof handler !== 'function')
                        return this.then();
                    return this._then(success, fail, undefined, new PassThroughHandlerContext(this, type, handler), undefined);
                };
                Promise.prototype.lastly = Promise.prototype['finally'] = function (handler) {
                    return this._passThrough(handler, 0, finallyHandler, finallyHandler);
                };
                Promise.prototype.tap = function (handler) {
                    return this._passThrough(handler, 1, finallyHandler);
                };
                Promise.prototype.tapCatch = function (handlerOrPredicate) {
                    var len = arguments.length;
                    if (len === 1) {
                        return this._passThrough(handlerOrPredicate, 1, undefined, finallyHandler);
                    } else {
                        var catchInstances = new Array(len - 1), j = 0, i;
                        for (i = 0; i < len - 1; ++i) {
                            var item = arguments[i];
                            if (util.isObject(item)) {
                                catchInstances[j++] = item;
                            } else {
                                return Promise.reject(new TypeError('tapCatch statement predicate: ' + 'expecting an object but got ' + util.classString(item)));
                            }
                        }
                        catchInstances.length = j;
                        var handler = arguments[i];
                        return this._passThrough(catchFilter(catchInstances, handler, this), 1, undefined, finallyHandler);
                    }
                };
                return PassThroughHandlerContext;
            };
        },
        {
            './catch_filter': 7,
            './util': 36
        }
    ],
    16: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug) {
                var errors = _dereq_('./errors');
                var TypeError = errors.TypeError;
                var util = _dereq_('./util');
                var errorObj = util.errorObj;
                var tryCatch = util.tryCatch;
                var yieldHandlers = [];
                function promiseFromYieldHandler(value, yieldHandlers, traceParent) {
                    for (var i = 0; i < yieldHandlers.length; ++i) {
                        traceParent._pushContext();
                        var result = tryCatch(yieldHandlers[i])(value);
                        traceParent._popContext();
                        if (result === errorObj) {
                            traceParent._pushContext();
                            var ret = Promise.reject(errorObj.e);
                            traceParent._popContext();
                            return ret;
                        }
                        var maybePromise = tryConvertToPromise(result, traceParent);
                        if (maybePromise instanceof Promise)
                            return maybePromise;
                    }
                    return null;
                }
                function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
                    if (debug.cancellation()) {
                        var internal = new Promise(INTERNAL);
                        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);
                        this._promise = internal.lastly(function () {
                            return _finallyPromise;
                        });
                        internal._captureStackTrace();
                        internal._setOnCancel(this);
                    } else {
                        var promise = this._promise = new Promise(INTERNAL);
                        promise._captureStackTrace();
                    }
                    this._stack = stack;
                    this._generatorFunction = generatorFunction;
                    this._receiver = receiver;
                    this._generator = undefined;
                    this._yieldHandlers = typeof yieldHandler === 'function' ? [yieldHandler].concat(yieldHandlers) : yieldHandlers;
                    this._yieldedPromise = null;
                    this._cancellationPhase = false;
                }
                util.inherits(PromiseSpawn, Proxyable);
                PromiseSpawn.prototype._isResolved = function () {
                    return this._promise === null;
                };
                PromiseSpawn.prototype._cleanup = function () {
                    this._promise = this._generator = null;
                    if (debug.cancellation() && this._finallyPromise !== null) {
                        this._finallyPromise._fulfill();
                        this._finallyPromise = null;
                    }
                };
                PromiseSpawn.prototype._promiseCancelled = function () {
                    if (this._isResolved())
                        return;
                    var implementsReturn = typeof this._generator['return'] !== 'undefined';
                    var result;
                    if (!implementsReturn) {
                        var reason = new Promise.CancellationError('generator .return() sentinel');
                        Promise.coroutine.returnSentinel = reason;
                        this._promise._attachExtraTrace(reason);
                        this._promise._pushContext();
                        result = tryCatch(this._generator['throw']).call(this._generator, reason);
                        this._promise._popContext();
                    } else {
                        this._promise._pushContext();
                        result = tryCatch(this._generator['return']).call(this._generator, undefined);
                        this._promise._popContext();
                    }
                    this._cancellationPhase = true;
                    this._yieldedPromise = null;
                    this._continue(result);
                };
                PromiseSpawn.prototype._promiseFulfilled = function (value) {
                    this._yieldedPromise = null;
                    this._promise._pushContext();
                    var result = tryCatch(this._generator.next).call(this._generator, value);
                    this._promise._popContext();
                    this._continue(result);
                };
                PromiseSpawn.prototype._promiseRejected = function (reason) {
                    this._yieldedPromise = null;
                    this._promise._attachExtraTrace(reason);
                    this._promise._pushContext();
                    var result = tryCatch(this._generator['throw']).call(this._generator, reason);
                    this._promise._popContext();
                    this._continue(result);
                };
                PromiseSpawn.prototype._resultCancelled = function () {
                    if (this._yieldedPromise instanceof Promise) {
                        var promise = this._yieldedPromise;
                        this._yieldedPromise = null;
                        promise.cancel();
                    }
                };
                PromiseSpawn.prototype.promise = function () {
                    return this._promise;
                };
                PromiseSpawn.prototype._run = function () {
                    this._generator = this._generatorFunction.call(this._receiver);
                    this._receiver = this._generatorFunction = undefined;
                    this._promiseFulfilled(undefined);
                };
                PromiseSpawn.prototype._continue = function (result) {
                    var promise = this._promise;
                    if (result === errorObj) {
                        this._cleanup();
                        if (this._cancellationPhase) {
                            return promise.cancel();
                        } else {
                            return promise._rejectCallback(result.e, false);
                        }
                    }
                    var value = result.value;
                    if (result.done === true) {
                        this._cleanup();
                        if (this._cancellationPhase) {
                            return promise.cancel();
                        } else {
                            return promise._resolveCallback(value);
                        }
                    } else {
                        var maybePromise = tryConvertToPromise(value, this._promise);
                        if (!(maybePromise instanceof Promise)) {
                            maybePromise = promiseFromYieldHandler(maybePromise, this._yieldHandlers, this._promise);
                            if (maybePromise === null) {
                                this._promiseRejected(new TypeError('A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n'.replace('%s', String(value)) + 'From coroutine:\n' + this._stack.split('\n').slice(1, -7).join('\n')));
                                return;
                            }
                        }
                        maybePromise = maybePromise._target();
                        var bitField = maybePromise._bitField;
                        ;
                        if ((bitField & 50397184) === 0) {
                            this._yieldedPromise = maybePromise;
                            maybePromise._proxy(this, null);
                        } else if ((bitField & 33554432) !== 0) {
                            Promise._async.invoke(this._promiseFulfilled, this, maybePromise._value());
                        } else if ((bitField & 16777216) !== 0) {
                            Promise._async.invoke(this._promiseRejected, this, maybePromise._reason());
                        } else {
                            this._promiseCancelled();
                        }
                    }
                };
                Promise.coroutine = function (generatorFunction, options) {
                    if (typeof generatorFunction !== 'function') {
                        throw new TypeError('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    var yieldHandler = Object(options).yieldHandler;
                    var PromiseSpawn$ = PromiseSpawn;
                    var stack = new Error().stack;
                    return function () {
                        var generator = generatorFunction.apply(this, arguments);
                        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler, stack);
                        var ret = spawn.promise();
                        spawn._generator = generator;
                        spawn._promiseFulfilled(undefined);
                        return ret;
                    };
                };
                Promise.coroutine.addYieldHandler = function (fn) {
                    if (typeof fn !== 'function') {
                        throw new TypeError('expecting a function but got ' + util.classString(fn));
                    }
                    yieldHandlers.push(fn);
                };
                Promise.spawn = function (generatorFunction) {
                    debug.deprecated('Promise.spawn()', 'Promise.coroutine()');
                    if (typeof generatorFunction !== 'function') {
                        return apiRejection('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    var spawn = new PromiseSpawn(generatorFunction, this);
                    var ret = spawn.promise();
                    spawn._run(Promise.spawn);
                    return ret;
                };
            };
        },
        {
            './errors': 12,
            './util': 36
        }
    ],
    17: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain) {
                var util = _dereq_('./util');
                var canEvaluate = util.canEvaluate;
                var tryCatch = util.tryCatch;
                var errorObj = util.errorObj;
                var reject;
                if (!true) {
                    if (canEvaluate) {
                        var thenCallback = function (i) {
                            return new Function('value', 'holder', '                             \n            \'use strict\';                                                    \n            holder.pIndex = value;                                           \n            holder.checkFulfillment(this);                                   \n            '.replace(/Index/g, i));
                        };
                        var promiseSetter = function (i) {
                            return new Function('promise', 'holder', '                           \n            \'use strict\';                                                    \n            holder.pIndex = promise;                                         \n            '.replace(/Index/g, i));
                        };
                        var generateHolderClass = function (total) {
                            var props = new Array(total);
                            for (var i = 0; i < props.length; ++i) {
                                props[i] = 'this.p' + (i + 1);
                            }
                            var assignment = props.join(' = ') + ' = null;';
                            var cancellationCode = 'var promise;\n' + props.map(function (prop) {
                                return '                                                         \n                promise = ' + prop + ';                                      \n                if (promise instanceof Promise) {                            \n                    promise.cancel();                                        \n                }                                                            \n            ';
                            }).join('\n');
                            var passedArguments = props.join(', ');
                            var name = 'Holder$' + total;
                            var code = 'return function(tryCatch, errorObj, Promise, async) {    \n            \'use strict\';                                                    \n            function [TheName](fn) {                                         \n                [TheProperties]                                              \n                this.fn = fn;                                                \n                this.asyncNeeded = true;                                     \n                this.now = 0;                                                \n            }                                                                \n                                                                             \n            [TheName].prototype._callFunction = function(promise) {          \n                promise._pushContext();                                      \n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \n                promise._popContext();                                       \n                if (ret === errorObj) {                                      \n                    promise._rejectCallback(ret.e, false);                   \n                } else {                                                     \n                    promise._resolveCallback(ret);                           \n                }                                                            \n            };                                                               \n                                                                             \n            [TheName].prototype.checkFulfillment = function(promise) {       \n                var now = ++this.now;                                        \n                if (now === [TheTotal]) {                                    \n                    if (this.asyncNeeded) {                                  \n                        async.invoke(this._callFunction, this, promise);     \n                    } else {                                                 \n                        this._callFunction(promise);                         \n                    }                                                        \n                                                                             \n                }                                                            \n            };                                                               \n                                                                             \n            [TheName].prototype._resultCancelled = function() {              \n                [CancellationCode]                                           \n            };                                                               \n                                                                             \n            return [TheName];                                                \n        }(tryCatch, errorObj, Promise, async);                               \n        ';
                            code = code.replace(/\[TheName\]/g, name).replace(/\[TheTotal\]/g, total).replace(/\[ThePassedArguments\]/g, passedArguments).replace(/\[TheProperties\]/g, assignment).replace(/\[CancellationCode\]/g, cancellationCode);
                            return new Function('tryCatch', 'errorObj', 'Promise', 'async', code)(tryCatch, errorObj, Promise, async);
                        };
                        var holderClasses = [];
                        var thenCallbacks = [];
                        var promiseSetters = [];
                        for (var i = 0; i < 8; ++i) {
                            holderClasses.push(generateHolderClass(i + 1));
                            thenCallbacks.push(thenCallback(i + 1));
                            promiseSetters.push(promiseSetter(i + 1));
                        }
                        reject = function (reason) {
                            this._reject(reason);
                        };
                    }
                }
                Promise.join = function () {
                    var last = arguments.length - 1;
                    var fn;
                    if (last > 0 && typeof arguments[last] === 'function') {
                        fn = arguments[last];
                        if (!true) {
                            if (last <= 8 && canEvaluate) {
                                var ret = new Promise(INTERNAL);
                                ret._captureStackTrace();
                                var HolderClass = holderClasses[last - 1];
                                var holder = new HolderClass(fn);
                                var callbacks = thenCallbacks;
                                for (var i = 0; i < last; ++i) {
                                    var maybePromise = tryConvertToPromise(arguments[i], ret);
                                    if (maybePromise instanceof Promise) {
                                        maybePromise = maybePromise._target();
                                        var bitField = maybePromise._bitField;
                                        ;
                                        if ((bitField & 50397184) === 0) {
                                            maybePromise._then(callbacks[i], reject, undefined, ret, holder);
                                            promiseSetters[i](maybePromise, holder);
                                            holder.asyncNeeded = false;
                                        } else if ((bitField & 33554432) !== 0) {
                                            callbacks[i].call(ret, maybePromise._value(), holder);
                                        } else if ((bitField & 16777216) !== 0) {
                                            ret._reject(maybePromise._reason());
                                        } else {
                                            ret._cancel();
                                        }
                                    } else {
                                        callbacks[i].call(ret, maybePromise, holder);
                                    }
                                }
                                if (!ret._isFateSealed()) {
                                    if (holder.asyncNeeded) {
                                        var domain = getDomain();
                                        if (domain !== null) {
                                            holder.fn = util.domainBind(domain, holder.fn);
                                        }
                                    }
                                    ret._setAsyncGuaranteed();
                                    ret._setOnCancel(holder);
                                }
                                return ret;
                            }
                        }
                    }
                    var args = [].slice.call(arguments);
                    ;
                    if (fn)
                        args.pop();
                    var ret = new PromiseArray(args).promise();
                    return fn !== undefined ? ret.spread(fn) : ret;
                };
            };
        },
        {
            './util': 36
        }
    ],
    18: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
                var getDomain = Promise._getDomain;
                var util = _dereq_('./util');
                var tryCatch = util.tryCatch;
                var errorObj = util.errorObj;
                var async = Promise._async;
                function MappingPromiseArray(promises, fn, limit, _filter) {
                    this.constructor$(promises);
                    this._promise._captureStackTrace();
                    var domain = getDomain();
                    this._callback = domain === null ? fn : util.domainBind(domain, fn);
                    this._preservedValues = _filter === INTERNAL ? new Array(this.length()) : null;
                    this._limit = limit;
                    this._inFlight = 0;
                    this._queue = [];
                    async.invoke(this._asyncInit, this, undefined);
                }
                util.inherits(MappingPromiseArray, PromiseArray);
                MappingPromiseArray.prototype._asyncInit = function () {
                    this._init$(undefined, -2);
                };
                MappingPromiseArray.prototype._init = function () {
                };
                MappingPromiseArray.prototype._promiseFulfilled = function (value, index) {
                    var values = this._values;
                    var length = this.length();
                    var preservedValues = this._preservedValues;
                    var limit = this._limit;
                    if (index < 0) {
                        index = index * -1 - 1;
                        values[index] = value;
                        if (limit >= 1) {
                            this._inFlight--;
                            this._drainQueue();
                            if (this._isResolved())
                                return true;
                        }
                    } else {
                        if (limit >= 1 && this._inFlight >= limit) {
                            values[index] = value;
                            this._queue.push(index);
                            return false;
                        }
                        if (preservedValues !== null)
                            preservedValues[index] = value;
                        var promise = this._promise;
                        var callback = this._callback;
                        var receiver = promise._boundValue();
                        promise._pushContext();
                        var ret = tryCatch(callback).call(receiver, value, index, length);
                        var promiseCreated = promise._popContext();
                        debug.checkForgottenReturns(ret, promiseCreated, preservedValues !== null ? 'Promise.filter' : 'Promise.map', promise);
                        if (ret === errorObj) {
                            this._reject(ret.e);
                            return true;
                        }
                        var maybePromise = tryConvertToPromise(ret, this._promise);
                        if (maybePromise instanceof Promise) {
                            maybePromise = maybePromise._target();
                            var bitField = maybePromise._bitField;
                            ;
                            if ((bitField & 50397184) === 0) {
                                if (limit >= 1)
                                    this._inFlight++;
                                values[index] = maybePromise;
                                maybePromise._proxy(this, (index + 1) * -1);
                                return false;
                            } else if ((bitField & 33554432) !== 0) {
                                ret = maybePromise._value();
                            } else if ((bitField & 16777216) !== 0) {
                                this._reject(maybePromise._reason());
                                return true;
                            } else {
                                this._cancel();
                                return true;
                            }
                        }
                        values[index] = ret;
                    }
                    var totalResolved = ++this._totalResolved;
                    if (totalResolved >= length) {
                        if (preservedValues !== null) {
                            this._filter(values, preservedValues);
                        } else {
                            this._resolve(values);
                        }
                        return true;
                    }
                    return false;
                };
                MappingPromiseArray.prototype._drainQueue = function () {
                    var queue = this._queue;
                    var limit = this._limit;
                    var values = this._values;
                    while (queue.length > 0 && this._inFlight < limit) {
                        if (this._isResolved())
                            return;
                        var index = queue.pop();
                        this._promiseFulfilled(values[index], index);
                    }
                };
                MappingPromiseArray.prototype._filter = function (booleans, values) {
                    var len = values.length;
                    var ret = new Array(len);
                    var j = 0;
                    for (var i = 0; i < len; ++i) {
                        if (booleans[i])
                            ret[j++] = values[i];
                    }
                    ret.length = j;
                    this._resolve(ret);
                };
                MappingPromiseArray.prototype.preservedValues = function () {
                    return this._preservedValues;
                };
                function map(promises, fn, options, _filter) {
                    if (typeof fn !== 'function') {
                        return apiRejection('expecting a function but got ' + util.classString(fn));
                    }
                    var limit = 0;
                    if (options !== undefined) {
                        if (typeof options === 'object' && options !== null) {
                            if (typeof options.concurrency !== 'number') {
                                return Promise.reject(new TypeError('\'concurrency\' must be a number but it is ' + util.classString(options.concurrency)));
                            }
                            limit = options.concurrency;
                        } else {
                            return Promise.reject(new TypeError('options argument must be an object but it is ' + util.classString(options)));
                        }
                    }
                    limit = typeof limit === 'number' && isFinite(limit) && limit >= 1 ? limit : 0;
                    return new MappingPromiseArray(promises, fn, limit, _filter).promise();
                }
                Promise.prototype.map = function (fn, options) {
                    return map(this, fn, options, null);
                };
                Promise.map = function (promises, fn, options, _filter) {
                    return map(promises, fn, options, _filter);
                };
            };
        },
        {
            './util': 36
        }
    ],
    19: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {
                var util = _dereq_('./util');
                var tryCatch = util.tryCatch;
                Promise.method = function (fn) {
                    if (typeof fn !== 'function') {
                        throw new Promise.TypeError('expecting a function but got ' + util.classString(fn));
                    }
                    return function () {
                        var ret = new Promise(INTERNAL);
                        ret._captureStackTrace();
                        ret._pushContext();
                        var value = tryCatch(fn).apply(this, arguments);
                        var promiseCreated = ret._popContext();
                        debug.checkForgottenReturns(value, promiseCreated, 'Promise.method', ret);
                        ret._resolveFromSyncValue(value);
                        return ret;
                    };
                };
                Promise.attempt = Promise['try'] = function (fn) {
                    if (typeof fn !== 'function') {
                        return apiRejection('expecting a function but got ' + util.classString(fn));
                    }
                    var ret = new Promise(INTERNAL);
                    ret._captureStackTrace();
                    ret._pushContext();
                    var value;
                    if (arguments.length > 1) {
                        debug.deprecated('calling Promise.try with more than 1 argument');
                        var arg = arguments[1];
                        var ctx = arguments[2];
                        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg) : tryCatch(fn).call(ctx, arg);
                    } else {
                        value = tryCatch(fn)();
                    }
                    var promiseCreated = ret._popContext();
                    debug.checkForgottenReturns(value, promiseCreated, 'Promise.try', ret);
                    ret._resolveFromSyncValue(value);
                    return ret;
                };
                Promise.prototype._resolveFromSyncValue = function (value) {
                    if (value === util.errorObj) {
                        this._rejectCallback(value.e, false);
                    } else {
                        this._resolveCallback(value, true);
                    }
                };
            };
        },
        {
            './util': 36
        }
    ],
    20: [
        function (_dereq_, module, exports) {
            'use strict';
            var util = _dereq_('./util');
            var maybeWrapAsError = util.maybeWrapAsError;
            var errors = _dereq_('./errors');
            var OperationalError = errors.OperationalError;
            var es5 = _dereq_('./es5');
            function isUntypedError(obj) {
                return obj instanceof Error && es5.getPrototypeOf(obj) === Error.prototype;
            }
            var rErrorKey = /^(?:name|message|stack|cause)$/;
            function wrapAsOperationalError(obj) {
                var ret;
                if (isUntypedError(obj)) {
                    ret = new OperationalError(obj);
                    ret.name = obj.name;
                    ret.message = obj.message;
                    ret.stack = obj.stack;
                    var keys = es5.keys(obj);
                    for (var i = 0; i < keys.length; ++i) {
                        var key = keys[i];
                        if (!rErrorKey.test(key)) {
                            ret[key] = obj[key];
                        }
                    }
                    return ret;
                }
                util.markAsOriginatingFromRejection(obj);
                return obj;
            }
            function nodebackForPromise(promise, multiArgs) {
                return function (err, value) {
                    if (promise === null)
                        return;
                    if (err) {
                        var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
                        promise._attachExtraTrace(wrapped);
                        promise._reject(wrapped);
                    } else if (!multiArgs) {
                        promise._fulfill(value);
                    } else {
                        var args = [].slice.call(arguments, 1);
                        ;
                        promise._fulfill(args);
                    }
                    promise = null;
                };
            }
            module.exports = nodebackForPromise;
        },
        {
            './errors': 12,
            './es5': 13,
            './util': 36
        }
    ],
    21: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise) {
                var util = _dereq_('./util');
                var async = Promise._async;
                var tryCatch = util.tryCatch;
                var errorObj = util.errorObj;
                function spreadAdapter(val, nodeback) {
                    var promise = this;
                    if (!util.isArray(val))
                        return successAdapter.call(promise, val, nodeback);
                    var ret = tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));
                    if (ret === errorObj) {
                        async.throwLater(ret.e);
                    }
                }
                function successAdapter(val, nodeback) {
                    var promise = this;
                    var receiver = promise._boundValue();
                    var ret = val === undefined ? tryCatch(nodeback).call(receiver, null) : tryCatch(nodeback).call(receiver, null, val);
                    if (ret === errorObj) {
                        async.throwLater(ret.e);
                    }
                }
                function errorAdapter(reason, nodeback) {
                    var promise = this;
                    if (!reason) {
                        var newReason = new Error(reason + '');
                        newReason.cause = reason;
                        reason = newReason;
                    }
                    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);
                    if (ret === errorObj) {
                        async.throwLater(ret.e);
                    }
                }
                Promise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback, options) {
                    if (typeof nodeback == 'function') {
                        var adapter = successAdapter;
                        if (options !== undefined && Object(options).spread) {
                            adapter = spreadAdapter;
                        }
                        this._then(adapter, errorAdapter, undefined, this, nodeback);
                    }
                    return this;
                };
            };
        },
        {
            './util': 36
        }
    ],
    22: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function () {
                var makeSelfResolutionError = function () {
                    return new TypeError('circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n');
                };
                var reflectHandler = function () {
                    return new Promise.PromiseInspection(this._target());
                };
                var apiRejection = function (msg) {
                    return Promise.reject(new TypeError(msg));
                };
                function Proxyable() {
                }
                var UNDEFINED_BINDING = {};
                var util = _dereq_('./util');
                var getDomain;
                if (util.isNode) {
                    getDomain = function () {
                        var ret = process.domain;
                        if (ret === undefined)
                            ret = null;
                        return ret;
                    };
                } else {
                    getDomain = function () {
                        return null;
                    };
                }
                util.notEnumerableProp(Promise, '_getDomain', getDomain);
                var es5 = _dereq_('./es5');
                var Async = _dereq_('./async');
                var async = new Async();
                es5.defineProperty(Promise, '_async', {
                    value: async
                });
                var errors = _dereq_('./errors');
                var TypeError = Promise.TypeError = errors.TypeError;
                Promise.RangeError = errors.RangeError;
                var CancellationError = Promise.CancellationError = errors.CancellationError;
                Promise.TimeoutError = errors.TimeoutError;
                Promise.OperationalError = errors.OperationalError;
                Promise.RejectionError = errors.OperationalError;
                Promise.AggregateError = errors.AggregateError;
                var INTERNAL = function () {
                };
                var APPLY = {};
                var NEXT_FILTER = {};
                var tryConvertToPromise = _dereq_('./thenables')(Promise, INTERNAL);
                var PromiseArray = _dereq_('./promise_array')(Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable);
                var Context = _dereq_('./context')(Promise);
                var createContext = Context.create;
                var debug = _dereq_('./debuggability')(Promise, Context);
                var CapturedTrace = debug.CapturedTrace;
                var PassThroughHandlerContext = _dereq_('./finally')(Promise, tryConvertToPromise, NEXT_FILTER);
                var catchFilter = _dereq_('./catch_filter')(NEXT_FILTER);
                var nodebackForPromise = _dereq_('./nodeback');
                var errorObj = util.errorObj;
                var tryCatch = util.tryCatch;
                function check(self, executor) {
                    if (self == null || self.constructor !== Promise) {
                        throw new TypeError('the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    if (typeof executor !== 'function') {
                        throw new TypeError('expecting a function but got ' + util.classString(executor));
                    }
                }
                function Promise(executor) {
                    if (executor !== INTERNAL) {
                        check(this, executor);
                    }
                    this._bitField = 0;
                    this._fulfillmentHandler0 = undefined;
                    this._rejectionHandler0 = undefined;
                    this._promise0 = undefined;
                    this._receiver0 = undefined;
                    this._resolveFromExecutor(executor);
                    this._promiseCreated();
                    this._fireEvent('promiseCreated', this);
                }
                Promise.prototype.toString = function () {
                    return '[object Promise]';
                };
                Promise.prototype.caught = Promise.prototype['catch'] = function (fn) {
                    var len = arguments.length;
                    if (len > 1) {
                        var catchInstances = new Array(len - 1), j = 0, i;
                        for (i = 0; i < len - 1; ++i) {
                            var item = arguments[i];
                            if (util.isObject(item)) {
                                catchInstances[j++] = item;
                            } else {
                                return apiRejection('Catch statement predicate: ' + 'expecting an object but got ' + util.classString(item));
                            }
                        }
                        catchInstances.length = j;
                        fn = arguments[i];
                        return this.then(undefined, catchFilter(catchInstances, fn, this));
                    }
                    return this.then(undefined, fn);
                };
                Promise.prototype.reflect = function () {
                    return this._then(reflectHandler, reflectHandler, undefined, this, undefined);
                };
                Promise.prototype.then = function (didFulfill, didReject) {
                    if (debug.warnings() && arguments.length > 0 && typeof didFulfill !== 'function' && typeof didReject !== 'function') {
                        var msg = '.then() only accepts functions but was passed: ' + util.classString(didFulfill);
                        if (arguments.length > 1) {
                            msg += ', ' + util.classString(didReject);
                        }
                        this._warn(msg);
                    }
                    return this._then(didFulfill, didReject, undefined, undefined, undefined);
                };
                Promise.prototype.done = function (didFulfill, didReject) {
                    var promise = this._then(didFulfill, didReject, undefined, undefined, undefined);
                    promise._setIsFinal();
                };
                Promise.prototype.spread = function (fn) {
                    if (typeof fn !== 'function') {
                        return apiRejection('expecting a function but got ' + util.classString(fn));
                    }
                    return this.all()._then(fn, undefined, undefined, APPLY, undefined);
                };
                Promise.prototype.toJSON = function () {
                    var ret = {
                        isFulfilled: false,
                        isRejected: false,
                        fulfillmentValue: undefined,
                        rejectionReason: undefined
                    };
                    if (this.isFulfilled()) {
                        ret.fulfillmentValue = this.value();
                        ret.isFulfilled = true;
                    } else if (this.isRejected()) {
                        ret.rejectionReason = this.reason();
                        ret.isRejected = true;
                    }
                    return ret;
                };
                Promise.prototype.all = function () {
                    if (arguments.length > 0) {
                        this._warn('.all() was passed arguments but it does not take any');
                    }
                    return new PromiseArray(this).promise();
                };
                Promise.prototype.error = function (fn) {
                    return this.caught(util.originatesFromRejection, fn);
                };
                Promise.getNewLibraryCopy = module.exports;
                Promise.is = function (val) {
                    return val instanceof Promise;
                };
                Promise.fromNode = Promise.fromCallback = function (fn) {
                    var ret = new Promise(INTERNAL);
                    ret._captureStackTrace();
                    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : false;
                    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));
                    if (result === errorObj) {
                        ret._rejectCallback(result.e, true);
                    }
                    if (!ret._isFateSealed())
                        ret._setAsyncGuaranteed();
                    return ret;
                };
                Promise.all = function (promises) {
                    return new PromiseArray(promises).promise();
                };
                Promise.cast = function (obj) {
                    var ret = tryConvertToPromise(obj);
                    if (!(ret instanceof Promise)) {
                        ret = new Promise(INTERNAL);
                        ret._captureStackTrace();
                        ret._setFulfilled();
                        ret._rejectionHandler0 = obj;
                    }
                    return ret;
                };
                Promise.resolve = Promise.fulfilled = Promise.cast;
                Promise.reject = Promise.rejected = function (reason) {
                    var ret = new Promise(INTERNAL);
                    ret._captureStackTrace();
                    ret._rejectCallback(reason, true);
                    return ret;
                };
                Promise.setScheduler = function (fn) {
                    if (typeof fn !== 'function') {
                        throw new TypeError('expecting a function but got ' + util.classString(fn));
                    }
                    return async.setScheduler(fn);
                };
                Promise.prototype._then = function (didFulfill, didReject, _, receiver, internalData) {
                    var haveInternalData = internalData !== undefined;
                    var promise = haveInternalData ? internalData : new Promise(INTERNAL);
                    var target = this._target();
                    var bitField = target._bitField;
                    if (!haveInternalData) {
                        promise._propagateFrom(this, 3);
                        promise._captureStackTrace();
                        if (receiver === undefined && (this._bitField & 2097152) !== 0) {
                            if (!((bitField & 50397184) === 0)) {
                                receiver = this._boundValue();
                            } else {
                                receiver = target === this ? undefined : this._boundTo;
                            }
                        }
                        this._fireEvent('promiseChained', this, promise);
                    }
                    var domain = getDomain();
                    if (!((bitField & 50397184) === 0)) {
                        var handler, value, settler = target._settlePromiseCtx;
                        if ((bitField & 33554432) !== 0) {
                            value = target._rejectionHandler0;
                            handler = didFulfill;
                        } else if ((bitField & 16777216) !== 0) {
                            value = target._fulfillmentHandler0;
                            handler = didReject;
                            target._unsetRejectionIsUnhandled();
                        } else {
                            settler = target._settlePromiseLateCancellationObserver;
                            value = new CancellationError('late cancellation observer');
                            target._attachExtraTrace(value);
                            handler = didReject;
                        }
                        async.invoke(settler, target, {
                            handler: domain === null ? handler : typeof handler === 'function' && util.domainBind(domain, handler),
                            promise: promise,
                            receiver: receiver,
                            value: value
                        });
                    } else {
                        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
                    }
                    return promise;
                };
                Promise.prototype._length = function () {
                    return this._bitField & 65535;
                };
                Promise.prototype._isFateSealed = function () {
                    return (this._bitField & 117506048) !== 0;
                };
                Promise.prototype._isFollowing = function () {
                    return (this._bitField & 67108864) === 67108864;
                };
                Promise.prototype._setLength = function (len) {
                    this._bitField = this._bitField & -65536 | len & 65535;
                };
                Promise.prototype._setFulfilled = function () {
                    this._bitField = this._bitField | 33554432;
                    this._fireEvent('promiseFulfilled', this);
                };
                Promise.prototype._setRejected = function () {
                    this._bitField = this._bitField | 16777216;
                    this._fireEvent('promiseRejected', this);
                };
                Promise.prototype._setFollowing = function () {
                    this._bitField = this._bitField | 67108864;
                    this._fireEvent('promiseResolved', this);
                };
                Promise.prototype._setIsFinal = function () {
                    this._bitField = this._bitField | 4194304;
                };
                Promise.prototype._isFinal = function () {
                    return (this._bitField & 4194304) > 0;
                };
                Promise.prototype._unsetCancelled = function () {
                    this._bitField = this._bitField & ~65536;
                };
                Promise.prototype._setCancelled = function () {
                    this._bitField = this._bitField | 65536;
                    this._fireEvent('promiseCancelled', this);
                };
                Promise.prototype._setWillBeCancelled = function () {
                    this._bitField = this._bitField | 8388608;
                };
                Promise.prototype._setAsyncGuaranteed = function () {
                    if (async.hasCustomScheduler())
                        return;
                    this._bitField = this._bitField | 134217728;
                };
                Promise.prototype._receiverAt = function (index) {
                    var ret = index === 0 ? this._receiver0 : this[index * 4 - 4 + 3];
                    if (ret === UNDEFINED_BINDING) {
                        return undefined;
                    } else if (ret === undefined && this._isBound()) {
                        return this._boundValue();
                    }
                    return ret;
                };
                Promise.prototype._promiseAt = function (index) {
                    return this[index * 4 - 4 + 2];
                };
                Promise.prototype._fulfillmentHandlerAt = function (index) {
                    return this[index * 4 - 4 + 0];
                };
                Promise.prototype._rejectionHandlerAt = function (index) {
                    return this[index * 4 - 4 + 1];
                };
                Promise.prototype._boundValue = function () {
                };
                Promise.prototype._migrateCallback0 = function (follower) {
                    var bitField = follower._bitField;
                    var fulfill = follower._fulfillmentHandler0;
                    var reject = follower._rejectionHandler0;
                    var promise = follower._promise0;
                    var receiver = follower._receiverAt(0);
                    if (receiver === undefined)
                        receiver = UNDEFINED_BINDING;
                    this._addCallbacks(fulfill, reject, promise, receiver, null);
                };
                Promise.prototype._migrateCallbackAt = function (follower, index) {
                    var fulfill = follower._fulfillmentHandlerAt(index);
                    var reject = follower._rejectionHandlerAt(index);
                    var promise = follower._promiseAt(index);
                    var receiver = follower._receiverAt(index);
                    if (receiver === undefined)
                        receiver = UNDEFINED_BINDING;
                    this._addCallbacks(fulfill, reject, promise, receiver, null);
                };
                Promise.prototype._addCallbacks = function (fulfill, reject, promise, receiver, domain) {
                    var index = this._length();
                    if (index >= 65535 - 4) {
                        index = 0;
                        this._setLength(0);
                    }
                    if (index === 0) {
                        this._promise0 = promise;
                        this._receiver0 = receiver;
                        if (typeof fulfill === 'function') {
                            this._fulfillmentHandler0 = domain === null ? fulfill : util.domainBind(domain, fulfill);
                        }
                        if (typeof reject === 'function') {
                            this._rejectionHandler0 = domain === null ? reject : util.domainBind(domain, reject);
                        }
                    } else {
                        var base = index * 4 - 4;
                        this[base + 2] = promise;
                        this[base + 3] = receiver;
                        if (typeof fulfill === 'function') {
                            this[base + 0] = domain === null ? fulfill : util.domainBind(domain, fulfill);
                        }
                        if (typeof reject === 'function') {
                            this[base + 1] = domain === null ? reject : util.domainBind(domain, reject);
                        }
                    }
                    this._setLength(index + 1);
                    return index;
                };
                Promise.prototype._proxy = function (proxyable, arg) {
                    this._addCallbacks(undefined, undefined, arg, proxyable, null);
                };
                Promise.prototype._resolveCallback = function (value, shouldBind) {
                    if ((this._bitField & 117506048) !== 0)
                        return;
                    if (value === this)
                        return this._rejectCallback(makeSelfResolutionError(), false);
                    var maybePromise = tryConvertToPromise(value, this);
                    if (!(maybePromise instanceof Promise))
                        return this._fulfill(value);
                    if (shouldBind)
                        this._propagateFrom(maybePromise, 2);
                    var promise = maybePromise._target();
                    if (promise === this) {
                        this._reject(makeSelfResolutionError());
                        return;
                    }
                    var bitField = promise._bitField;
                    if ((bitField & 50397184) === 0) {
                        var len = this._length();
                        if (len > 0)
                            promise._migrateCallback0(this);
                        for (var i = 1; i < len; ++i) {
                            promise._migrateCallbackAt(this, i);
                        }
                        this._setFollowing();
                        this._setLength(0);
                        this._setFollowee(promise);
                    } else if ((bitField & 33554432) !== 0) {
                        this._fulfill(promise._value());
                    } else if ((bitField & 16777216) !== 0) {
                        this._reject(promise._reason());
                    } else {
                        var reason = new CancellationError('late cancellation observer');
                        promise._attachExtraTrace(reason);
                        this._reject(reason);
                    }
                };
                Promise.prototype._rejectCallback = function (reason, synchronous, ignoreNonErrorWarnings) {
                    var trace = util.ensureErrorObject(reason);
                    var hasStack = trace === reason;
                    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
                        var message = 'a promise was rejected with a non-error: ' + util.classString(reason);
                        this._warn(message, true);
                    }
                    this._attachExtraTrace(trace, synchronous ? hasStack : false);
                    this._reject(reason);
                };
                Promise.prototype._resolveFromExecutor = function (executor) {
                    if (executor === INTERNAL)
                        return;
                    var promise = this;
                    this._captureStackTrace();
                    this._pushContext();
                    var synchronous = true;
                    var r = this._execute(executor, function (value) {
                        promise._resolveCallback(value);
                    }, function (reason) {
                        promise._rejectCallback(reason, synchronous);
                    });
                    synchronous = false;
                    this._popContext();
                    if (r !== undefined) {
                        promise._rejectCallback(r, true);
                    }
                };
                Promise.prototype._settlePromiseFromHandler = function (handler, receiver, value, promise) {
                    var bitField = promise._bitField;
                    if ((bitField & 65536) !== 0)
                        return;
                    promise._pushContext();
                    var x;
                    if (receiver === APPLY) {
                        if (!value || typeof value.length !== 'number') {
                            x = errorObj;
                            x.e = new TypeError('cannot .spread() a non-array: ' + util.classString(value));
                        } else {
                            x = tryCatch(handler).apply(this._boundValue(), value);
                        }
                    } else {
                        x = tryCatch(handler).call(receiver, value);
                    }
                    var promiseCreated = promise._popContext();
                    bitField = promise._bitField;
                    if ((bitField & 65536) !== 0)
                        return;
                    if (x === NEXT_FILTER) {
                        promise._reject(value);
                    } else if (x === errorObj) {
                        promise._rejectCallback(x.e, false);
                    } else {
                        debug.checkForgottenReturns(x, promiseCreated, '', promise, this);
                        promise._resolveCallback(x);
                    }
                };
                Promise.prototype._target = function () {
                    var ret = this;
                    while (ret._isFollowing())
                        ret = ret._followee();
                    return ret;
                };
                Promise.prototype._followee = function () {
                    return this._rejectionHandler0;
                };
                Promise.prototype._setFollowee = function (promise) {
                    this._rejectionHandler0 = promise;
                };
                Promise.prototype._settlePromise = function (promise, handler, receiver, value) {
                    var isPromise = promise instanceof Promise;
                    var bitField = this._bitField;
                    var asyncGuaranteed = (bitField & 134217728) !== 0;
                    if ((bitField & 65536) !== 0) {
                        if (isPromise)
                            promise._invokeInternalOnCancel();
                        if (receiver instanceof PassThroughHandlerContext && receiver.isFinallyHandler()) {
                            receiver.cancelPromise = promise;
                            if (tryCatch(handler).call(receiver, value) === errorObj) {
                                promise._reject(errorObj.e);
                            }
                        } else if (handler === reflectHandler) {
                            promise._fulfill(reflectHandler.call(receiver));
                        } else if (receiver instanceof Proxyable) {
                            receiver._promiseCancelled(promise);
                        } else if (isPromise || promise instanceof PromiseArray) {
                            promise._cancel();
                        } else {
                            receiver.cancel();
                        }
                    } else if (typeof handler === 'function') {
                        if (!isPromise) {
                            handler.call(receiver, value, promise);
                        } else {
                            if (asyncGuaranteed)
                                promise._setAsyncGuaranteed();
                            this._settlePromiseFromHandler(handler, receiver, value, promise);
                        }
                    } else if (receiver instanceof Proxyable) {
                        if (!receiver._isResolved()) {
                            if ((bitField & 33554432) !== 0) {
                                receiver._promiseFulfilled(value, promise);
                            } else {
                                receiver._promiseRejected(value, promise);
                            }
                        }
                    } else if (isPromise) {
                        if (asyncGuaranteed)
                            promise._setAsyncGuaranteed();
                        if ((bitField & 33554432) !== 0) {
                            promise._fulfill(value);
                        } else {
                            promise._reject(value);
                        }
                    }
                };
                Promise.prototype._settlePromiseLateCancellationObserver = function (ctx) {
                    var handler = ctx.handler;
                    var promise = ctx.promise;
                    var receiver = ctx.receiver;
                    var value = ctx.value;
                    if (typeof handler === 'function') {
                        if (!(promise instanceof Promise)) {
                            handler.call(receiver, value, promise);
                        } else {
                            this._settlePromiseFromHandler(handler, receiver, value, promise);
                        }
                    } else if (promise instanceof Promise) {
                        promise._reject(value);
                    }
                };
                Promise.prototype._settlePromiseCtx = function (ctx) {
                    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);
                };
                Promise.prototype._settlePromise0 = function (handler, value, bitField) {
                    var promise = this._promise0;
                    var receiver = this._receiverAt(0);
                    this._promise0 = undefined;
                    this._receiver0 = undefined;
                    this._settlePromise(promise, handler, receiver, value);
                };
                Promise.prototype._clearCallbackDataAtIndex = function (index) {
                    var base = index * 4 - 4;
                    this[base + 2] = this[base + 3] = this[base + 0] = this[base + 1] = undefined;
                };
                Promise.prototype._fulfill = function (value) {
                    var bitField = this._bitField;
                    if ((bitField & 117506048) >>> 16)
                        return;
                    if (value === this) {
                        var err = makeSelfResolutionError();
                        this._attachExtraTrace(err);
                        return this._reject(err);
                    }
                    this._setFulfilled();
                    this._rejectionHandler0 = value;
                    if ((bitField & 65535) > 0) {
                        if ((bitField & 134217728) !== 0) {
                            this._settlePromises();
                        } else {
                            async.settlePromises(this);
                        }
                    }
                };
                Promise.prototype._reject = function (reason) {
                    var bitField = this._bitField;
                    if ((bitField & 117506048) >>> 16)
                        return;
                    this._setRejected();
                    this._fulfillmentHandler0 = reason;
                    if (this._isFinal()) {
                        return async.fatalError(reason, util.isNode);
                    }
                    if ((bitField & 65535) > 0) {
                        async.settlePromises(this);
                    } else {
                        this._ensurePossibleRejectionHandled();
                    }
                };
                Promise.prototype._fulfillPromises = function (len, value) {
                    for (var i = 1; i < len; i++) {
                        var handler = this._fulfillmentHandlerAt(i);
                        var promise = this._promiseAt(i);
                        var receiver = this._receiverAt(i);
                        this._clearCallbackDataAtIndex(i);
                        this._settlePromise(promise, handler, receiver, value);
                    }
                };
                Promise.prototype._rejectPromises = function (len, reason) {
                    for (var i = 1; i < len; i++) {
                        var handler = this._rejectionHandlerAt(i);
                        var promise = this._promiseAt(i);
                        var receiver = this._receiverAt(i);
                        this._clearCallbackDataAtIndex(i);
                        this._settlePromise(promise, handler, receiver, reason);
                    }
                };
                Promise.prototype._settlePromises = function () {
                    var bitField = this._bitField;
                    var len = bitField & 65535;
                    if (len > 0) {
                        if ((bitField & 16842752) !== 0) {
                            var reason = this._fulfillmentHandler0;
                            this._settlePromise0(this._rejectionHandler0, reason, bitField);
                            this._rejectPromises(len, reason);
                        } else {
                            var value = this._rejectionHandler0;
                            this._settlePromise0(this._fulfillmentHandler0, value, bitField);
                            this._fulfillPromises(len, value);
                        }
                        this._setLength(0);
                    }
                    this._clearCancellationData();
                };
                Promise.prototype._settledValue = function () {
                    var bitField = this._bitField;
                    if ((bitField & 33554432) !== 0) {
                        return this._rejectionHandler0;
                    } else if ((bitField & 16777216) !== 0) {
                        return this._fulfillmentHandler0;
                    }
                };
                function deferResolve(v) {
                    this.promise._resolveCallback(v);
                }
                function deferReject(v) {
                    this.promise._rejectCallback(v, false);
                }
                Promise.defer = Promise.pending = function () {
                    debug.deprecated('Promise.defer', 'new Promise');
                    var promise = new Promise(INTERNAL);
                    return {
                        promise: promise,
                        resolve: deferResolve,
                        reject: deferReject
                    };
                };
                util.notEnumerableProp(Promise, '_makeSelfResolutionError', makeSelfResolutionError);
                _dereq_('./method')(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug);
                _dereq_('./bind')(Promise, INTERNAL, tryConvertToPromise, debug);
                _dereq_('./cancel')(Promise, PromiseArray, apiRejection, debug);
                _dereq_('./direct_resolve')(Promise);
                _dereq_('./synchronous_inspection')(Promise);
                _dereq_('./join')(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);
                Promise.Promise = Promise;
                Promise.version = '3.5.0';
                _dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
                _dereq_('./call_get.js')(Promise);
                _dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);
                _dereq_('./timers.js')(Promise, INTERNAL, debug);
                _dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);
                _dereq_('./nodeify.js')(Promise);
                _dereq_('./promisify.js')(Promise, INTERNAL);
                _dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);
                _dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);
                _dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
                _dereq_('./settle.js')(Promise, PromiseArray, debug);
                _dereq_('./some.js')(Promise, PromiseArray, apiRejection);
                _dereq_('./filter.js')(Promise, INTERNAL);
                _dereq_('./each.js')(Promise, INTERNAL);
                _dereq_('./any.js')(Promise);
                util.toFastProperties(Promise);
                util.toFastProperties(Promise.prototype);
                function fillTypes(value) {
                    var p = new Promise(INTERNAL);
                    p._fulfillmentHandler0 = value;
                    p._rejectionHandler0 = value;
                    p._promise0 = value;
                    p._receiver0 = value;
                }
                fillTypes({
                    a: 1
                });
                fillTypes({
                    b: 2
                });
                fillTypes({
                    c: 3
                });
                fillTypes(1);
                fillTypes(function () {
                });
                fillTypes(undefined);
                fillTypes(false);
                fillTypes(new Promise(INTERNAL));
                debug.setBounds(Async.firstLineError, util.lastLineError);
                return Promise;
            };
        },
        {
            './any.js': 1,
            './async': 2,
            './bind': 3,
            './call_get.js': 5,
            './cancel': 6,
            './catch_filter': 7,
            './context': 8,
            './debuggability': 9,
            './direct_resolve': 10,
            './each.js': 11,
            './errors': 12,
            './es5': 13,
            './filter.js': 14,
            './finally': 15,
            './generators.js': 16,
            './join': 17,
            './map.js': 18,
            './method': 19,
            './nodeback': 20,
            './nodeify.js': 21,
            './promise_array': 23,
            './promisify.js': 24,
            './props.js': 25,
            './race.js': 27,
            './reduce.js': 28,
            './settle.js': 30,
            './some.js': 31,
            './synchronous_inspection': 32,
            './thenables': 33,
            './timers.js': 34,
            './using.js': 35,
            './util': 36
        }
    ],
    23: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable) {
                var util = _dereq_('./util');
                var isArray = util.isArray;
                function toResolutionValue(val) {
                    switch (val) {
                    case -2:
                        return [];
                    case -3:
                        return {};
                    case -6:
                        return new Map();
                    }
                }
                function PromiseArray(values) {
                    var promise = this._promise = new Promise(INTERNAL);
                    if (values instanceof Promise) {
                        promise._propagateFrom(values, 3);
                    }
                    promise._setOnCancel(this);
                    this._values = values;
                    this._length = 0;
                    this._totalResolved = 0;
                    this._init(undefined, -2);
                }
                util.inherits(PromiseArray, Proxyable);
                PromiseArray.prototype.length = function () {
                    return this._length;
                };
                PromiseArray.prototype.promise = function () {
                    return this._promise;
                };
                PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {
                    var values = tryConvertToPromise(this._values, this._promise);
                    if (values instanceof Promise) {
                        values = values._target();
                        var bitField = values._bitField;
                        ;
                        this._values = values;
                        if ((bitField & 50397184) === 0) {
                            this._promise._setAsyncGuaranteed();
                            return values._then(init, this._reject, undefined, this, resolveValueIfEmpty);
                        } else if ((bitField & 33554432) !== 0) {
                            values = values._value();
                        } else if ((bitField & 16777216) !== 0) {
                            return this._reject(values._reason());
                        } else {
                            return this._cancel();
                        }
                    }
                    values = util.asArray(values);
                    if (values === null) {
                        var err = apiRejection('expecting an array or an iterable object but got ' + util.classString(values)).reason();
                        this._promise._rejectCallback(err, false);
                        return;
                    }
                    if (values.length === 0) {
                        if (resolveValueIfEmpty === -5) {
                            this._resolveEmptyArray();
                        } else {
                            this._resolve(toResolutionValue(resolveValueIfEmpty));
                        }
                        return;
                    }
                    this._iterate(values);
                };
                PromiseArray.prototype._iterate = function (values) {
                    var len = this.getActualLength(values.length);
                    this._length = len;
                    this._values = this.shouldCopyValues() ? new Array(len) : this._values;
                    var result = this._promise;
                    var isResolved = false;
                    var bitField = null;
                    for (var i = 0; i < len; ++i) {
                        var maybePromise = tryConvertToPromise(values[i], result);
                        if (maybePromise instanceof Promise) {
                            maybePromise = maybePromise._target();
                            bitField = maybePromise._bitField;
                        } else {
                            bitField = null;
                        }
                        if (isResolved) {
                            if (bitField !== null) {
                                maybePromise.suppressUnhandledRejections();
                            }
                        } else if (bitField !== null) {
                            if ((bitField & 50397184) === 0) {
                                maybePromise._proxy(this, i);
                                this._values[i] = maybePromise;
                            } else if ((bitField & 33554432) !== 0) {
                                isResolved = this._promiseFulfilled(maybePromise._value(), i);
                            } else if ((bitField & 16777216) !== 0) {
                                isResolved = this._promiseRejected(maybePromise._reason(), i);
                            } else {
                                isResolved = this._promiseCancelled(i);
                            }
                        } else {
                            isResolved = this._promiseFulfilled(maybePromise, i);
                        }
                    }
                    if (!isResolved)
                        result._setAsyncGuaranteed();
                };
                PromiseArray.prototype._isResolved = function () {
                    return this._values === null;
                };
                PromiseArray.prototype._resolve = function (value) {
                    this._values = null;
                    this._promise._fulfill(value);
                };
                PromiseArray.prototype._cancel = function () {
                    if (this._isResolved() || !this._promise._isCancellable())
                        return;
                    this._values = null;
                    this._promise._cancel();
                };
                PromiseArray.prototype._reject = function (reason) {
                    this._values = null;
                    this._promise._rejectCallback(reason, false);
                };
                PromiseArray.prototype._promiseFulfilled = function (value, index) {
                    this._values[index] = value;
                    var totalResolved = ++this._totalResolved;
                    if (totalResolved >= this._length) {
                        this._resolve(this._values);
                        return true;
                    }
                    return false;
                };
                PromiseArray.prototype._promiseCancelled = function () {
                    this._cancel();
                    return true;
                };
                PromiseArray.prototype._promiseRejected = function (reason) {
                    this._totalResolved++;
                    this._reject(reason);
                    return true;
                };
                PromiseArray.prototype._resultCancelled = function () {
                    if (this._isResolved())
                        return;
                    var values = this._values;
                    this._cancel();
                    if (values instanceof Promise) {
                        values.cancel();
                    } else {
                        for (var i = 0; i < values.length; ++i) {
                            if (values[i] instanceof Promise) {
                                values[i].cancel();
                            }
                        }
                    }
                };
                PromiseArray.prototype.shouldCopyValues = function () {
                    return true;
                };
                PromiseArray.prototype.getActualLength = function (len) {
                    return len;
                };
                return PromiseArray;
            };
        },
        {
            './util': 36
        }
    ],
    24: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL) {
                var THIS = {};
                var util = _dereq_('./util');
                var nodebackForPromise = _dereq_('./nodeback');
                var withAppended = util.withAppended;
                var maybeWrapAsError = util.maybeWrapAsError;
                var canEvaluate = util.canEvaluate;
                var TypeError = _dereq_('./errors').TypeError;
                var defaultSuffix = 'Async';
                var defaultPromisified = {
                    __isPromisified__: true
                };
                var noCopyProps = [
                    'arity',
                    'length',
                    'name',
                    'arguments',
                    'caller',
                    'callee',
                    'prototype',
                    '__isPromisified__'
                ];
                var noCopyPropsPattern = new RegExp('^(?:' + noCopyProps.join('|') + ')$');
                var defaultFilter = function (name) {
                    return util.isIdentifier(name) && name.charAt(0) !== '_' && name !== 'constructor';
                };
                function propsFilter(key) {
                    return !noCopyPropsPattern.test(key);
                }
                function isPromisified(fn) {
                    try {
                        return fn.__isPromisified__ === true;
                    } catch (e) {
                        return false;
                    }
                }
                function hasPromisified(obj, key, suffix) {
                    var val = util.getDataPropertyOrDefault(obj, key + suffix, defaultPromisified);
                    return val ? isPromisified(val) : false;
                }
                function checkValid(ret, suffix, suffixRegexp) {
                    for (var i = 0; i < ret.length; i += 2) {
                        var key = ret[i];
                        if (suffixRegexp.test(key)) {
                            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, '');
                            for (var j = 0; j < ret.length; j += 2) {
                                if (ret[j] === keyWithoutAsyncSuffix) {
                                    throw new TypeError('Cannot promisify an API that has normal methods with \'%s\'-suffix\n\n    See http://goo.gl/MqrFmX\n'.replace('%s', suffix));
                                }
                            }
                        }
                    }
                }
                function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
                    var keys = util.inheritedDataKeys(obj);
                    var ret = [];
                    for (var i = 0; i < keys.length; ++i) {
                        var key = keys[i];
                        var value = obj[key];
                        var passesDefaultFilter = filter === defaultFilter ? true : defaultFilter(key, value, obj);
                        if (typeof value === 'function' && !isPromisified(value) && !hasPromisified(obj, key, suffix) && filter(key, value, obj, passesDefaultFilter)) {
                            ret.push(key, value);
                        }
                    }
                    checkValid(ret, suffix, suffixRegexp);
                    return ret;
                }
                var escapeIdentRegex = function (str) {
                    return str.replace(/([$])/, '\\$');
                };
                var makeNodePromisifiedEval;
                if (!true) {
                    var switchCaseArgumentOrder = function (likelyArgumentCount) {
                        var ret = [likelyArgumentCount];
                        var min = Math.max(0, likelyArgumentCount - 1 - 3);
                        for (var i = likelyArgumentCount - 1; i >= min; --i) {
                            ret.push(i);
                        }
                        for (var i = likelyArgumentCount + 1; i <= 3; ++i) {
                            ret.push(i);
                        }
                        return ret;
                    };
                    var argumentSequence = function (argumentCount) {
                        return util.filledRange(argumentCount, '_arg', '');
                    };
                    var parameterDeclaration = function (parameterCount) {
                        return util.filledRange(Math.max(parameterCount, 3), '_arg', '');
                    };
                    var parameterCount = function (fn) {
                        if (typeof fn.length === 'number') {
                            return Math.max(Math.min(fn.length, 1023 + 1), 0);
                        }
                        return 0;
                    };
                    makeNodePromisifiedEval = function (callback, receiver, originalName, fn, _, multiArgs) {
                        var newParameterCount = Math.max(0, parameterCount(fn) - 1);
                        var argumentOrder = switchCaseArgumentOrder(newParameterCount);
                        var shouldProxyThis = typeof callback === 'string' || receiver === THIS;
                        function generateCallForArgumentCount(count) {
                            var args = argumentSequence(count).join(', ');
                            var comma = count > 0 ? ', ' : '';
                            var ret;
                            if (shouldProxyThis) {
                                ret = 'ret = callback.call(this, {{args}}, nodeback); break;\n';
                            } else {
                                ret = receiver === undefined ? 'ret = callback({{args}}, nodeback); break;\n' : 'ret = callback.call(receiver, {{args}}, nodeback); break;\n';
                            }
                            return ret.replace('{{args}}', args).replace(', ', comma);
                        }
                        function generateArgumentSwitchCase() {
                            var ret = '';
                            for (var i = 0; i < argumentOrder.length; ++i) {
                                ret += 'case ' + argumentOrder[i] + ':' + generateCallForArgumentCount(argumentOrder[i]);
                            }
                            ret += '                                                             \n        default:                                                             \n            var args = new Array(len + 1);                                   \n            var i = 0;                                                       \n            for (var i = 0; i < len; ++i) {                                  \n               args[i] = arguments[i];                                       \n            }                                                                \n            args[i] = nodeback;                                              \n            [CodeForCall]                                                    \n            break;                                                           \n        '.replace('[CodeForCall]', shouldProxyThis ? 'ret = callback.apply(this, args);\n' : 'ret = callback.apply(receiver, args);\n');
                            return ret;
                        }
                        var getFunctionCode = typeof callback === 'string' ? 'this != null ? this[\'' + callback + '\'] : fn' : 'fn';
                        var body = '\'use strict\';                                                \n        var ret = function (Parameters) {                                    \n            \'use strict\';                                                    \n            var len = arguments.length;                                      \n            var promise = new Promise(INTERNAL);                             \n            promise._captureStackTrace();                                    \n            var nodeback = nodebackForPromise(promise, ' + multiArgs + ');   \n            var ret;                                                         \n            var callback = tryCatch([GetFunctionCode]);                      \n            switch(len) {                                                    \n                [CodeForSwitchCase]                                          \n            }                                                                \n            if (ret === errorObj) {                                          \n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n            }                                                                \n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \n            return promise;                                                  \n        };                                                                   \n        notEnumerableProp(ret, \'__isPromisified__\', true);                   \n        return ret;                                                          \n    '.replace('[CodeForSwitchCase]', generateArgumentSwitchCase()).replace('[GetFunctionCode]', getFunctionCode);
                        body = body.replace('Parameters', parameterDeclaration(newParameterCount));
                        return new Function('Promise', 'fn', 'receiver', 'withAppended', 'maybeWrapAsError', 'nodebackForPromise', 'tryCatch', 'errorObj', 'notEnumerableProp', 'INTERNAL', body)(Promise, fn, receiver, withAppended, maybeWrapAsError, nodebackForPromise, util.tryCatch, util.errorObj, util.notEnumerableProp, INTERNAL);
                    };
                }
                function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {
                    var defaultThis = function () {
                        return this;
                    }();
                    var method = callback;
                    if (typeof method === 'string') {
                        callback = fn;
                    }
                    function promisified() {
                        var _receiver = receiver;
                        if (receiver === THIS)
                            _receiver = this;
                        var promise = new Promise(INTERNAL);
                        promise._captureStackTrace();
                        var cb = typeof method === 'string' && this !== defaultThis ? this[method] : callback;
                        var fn = nodebackForPromise(promise, multiArgs);
                        try {
                            cb.apply(_receiver, withAppended(arguments, fn));
                        } catch (e) {
                            promise._rejectCallback(maybeWrapAsError(e), true, true);
                        }
                        if (!promise._isFateSealed())
                            promise._setAsyncGuaranteed();
                        return promise;
                    }
                    util.notEnumerableProp(promisified, '__isPromisified__', true);
                    return promisified;
                }
                var makeNodePromisified = canEvaluate ? makeNodePromisifiedEval : makeNodePromisifiedClosure;
                function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {
                    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + '$');
                    var methods = promisifiableMethods(obj, suffix, suffixRegexp, filter);
                    for (var i = 0, len = methods.length; i < len; i += 2) {
                        var key = methods[i];
                        var fn = methods[i + 1];
                        var promisifiedKey = key + suffix;
                        if (promisifier === makeNodePromisified) {
                            obj[promisifiedKey] = makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
                        } else {
                            var promisified = promisifier(fn, function () {
                                return makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
                            });
                            util.notEnumerableProp(promisified, '__isPromisified__', true);
                            obj[promisifiedKey] = promisified;
                        }
                    }
                    util.toFastProperties(obj);
                    return obj;
                }
                function promisify(callback, receiver, multiArgs) {
                    return makeNodePromisified(callback, receiver, undefined, callback, null, multiArgs);
                }
                Promise.promisify = function (fn, options) {
                    if (typeof fn !== 'function') {
                        throw new TypeError('expecting a function but got ' + util.classString(fn));
                    }
                    if (isPromisified(fn)) {
                        return fn;
                    }
                    options = Object(options);
                    var receiver = options.context === undefined ? THIS : options.context;
                    var multiArgs = !!options.multiArgs;
                    var ret = promisify(fn, receiver, multiArgs);
                    util.copyDescriptors(fn, ret, propsFilter);
                    return ret;
                };
                Promise.promisifyAll = function (target, options) {
                    if (typeof target !== 'function' && typeof target !== 'object') {
                        throw new TypeError('the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    options = Object(options);
                    var multiArgs = !!options.multiArgs;
                    var suffix = options.suffix;
                    if (typeof suffix !== 'string')
                        suffix = defaultSuffix;
                    var filter = options.filter;
                    if (typeof filter !== 'function')
                        filter = defaultFilter;
                    var promisifier = options.promisifier;
                    if (typeof promisifier !== 'function')
                        promisifier = makeNodePromisified;
                    if (!util.isIdentifier(suffix)) {
                        throw new RangeError('suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    var keys = util.inheritedDataKeys(target);
                    for (var i = 0; i < keys.length; ++i) {
                        var value = target[keys[i]];
                        if (keys[i] !== 'constructor' && util.isClass(value)) {
                            promisifyAll(value.prototype, suffix, filter, promisifier, multiArgs);
                            promisifyAll(value, suffix, filter, promisifier, multiArgs);
                        }
                    }
                    return promisifyAll(target, suffix, filter, promisifier, multiArgs);
                };
            };
        },
        {
            './errors': 12,
            './nodeback': 20,
            './util': 36
        }
    ],
    25: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, PromiseArray, tryConvertToPromise, apiRejection) {
                var util = _dereq_('./util');
                var isObject = util.isObject;
                var es5 = _dereq_('./es5');
                var Es6Map;
                if (typeof Map === 'function')
                    Es6Map = Map;
                var mapToEntries = function () {
                    var index = 0;
                    var size = 0;
                    function extractEntry(value, key) {
                        this[index] = value;
                        this[index + size] = key;
                        index++;
                    }
                    return function mapToEntries(map) {
                        size = map.size;
                        index = 0;
                        var ret = new Array(map.size * 2);
                        map.forEach(extractEntry, ret);
                        return ret;
                    };
                }();
                var entriesToMap = function (entries) {
                    var ret = new Es6Map();
                    var length = entries.length / 2 | 0;
                    for (var i = 0; i < length; ++i) {
                        var key = entries[length + i];
                        var value = entries[i];
                        ret.set(key, value);
                    }
                    return ret;
                };
                function PropertiesPromiseArray(obj) {
                    var isMap = false;
                    var entries;
                    if (Es6Map !== undefined && obj instanceof Es6Map) {
                        entries = mapToEntries(obj);
                        isMap = true;
                    } else {
                        var keys = es5.keys(obj);
                        var len = keys.length;
                        entries = new Array(len * 2);
                        for (var i = 0; i < len; ++i) {
                            var key = keys[i];
                            entries[i] = obj[key];
                            entries[i + len] = key;
                        }
                    }
                    this.constructor$(entries);
                    this._isMap = isMap;
                    this._init$(undefined, isMap ? -6 : -3);
                }
                util.inherits(PropertiesPromiseArray, PromiseArray);
                PropertiesPromiseArray.prototype._init = function () {
                };
                PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {
                    this._values[index] = value;
                    var totalResolved = ++this._totalResolved;
                    if (totalResolved >= this._length) {
                        var val;
                        if (this._isMap) {
                            val = entriesToMap(this._values);
                        } else {
                            val = {};
                            var keyOffset = this.length();
                            for (var i = 0, len = this.length(); i < len; ++i) {
                                val[this._values[i + keyOffset]] = this._values[i];
                            }
                        }
                        this._resolve(val);
                        return true;
                    }
                    return false;
                };
                PropertiesPromiseArray.prototype.shouldCopyValues = function () {
                    return false;
                };
                PropertiesPromiseArray.prototype.getActualLength = function (len) {
                    return len >> 1;
                };
                function props(promises) {
                    var ret;
                    var castValue = tryConvertToPromise(promises);
                    if (!isObject(castValue)) {
                        return apiRejection('cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n');
                    } else if (castValue instanceof Promise) {
                        ret = castValue._then(Promise.props, undefined, undefined, undefined, undefined);
                    } else {
                        ret = new PropertiesPromiseArray(castValue).promise();
                    }
                    if (castValue instanceof Promise) {
                        ret._propagateFrom(castValue, 2);
                    }
                    return ret;
                }
                Promise.prototype.props = function () {
                    return props(this);
                };
                Promise.props = function (promises) {
                    return props(promises);
                };
            };
        },
        {
            './es5': 13,
            './util': 36
        }
    ],
    26: [
        function (_dereq_, module, exports) {
            'use strict';
            function arrayMove(src, srcIndex, dst, dstIndex, len) {
                for (var j = 0; j < len; ++j) {
                    dst[j + dstIndex] = src[j + srcIndex];
                    src[j + srcIndex] = void 0;
                }
            }
            function Queue(capacity) {
                this._capacity = capacity;
                this._length = 0;
                this._front = 0;
            }
            Queue.prototype._willBeOverCapacity = function (size) {
                return this._capacity < size;
            };
            Queue.prototype._pushOne = function (arg) {
                var length = this.length();
                this._checkCapacity(length + 1);
                var i = this._front + length & this._capacity - 1;
                this[i] = arg;
                this._length = length + 1;
            };
            Queue.prototype.push = function (fn, receiver, arg) {
                var length = this.length() + 3;
                if (this._willBeOverCapacity(length)) {
                    this._pushOne(fn);
                    this._pushOne(receiver);
                    this._pushOne(arg);
                    return;
                }
                var j = this._front + length - 3;
                this._checkCapacity(length);
                var wrapMask = this._capacity - 1;
                this[j + 0 & wrapMask] = fn;
                this[j + 1 & wrapMask] = receiver;
                this[j + 2 & wrapMask] = arg;
                this._length = length;
            };
            Queue.prototype.shift = function () {
                var front = this._front, ret = this[front];
                this[front] = undefined;
                this._front = front + 1 & this._capacity - 1;
                this._length--;
                return ret;
            };
            Queue.prototype.length = function () {
                return this._length;
            };
            Queue.prototype._checkCapacity = function (size) {
                if (this._capacity < size) {
                    this._resizeTo(this._capacity << 1);
                }
            };
            Queue.prototype._resizeTo = function (capacity) {
                var oldCapacity = this._capacity;
                this._capacity = capacity;
                var front = this._front;
                var length = this._length;
                var moveItemsCount = front + length & oldCapacity - 1;
                arrayMove(this, 0, this, oldCapacity, moveItemsCount);
            };
            module.exports = Queue;
        },
        {}
    ],
    27: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection) {
                var util = _dereq_('./util');
                var raceLater = function (promise) {
                    return promise.then(function (array) {
                        return race(array, promise);
                    });
                };
                function race(promises, parent) {
                    var maybePromise = tryConvertToPromise(promises);
                    if (maybePromise instanceof Promise) {
                        return raceLater(maybePromise);
                    } else {
                        promises = util.asArray(promises);
                        if (promises === null)
                            return apiRejection('expecting an array or an iterable object but got ' + util.classString(promises));
                    }
                    var ret = new Promise(INTERNAL);
                    if (parent !== undefined) {
                        ret._propagateFrom(parent, 3);
                    }
                    var fulfill = ret._fulfill;
                    var reject = ret._reject;
                    for (var i = 0, len = promises.length; i < len; ++i) {
                        var val = promises[i];
                        if (val === undefined && !(i in promises)) {
                            continue;
                        }
                        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
                    }
                    return ret;
                }
                Promise.race = function (promises) {
                    return race(promises, undefined);
                };
                Promise.prototype.race = function () {
                    return race(this, undefined);
                };
            };
        },
        {
            './util': 36
        }
    ],
    28: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
                var getDomain = Promise._getDomain;
                var util = _dereq_('./util');
                var tryCatch = util.tryCatch;
                function ReductionPromiseArray(promises, fn, initialValue, _each) {
                    this.constructor$(promises);
                    var domain = getDomain();
                    this._fn = domain === null ? fn : util.domainBind(domain, fn);
                    if (initialValue !== undefined) {
                        initialValue = Promise.resolve(initialValue);
                        initialValue._attachCancellationCallback(this);
                    }
                    this._initialValue = initialValue;
                    this._currentCancellable = null;
                    if (_each === INTERNAL) {
                        this._eachValues = Array(this._length);
                    } else if (_each === 0) {
                        this._eachValues = null;
                    } else {
                        this._eachValues = undefined;
                    }
                    this._promise._captureStackTrace();
                    this._init$(undefined, -5);
                }
                util.inherits(ReductionPromiseArray, PromiseArray);
                ReductionPromiseArray.prototype._gotAccum = function (accum) {
                    if (this._eachValues !== undefined && this._eachValues !== null && accum !== INTERNAL) {
                        this._eachValues.push(accum);
                    }
                };
                ReductionPromiseArray.prototype._eachComplete = function (value) {
                    if (this._eachValues !== null) {
                        this._eachValues.push(value);
                    }
                    return this._eachValues;
                };
                ReductionPromiseArray.prototype._init = function () {
                };
                ReductionPromiseArray.prototype._resolveEmptyArray = function () {
                    this._resolve(this._eachValues !== undefined ? this._eachValues : this._initialValue);
                };
                ReductionPromiseArray.prototype.shouldCopyValues = function () {
                    return false;
                };
                ReductionPromiseArray.prototype._resolve = function (value) {
                    this._promise._resolveCallback(value);
                    this._values = null;
                };
                ReductionPromiseArray.prototype._resultCancelled = function (sender) {
                    if (sender === this._initialValue)
                        return this._cancel();
                    if (this._isResolved())
                        return;
                    this._resultCancelled$();
                    if (this._currentCancellable instanceof Promise) {
                        this._currentCancellable.cancel();
                    }
                    if (this._initialValue instanceof Promise) {
                        this._initialValue.cancel();
                    }
                };
                ReductionPromiseArray.prototype._iterate = function (values) {
                    this._values = values;
                    var value;
                    var i;
                    var length = values.length;
                    if (this._initialValue !== undefined) {
                        value = this._initialValue;
                        i = 0;
                    } else {
                        value = Promise.resolve(values[0]);
                        i = 1;
                    }
                    this._currentCancellable = value;
                    if (!value.isRejected()) {
                        for (; i < length; ++i) {
                            var ctx = {
                                accum: null,
                                value: values[i],
                                index: i,
                                length: length,
                                array: this
                            };
                            value = value._then(gotAccum, undefined, undefined, ctx, undefined);
                        }
                    }
                    if (this._eachValues !== undefined) {
                        value = value._then(this._eachComplete, undefined, undefined, this, undefined);
                    }
                    value._then(completed, completed, undefined, value, this);
                };
                Promise.prototype.reduce = function (fn, initialValue) {
                    return reduce(this, fn, initialValue, null);
                };
                Promise.reduce = function (promises, fn, initialValue, _each) {
                    return reduce(promises, fn, initialValue, _each);
                };
                function completed(valueOrReason, array) {
                    if (this.isFulfilled()) {
                        array._resolve(valueOrReason);
                    } else {
                        array._reject(valueOrReason);
                    }
                }
                function reduce(promises, fn, initialValue, _each) {
                    if (typeof fn !== 'function') {
                        return apiRejection('expecting a function but got ' + util.classString(fn));
                    }
                    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);
                    return array.promise();
                }
                function gotAccum(accum) {
                    this.accum = accum;
                    this.array._gotAccum(accum);
                    var value = tryConvertToPromise(this.value, this.array._promise);
                    if (value instanceof Promise) {
                        this.array._currentCancellable = value;
                        return value._then(gotValue, undefined, undefined, this, undefined);
                    } else {
                        return gotValue.call(this, value);
                    }
                }
                function gotValue(value) {
                    var array = this.array;
                    var promise = array._promise;
                    var fn = tryCatch(array._fn);
                    promise._pushContext();
                    var ret;
                    if (array._eachValues !== undefined) {
                        ret = fn.call(promise._boundValue(), value, this.index, this.length);
                    } else {
                        ret = fn.call(promise._boundValue(), this.accum, value, this.index, this.length);
                    }
                    if (ret instanceof Promise) {
                        array._currentCancellable = ret;
                    }
                    var promiseCreated = promise._popContext();
                    debug.checkForgottenReturns(ret, promiseCreated, array._eachValues !== undefined ? 'Promise.each' : 'Promise.reduce', promise);
                    return ret;
                }
            };
        },
        {
            './util': 36
        }
    ],
    29: [
        function (_dereq_, module, exports) {
            'use strict';
            var util = _dereq_('./util');
            var schedule;
            var noAsyncScheduler = function () {
                throw new Error('No async scheduler available\n\n    See http://goo.gl/MqrFmX\n');
            };
            var NativePromise = util.getNativePromise();
            if (util.isNode && typeof MutationObserver === 'undefined') {
                var GlobalSetImmediate = global.setImmediate;
                var ProcessNextTick = process.nextTick;
                schedule = util.isRecentNode ? function (fn) {
                    GlobalSetImmediate.call(global, fn);
                } : function (fn) {
                    ProcessNextTick.call(process, fn);
                };
            } else if (typeof NativePromise === 'function' && typeof NativePromise.resolve === 'function') {
                var nativePromise = NativePromise.resolve();
                schedule = function (fn) {
                    nativePromise.then(fn);
                };
            } else if (typeof MutationObserver !== 'undefined' && !(typeof window !== 'undefined' && window.navigator && (window.navigator.standalone || window.cordova))) {
                schedule = function () {
                    var div = document.createElement('div');
                    var opts = {
                        attributes: true
                    };
                    var toggleScheduled = false;
                    var div2 = document.createElement('div');
                    var o2 = new MutationObserver(function () {
                        div.classList.toggle('foo');
                        toggleScheduled = false;
                    });
                    o2.observe(div2, opts);
                    var scheduleToggle = function () {
                        if (toggleScheduled)
                            return;
                        toggleScheduled = true;
                        div2.classList.toggle('foo');
                    };
                    return function schedule(fn) {
                        var o = new MutationObserver(function () {
                            o.disconnect();
                            fn();
                        });
                        o.observe(div, opts);
                        scheduleToggle();
                    };
                }();
            } else if (typeof setImmediate !== 'undefined') {
                schedule = function (fn) {
                    setImmediate(fn);
                };
            } else if (typeof setTimeout !== 'undefined') {
                schedule = function (fn) {
                    setTimeout(fn, 0);
                };
            } else {
                schedule = noAsyncScheduler;
            }
            module.exports = schedule;
        },
        {
            './util': 36
        }
    ],
    30: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, PromiseArray, debug) {
                var PromiseInspection = Promise.PromiseInspection;
                var util = _dereq_('./util');
                function SettledPromiseArray(values) {
                    this.constructor$(values);
                }
                util.inherits(SettledPromiseArray, PromiseArray);
                SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {
                    this._values[index] = inspection;
                    var totalResolved = ++this._totalResolved;
                    if (totalResolved >= this._length) {
                        this._resolve(this._values);
                        return true;
                    }
                    return false;
                };
                SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {
                    var ret = new PromiseInspection();
                    ret._bitField = 33554432;
                    ret._settledValueField = value;
                    return this._promiseResolved(index, ret);
                };
                SettledPromiseArray.prototype._promiseRejected = function (reason, index) {
                    var ret = new PromiseInspection();
                    ret._bitField = 16777216;
                    ret._settledValueField = reason;
                    return this._promiseResolved(index, ret);
                };
                Promise.settle = function (promises) {
                    debug.deprecated('.settle()', '.reflect()');
                    return new SettledPromiseArray(promises).promise();
                };
                Promise.prototype.settle = function () {
                    return Promise.settle(this);
                };
            };
        },
        {
            './util': 36
        }
    ],
    31: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, PromiseArray, apiRejection) {
                var util = _dereq_('./util');
                var RangeError = _dereq_('./errors').RangeError;
                var AggregateError = _dereq_('./errors').AggregateError;
                var isArray = util.isArray;
                var CANCELLATION = {};
                function SomePromiseArray(values) {
                    this.constructor$(values);
                    this._howMany = 0;
                    this._unwrap = false;
                    this._initialized = false;
                }
                util.inherits(SomePromiseArray, PromiseArray);
                SomePromiseArray.prototype._init = function () {
                    if (!this._initialized) {
                        return;
                    }
                    if (this._howMany === 0) {
                        this._resolve([]);
                        return;
                    }
                    this._init$(undefined, -5);
                    var isArrayResolved = isArray(this._values);
                    if (!this._isResolved() && isArrayResolved && this._howMany > this._canPossiblyFulfill()) {
                        this._reject(this._getRangeError(this.length()));
                    }
                };
                SomePromiseArray.prototype.init = function () {
                    this._initialized = true;
                    this._init();
                };
                SomePromiseArray.prototype.setUnwrap = function () {
                    this._unwrap = true;
                };
                SomePromiseArray.prototype.howMany = function () {
                    return this._howMany;
                };
                SomePromiseArray.prototype.setHowMany = function (count) {
                    this._howMany = count;
                };
                SomePromiseArray.prototype._promiseFulfilled = function (value) {
                    this._addFulfilled(value);
                    if (this._fulfilled() === this.howMany()) {
                        this._values.length = this.howMany();
                        if (this.howMany() === 1 && this._unwrap) {
                            this._resolve(this._values[0]);
                        } else {
                            this._resolve(this._values);
                        }
                        return true;
                    }
                    return false;
                };
                SomePromiseArray.prototype._promiseRejected = function (reason) {
                    this._addRejected(reason);
                    return this._checkOutcome();
                };
                SomePromiseArray.prototype._promiseCancelled = function () {
                    if (this._values instanceof Promise || this._values == null) {
                        return this._cancel();
                    }
                    this._addRejected(CANCELLATION);
                    return this._checkOutcome();
                };
                SomePromiseArray.prototype._checkOutcome = function () {
                    if (this.howMany() > this._canPossiblyFulfill()) {
                        var e = new AggregateError();
                        for (var i = this.length(); i < this._values.length; ++i) {
                            if (this._values[i] !== CANCELLATION) {
                                e.push(this._values[i]);
                            }
                        }
                        if (e.length > 0) {
                            this._reject(e);
                        } else {
                            this._cancel();
                        }
                        return true;
                    }
                    return false;
                };
                SomePromiseArray.prototype._fulfilled = function () {
                    return this._totalResolved;
                };
                SomePromiseArray.prototype._rejected = function () {
                    return this._values.length - this.length();
                };
                SomePromiseArray.prototype._addRejected = function (reason) {
                    this._values.push(reason);
                };
                SomePromiseArray.prototype._addFulfilled = function (value) {
                    this._values[this._totalResolved++] = value;
                };
                SomePromiseArray.prototype._canPossiblyFulfill = function () {
                    return this.length() - this._rejected();
                };
                SomePromiseArray.prototype._getRangeError = function (count) {
                    var message = 'Input array must contain at least ' + this._howMany + ' items but contains only ' + count + ' items';
                    return new RangeError(message);
                };
                SomePromiseArray.prototype._resolveEmptyArray = function () {
                    this._reject(this._getRangeError(0));
                };
                function some(promises, howMany) {
                    if ((howMany | 0) !== howMany || howMany < 0) {
                        return apiRejection('expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    var ret = new SomePromiseArray(promises);
                    var promise = ret.promise();
                    ret.setHowMany(howMany);
                    ret.init();
                    return promise;
                }
                Promise.some = function (promises, howMany) {
                    return some(promises, howMany);
                };
                Promise.prototype.some = function (howMany) {
                    return some(this, howMany);
                };
                Promise._SomePromiseArray = SomePromiseArray;
            };
        },
        {
            './errors': 12,
            './util': 36
        }
    ],
    32: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise) {
                function PromiseInspection(promise) {
                    if (promise !== undefined) {
                        promise = promise._target();
                        this._bitField = promise._bitField;
                        this._settledValueField = promise._isFateSealed() ? promise._settledValue() : undefined;
                    } else {
                        this._bitField = 0;
                        this._settledValueField = undefined;
                    }
                }
                PromiseInspection.prototype._settledValue = function () {
                    return this._settledValueField;
                };
                var value = PromiseInspection.prototype.value = function () {
                    if (!this.isFulfilled()) {
                        throw new TypeError('cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    return this._settledValue();
                };
                var reason = PromiseInspection.prototype.error = PromiseInspection.prototype.reason = function () {
                    if (!this.isRejected()) {
                        throw new TypeError('cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n');
                    }
                    return this._settledValue();
                };
                var isFulfilled = PromiseInspection.prototype.isFulfilled = function () {
                    return (this._bitField & 33554432) !== 0;
                };
                var isRejected = PromiseInspection.prototype.isRejected = function () {
                    return (this._bitField & 16777216) !== 0;
                };
                var isPending = PromiseInspection.prototype.isPending = function () {
                    return (this._bitField & 50397184) === 0;
                };
                var isResolved = PromiseInspection.prototype.isResolved = function () {
                    return (this._bitField & 50331648) !== 0;
                };
                PromiseInspection.prototype.isCancelled = function () {
                    return (this._bitField & 8454144) !== 0;
                };
                Promise.prototype.__isCancelled = function () {
                    return (this._bitField & 65536) === 65536;
                };
                Promise.prototype._isCancelled = function () {
                    return this._target().__isCancelled();
                };
                Promise.prototype.isCancelled = function () {
                    return (this._target()._bitField & 8454144) !== 0;
                };
                Promise.prototype.isPending = function () {
                    return isPending.call(this._target());
                };
                Promise.prototype.isRejected = function () {
                    return isRejected.call(this._target());
                };
                Promise.prototype.isFulfilled = function () {
                    return isFulfilled.call(this._target());
                };
                Promise.prototype.isResolved = function () {
                    return isResolved.call(this._target());
                };
                Promise.prototype.value = function () {
                    return value.call(this._target());
                };
                Promise.prototype.reason = function () {
                    var target = this._target();
                    target._unsetRejectionIsUnhandled();
                    return reason.call(target);
                };
                Promise.prototype._value = function () {
                    return this._settledValue();
                };
                Promise.prototype._reason = function () {
                    this._unsetRejectionIsUnhandled();
                    return this._settledValue();
                };
                Promise.PromiseInspection = PromiseInspection;
            };
        },
        {}
    ],
    33: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL) {
                var util = _dereq_('./util');
                var errorObj = util.errorObj;
                var isObject = util.isObject;
                function tryConvertToPromise(obj, context) {
                    if (isObject(obj)) {
                        if (obj instanceof Promise)
                            return obj;
                        var then = getThen(obj);
                        if (then === errorObj) {
                            if (context)
                                context._pushContext();
                            var ret = Promise.reject(then.e);
                            if (context)
                                context._popContext();
                            return ret;
                        } else if (typeof then === 'function') {
                            if (isAnyBluebirdPromise(obj)) {
                                var ret = new Promise(INTERNAL);
                                obj._then(ret._fulfill, ret._reject, undefined, ret, null);
                                return ret;
                            }
                            return doThenable(obj, then, context);
                        }
                    }
                    return obj;
                }
                function doGetThen(obj) {
                    return obj.then;
                }
                function getThen(obj) {
                    try {
                        return doGetThen(obj);
                    } catch (e) {
                        errorObj.e = e;
                        return errorObj;
                    }
                }
                var hasProp = {}.hasOwnProperty;
                function isAnyBluebirdPromise(obj) {
                    try {
                        return hasProp.call(obj, '_promise0');
                    } catch (e) {
                        return false;
                    }
                }
                function doThenable(x, then, context) {
                    var promise = new Promise(INTERNAL);
                    var ret = promise;
                    if (context)
                        context._pushContext();
                    promise._captureStackTrace();
                    if (context)
                        context._popContext();
                    var synchronous = true;
                    var result = util.tryCatch(then).call(x, resolve, reject);
                    synchronous = false;
                    if (promise && result === errorObj) {
                        promise._rejectCallback(result.e, true, true);
                        promise = null;
                    }
                    function resolve(value) {
                        if (!promise)
                            return;
                        promise._resolveCallback(value);
                        promise = null;
                    }
                    function reject(reason) {
                        if (!promise)
                            return;
                        promise._rejectCallback(reason, synchronous, true);
                        promise = null;
                    }
                    return ret;
                }
                return tryConvertToPromise;
            };
        },
        {
            './util': 36
        }
    ],
    34: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, INTERNAL, debug) {
                var util = _dereq_('./util');
                var TimeoutError = Promise.TimeoutError;
                function HandleWrapper(handle) {
                    this.handle = handle;
                }
                HandleWrapper.prototype._resultCancelled = function () {
                    clearTimeout(this.handle);
                };
                var afterValue = function (value) {
                    return delay(+this).thenReturn(value);
                };
                var delay = Promise.delay = function (ms, value) {
                    var ret;
                    var handle;
                    if (value !== undefined) {
                        ret = Promise.resolve(value)._then(afterValue, null, null, ms, undefined);
                        if (debug.cancellation() && value instanceof Promise) {
                            ret._setOnCancel(value);
                        }
                    } else {
                        ret = new Promise(INTERNAL);
                        handle = setTimeout(function () {
                            ret._fulfill();
                        }, +ms);
                        if (debug.cancellation()) {
                            ret._setOnCancel(new HandleWrapper(handle));
                        }
                        ret._captureStackTrace();
                    }
                    ret._setAsyncGuaranteed();
                    return ret;
                };
                Promise.prototype.delay = function (ms) {
                    return delay(ms, this);
                };
                var afterTimeout = function (promise, message, parent) {
                    var err;
                    if (typeof message !== 'string') {
                        if (message instanceof Error) {
                            err = message;
                        } else {
                            err = new TimeoutError('operation timed out');
                        }
                    } else {
                        err = new TimeoutError(message);
                    }
                    util.markAsOriginatingFromRejection(err);
                    promise._attachExtraTrace(err);
                    promise._reject(err);
                    if (parent != null) {
                        parent.cancel();
                    }
                };
                function successClear(value) {
                    clearTimeout(this.handle);
                    return value;
                }
                function failureClear(reason) {
                    clearTimeout(this.handle);
                    throw reason;
                }
                Promise.prototype.timeout = function (ms, message) {
                    ms = +ms;
                    var ret, parent;
                    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
                        if (ret.isPending()) {
                            afterTimeout(ret, message, parent);
                        }
                    }, ms));
                    if (debug.cancellation()) {
                        parent = this.then();
                        ret = parent._then(successClear, failureClear, undefined, handleWrapper, undefined);
                        ret._setOnCancel(handleWrapper);
                    } else {
                        ret = this._then(successClear, failureClear, undefined, handleWrapper, undefined);
                    }
                    return ret;
                };
            };
        },
        {
            './util': 36
        }
    ],
    35: [
        function (_dereq_, module, exports) {
            'use strict';
            module.exports = function (Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug) {
                var util = _dereq_('./util');
                var TypeError = _dereq_('./errors').TypeError;
                var inherits = _dereq_('./util').inherits;
                var errorObj = util.errorObj;
                var tryCatch = util.tryCatch;
                var NULL = {};
                function thrower(e) {
                    setTimeout(function () {
                        throw e;
                    }, 0);
                }
                function castPreservingDisposable(thenable) {
                    var maybePromise = tryConvertToPromise(thenable);
                    if (maybePromise !== thenable && typeof thenable._isDisposable === 'function' && typeof thenable._getDisposer === 'function' && thenable._isDisposable()) {
                        maybePromise._setDisposable(thenable._getDisposer());
                    }
                    return maybePromise;
                }
                function dispose(resources, inspection) {
                    var i = 0;
                    var len = resources.length;
                    var ret = new Promise(INTERNAL);
                    function iterator() {
                        if (i >= len)
                            return ret._fulfill();
                        var maybePromise = castPreservingDisposable(resources[i++]);
                        if (maybePromise instanceof Promise && maybePromise._isDisposable()) {
                            try {
                                maybePromise = tryConvertToPromise(maybePromise._getDisposer().tryDispose(inspection), resources.promise);
                            } catch (e) {
                                return thrower(e);
                            }
                            if (maybePromise instanceof Promise) {
                                return maybePromise._then(iterator, thrower, null, null, null);
                            }
                        }
                        iterator();
                    }
                    iterator();
                    return ret;
                }
                function Disposer(data, promise, context) {
                    this._data = data;
                    this._promise = promise;
                    this._context = context;
                }
                Disposer.prototype.data = function () {
                    return this._data;
                };
                Disposer.prototype.promise = function () {
                    return this._promise;
                };
                Disposer.prototype.resource = function () {
                    if (this.promise().isFulfilled()) {
                        return this.promise().value();
                    }
                    return NULL;
                };
                Disposer.prototype.tryDispose = function (inspection) {
                    var resource = this.resource();
                    var context = this._context;
                    if (context !== undefined)
                        context._pushContext();
                    var ret = resource !== NULL ? this.doDispose(resource, inspection) : null;
                    if (context !== undefined)
                        context._popContext();
                    this._promise._unsetDisposable();
                    this._data = null;
                    return ret;
                };
                Disposer.isDisposer = function (d) {
                    return d != null && typeof d.resource === 'function' && typeof d.tryDispose === 'function';
                };
                function FunctionDisposer(fn, promise, context) {
                    this.constructor$(fn, promise, context);
                }
                inherits(FunctionDisposer, Disposer);
                FunctionDisposer.prototype.doDispose = function (resource, inspection) {
                    var fn = this.data();
                    return fn.call(resource, resource, inspection);
                };
                function maybeUnwrapDisposer(value) {
                    if (Disposer.isDisposer(value)) {
                        this.resources[this.index]._setDisposable(value);
                        return value.promise();
                    }
                    return value;
                }
                function ResourceList(length) {
                    this.length = length;
                    this.promise = null;
                    this[length - 1] = null;
                }
                ResourceList.prototype._resultCancelled = function () {
                    var len = this.length;
                    for (var i = 0; i < len; ++i) {
                        var item = this[i];
                        if (item instanceof Promise) {
                            item.cancel();
                        }
                    }
                };
                Promise.using = function () {
                    var len = arguments.length;
                    if (len < 2)
                        return apiRejection('you must pass at least 2 arguments to Promise.using');
                    var fn = arguments[len - 1];
                    if (typeof fn !== 'function') {
                        return apiRejection('expecting a function but got ' + util.classString(fn));
                    }
                    var input;
                    var spreadArgs = true;
                    if (len === 2 && Array.isArray(arguments[0])) {
                        input = arguments[0];
                        len = input.length;
                        spreadArgs = false;
                    } else {
                        input = arguments;
                        len--;
                    }
                    var resources = new ResourceList(len);
                    for (var i = 0; i < len; ++i) {
                        var resource = input[i];
                        if (Disposer.isDisposer(resource)) {
                            var disposer = resource;
                            resource = resource.promise();
                            resource._setDisposable(disposer);
                        } else {
                            var maybePromise = tryConvertToPromise(resource);
                            if (maybePromise instanceof Promise) {
                                resource = maybePromise._then(maybeUnwrapDisposer, null, null, {
                                    resources: resources,
                                    index: i
                                }, undefined);
                            }
                        }
                        resources[i] = resource;
                    }
                    var reflectedResources = new Array(resources.length);
                    for (var i = 0; i < reflectedResources.length; ++i) {
                        reflectedResources[i] = Promise.resolve(resources[i]).reflect();
                    }
                    var resultPromise = Promise.all(reflectedResources).then(function (inspections) {
                        for (var i = 0; i < inspections.length; ++i) {
                            var inspection = inspections[i];
                            if (inspection.isRejected()) {
                                errorObj.e = inspection.error();
                                return errorObj;
                            } else if (!inspection.isFulfilled()) {
                                resultPromise.cancel();
                                return;
                            }
                            inspections[i] = inspection.value();
                        }
                        promise._pushContext();
                        fn = tryCatch(fn);
                        var ret = spreadArgs ? fn.apply(undefined, inspections) : fn(inspections);
                        var promiseCreated = promise._popContext();
                        debug.checkForgottenReturns(ret, promiseCreated, 'Promise.using', promise);
                        return ret;
                    });
                    var promise = resultPromise.lastly(function () {
                        var inspection = new Promise.PromiseInspection(resultPromise);
                        return dispose(resources, inspection);
                    });
                    resources.promise = promise;
                    promise._setOnCancel(resources);
                    return promise;
                };
                Promise.prototype._setDisposable = function (disposer) {
                    this._bitField = this._bitField | 131072;
                    this._disposer = disposer;
                };
                Promise.prototype._isDisposable = function () {
                    return (this._bitField & 131072) > 0;
                };
                Promise.prototype._getDisposer = function () {
                    return this._disposer;
                };
                Promise.prototype._unsetDisposable = function () {
                    this._bitField = this._bitField & ~131072;
                    this._disposer = undefined;
                };
                Promise.prototype.disposer = function (fn) {
                    if (typeof fn === 'function') {
                        return new FunctionDisposer(fn, this, createContext());
                    }
                    throw new TypeError();
                };
            };
        },
        {
            './errors': 12,
            './util': 36
        }
    ],
    36: [
        function (_dereq_, module, exports) {
            'use strict';
            var es5 = _dereq_('./es5');
            var canEvaluate = typeof navigator == 'undefined';
            var errorObj = {
                e: {}
            };
            var tryCatchTarget;
            var globalObject = typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this !== undefined ? this : null;
            function tryCatcher() {
                try {
                    var target = tryCatchTarget;
                    tryCatchTarget = null;
                    return target.apply(this, arguments);
                } catch (e) {
                    errorObj.e = e;
                    return errorObj;
                }
            }
            function tryCatch(fn) {
                tryCatchTarget = fn;
                return tryCatcher;
            }
            var inherits = function (Child, Parent) {
                var hasProp = {}.hasOwnProperty;
                function T() {
                    this.constructor = Child;
                    this.constructor$ = Parent;
                    for (var propertyName in Parent.prototype) {
                        if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== '$') {
                            this[propertyName + '$'] = Parent.prototype[propertyName];
                        }
                    }
                }
                T.prototype = Parent.prototype;
                Child.prototype = new T();
                return Child.prototype;
            };
            function isPrimitive(val) {
                return val == null || val === true || val === false || typeof val === 'string' || typeof val === 'number';
            }
            function isObject(value) {
                return typeof value === 'function' || typeof value === 'object' && value !== null;
            }
            function maybeWrapAsError(maybeError) {
                if (!isPrimitive(maybeError))
                    return maybeError;
                return new Error(safeToString(maybeError));
            }
            function withAppended(target, appendee) {
                var len = target.length;
                var ret = new Array(len + 1);
                var i;
                for (i = 0; i < len; ++i) {
                    ret[i] = target[i];
                }
                ret[i] = appendee;
                return ret;
            }
            function getDataPropertyOrDefault(obj, key, defaultValue) {
                if (es5.isES5) {
                    var desc = Object.getOwnPropertyDescriptor(obj, key);
                    if (desc != null) {
                        return desc.get == null && desc.set == null ? desc.value : defaultValue;
                    }
                } else {
                    return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;
                }
            }
            function notEnumerableProp(obj, name, value) {
                if (isPrimitive(obj))
                    return obj;
                var descriptor = {
                    value: value,
                    configurable: true,
                    enumerable: false,
                    writable: true
                };
                es5.defineProperty(obj, name, descriptor);
                return obj;
            }
            function thrower(r) {
                throw r;
            }
            var inheritedDataKeys = function () {
                var excludedPrototypes = [
                    Array.prototype,
                    Object.prototype,
                    Function.prototype
                ];
                var isExcludedProto = function (val) {
                    for (var i = 0; i < excludedPrototypes.length; ++i) {
                        if (excludedPrototypes[i] === val) {
                            return true;
                        }
                    }
                    return false;
                };
                if (es5.isES5) {
                    var getKeys = Object.getOwnPropertyNames;
                    return function (obj) {
                        var ret = [];
                        var visitedKeys = Object.create(null);
                        while (obj != null && !isExcludedProto(obj)) {
                            var keys;
                            try {
                                keys = getKeys(obj);
                            } catch (e) {
                                return ret;
                            }
                            for (var i = 0; i < keys.length; ++i) {
                                var key = keys[i];
                                if (visitedKeys[key])
                                    continue;
                                visitedKeys[key] = true;
                                var desc = Object.getOwnPropertyDescriptor(obj, key);
                                if (desc != null && desc.get == null && desc.set == null) {
                                    ret.push(key);
                                }
                            }
                            obj = es5.getPrototypeOf(obj);
                        }
                        return ret;
                    };
                } else {
                    var hasProp = {}.hasOwnProperty;
                    return function (obj) {
                        if (isExcludedProto(obj))
                            return [];
                        var ret = [];
                        enumeration:
                            for (var key in obj) {
                                if (hasProp.call(obj, key)) {
                                    ret.push(key);
                                } else {
                                    for (var i = 0; i < excludedPrototypes.length; ++i) {
                                        if (hasProp.call(excludedPrototypes[i], key)) {
                                            continue enumeration;
                                        }
                                    }
                                    ret.push(key);
                                }
                            }
                        return ret;
                    };
                }
            }();
            var thisAssignmentPattern = /this\s*\.\s*\S+\s*=/;
            function isClass(fn) {
                try {
                    if (typeof fn === 'function') {
                        var keys = es5.names(fn.prototype);
                        var hasMethods = es5.isES5 && keys.length > 1;
                        var hasMethodsOtherThanConstructor = keys.length > 0 && !(keys.length === 1 && keys[0] === 'constructor');
                        var hasThisAssignmentAndStaticMethods = thisAssignmentPattern.test(fn + '') && es5.names(fn).length > 0;
                        if (hasMethods || hasMethodsOtherThanConstructor || hasThisAssignmentAndStaticMethods) {
                            return true;
                        }
                    }
                    return false;
                } catch (e) {
                    return false;
                }
            }
            function toFastProperties(obj) {
                function FakeConstructor() {
                }
                FakeConstructor.prototype = obj;
                var l = 8;
                while (l--)
                    new FakeConstructor();
                return obj;
                eval(obj);
            }
            var rident = /^[a-z$_][a-z$_0-9]*$/i;
            function isIdentifier(str) {
                return rident.test(str);
            }
            function filledRange(count, prefix, suffix) {
                var ret = new Array(count);
                for (var i = 0; i < count; ++i) {
                    ret[i] = prefix + i + suffix;
                }
                return ret;
            }
            function safeToString(obj) {
                try {
                    return obj + '';
                } catch (e) {
                    return '[no string representation]';
                }
            }
            function isError(obj) {
                return obj !== null && typeof obj === 'object' && typeof obj.message === 'string' && typeof obj.name === 'string';
            }
            function markAsOriginatingFromRejection(e) {
                try {
                    notEnumerableProp(e, 'isOperational', true);
                } catch (ignore) {
                }
            }
            function originatesFromRejection(e) {
                if (e == null)
                    return false;
                return e instanceof Error['__BluebirdErrorTypes__'].OperationalError || e['isOperational'] === true;
            }
            function canAttachTrace(obj) {
                return isError(obj) && es5.propertyIsWritable(obj, 'stack');
            }
            var ensureErrorObject = function () {
                if (!('stack' in new Error())) {
                    return function (value) {
                        if (canAttachTrace(value))
                            return value;
                        try {
                            throw new Error(safeToString(value));
                        } catch (err) {
                            return err;
                        }
                    };
                } else {
                    return function (value) {
                        if (canAttachTrace(value))
                            return value;
                        return new Error(safeToString(value));
                    };
                }
            }();
            function classString(obj) {
                return {}.toString.call(obj);
            }
            function copyDescriptors(from, to, filter) {
                var keys = es5.names(from);
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (filter(key)) {
                        try {
                            es5.defineProperty(to, key, es5.getDescriptor(from, key));
                        } catch (ignore) {
                        }
                    }
                }
            }
            var asArray = function (v) {
                if (es5.isArray(v)) {
                    return v;
                }
                return null;
            };
            if (typeof Symbol !== 'undefined' && Symbol.iterator) {
                var ArrayFrom = typeof Array.from === 'function' ? function (v) {
                    return Array.from(v);
                } : function (v) {
                    var ret = [];
                    var it = v[Symbol.iterator]();
                    var itResult;
                    while (!(itResult = it.next()).done) {
                        ret.push(itResult.value);
                    }
                    return ret;
                };
                asArray = function (v) {
                    if (es5.isArray(v)) {
                        return v;
                    } else if (v != null && typeof v[Symbol.iterator] === 'function') {
                        return ArrayFrom(v);
                    }
                    return null;
                };
            }
            var isNode = typeof process !== 'undefined' && classString(process).toLowerCase() === '[object process]';
            var hasEnvVariables = typeof process !== 'undefined' && typeof process.env !== 'undefined';
            function env(key) {
                return hasEnvVariables ? process.env[key] : undefined;
            }
            function getNativePromise() {
                if (typeof Promise === 'function') {
                    try {
                        var promise = new Promise(function () {
                        });
                        if ({}.toString.call(promise) === '[object Promise]') {
                            return Promise;
                        }
                    } catch (e) {
                    }
                }
            }
            function domainBind(self, cb) {
                return self.bind(cb);
            }
            var ret = {
                isClass: isClass,
                isIdentifier: isIdentifier,
                inheritedDataKeys: inheritedDataKeys,
                getDataPropertyOrDefault: getDataPropertyOrDefault,
                thrower: thrower,
                isArray: es5.isArray,
                asArray: asArray,
                notEnumerableProp: notEnumerableProp,
                isPrimitive: isPrimitive,
                isObject: isObject,
                isError: isError,
                canEvaluate: canEvaluate,
                errorObj: errorObj,
                tryCatch: tryCatch,
                inherits: inherits,
                withAppended: withAppended,
                maybeWrapAsError: maybeWrapAsError,
                toFastProperties: toFastProperties,
                filledRange: filledRange,
                toString: safeToString,
                canAttachTrace: canAttachTrace,
                ensureErrorObject: ensureErrorObject,
                originatesFromRejection: originatesFromRejection,
                markAsOriginatingFromRejection: markAsOriginatingFromRejection,
                classString: classString,
                copyDescriptors: copyDescriptors,
                hasDevTools: typeof chrome !== 'undefined' && chrome && typeof chrome.loadTimes === 'function',
                isNode: isNode,
                hasEnvVariables: hasEnvVariables,
                env: env,
                global: globalObject,
                getNativePromise: getNativePromise,
                domainBind: domainBind
            };
            ret.isRecentNode = ret.isNode && function () {
                var version = process.versions.node.split('.').map(Number);
                return version[0] === 0 && version[1] > 10 || version[0] > 0;
            }();
            if (ret.isNode)
                ret.toFastProperties(process);
            try {
                throw new Error();
            } catch (e) {
                ret.lastLineError = e;
            }
            module.exports = ret;
        },
        {
            './es5': 13
        }
    ]
}, {}, [4])(4);})), 0, true, $__.uid));
(((typeof window) !== "undefined"), (window !== null));
((window).P = TAJS_restrictToType((window).Promise, "function"));